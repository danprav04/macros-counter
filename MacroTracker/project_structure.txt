.gitignore
app.json
App.tsx
assets/
  adaptive-icon.png
  favicon.png
  icon.png
  splash.png
coverage/
  clover.xml
  coverage-final.json
  lcov-report/
    base.css
    block-navigation.js
    components/
      AccountSettings.tsx.html
      AddEntryModal/
        AddEntryModal.tsx.html
        AmountInputSection.tsx.html
        FoodSelectionList.tsx.html
        index.html
        ModalHeader.tsx.html
      AddFoodModal.tsx.html
      ConfirmationModal.tsx.html
      DailyEntryListItem.tsx.html
      DailyGoalsInput.tsx.html
      DailyProgress.tsx.html
      DataManagementButtons.tsx.html
      DateNavigator.tsx.html
      Entry/
        index.html
        QuickAddItem.tsx.html
      FoodFormFields.tsx.html
      FoodItem.tsx.html
      index.html
      QuickAddList.tsx.html
      StatisticsChart.tsx.html
      ThemeSwitch.tsx.html
    context/
      AuthContext.tsx.html
      index.html
    favicon.png
    index.html
    localization/
      i18n.ts.html
      index.html
    prettify.css
    prettify.js
    screens/
      DailyEntryScreen.tsx.html
      FoodListScreen.tsx.html
      ForgotPasswordScreen.tsx.html
      index.html
      LoginScreen.tsx.html
      QuestionnaireScreen.tsx.html
      RegisterScreen.tsx.html
      SettingsScreen.tsx.html
    services/
      authService.ts.html
      backendService.ts.html
      clientIDService.ts.html
      foodService.ts.html
      index.html
      storageService.ts.html
      tokenStorage.ts.html
    sort-arrow-sprite.png
    sorter.js
    utils/
      dateUtils.ts.html
      foodIconMatcher.ts.html
      gradingUtils.ts.html
      iconUtils.ts.html
      imageUtils.ts.html
      index.html
      languageUtils.ts.html
      macros.ts.html
      searchUtils.ts.html
      units.ts.html
      validationUtils.ts.html
  lcov.info
eas.json
index.ts
jest-setup.js
jest.config.js
package.json
projectToFile.js
src/
  assets/
    food_icons/
      combinationTags.ts
      iconDefinitions.ts
  components/
    AccountSettings.tsx
    AddEntryModal/
      AddEntryModal.tsx
      AmountInputSection.tsx
      FoodSelectionList.tsx
      ModalHeader.tsx
    AddFoodModal.tsx
    ConfirmationModal.tsx
    DailyEntryListItem.tsx
    DailyGoalsInput.tsx
    DailyProgress.tsx
    DataManagementButtons.tsx
    DateNavigator.tsx
    Entry/
      QuickAddItem.tsx
    FoodFormFields.tsx
    FoodItem.tsx
    QuickAddList.tsx
    StatisticsChart.tsx
    ThemeSwitch.tsx
  context/
    AuthContext.tsx
  localization/
    i18n.ts
    languages/
      en.json
      he.json
      ru.json
  navigation/
    AppNavigator.tsx
  screens/
    DailyEntryScreen.tsx
    FoodListScreen.tsx
    ForgotPasswordScreen.tsx
    LoginScreen.tsx
    QuestionnaireScreen.tsx
    RegisterScreen.tsx
    SettingsScreen.tsx
  services/
    authService.ts
    backendService.ts
    clientIDService.ts
    foodService.ts
    storageService.ts
    tokenStorage.ts
  types/
    dailyEntry.ts
    food.ts
    macros.ts
    openRouterTypes.ts
    questionnaire.ts
    settings.ts
    token.ts
  utils/
    dateUtils.ts
    foodIconMatcher.ts
    gradingUtils.ts
    iconUtils.ts
    imageUtils.ts
    languageUtils.ts
    macros.ts
    searchUtils.ts
    units.ts
    validationUtils.ts
testOtp.txt
tsconfig.json

---------- .gitignore ----------
# Learn more https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files

# dependencies
node_modules/

# Expo
.expo/
dist/
web-build/
expo-env.d.ts

# Native
*.orig.*
*.jks
*.p8
*.p12
*.key
*.mobileprovision

# Metro
.metro-health-check*

# debug
npm-debug.*
yarn-debug.*
yarn-error.*

# macOS
.DS_Store
*.pem

# local env files
.env*.local

# typescript
*.tsbuildinfo

---------- END .gitignore ----------


---------- app.json ----------
{
  "expo": {
    "name": "MacrosVisionAI",
    "slug": "MacroTracker",
    "version": "2.0.2",
    "owner": "danprav",
    "orientation": "portrait",
    "icon": "./assets/icon.png",
    "scheme": "macrosvisionai",
    "userInterfaceStyle": "automatic",
    "splash": {
      "image": "./assets/splash.png",
      "resizeMode": "contain",
      "backgroundColor": "#000000"
    },
    "androidStatusBar": {
      "backgroundColor": "#000000",
      "translucent": false,
      "barStyle": "light-content"
    },
    "assetBundlePatterns": [
      "**/*"
    ],
    "ios": {
      "supportsTablet": true,
      "bundleIdentifier": "com.macrosvisionai.app",
      "infoPlist": {
        "UIStatusBarStyle": "UIStatusBarStyleAutomatic",
        "NSCameraUsageDescription": "Allow $(PRODUCT_NAME) to access your camera to take photos of food for macro analysis.",
        "NSPhotoLibraryUsageDescription": "Allow $(PRODUCT_NAME) to access your photos to select food images for macro analysis."
      }
    },
    "android": {
      "adaptiveIcon": {
        "foregroundImage": "./assets/adaptive-icon.png",
        "backgroundColor": "#ffffff"
      },
      "package": "com.macrosvisionai.app",
      "userInterfaceStyle": "automatic",
      "permissions": [
        "android.permission.CAMERA",
        "android.permission.READ_EXTERNAL_STORAGE",
        "android.permission.WRITE_EXTERNAL_STORAGE"
      ],
      "intentFilters": [
        {
          "action": "VIEW",
          "autoVerify": true,
          "data": [
            {
              "scheme": "macrosvisionai",
              "host": "open-add-food-modal"
            }
          ],
          "category": [
            "BROWSABLE",
            "DEFAULT"
          ]
        }
      ]
    },
    "web": {
      "favicon": "./assets/favicon.png"
    },
    "plugins": [
      [
        "expo-document-picker",
        {
          "appleTeamId": "YOUR_TEAM_ID"
        }
      ],
      [
        "expo-image-picker",
        {
          "photosPermission": "Allow $(PRODUCT_NAME) to access your photos to select food images for macro analysis.",
          "cameraPermission": "Allow $(PRODUCT_NAME) to access your camera to take photos of food for macro analysis."
        }
      ],
      "expo-secure-store"
    ],
    "extra": {
      "eas": {
        "projectId": "25ac2bcf-78a3-4f2c-a635-4fcaae7b93f1"
      },
      "env": {
        "BACKEND_URL_PRODUCTION": "https://macros-vision-ai.xyz",
        "BACKEND_URL_DEVELOPMENT": "https://quetzal-glad-lark.ngrok-free.app"
      }
    }
  }
}

---------- END app.json ----------


---------- App.tsx ----------
// App.tsx
import "react-native-get-random-values"; // MUST BE FIRST
import Toast from "react-native-toast-message";
import React from "react";
import AppNavigator from "./src/navigation/AppNavigator";
import { SafeAreaProvider } from "react-native-safe-area-context";
import { Text, TextInput } from "react-native";
import { AuthProvider } from "./src/context/AuthContext";

// --- FONT SCALING PATCH ---
if ((Text as any).defaultProps == null) (Text as any).defaultProps = {};
(Text as any).defaultProps.allowFontScaling = false;
if ((TextInput as any).defaultProps == null) (TextInput as any).defaultProps = {};
(TextInput as any).defaultProps.allowFontScaling = false;
// --- END FONT SCALING PATCH ---

const App = () => {
  return (
    <AuthProvider>
      <SafeAreaProvider>
        <AppNavigator />
        <Toast />
      </SafeAreaProvider>
    </AuthProvider>
  );
};

export default App;
---------- END App.tsx ----------


---------- adaptive-icon.png ----------
(Image file - content not included)
---------- END adaptive-icon.png ----------


---------- favicon.png ----------
(Image file - content not included)
---------- END favicon.png ----------


---------- icon.png ----------
(Image file - content not included)
---------- END icon.png ----------


---------- splash.png ----------
(Image file - content not included)
---------- END splash.png ----------


---------- clover.xml ----------
<?xml version="1.0" encoding="UTF-8"?>
<coverage generated="1753999925223" clover="3.2.0">
  <project timestamp="1753999925223" name="All files">
    <metrics statements="2171" coveredstatements="0" conditionals="1681" coveredconditionals="0" methods="467" coveredmethods="0" elements="4319" coveredelements="0" complexity="0" loc="2171" ncloc="2171" packages="8" files="43" classes="43"/>
    <package name="components">
      <metrics statements="336" coveredstatements="0" conditionals="237" coveredconditionals="0" methods="83" coveredmethods="0"/>
      <file name="AccountSettings.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\components\AccountSettings.tsx">
        <metrics statements="5" coveredstatements="0" conditionals="8" coveredconditionals="0" methods="2" coveredmethods="0"/>
        <line num="14" count="0" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
      </file>
      <file name="AddFoodModal.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\components\AddFoodModal.tsx">
        <metrics statements="88" coveredstatements="0" conditionals="74" coveredconditionals="0" methods="11" coveredmethods="0"/>
        <line num="56" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="58" count="0" type="stmt"/>
        <line num="70" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="80" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="82" count="0" type="stmt"/>
        <line num="83" count="0" type="stmt"/>
        <line num="84" count="0" type="stmt"/>
        <line num="85" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="89" count="0" type="stmt"/>
        <line num="90" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="93" count="0" type="stmt"/>
        <line num="94" count="0" type="stmt"/>
        <line num="95" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="97" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="103" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="104" count="0" type="stmt"/>
        <line num="105" count="0" type="stmt"/>
        <line num="106" count="0" type="stmt"/>
        <line num="108" count="0" type="stmt"/>
        <line num="109" count="0" type="stmt"/>
        <line num="110" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="111" count="0" type="stmt"/>
        <line num="112" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
        <line num="115" count="0" type="stmt"/>
        <line num="117" count="0" type="stmt"/>
        <line num="119" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="120" count="0" type="stmt"/>
        <line num="123" count="0" type="stmt"/>
        <line num="124" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="125" count="0" type="stmt"/>
        <line num="126" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="127" count="0" type="stmt"/>
        <line num="128" count="0" type="stmt"/>
        <line num="131" count="0" type="stmt"/>
        <line num="132" count="0" type="stmt"/>
        <line num="133" count="0" type="stmt"/>
        <line num="134" count="0" type="stmt"/>
        <line num="136" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="137" count="0" type="stmt"/>
        <line num="139" count="0" type="stmt"/>
        <line num="140" count="0" type="stmt"/>
        <line num="141" count="0" type="stmt"/>
        <line num="142" count="0" type="stmt"/>
        <line num="144" count="0" type="stmt"/>
        <line num="146" count="0" type="stmt"/>
        <line num="153" count="0" type="stmt"/>
        <line num="155" count="0" type="stmt"/>
        <line num="159" count="0" type="stmt"/>
        <line num="160" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="161" count="0" type="stmt"/>
        <line num="162" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="163" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="164" count="0" type="stmt"/>
        <line num="165" count="0" type="stmt"/>
        <line num="166" count="0" type="stmt"/>
        <line num="167" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="168" count="0" type="stmt"/>
        <line num="169" count="0" type="stmt"/>
        <line num="170" count="0" type="stmt"/>
        <line num="171" count="0" type="stmt"/>
        <line num="172" count="0" type="stmt"/>
        <line num="173" count="0" type="stmt"/>
        <line num="174" count="0" type="stmt"/>
        <line num="175" count="0" type="stmt"/>
        <line num="176" count="0" type="stmt"/>
        <line num="177" count="0" type="stmt"/>
        <line num="178" count="0" type="stmt"/>
        <line num="179" count="0" type="stmt"/>
        <line num="181" count="0" type="stmt"/>
        <line num="183" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="184" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="189" count="0" type="cond" truecount="0" falsecount="3"/>
        <line num="190" count="0" type="stmt"/>
        <line num="192" count="0" type="stmt"/>
        <line num="210" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="211" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="279" count="0" type="stmt"/>
      </file>
      <file name="ConfirmationModal.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\components\ConfirmationModal.tsx">
        <metrics statements="7" coveredstatements="0" conditionals="6" coveredconditionals="0" methods="1" coveredmethods="0"/>
        <line num="19" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="31" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="32" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="33" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="36" count="0" type="stmt"/>
        <line num="70" count="0" type="stmt"/>
      </file>
      <file name="DailyEntryListItem.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\components\DailyEntryListItem.tsx">
        <metrics statements="35" coveredstatements="0" conditionals="28" coveredconditionals="0" methods="13" coveredmethods="0"/>
        <line num="23" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="38" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="39" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="48" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="54" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="55" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="61" count="0" type="stmt"/>
        <line num="67" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="68" count="0" type="stmt"/>
        <line num="70" count="0" type="stmt"/>
        <line num="78" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="79" count="0" type="stmt"/>
        <line num="88" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="89" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="91" count="0" type="stmt"/>
        <line num="92" count="0" type="stmt"/>
        <line num="93" count="0" type="stmt"/>
        <line num="94" count="0" type="stmt"/>
        <line num="96" count="0" type="stmt"/>
        <line num="100" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="110" count="0" type="stmt"/>
        <line num="112" count="0" type="stmt"/>
        <line num="142" count="0" type="stmt"/>
      </file>
      <file name="DailyGoalsInput.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\components\DailyGoalsInput.tsx">
        <metrics statements="14" coveredstatements="0" conditionals="7" coveredconditionals="0" methods="5" coveredmethods="0"/>
        <line num="14" count="0" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
      </file>
      <file name="DailyProgress.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\components\DailyProgress.tsx">
        <metrics statements="12" coveredstatements="0" conditionals="6" coveredconditionals="0" methods="4" coveredmethods="0"/>
        <line num="20" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="32" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
      </file>
      <file name="DataManagementButtons.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\components\DataManagementButtons.tsx">
        <metrics statements="58" coveredstatements="0" conditionals="34" coveredconditionals="0" methods="6" coveredmethods="0"/>
        <line num="30" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="51" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="61" count="0" type="stmt"/>
        <line num="62" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="65" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="66" count="0" type="stmt"/>
        <line num="67" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="68" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="69" count="0" type="stmt"/>
        <line num="70" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="72" count="0" type="cond" truecount="0" falsecount="10"/>
        <line num="73" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="82" count="0" type="stmt"/>
        <line num="85" count="0" type="stmt"/>
        <line num="88" count="0" type="stmt"/>
        <line num="89" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="90" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="94" count="0" type="stmt"/>
        <line num="96" count="0" type="stmt"/>
        <line num="97" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="98" count="0" type="stmt"/>
        <line num="99" count="0" type="stmt"/>
        <line num="100" count="0" type="stmt"/>
        <line num="101" count="0" type="stmt"/>
        <line num="103" count="0" type="stmt"/>
        <line num="104" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="106" count="0" type="stmt"/>
        <line num="109" count="0" type="stmt"/>
        <line num="113" count="0" type="stmt"/>
        <line num="136" count="0" type="stmt"/>
      </file>
      <file name="DateNavigator.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\components\DateNavigator.tsx">
        <metrics statements="15" coveredstatements="0" conditionals="6" coveredconditionals="0" methods="4" coveredmethods="0"/>
        <line num="19" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="44" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="46" count="0" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
      </file>
      <file name="FoodFormFields.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\components\FoodFormFields.tsx">
        <metrics statements="23" coveredstatements="0" conditionals="28" coveredconditionals="0" methods="9" coveredmethods="0"/>
        <line num="20" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="33" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="34" count="0" type="stmt"/>
        <line num="36" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="45" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="46" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="47" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="80" count="0" type="stmt"/>
        <line num="91" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
      </file>
      <file name="FoodItem.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\components\FoodItem.tsx">
        <metrics statements="21" coveredstatements="0" conditionals="11" coveredconditionals="0" methods="12" coveredmethods="0"/>
        <line num="20" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="27" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="32" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="42" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="80" count="0" type="stmt"/>
        <line num="83" count="0" type="stmt"/>
        <line num="91" count="0" type="stmt"/>
      </file>
      <file name="QuickAddList.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\components\QuickAddList.tsx">
        <metrics statements="13" coveredstatements="0" conditionals="14" coveredconditionals="0" methods="4" coveredmethods="0"/>
        <line num="38" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="62" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="87" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="88" count="0" type="stmt"/>
        <line num="96" count="0" type="stmt"/>
        <line num="99" count="0" type="stmt"/>
        <line num="118" count="0" type="stmt"/>
      </file>
      <file name="StatisticsChart.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\components\StatisticsChart.tsx">
        <metrics statements="41" coveredstatements="0" conditionals="13" coveredconditionals="0" methods="10" coveredmethods="0"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="60" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="83" count="0" type="stmt"/>
        <line num="84" count="0" type="stmt"/>
        <line num="85" count="0" type="stmt"/>
        <line num="87" count="0" type="stmt"/>
        <line num="88" count="0" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
        <line num="98" count="0" type="stmt"/>
        <line num="106" count="0" type="stmt"/>
        <line num="111" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="112" count="0" type="stmt"/>
        <line num="116" count="0" type="stmt"/>
        <line num="179" count="0" type="stmt"/>
        <line num="190" count="0" type="stmt"/>
        <line num="191" count="0" type="stmt"/>
        <line num="194" count="0" type="stmt"/>
        <line num="195" count="0" type="stmt"/>
        <line num="199" count="0" type="stmt"/>
        <line num="243" count="0" type="stmt"/>
      </file>
      <file name="ThemeSwitch.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\components\ThemeSwitch.tsx">
        <metrics statements="4" coveredstatements="0" conditionals="2" coveredconditionals="0" methods="2" coveredmethods="0"/>
        <line num="12" count="0" type="stmt"/>
        <line num="13" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="28" count="0" type="cond" truecount="0" falsecount="2"/>
      </file>
    </package>
    <package name="components.AddEntryModal">
      <metrics statements="327" coveredstatements="0" conditionals="403" coveredconditionals="0" methods="92" coveredmethods="0"/>
      <file name="AddEntryModal.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\components\AddEntryModal\AddEntryModal.tsx">
        <metrics statements="204" coveredstatements="0" conditionals="224" coveredconditionals="0" methods="53" coveredmethods="0"/>
        <line num="37" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="62" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="66" count="0" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
        <line num="68" count="0" type="stmt"/>
        <line num="70" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="73" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="75" count="0" type="stmt"/>
        <line num="76" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="82" count="0" type="stmt"/>
        <line num="83" count="0" type="cond" truecount="0" falsecount="6"/>
        <line num="84" count="0" type="stmt"/>
        <line num="86" count="0" type="stmt"/>
        <line num="89" count="0" type="stmt"/>
        <line num="90" count="0" type="cond" truecount="0" falsecount="3"/>
        <line num="91" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="93" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="94" count="0" type="stmt"/>
        <line num="95" count="0" type="stmt"/>
        <line num="96" count="0" type="stmt"/>
        <line num="97" count="0" type="stmt"/>
        <line num="98" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="99" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="100" count="0" type="stmt"/>
        <line num="101" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="103" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="104" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="108" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="109" count="0" type="stmt"/>
        <line num="110" count="0" type="stmt"/>
        <line num="115" count="0" type="stmt"/>
        <line num="117" count="0" type="stmt"/>
        <line num="118" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="119" count="0" type="stmt"/>
        <line num="120" count="0" type="stmt"/>
        <line num="121" count="0" type="stmt"/>
        <line num="125" count="0" type="stmt"/>
        <line num="126" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="128" count="0" type="stmt"/>
        <line num="129" count="0" type="stmt"/>
        <line num="130" count="0" type="stmt"/>
        <line num="131" count="0" type="stmt"/>
        <line num="132" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="133" count="0" type="stmt"/>
        <line num="134" count="0" type="stmt"/>
        <line num="136" count="0" type="stmt"/>
        <line num="137" count="0" type="stmt"/>
        <line num="141" count="0" type="stmt"/>
        <line num="142" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="144" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="145" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="147" count="0" type="stmt"/>
        <line num="153" count="0" type="stmt"/>
        <line num="154" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="155" count="0" type="stmt"/>
        <line num="156" count="0" type="stmt"/>
        <line num="157" count="0" type="stmt"/>
        <line num="158" count="0" type="stmt"/>
        <line num="159" count="0" type="stmt"/>
        <line num="160" count="0" type="stmt"/>
        <line num="163" count="0" type="stmt"/>
        <line num="164" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="165" count="0" type="stmt"/>
        <line num="166" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="167" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="168" count="0" type="stmt"/>
        <line num="169" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="170" count="0" type="stmt"/>
        <line num="171" count="0" type="stmt"/>
        <line num="175" count="0" type="stmt"/>
        <line num="176" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="177" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="180" count="0" type="stmt"/>
        <line num="181" count="0" type="cond" truecount="0" falsecount="6"/>
        <line num="182" count="0" type="stmt"/>
        <line num="183" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="184" count="0" type="stmt"/>
        <line num="185" count="0" type="stmt"/>
        <line num="186" count="0" type="stmt"/>
        <line num="187" count="0" type="stmt"/>
        <line num="188" count="0" type="stmt"/>
        <line num="191" count="0" type="stmt"/>
        <line num="192" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="193" count="0" type="stmt"/>
        <line num="194" count="0" type="stmt"/>
        <line num="197" count="0" type="stmt"/>
        <line num="198" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="199" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="200" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="201" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="203" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="204" count="0" type="stmt"/>
        <line num="205" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="206" count="0" type="stmt"/>
        <line num="207" count="0" type="stmt"/>
        <line num="208" count="0" type="stmt"/>
        <line num="210" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="211" count="0" type="stmt"/>
        <line num="212" count="0" type="stmt"/>
        <line num="214" count="0" type="stmt"/>
        <line num="215" count="0" type="stmt"/>
        <line num="218" count="0" type="cond" truecount="0" falsecount="7"/>
        <line num="219" count="0" type="stmt"/>
        <line num="221" count="0" type="stmt"/>
        <line num="225" count="0" type="stmt"/>
        <line num="226" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="227" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="228" count="0" type="stmt"/>
        <line num="230" count="0" type="stmt"/>
        <line num="231" count="0" type="stmt"/>
        <line num="235" count="0" type="stmt"/>
        <line num="236" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="237" count="0" type="stmt"/>
        <line num="238" count="0" type="stmt"/>
        <line num="241" count="0" type="stmt"/>
        <line num="242" count="0" type="stmt"/>
        <line num="243" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="244" count="0" type="stmt"/>
        <line num="245" count="0" type="stmt"/>
        <line num="246" count="0" type="stmt"/>
        <line num="247" count="0" type="stmt"/>
        <line num="248" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="249" count="0" type="stmt"/>
        <line num="251" count="0" type="stmt"/>
        <line num="252" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="253" count="0" type="stmt"/>
        <line num="256" count="0" type="stmt"/>
        <line num="259" count="0" type="stmt"/>
        <line num="260" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="261" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="264" count="0" type="stmt"/>
        <line num="265" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="266" count="0" type="stmt"/>
        <line num="267" count="0" type="stmt"/>
        <line num="270" count="0" type="stmt"/>
        <line num="271" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="272" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="273" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="274" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="275" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="276" count="0" type="stmt"/>
        <line num="279" count="0" type="stmt"/>
        <line num="280" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="281" count="0" type="stmt"/>
        <line num="284" count="0" type="stmt"/>
        <line num="285" count="0" type="cond" truecount="0" falsecount="6"/>
        <line num="286" count="0" type="stmt"/>
        <line num="287" count="0" type="stmt"/>
        <line num="288" count="0" type="stmt"/>
        <line num="289" count="0" type="cond" truecount="0" falsecount="10"/>
        <line num="290" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="292" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="293" count="0" type="stmt"/>
        <line num="294" count="0" type="stmt"/>
        <line num="295" count="0" type="stmt"/>
        <line num="299" count="0" type="stmt"/>
        <line num="301" count="0" type="stmt"/>
        <line num="302" count="0" type="stmt"/>
        <line num="303" count="0" type="stmt"/>
        <line num="304" count="0" type="stmt"/>
        <line num="305" count="0" type="stmt"/>
        <line num="306" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="307" count="0" type="stmt"/>
        <line num="308" count="0" type="stmt"/>
        <line num="310" count="0" type="stmt"/>
        <line num="311" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="312" count="0" type="stmt"/>
        <line num="316" count="0" type="stmt"/>
        <line num="317" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="318" count="0" type="stmt"/>
        <line num="320" count="0" type="stmt"/>
        <line num="323" count="0" type="cond" truecount="0" falsecount="6"/>
        <line num="327" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="328" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="329" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="330" count="0" type="cond" truecount="0" falsecount="6"/>
        <line num="331" count="0" type="cond" truecount="0" falsecount="3"/>
        <line num="332" count="0" type="cond" truecount="0" falsecount="3"/>
        <line num="334" count="0" type="stmt"/>
        <line num="344" count="0" type="stmt"/>
        <line num="356" count="0" type="stmt"/>
      </file>
      <file name="AmountInputSection.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\components\AddEntryModal\AmountInputSection.tsx">
        <metrics statements="22" coveredstatements="0" conditionals="41" coveredconditionals="0" methods="10" coveredmethods="0"/>
        <line num="29" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="51" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="80" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="81" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="82" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="106" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="107" count="0" type="stmt"/>
        <line num="108" count="0" type="stmt"/>
        <line num="154" count="0" type="stmt"/>
        <line num="169" count="0" type="stmt"/>
      </file>
      <file name="FoodSelectionList.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\components\AddEntryModal\FoodSelectionList.tsx">
        <metrics statements="91" coveredstatements="0" conditionals="91" coveredconditionals="0" methods="25" coveredmethods="0"/>
        <line num="11" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="61" count="0" type="stmt"/>
        <line num="62" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
        <line num="68" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="76" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="82" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="83" count="0" type="stmt"/>
        <line num="87" count="0" type="stmt"/>
        <line num="88" count="0" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
        <line num="91" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="92" count="0" type="stmt"/>
        <line num="93" count="0" type="stmt"/>
        <line num="97" count="0" type="stmt"/>
        <line num="98" count="0" type="stmt"/>
        <line num="99" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="103" count="0" type="stmt"/>
        <line num="106" count="0" type="stmt"/>
        <line num="109" count="0" type="stmt"/>
        <line num="110" count="0" type="cond" truecount="0" falsecount="6"/>
        <line num="111" count="0" type="stmt"/>
        <line num="112" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="113" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
        <line num="120" count="0" type="stmt"/>
        <line num="121" count="0" type="cond" truecount="0" falsecount="6"/>
        <line num="122" count="0" type="stmt"/>
        <line num="123" count="0" type="stmt"/>
        <line num="125" count="0" type="stmt"/>
        <line num="126" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="127" count="0" type="stmt"/>
        <line num="128" count="0" type="stmt"/>
        <line num="129" count="0" type="stmt"/>
        <line num="130" count="0" type="stmt"/>
        <line num="131" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="132" count="0" type="stmt"/>
        <line num="133" count="0" type="stmt"/>
        <line num="134" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="135" count="0" type="stmt"/>
        <line num="136" count="0" type="stmt"/>
        <line num="137" count="0" type="stmt"/>
        <line num="138" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="139" count="0" type="stmt"/>
        <line num="140" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="141" count="0" type="stmt"/>
        <line num="143" count="0" type="stmt"/>
        <line num="158" count="0" type="stmt"/>
        <line num="159" count="0" type="stmt"/>
        <line num="160" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="161" count="0" type="stmt"/>
        <line num="165" count="0" type="stmt"/>
        <line num="166" count="0" type="stmt"/>
        <line num="167" count="0" type="stmt"/>
        <line num="168" count="0" type="stmt"/>
        <line num="169" count="0" type="stmt"/>
        <line num="170" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="172" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="173" count="0" type="cond" truecount="0" falsecount="3"/>
        <line num="175" count="0" type="stmt"/>
        <line num="178" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="179" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="180" count="0" type="stmt"/>
        <line num="182" count="0" type="stmt"/>
        <line num="200" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="201" count="0" type="stmt"/>
        <line num="234" count="0" type="stmt"/>
        <line num="235" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="236" count="0" type="stmt"/>
        <line num="253" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="254" count="0" type="stmt"/>
        <line num="271" count="0" type="stmt"/>
        <line num="274" count="0" type="stmt"/>
        <line num="284" count="0" type="stmt"/>
        <line num="286" count="0" type="stmt"/>
        <line num="293" count="0" type="stmt"/>
        <line num="304" count="0" type="stmt"/>
        <line num="311" count="0" type="stmt"/>
      </file>
      <file name="ModalHeader.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\components\AddEntryModal\ModalHeader.tsx">
        <metrics statements="10" coveredstatements="0" conditionals="47" coveredconditionals="0" methods="4" coveredmethods="0"/>
        <line num="36" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="51" count="0" type="cond" truecount="0" falsecount="3"/>
        <line num="53" count="0" type="stmt"/>
        <line num="58" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="113" count="0" type="stmt"/>
      </file>
    </package>
    <package name="components.Entry">
      <metrics statements="25" coveredstatements="0" conditionals="46" coveredconditionals="0" methods="11" coveredmethods="0"/>
      <file name="QuickAddItem.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\components\Entry\QuickAddItem.tsx">
        <metrics statements="25" coveredstatements="0" conditionals="46" coveredconditionals="0" methods="11" coveredmethods="0"/>
        <line num="53" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="80" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="100" count="0" type="stmt"/>
        <line num="101" count="0" type="stmt"/>
        <line num="105" count="0" type="stmt"/>
        <line num="106" count="0" type="stmt"/>
        <line num="109" count="0" type="stmt"/>
        <line num="110" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="111" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
        <line num="116" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="117" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="118" count="0" type="stmt"/>
        <line num="120" count="0" type="stmt"/>
        <line num="133" count="0" type="cond" truecount="0" falsecount="3"/>
        <line num="135" count="0" type="stmt"/>
        <line num="137" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="230" count="0" type="stmt"/>
        <line num="289" count="0" type="stmt"/>
        <line num="310" count="0" type="stmt"/>
      </file>
    </package>
    <package name="context">
      <metrics statements="33" coveredstatements="0" conditionals="2" coveredconditionals="0" methods="8" coveredmethods="0"/>
      <file name="AuthContext.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\context\AuthContext.tsx">
        <metrics statements="33" coveredstatements="0" conditionals="2" coveredconditionals="0" methods="8" coveredmethods="0"/>
        <line num="23" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="45" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="46" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="68" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="70" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="80" count="0" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
      </file>
    </package>
    <package name="localization">
      <metrics statements="21" coveredstatements="0" conditionals="14" coveredconditionals="0" methods="3" coveredmethods="0"/>
      <file name="i18n.ts" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\localization\i18n.ts">
        <metrics statements="21" coveredstatements="0" conditionals="14" coveredconditionals="0" methods="3" coveredmethods="0"/>
        <line num="11" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="52" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="56" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="57" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="66" count="0" type="stmt"/>
        <line num="67" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="69" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
      </file>
    </package>
    <package name="screens">
      <metrics statements="803" coveredstatements="0" conditionals="530" coveredconditionals="0" methods="188" coveredmethods="0"/>
      <file name="DailyEntryScreen.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\screens\DailyEntryScreen.tsx">
        <metrics statements="281" coveredstatements="0" conditionals="194" coveredconditionals="0" methods="70" coveredmethods="0"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="66" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="70" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="71" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="72" count="0" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
        <line num="80" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="81" count="0" type="stmt"/>
        <line num="82" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="87" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="88" count="0" type="stmt"/>
        <line num="89" count="0" type="stmt"/>
        <line num="90" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="91" count="0" type="stmt"/>
        <line num="94" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="95" count="0" type="stmt"/>
        <line num="100" count="0" type="stmt"/>
        <line num="101" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="103" count="0" type="stmt"/>
        <line num="109" count="0" type="stmt"/>
        <line num="111" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="112" count="0" type="stmt"/>
        <line num="113" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
        <line num="115" count="0" type="stmt"/>
        <line num="117" count="0" type="stmt"/>
        <line num="118" count="0" type="stmt"/>
        <line num="119" count="0" type="stmt"/>
        <line num="121" count="0" type="stmt"/>
        <line num="125" count="0" type="stmt"/>
        <line num="126" count="0" type="stmt"/>
        <line num="127" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="128" count="0" type="stmt"/>
        <line num="129" count="0" type="stmt"/>
        <line num="133" count="0" type="stmt"/>
        <line num="134" count="0" type="cond" truecount="0" falsecount="6"/>
        <line num="135" count="0" type="stmt"/>
        <line num="136" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="138" count="0" type="stmt"/>
        <line num="139" count="0" type="stmt"/>
        <line num="140" count="0" type="stmt"/>
        <line num="142" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="143" count="0" type="stmt"/>
        <line num="144" count="0" type="stmt"/>
        <line num="148" count="0" type="stmt"/>
        <line num="150" count="0" type="stmt"/>
        <line num="151" count="0" type="stmt"/>
        <line num="155" count="0" type="stmt"/>
        <line num="156" count="0" type="stmt"/>
        <line num="157" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="160" count="0" type="stmt"/>
        <line num="161" count="0" type="stmt"/>
        <line num="162" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="163" count="0" type="stmt"/>
        <line num="166" count="0" type="stmt"/>
        <line num="167" count="0" type="stmt"/>
        <line num="168" count="0" type="stmt"/>
        <line num="171" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="172" count="0" type="stmt"/>
        <line num="174" count="0" type="stmt"/>
        <line num="177" count="0" type="stmt"/>
        <line num="179" count="0" type="stmt"/>
        <line num="180" count="0" type="stmt"/>
        <line num="182" count="0" type="stmt"/>
        <line num="183" count="0" type="stmt"/>
        <line num="185" count="0" type="stmt"/>
        <line num="189" count="0" type="stmt"/>
        <line num="190" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="191" count="0" type="stmt"/>
        <line num="192" count="0" type="stmt"/>
        <line num="194" count="0" type="stmt"/>
        <line num="195" count="0" type="stmt"/>
        <line num="197" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="198" count="0" type="stmt"/>
        <line num="200" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="201" count="0" type="stmt"/>
        <line num="202" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="203" count="0" type="stmt"/>
        <line num="204" count="0" type="stmt"/>
        <line num="206" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="208" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="210" count="0" type="stmt"/>
        <line num="211" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="213" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="214" count="0" type="stmt"/>
        <line num="215" count="0" type="stmt"/>
        <line num="217" count="0" type="stmt"/>
        <line num="218" count="0" type="stmt"/>
        <line num="219" count="0" type="stmt"/>
        <line num="221" count="0" type="stmt"/>
        <line num="224" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="226" count="0" type="stmt"/>
        <line num="227" count="0" type="stmt"/>
        <line num="228" count="0" type="stmt"/>
        <line num="229" count="0" type="stmt"/>
        <line num="231" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="235" count="0" type="stmt"/>
        <line num="236" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="237" count="0" type="stmt"/>
        <line num="238" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="239" count="0" type="stmt"/>
        <line num="241" count="0" type="stmt"/>
        <line num="242" count="0" type="stmt"/>
        <line num="244" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="245" count="0" type="stmt"/>
        <line num="246" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="247" count="0" type="stmt"/>
        <line num="248" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="250" count="0" type="stmt"/>
        <line num="251" count="0" type="stmt"/>
        <line num="252" count="0" type="stmt"/>
        <line num="254" count="0" type="stmt"/>
        <line num="257" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="259" count="0" type="stmt"/>
        <line num="261" count="0" type="stmt"/>
        <line num="262" count="0" type="stmt"/>
        <line num="263" count="0" type="stmt"/>
        <line num="264" count="0" type="stmt"/>
        <line num="265" count="0" type="stmt"/>
        <line num="269" count="0" type="stmt"/>
        <line num="270" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="271" count="0" type="stmt"/>
        <line num="272" count="0" type="stmt"/>
        <line num="273" count="0" type="stmt"/>
        <line num="275" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="276" count="0" type="stmt"/>
        <line num="277" count="0" type="stmt"/>
        <line num="278" count="0" type="stmt"/>
        <line num="279" count="0" type="stmt"/>
        <line num="280" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="282" count="0" type="stmt"/>
        <line num="283" count="0" type="stmt"/>
        <line num="284" count="0" type="stmt"/>
        <line num="286" count="0" type="stmt"/>
        <line num="288" count="0" type="stmt"/>
        <line num="291" count="0" type="stmt"/>
        <line num="292" count="0" type="stmt"/>
        <line num="294" count="0" type="stmt"/>
        <line num="295" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="296" count="0" type="stmt"/>
        <line num="297" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="298" count="0" type="stmt"/>
        <line num="299" count="0" type="stmt"/>
        <line num="302" count="0" type="stmt"/>
        <line num="303" count="0" type="stmt"/>
        <line num="305" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="306" count="0" type="stmt"/>
        <line num="307" count="0" type="stmt"/>
        <line num="310" count="0" type="stmt"/>
        <line num="311" count="0" type="stmt"/>
        <line num="312" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="313" count="0" type="stmt"/>
        <line num="314" count="0" type="stmt"/>
        <line num="316" count="0" type="stmt"/>
        <line num="317" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="318" count="0" type="stmt"/>
        <line num="319" count="0" type="stmt"/>
        <line num="322" count="0" type="stmt"/>
        <line num="324" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="325" count="0" type="stmt"/>
        <line num="327" count="0" type="stmt"/>
        <line num="328" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="332" count="0" type="stmt"/>
        <line num="339" count="0" type="stmt"/>
        <line num="344" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="345" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="347" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="348" count="0" type="stmt"/>
        <line num="349" count="0" type="stmt"/>
        <line num="350" count="0" type="stmt"/>
        <line num="351" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="353" count="0" type="stmt"/>
        <line num="354" count="0" type="stmt"/>
        <line num="355" count="0" type="stmt"/>
        <line num="357" count="0" type="stmt"/>
        <line num="360" count="0" type="stmt"/>
        <line num="361" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="362" count="0" type="stmt"/>
        <line num="363" count="0" type="stmt"/>
        <line num="364" count="0" type="stmt"/>
        <line num="365" count="0" type="stmt"/>
        <line num="366" count="0" type="stmt"/>
        <line num="370" count="0" type="stmt"/>
        <line num="374" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="375" count="0" type="stmt"/>
        <line num="376" count="0" type="stmt"/>
        <line num="378" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="379" count="0" type="stmt"/>
        <line num="380" count="0" type="stmt"/>
        <line num="381" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="383" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="384" count="0" type="stmt"/>
        <line num="385" count="0" type="stmt"/>
        <line num="387" count="0" type="stmt"/>
        <line num="389" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="390" count="0" type="stmt"/>
        <line num="392" count="0" type="stmt"/>
        <line num="393" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="394" count="0" type="stmt"/>
        <line num="396" count="0" type="stmt"/>
        <line num="401" count="0" type="stmt"/>
        <line num="403" count="0" type="stmt"/>
        <line num="404" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="405" count="0" type="stmt"/>
        <line num="406" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="407" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="408" count="0" type="stmt"/>
        <line num="409" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="410" count="0" type="stmt"/>
        <line num="411" count="0" type="stmt"/>
        <line num="414" count="0" type="stmt"/>
        <line num="418" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="419" count="0" type="stmt"/>
        <line num="423" count="0" type="stmt"/>
        <line num="424" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="425" count="0" type="stmt"/>
        <line num="426" count="0" type="stmt"/>
        <line num="427" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="428" count="0" type="stmt"/>
        <line num="429" count="0" type="stmt"/>
        <line num="431" count="0" type="stmt"/>
        <line num="432" count="0" type="stmt"/>
        <line num="433" count="0" type="stmt"/>
        <line num="434" count="0" type="stmt"/>
        <line num="435" count="0" type="stmt"/>
        <line num="438" count="0" type="stmt"/>
        <line num="439" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="440" count="0" type="stmt"/>
        <line num="441" count="0" type="stmt"/>
        <line num="442" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="443" count="0" type="stmt"/>
        <line num="444" count="0" type="stmt"/>
        <line num="446" count="0" type="stmt"/>
        <line num="447" count="0" type="stmt"/>
        <line num="448" count="0" type="stmt"/>
        <line num="449" count="0" type="stmt"/>
        <line num="450" count="0" type="stmt"/>
        <line num="453" count="0" type="stmt"/>
        <line num="454" count="0" type="stmt"/>
        <line num="455" count="0" type="stmt"/>
        <line num="456" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="457" count="0" type="stmt"/>
        <line num="458" count="0" type="cond" truecount="0" falsecount="9"/>
        <line num="459" count="0" type="stmt"/>
        <line num="462" count="0" type="stmt"/>
        <line num="465" count="0" type="stmt"/>
        <line num="467" count="0" type="cond" truecount="0" falsecount="3"/>
        <line num="477" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="479" count="0" type="stmt"/>
        <line num="498" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="519" count="0" type="stmt"/>
      </file>
      <file name="FoodListScreen.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\screens\FoodListScreen.tsx">
        <metrics statements="223" coveredstatements="0" conditionals="158" coveredconditionals="0" methods="55" coveredmethods="0"/>
        <line num="21" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="22" count="0" type="stmt"/>
        <line num="26" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="37" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="61" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="62" count="0" type="stmt"/>
        <line num="63" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="64" count="0" type="stmt"/>
        <line num="66" count="0" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
        <line num="80" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="82" count="0" type="stmt"/>
        <line num="83" count="0" type="stmt"/>
        <line num="84" count="0" type="stmt"/>
        <line num="85" count="0" type="stmt"/>
        <line num="86" count="0" type="stmt"/>
        <line num="88" count="0" type="stmt"/>
        <line num="89" count="0" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
        <line num="91" count="0" type="stmt"/>
        <line num="92" count="0" type="stmt"/>
        <line num="95" count="0" type="stmt"/>
        <line num="96" count="0" type="stmt"/>
        <line num="98" count="0" type="stmt"/>
        <line num="104" count="0" type="stmt"/>
        <line num="105" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="106" count="0" type="stmt"/>
        <line num="107" count="0" type="stmt"/>
        <line num="108" count="0" type="stmt"/>
        <line num="111" count="0" type="stmt"/>
        <line num="112" count="0" type="stmt"/>
        <line num="113" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
        <line num="118" count="0" type="stmt"/>
        <line num="119" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="120" count="0" type="stmt"/>
        <line num="121" count="0" type="stmt"/>
        <line num="122" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="123" count="0" type="stmt"/>
        <line num="126" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="127" count="0" type="stmt"/>
        <line num="131" count="0" type="stmt"/>
        <line num="133" count="0" type="stmt"/>
        <line num="134" count="0" type="stmt"/>
        <line num="135" count="0" type="stmt"/>
        <line num="136" count="0" type="stmt"/>
        <line num="137" count="0" type="stmt"/>
        <line num="138" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="139" count="0" type="stmt"/>
        <line num="140" count="0" type="stmt"/>
        <line num="143" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="145" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="148" count="0" type="stmt"/>
        <line num="149" count="0" type="stmt"/>
        <line num="153" count="0" type="stmt"/>
        <line num="155" count="0" type="stmt"/>
        <line num="157" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="158" count="0" type="stmt"/>
        <line num="161" count="0" type="stmt"/>
        <line num="162" count="0" type="stmt"/>
        <line num="164" count="0" type="stmt"/>
        <line num="167" count="0" type="stmt"/>
        <line num="168" count="0" type="stmt"/>
        <line num="170" count="0" type="stmt"/>
        <line num="172" count="0" type="stmt"/>
        <line num="176" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="177" count="0" type="stmt"/>
        <line num="179" count="0" type="stmt"/>
        <line num="180" count="0" type="stmt"/>
        <line num="181" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="182" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="183" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="186" count="0" type="stmt"/>
        <line num="189" count="0" type="stmt"/>
        <line num="190" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="191" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="192" count="0" type="stmt"/>
        <line num="193" count="0" type="stmt"/>
        <line num="195" count="0" type="stmt"/>
        <line num="196" count="0" type="stmt"/>
        <line num="198" count="0" type="stmt"/>
        <line num="199" count="0" type="stmt"/>
        <line num="202" count="0" type="stmt"/>
        <line num="203" count="0" type="stmt"/>
        <line num="204" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="205" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="206" count="0" type="stmt"/>
        <line num="207" count="0" type="stmt"/>
        <line num="209" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="210" count="0" type="stmt"/>
        <line num="212" count="0" type="stmt"/>
        <line num="213" count="0" type="stmt"/>
        <line num="214" count="0" type="stmt"/>
        <line num="215" count="0" type="stmt"/>
        <line num="216" count="0" type="stmt"/>
        <line num="217" count="0" type="stmt"/>
        <line num="220" count="0" type="stmt"/>
        <line num="228" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="229" count="0" type="stmt"/>
        <line num="230" count="0" type="stmt"/>
        <line num="231" count="0" type="stmt"/>
        <line num="233" count="0" type="stmt"/>
        <line num="236" count="0" type="stmt"/>
        <line num="238" count="0" type="stmt"/>
        <line num="244" count="0" type="stmt"/>
        <line num="245" count="0" type="stmt"/>
        <line num="246" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="247" count="0" type="stmt"/>
        <line num="248" count="0" type="stmt"/>
        <line num="251" count="0" type="stmt"/>
        <line num="252" count="0" type="stmt"/>
        <line num="253" count="0" type="stmt"/>
        <line num="261" count="0" type="stmt"/>
        <line num="262" count="0" type="stmt"/>
        <line num="263" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="265" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="267" count="0" type="stmt"/>
        <line num="268" count="0" type="stmt"/>
        <line num="270" count="0" type="stmt"/>
        <line num="271" count="0" type="stmt"/>
        <line num="273" count="0" type="stmt"/>
        <line num="274" count="0" type="stmt"/>
        <line num="277" count="0" type="stmt"/>
        <line num="278" count="0" type="stmt"/>
        <line num="282" count="0" type="stmt"/>
        <line num="288" count="0" type="stmt"/>
        <line num="293" count="0" type="stmt"/>
        <line num="294" count="0" type="stmt"/>
        <line num="297" count="0" type="stmt"/>
        <line num="298" count="0" type="stmt"/>
        <line num="299" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="300" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="301" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="302" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="303" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="304" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="307" count="0" type="stmt"/>
        <line num="308" count="0" type="stmt"/>
        <line num="309" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="310" count="0" type="stmt"/>
        <line num="311" count="0" type="stmt"/>
        <line num="312" count="0" type="stmt"/>
        <line num="313" count="0" type="stmt"/>
        <line num="314" count="0" type="stmt"/>
        <line num="315" count="0" type="stmt"/>
        <line num="316" count="0" type="stmt"/>
        <line num="317" count="0" type="stmt"/>
        <line num="318" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="319" count="0" type="stmt"/>
        <line num="322" count="0" type="stmt"/>
        <line num="323" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="324" count="0" type="stmt"/>
        <line num="325" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="326" count="0" type="stmt"/>
        <line num="327" count="0" type="stmt"/>
        <line num="328" count="0" type="stmt"/>
        <line num="329" count="0" type="stmt"/>
        <line num="330" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="331" count="0" type="stmt"/>
        <line num="332" count="0" type="stmt"/>
        <line num="333" count="0" type="stmt"/>
        <line num="334" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="335" count="0" type="stmt"/>
        <line num="338" count="0" type="stmt"/>
        <line num="339" count="0" type="stmt"/>
        <line num="343" count="0" type="stmt"/>
        <line num="344" count="0" type="stmt"/>
        <line num="345" count="0" type="stmt"/>
        <line num="346" count="0" type="stmt"/>
        <line num="347" count="0" type="stmt"/>
        <line num="348" count="0" type="stmt"/>
        <line num="349" count="0" type="stmt"/>
        <line num="350" count="0" type="stmt"/>
        <line num="351" count="0" type="stmt"/>
        <line num="352" count="0" type="stmt"/>
        <line num="355" count="0" type="stmt"/>
        <line num="356" count="0" type="stmt"/>
        <line num="357" count="0" type="stmt"/>
        <line num="358" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="359" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="360" count="0" type="stmt"/>
        <line num="361" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="363" count="0" type="stmt"/>
        <line num="364" count="0" type="cond" truecount="0" falsecount="8"/>
        <line num="365" count="0" type="stmt"/>
        <line num="367" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="370" count="0" type="stmt"/>
        <line num="371" count="0" type="stmt"/>
        <line num="372" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="373" count="0" type="stmt"/>
        <line num="377" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="378" count="0" type="stmt"/>
        <line num="386" count="0" type="stmt"/>
        <line num="396" count="0" type="stmt"/>
        <line num="415" count="0" type="stmt"/>
        <line num="426" count="0" type="stmt"/>
        <line num="428" count="0" type="stmt"/>
        <line num="454" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="462" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="476" count="0" type="stmt"/>
      </file>
      <file name="ForgotPasswordScreen.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\screens\ForgotPasswordScreen.tsx">
        <metrics statements="19" coveredstatements="0" conditionals="2" coveredconditionals="0" methods="5" coveredmethods="0"/>
        <line num="13" count="0" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="20" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
      </file>
      <file name="LoginScreen.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\screens\LoginScreen.tsx">
        <metrics statements="23" coveredstatements="0" conditionals="8" coveredconditionals="0" methods="5" coveredmethods="0"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="32" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="62" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="83" count="0" type="stmt"/>
        <line num="90" count="0" type="stmt"/>
      </file>
      <file name="QuestionnaireScreen.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\screens\QuestionnaireScreen.tsx">
        <metrics statements="106" coveredstatements="0" conditionals="95" coveredconditionals="0" methods="21" coveredmethods="0"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="68" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="70" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="71" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
        <line num="81" count="0" type="cond" truecount="0" falsecount="6"/>
        <line num="82" count="0" type="stmt"/>
        <line num="84" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="85" count="0" type="stmt"/>
        <line num="87" count="0" type="cond" truecount="0" falsecount="6"/>
        <line num="88" count="0" type="stmt"/>
        <line num="90" count="0" type="cond" truecount="0" falsecount="6"/>
        <line num="91" count="0" type="stmt"/>
        <line num="93" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="94" count="0" type="stmt"/>
        <line num="96" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="97" count="0" type="stmt"/>
        <line num="99" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="100" count="0" type="stmt"/>
        <line num="103" count="0" type="stmt"/>
        <line num="104" count="0" type="stmt"/>
        <line num="107" count="0" type="stmt"/>
        <line num="108" count="0" type="stmt"/>
        <line num="109" count="0" type="stmt"/>
        <line num="110" count="0" type="stmt"/>
        <line num="114" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="115" count="0" type="stmt"/>
        <line num="117" count="0" type="stmt"/>
        <line num="121" count="0" type="stmt"/>
        <line num="122" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="123" count="0" type="stmt"/>
        <line num="124" count="0" type="stmt"/>
        <line num="125" count="0" type="stmt"/>
        <line num="126" count="0" type="stmt"/>
        <line num="127" count="0" type="stmt"/>
        <line num="129" count="0" type="stmt"/>
        <line num="132" count="0" type="stmt"/>
        <line num="133" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="134" count="0" type="cond" truecount="0" falsecount="3"/>
        <line num="135" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="136" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="137" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="140" count="0" type="stmt"/>
        <line num="143" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="144" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="145" count="0" type="stmt"/>
        <line num="146" count="0" type="stmt"/>
        <line num="148" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="149" count="0" type="stmt"/>
        <line num="151" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="152" count="0" type="stmt"/>
        <line num="157" count="0" type="stmt"/>
        <line num="158" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="159" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="161" count="0" type="stmt"/>
        <line num="162" count="0" type="stmt"/>
        <line num="164" count="0" type="stmt"/>
        <line num="165" count="0" type="stmt"/>
        <line num="166" count="0" type="stmt"/>
        <line num="168" count="0" type="stmt"/>
        <line num="169" count="0" type="stmt"/>
        <line num="171" count="0" type="stmt"/>
        <line num="179" count="0" type="stmt"/>
        <line num="180" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="181" count="0" type="stmt"/>
        <line num="182" count="0" type="stmt"/>
        <line num="184" count="0" type="stmt"/>
        <line num="185" count="0" type="stmt"/>
        <line num="186" count="0" type="stmt"/>
        <line num="187" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="188" count="0" type="stmt"/>
        <line num="189" count="0" type="stmt"/>
        <line num="193" count="0" type="stmt"/>
        <line num="194" count="0" type="stmt"/>
        <line num="195" count="0" type="stmt"/>
        <line num="197" count="0" type="stmt"/>
        <line num="200" count="0" type="stmt"/>
        <line num="201" count="0" type="stmt"/>
        <line num="203" count="0" type="stmt"/>
        <line num="207" count="0" type="stmt"/>
        <line num="214" count="0" type="stmt"/>
        <line num="224" count="0" type="stmt"/>
        <line num="231" count="0" type="stmt"/>
        <line num="240" count="0" type="stmt"/>
        <line num="248" count="0" type="stmt"/>
        <line num="255" count="0" type="stmt"/>
        <line num="269" count="0" type="stmt"/>
        <line num="278" count="0" type="stmt"/>
        <line num="279" count="0" type="stmt"/>
        <line num="282" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="296" count="0" type="stmt"/>
      </file>
      <file name="RegisterScreen.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\screens\RegisterScreen.tsx">
        <metrics statements="22" coveredstatements="0" conditionals="6" coveredconditionals="0" methods="4" coveredmethods="0"/>
        <line num="12" count="0" type="stmt"/>
        <line num="13" count="0" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="20" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="24" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
      </file>
      <file name="SettingsScreen.tsx" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\screens\SettingsScreen.tsx">
        <metrics statements="129" coveredstatements="0" conditionals="67" coveredconditionals="0" methods="28" coveredmethods="0"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="62" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
        <line num="68" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="76" count="0" type="stmt"/>
        <line num="77" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
        <line num="80" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="82" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="83" count="0" type="stmt"/>
        <line num="84" count="0" type="stmt"/>
        <line num="86" count="0" type="stmt"/>
        <line num="88" count="0" type="stmt"/>
        <line num="89" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="90" count="0" type="stmt"/>
        <line num="91" count="0" type="cond" truecount="0" falsecount="6"/>
        <line num="92" count="0" type="stmt"/>
        <line num="94" count="0" type="stmt"/>
        <line num="97" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="99" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="100" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="101" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="102" count="0" type="stmt"/>
        <line num="106" count="0" type="stmt"/>
        <line num="110" count="0" type="stmt"/>
        <line num="112" count="0" type="stmt"/>
        <line num="117" count="0" type="stmt"/>
        <line num="119" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="120" count="0" type="stmt"/>
        <line num="124" count="0" type="stmt"/>
        <line num="126" count="0" type="stmt"/>
        <line num="130" count="0" type="stmt"/>
        <line num="131" count="0" type="stmt"/>
        <line num="132" count="0" type="stmt"/>
        <line num="133" count="0" type="stmt"/>
        <line num="136" count="0" type="stmt"/>
        <line num="137" count="0" type="stmt"/>
        <line num="139" count="0" type="stmt"/>
        <line num="140" count="0" type="stmt"/>
        <line num="142" count="0" type="stmt"/>
        <line num="146" count="0" type="stmt"/>
        <line num="147" count="0" type="stmt"/>
        <line num="148" count="0" type="stmt"/>
        <line num="149" count="0" type="stmt"/>
        <line num="150" count="0" type="stmt"/>
        <line num="153" count="0" type="stmt"/>
        <line num="154" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="155" count="0" type="stmt"/>
        <line num="162" count="0" type="stmt"/>
        <line num="165" count="0" type="stmt"/>
        <line num="166" count="0" type="stmt"/>
        <line num="167" count="0" type="stmt"/>
        <line num="168" count="0" type="stmt"/>
        <line num="169" count="0" type="stmt"/>
        <line num="170" count="0" type="stmt"/>
        <line num="171" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="172" count="0" type="stmt"/>
        <line num="173" count="0" type="stmt"/>
        <line num="174" count="0" type="stmt"/>
        <line num="175" count="0" type="stmt"/>
        <line num="177" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="178" count="0" type="stmt"/>
        <line num="181" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="184" count="0" type="stmt"/>
        <line num="185" count="0" type="stmt"/>
        <line num="189" count="0" type="stmt"/>
        <line num="190" count="0" type="stmt"/>
        <line num="191" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="193" count="0" type="stmt"/>
        <line num="194" count="0" type="stmt"/>
        <line num="195" count="0" type="stmt"/>
        <line num="197" count="0" type="stmt"/>
        <line num="199" count="0" type="stmt"/>
        <line num="202" count="0" type="stmt"/>
        <line num="204" count="0" type="stmt"/>
        <line num="209" count="0" type="stmt"/>
        <line num="210" count="0" type="stmt"/>
        <line num="211" count="0" type="stmt"/>
        <line num="212" count="0" type="stmt"/>
        <line num="213" count="0" type="stmt"/>
        <line num="214" count="0" type="stmt"/>
        <line num="215" count="0" type="stmt"/>
        <line num="216" count="0" type="stmt"/>
        <line num="217" count="0" type="stmt"/>
        <line num="219" count="0" type="stmt"/>
        <line num="221" count="0" type="stmt"/>
        <line num="223" count="0" type="stmt"/>
        <line num="224" count="0" type="stmt"/>
        <line num="227" count="0" type="stmt"/>
        <line num="228" count="0" type="stmt"/>
        <line num="229" count="0" type="stmt"/>
        <line num="230" count="0" type="stmt"/>
        <line num="231" count="0" type="stmt"/>
        <line num="232" count="0" type="stmt"/>
        <line num="233" count="0" type="stmt"/>
        <line num="236" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="237" count="0" type="stmt"/>
        <line num="239" count="0" type="stmt"/>
        <line num="242" count="0" type="stmt"/>
        <line num="243" count="0" type="stmt"/>
        <line num="244" count="0" type="stmt"/>
        <line num="247" count="0" type="stmt"/>
        <line num="248" count="0" type="stmt"/>
        <line num="251" count="0" type="stmt"/>
        <line num="252" count="0" type="stmt"/>
        <line num="263" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="264" count="0" type="stmt"/>
        <line num="272" count="0" type="stmt"/>
        <line num="304" count="0" type="stmt"/>
        <line num="344" count="0" type="stmt"/>
      </file>
    </package>
    <package name="services">
      <metrics statements="310" coveredstatements="0" conditionals="160" coveredconditionals="0" methods="48" coveredmethods="0"/>
      <file name="authService.ts" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\services\authService.ts">
        <metrics statements="68" coveredstatements="0" conditionals="31" coveredconditionals="0" methods="11" coveredmethods="0"/>
        <line num="9" count="0" type="stmt"/>
        <line num="10" count="0" type="stmt"/>
        <line num="12" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="13" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="14" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="21" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="22" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="34" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="48" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="74" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="75" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="80" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="81" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="82" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="83" count="0" type="stmt"/>
        <line num="85" count="0" type="stmt"/>
        <line num="87" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="88" count="0" type="stmt"/>
        <line num="92" count="0" type="stmt"/>
        <line num="93" count="0" type="stmt"/>
        <line num="99" count="0" type="stmt"/>
        <line num="100" count="0" type="stmt"/>
        <line num="101" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="105" count="0" type="stmt"/>
        <line num="107" count="0" type="stmt"/>
        <line num="108" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
        <line num="116" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="117" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="119" count="0" type="stmt"/>
        <line num="121" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="122" count="0" type="stmt"/>
        <line num="126" count="0" type="stmt"/>
        <line num="127" count="0" type="stmt"/>
        <line num="128" count="0" type="stmt"/>
        <line num="132" count="0" type="stmt"/>
        <line num="134" count="0" type="stmt"/>
        <line num="135" count="0" type="stmt"/>
        <line num="139" count="0" type="stmt"/>
        <line num="140" count="0" type="stmt"/>
        <line num="141" count="0" type="stmt"/>
        <line num="142" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="143" count="0" type="stmt"/>
        <line num="149" count="0" type="stmt"/>
        <line num="151" count="0" type="stmt"/>
        <line num="155" count="0" type="stmt"/>
        <line num="156" count="0" type="stmt"/>
      </file>
      <file name="backendService.ts" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\services\backendService.ts">
        <metrics statements="77" coveredstatements="0" conditionals="75" coveredconditionals="0" methods="12" coveredmethods="0"/>
        <line num="8" count="0" type="stmt"/>
        <line num="9" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="29" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="38" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="40" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="42" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="54" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="55" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="62" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="63" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="64" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="69" count="0" type="stmt"/>
        <line num="70" count="0" type="stmt"/>
        <line num="72" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="73" count="0" type="stmt"/>
        <line num="74" count="0" type="stmt"/>
        <line num="75" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="80" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="81" count="0" type="stmt"/>
        <line num="82" count="0" type="stmt"/>
        <line num="83" count="0" type="stmt"/>
        <line num="85" count="0" type="stmt"/>
        <line num="86" count="0" type="stmt"/>
        <line num="87" count="0" type="stmt"/>
        <line num="88" count="0" type="stmt"/>
        <line num="92" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="94" count="0" type="stmt"/>
        <line num="95" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="96" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="98" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="99" count="0" type="stmt"/>
        <line num="100" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="101" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="104" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="105" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="106" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="108" count="0" type="stmt"/>
        <line num="110" count="0" type="stmt"/>
        <line num="113" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="116" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="117" count="0" type="stmt"/>
        <line num="118" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="119" count="0" type="stmt"/>
        <line num="120" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="121" count="0" type="stmt"/>
        <line num="123" count="0" type="stmt"/>
        <line num="126" count="0" type="stmt"/>
        <line num="128" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="129" count="0" type="stmt"/>
        <line num="134" count="0" type="stmt"/>
        <line num="135" count="0" type="stmt"/>
        <line num="136" count="0" type="stmt"/>
        <line num="137" count="0" type="stmt"/>
        <line num="138" count="0" type="stmt"/>
        <line num="139" count="0" type="stmt"/>
        <line num="140" count="0" type="stmt"/>
        <line num="141" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="142" count="0" type="stmt"/>
        <line num="144" count="0" type="stmt"/>
        <line num="145" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="146" count="0" type="stmt"/>
      </file>
      <file name="clientIDService.ts" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\services\clientIDService.ts">
        <metrics statements="22" coveredstatements="0" conditionals="4" coveredconditionals="0" methods="2" coveredmethods="0"/>
        <line num="5" count="0" type="stmt"/>
        <line num="6" count="0" type="stmt"/>
        <line num="8" count="0" type="stmt"/>
        <line num="9" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="10" count="0" type="stmt"/>
        <line num="13" count="0" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
      </file>
      <file name="foodService.ts" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\services\foodService.ts">
        <metrics statements="34" coveredstatements="0" conditionals="15" coveredconditionals="0" methods="9" coveredmethods="0"/>
        <line num="7" count="0" type="stmt"/>
        <line num="8" count="0" type="stmt"/>
        <line num="13" count="0" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="28" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="36" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="37" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="42" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="43" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="47" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="53" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="56" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="57" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="66" count="0" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
      </file>
      <file name="storageService.ts" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\services\storageService.ts">
        <metrics statements="87" coveredstatements="0" conditionals="21" coveredconditionals="0" methods="11" coveredmethods="0"/>
        <line num="7" count="0" type="stmt"/>
        <line num="8" count="0" type="stmt"/>
        <line num="9" count="0" type="stmt"/>
        <line num="10" count="0" type="stmt"/>
        <line num="11" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="20" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="44" count="0" type="cond" truecount="0" falsecount="1"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="48" count="0" type="stmt"/>
        <line num="50" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="51" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="67" count="0" type="stmt"/>
        <line num="68" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
        <line num="80" count="0" type="stmt"/>
        <line num="81" count="0" type="stmt"/>
        <line num="82" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="84" count="0" type="stmt"/>
        <line num="86" count="0" type="stmt"/>
        <line num="95" count="0" type="stmt"/>
        <line num="96" count="0" type="stmt"/>
        <line num="97" count="0" type="stmt"/>
        <line num="101" count="0" type="stmt"/>
        <line num="102" count="0" type="stmt"/>
        <line num="103" count="0" type="stmt"/>
        <line num="104" count="0" type="stmt"/>
        <line num="105" count="0" type="stmt"/>
        <line num="107" count="0" type="stmt"/>
        <line num="109" count="0" type="stmt"/>
        <line num="110" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="111" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="113" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="114" count="0" type="stmt"/>
        <line num="116" count="0" type="stmt"/>
        <line num="118" count="0" type="stmt"/>
        <line num="119" count="0" type="stmt"/>
        <line num="123" count="0" type="stmt"/>
        <line num="124" count="0" type="stmt"/>
        <line num="125" count="0" type="stmt"/>
        <line num="127" count="0" type="stmt"/>
        <line num="128" count="0" type="stmt"/>
        <line num="132" count="0" type="stmt"/>
        <line num="133" count="0" type="stmt"/>
        <line num="134" count="0" type="stmt"/>
        <line num="135" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="137" count="0" type="stmt"/>
        <line num="138" count="0" type="stmt"/>
        <line num="139" count="0" type="stmt"/>
        <line num="143" count="0" type="stmt"/>
        <line num="144" count="0" type="stmt"/>
        <line num="145" count="0" type="stmt"/>
        <line num="147" count="0" type="stmt"/>
        <line num="148" count="0" type="stmt"/>
        <line num="152" count="0" type="stmt"/>
        <line num="153" count="0" type="stmt"/>
        <line num="154" count="0" type="stmt"/>
        <line num="155" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="157" count="0" type="stmt"/>
        <line num="158" count="0" type="stmt"/>
        <line num="159" count="0" type="stmt"/>
      </file>
      <file name="tokenStorage.ts" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\services\tokenStorage.ts">
        <metrics statements="22" coveredstatements="0" conditionals="14" coveredconditionals="0" methods="3" coveredmethods="0"/>
        <line num="8" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="18" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="19" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="32" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="45" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="50" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="51" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="68" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="69" count="0" type="stmt"/>
        <line num="71" count="0" type="stmt"/>
      </file>
    </package>
    <package name="utils">
      <metrics statements="316" coveredstatements="0" conditionals="289" coveredconditionals="0" methods="34" coveredmethods="0"/>
      <file name="dateUtils.ts" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\utils\dateUtils.ts">
        <metrics statements="23" coveredstatements="0" conditionals="16" coveredconditionals="0" methods="3" coveredmethods="0"/>
        <line num="13" count="0" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="16" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="17" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="18" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="19" count="0" type="stmt"/>
        <line num="21" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="22" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="39" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="40" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="41" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="42" count="0" type="stmt"/>
        <line num="44" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="stmt"/>
      </file>
      <file name="foodIconMatcher.ts" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\utils\foodIconMatcher.ts">
        <metrics statements="66" coveredstatements="0" conditionals="62" coveredconditionals="0" methods="10" coveredmethods="0"/>
        <line num="6" count="0" type="stmt"/>
        <line num="7" count="0" type="stmt"/>
        <line num="12" count="0" type="stmt"/>
        <line num="13" count="0" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="17" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="28" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="45" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="48" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="49" count="0" type="stmt"/>
        <line num="51" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="52" count="0" type="stmt"/>
        <line num="53" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="54" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="60" count="0" type="stmt"/>
        <line num="61" count="0" type="stmt"/>
        <line num="64" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="65" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
        <line num="73" count="0" type="stmt"/>
        <line num="74" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="76" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="77" count="0" type="stmt"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="stmt"/>
        <line num="82" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="83" count="0" type="stmt"/>
        <line num="84" count="0" type="stmt"/>
        <line num="87" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="88" count="0" type="stmt"/>
        <line num="89" count="0" type="stmt"/>
        <line num="93" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="94" count="0" type="stmt"/>
        <line num="95" count="0" type="stmt"/>
        <line num="96" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="97" count="0" type="stmt"/>
        <line num="98" count="0" type="stmt"/>
        <line num="99" count="0" type="stmt"/>
        <line num="104" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="105" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="106" count="0" type="cond" truecount="0" falsecount="6"/>
        <line num="107" count="0" type="stmt"/>
        <line num="112" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="114" count="0" type="stmt"/>
        <line num="117" count="0" type="stmt"/>
        <line num="118" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="119" count="0" type="stmt"/>
        <line num="121" count="0" type="stmt"/>
        <line num="122" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="123" count="0" type="stmt"/>
        <line num="127" count="0" type="stmt"/>
        <line num="129" count="0" type="cond" truecount="0" falsecount="2"/>
      </file>
      <file name="gradingUtils.ts" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\utils\gradingUtils.ts">
        <metrics statements="82" coveredstatements="0" conditionals="135" coveredconditionals="0" methods="3" coveredmethods="0"/>
        <line num="13" count="0" type="stmt"/>
        <line num="21" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="25" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="26" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="27" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="28" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="cond" truecount="0" falsecount="7"/>
        <line num="40" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="47" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="48" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="49" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="50" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="53" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="54" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="55" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="61" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="62" count="0" type="stmt"/>
        <line num="63" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="64" count="0" type="stmt"/>
        <line num="66" count="0" type="cond" truecount="0" falsecount="5"/>
        <line num="67" count="0" type="stmt"/>
        <line num="69" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="70" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="74" count="0" type="stmt"/>
        <line num="75" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="77" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="78" count="0" type="stmt"/>
        <line num="79" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="80" count="0" type="stmt"/>
        <line num="83" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="84" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="87" count="0" type="stmt"/>
        <line num="88" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="92" count="0" type="stmt"/>
        <line num="93" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="94" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="95" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="96" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="97" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="100" count="0" type="cond" truecount="0" falsecount="6"/>
        <line num="101" count="0" type="stmt"/>
        <line num="104" count="0" type="stmt"/>
        <line num="114" count="0" type="stmt"/>
        <line num="119" count="0" type="stmt"/>
        <line num="120" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="121" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="123" count="0" type="stmt"/>
        <line num="126" count="0" type="stmt"/>
        <line num="133" count="0" type="stmt"/>
        <line num="134" count="0" type="stmt"/>
        <line num="135" count="0" type="stmt"/>
        <line num="136" count="0" type="stmt"/>
        <line num="137" count="0" type="stmt"/>
        <line num="142" count="0" type="stmt"/>
        <line num="143" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="144" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="147" count="0" type="stmt"/>
        <line num="148" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="149" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="152" count="0" type="stmt"/>
        <line num="153" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="154" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="157" count="0" type="stmt"/>
        <line num="158" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="159" count="0" type="stmt"/>
        <line num="160" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="161" count="0" type="stmt"/>
        <line num="165" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="166" count="0" type="stmt"/>
        <line num="167" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="168" count="0" type="stmt"/>
        <line num="172" count="0" type="cond" truecount="0" falsecount="7"/>
        <line num="176" count="0" type="stmt"/>
        <line num="179" count="0" type="stmt"/>
      </file>
      <file name="iconUtils.ts" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\utils\iconUtils.ts">
        <metrics statements="25" coveredstatements="0" conditionals="10" coveredconditionals="0" methods="3" coveredmethods="0"/>
        <line num="6" count="0" type="stmt"/>
        <line num="7" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="18" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="19" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="26" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="27" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="35" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="39" count="0" type="stmt"/>
        <line num="40" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="44" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="50" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="55" count="0" type="stmt"/>
        <line num="56" count="0" type="stmt"/>
      </file>
      <file name="imageUtils.ts" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\utils\imageUtils.ts">
        <metrics statements="24" coveredstatements="0" conditionals="10" coveredconditionals="0" methods="2" coveredmethods="0"/>
        <line num="8" count="0" type="stmt"/>
        <line num="9" count="0" type="stmt"/>
        <line num="11" count="0" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="16" count="0" type="stmt"/>
        <line num="17" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="18" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="20" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="26" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="27" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="31" count="0" type="stmt"/>
        <line num="33" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="42" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="46" count="0" type="cond" truecount="0" falsecount="2"/>
      </file>
      <file name="languageUtils.ts" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\utils\languageUtils.ts">
        <metrics statements="23" coveredstatements="0" conditionals="18" coveredconditionals="0" methods="1" coveredmethods="0"/>
        <line num="5" count="0" type="stmt"/>
        <line num="6" count="0" type="stmt"/>
        <line num="8" count="0" type="stmt"/>
        <line num="17" count="0" type="stmt"/>
        <line num="18" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="19" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="stmt"/>
        <line num="25" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="28" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="31" count="0" type="stmt"/>
        <line num="32" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="33" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="41" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="42" count="0" type="stmt"/>
        <line num="44" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="45" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
      </file>
      <file name="macros.ts" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\utils\macros.ts">
        <metrics statements="32" coveredstatements="0" conditionals="14" coveredconditionals="0" methods="6" coveredmethods="0"/>
        <line num="10" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="11" count="0" type="stmt"/>
        <line num="12" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="13" count="0" type="stmt"/>
        <line num="14" count="0" type="stmt"/>
        <line num="15" count="0" type="stmt"/>
        <line num="19" count="0" type="stmt"/>
        <line num="20" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="21" count="0" type="stmt"/>
        <line num="22" count="0" type="stmt"/>
        <line num="26" count="0" type="stmt"/>
        <line num="27" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="30" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="stmt"/>
        <line num="37" count="0" type="stmt"/>
        <line num="38" count="0" type="stmt"/>
        <line num="40" count="0" type="stmt"/>
        <line num="41" count="0" type="stmt"/>
        <line num="46" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="49" count="0" type="stmt"/>
        <line num="51" count="0" type="stmt"/>
        <line num="52" count="0" type="stmt"/>
        <line num="57" count="0" type="stmt"/>
        <line num="58" count="0" type="stmt"/>
        <line num="59" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="60" count="0" type="stmt"/>
        <line num="62" count="0" type="stmt"/>
        <line num="63" count="0" type="stmt"/>
      </file>
      <file name="searchUtils.ts" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\utils\searchUtils.ts">
        <metrics statements="31" coveredstatements="0" conditionals="20" coveredconditionals="0" methods="3" coveredmethods="0"/>
        <line num="18" count="0" type="stmt"/>
        <line num="19" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="20" count="0" type="stmt"/>
        <line num="23" count="0" type="stmt"/>
        <line num="24" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="25" count="0" type="stmt"/>
        <line num="28" count="0" type="stmt"/>
        <line num="29" count="0" type="stmt"/>
        <line num="32" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="33" count="0" type="stmt"/>
        <line num="34" count="0" type="stmt"/>
        <line num="35" count="0" type="stmt"/>
        <line num="36" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="37" count="0" type="stmt"/>
        <line num="43" count="0" type="stmt"/>
        <line num="44" count="0" type="stmt"/>
        <line num="47" count="0" type="stmt"/>
        <line num="48" count="0" type="stmt"/>
        <line num="49" count="0" type="stmt"/>
        <line num="50" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="52" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="53" count="0" type="stmt"/>
        <line num="54" count="0" type="stmt"/>
        <line num="59" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="60" count="0" type="stmt"/>
        <line num="64" count="0" type="stmt"/>
        <line num="65" count="0" type="stmt"/>
        <line num="66" count="0" type="stmt"/>
        <line num="67" count="0" type="cond" truecount="0" falsecount="4"/>
        <line num="68" count="0" type="stmt"/>
        <line num="72" count="0" type="stmt"/>
      </file>
      <file name="units.ts" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\utils\units.ts">
        <metrics statements="6" coveredstatements="0" conditionals="2" coveredconditionals="0" methods="1" coveredmethods="0"/>
        <line num="10" count="0" type="stmt"/>
        <line num="11" count="0" type="stmt"/>
        <line num="12" count="0" type="stmt"/>
        <line num="14" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="17" count="0" type="stmt"/>
        <line num="18" count="0" type="stmt"/>
      </file>
      <file name="validationUtils.ts" path="C:\Users\Daniel\Documents\GitHub\macros-counter\MacroTracker\src\utils\validationUtils.ts">
        <metrics statements="4" coveredstatements="0" conditionals="2" coveredconditionals="0" methods="2" coveredmethods="0"/>
        <line num="3" count="0" type="stmt"/>
        <line num="4" count="0" type="cond" truecount="0" falsecount="2"/>
        <line num="7" count="0" type="stmt"/>
        <line num="8" count="0" type="stmt"/>
      </file>
    </package>
  </project>
</coverage>

---------- END clover.xml ----------


---------- coverage-final.json ----------
{"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\AccountSettings.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\AccountSettings.tsx","statementMap":{"0":{"start":{"line":14,"column":56},"end":{"line":55,"column":1}},"1":{"start":{"line":20,"column":22},"end":{"line":20,"column":32}},"2":{"start":{"line":21,"column":19},"end":{"line":21,"column":30}},"3":{"start":{"line":23,"column":4},"end":{"line":54,"column":6}},"4":{"start":{"line":57,"column":18},"end":{"line":85,"column":3}},"5":{"start":{"line":57,"column":41},"end":{"line":85,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":56},"end":{"line":14,"column":57}},"loc":{"start":{"line":19,"column":6},"end":{"line":55,"column":1}},"line":19},"1":{"name":"(anonymous_1)","decl":{"start":{"line":57,"column":29},"end":{"line":57,"column":30}},"loc":{"start":{"line":57,"column":41},"end":{"line":85,"column":1}},"line":57}},"branchMap":{"0":{"loc":{"start":{"line":30,"column":17},"end":{"line":34,"column":17}},"type":"cond-expr","locations":[{"start":{"line":31,"column":20},"end":{"line":31,"column":83}},{"start":{"line":33,"column":20},"end":{"line":33,"column":127}}],"line":30},"1":{"loc":{"start":{"line":33,"column":52},"end":{"line":33,"column":119}},"type":"cond-expr","locations":[{"start":{"line":33,"column":73},"end":{"line":33,"column":82}},{"start":{"line":33,"column":85},"end":{"line":33,"column":119}}],"line":33},"2":{"loc":{"start":{"line":38,"column":13},"end":{"line":52,"column":13}},"type":"binary-expr","locations":[{"start":{"line":38,"column":13},"end":{"line":38,"column":20}},{"start":{"line":39,"column":16},"end":{"line":51,"column":19}}],"line":38},"3":{"loc":{"start":{"line":46,"column":34},"end":{"line":46,"column":65}},"type":"binary-expr","locations":[{"start":{"line":46,"column":34},"end":{"line":46,"column":47}},{"start":{"line":46,"column":51},"end":{"line":46,"column":65}}],"line":46}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},"f":{"0":0,"1":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\AddFoodModal.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\AddFoodModal.tsx","statementMap":{"0":{"start":{"line":56,"column":33},"end":{"line":56,"column":63}},"1":{"start":{"line":58,"column":50},"end":{"line":277,"column":1}},"2":{"start":{"line":70,"column":22},"end":{"line":70,"column":32}},"3":{"start":{"line":71,"column":19},"end":{"line":71,"column":30}},"4":{"start":{"line":72,"column":34},"end":{"line":72,"column":49}},"5":{"start":{"line":73,"column":38},"end":{"line":73,"column":67}},"6":{"start":{"line":74,"column":42},"end":{"line":74,"column":54}},"7":{"start":{"line":75,"column":46},"end":{"line":75,"column":61}},"8":{"start":{"line":76,"column":48},"end":{"line":76,"column":63}},"9":{"start":{"line":78,"column":4},"end":{"line":87,"column":41}},"10":{"start":{"line":79,"column":8},"end":{"line":86,"column":9}},"11":{"start":{"line":80,"column":12},"end":{"line":80,"column":26}},"12":{"start":{"line":81,"column":12},"end":{"line":81,"column":31}},"13":{"start":{"line":82,"column":12},"end":{"line":82,"column":36}},"14":{"start":{"line":83,"column":12},"end":{"line":83,"column":37}},"15":{"start":{"line":84,"column":12},"end":{"line":84,"column":30}},"16":{"start":{"line":85,"column":12},"end":{"line":85,"column":57}},"17":{"start":{"line":89,"column":31},"end":{"line":91,"column":5}},"18":{"start":{"line":90,"column":8},"end":{"line":90,"column":45}},"19":{"start":{"line":93,"column":33},"end":{"line":121,"column":5}},"20":{"start":{"line":94,"column":25},"end":{"line":94,"column":35}},"21":{"start":{"line":95,"column":28},"end":{"line":95,"column":57}},"22":{"start":{"line":97,"column":52},"end":{"line":100,"column":9}},"23":{"start":{"line":102,"column":33},"end":{"line":102,"column":61}},"24":{"start":{"line":103,"column":8},"end":{"line":107,"column":9}},"25":{"start":{"line":104,"column":12},"end":{"line":104,"column":40}},"26":{"start":{"line":105,"column":12},"end":{"line":105,"column":100}},"27":{"start":{"line":106,"column":12},"end":{"line":106,"column":19}},"28":{"start":{"line":108,"column":8},"end":{"line":108,"column":22}},"29":{"start":{"line":108,"column":23},"end":{"line":108,"column":40}},"30":{"start":{"line":109,"column":8},"end":{"line":120,"column":40}},"31":{"start":{"line":110,"column":12},"end":{"line":116,"column":13}},"32":{"start":{"line":111,"column":16},"end":{"line":111,"column":41}},"33":{"start":{"line":112,"column":16},"end":{"line":112,"column":143}},"34":{"start":{"line":114,"column":16},"end":{"line":114,"column":41}},"35":{"start":{"line":115,"column":16},"end":{"line":115,"column":141}},"36":{"start":{"line":117,"column":12},"end":{"line":117,"column":28}},"37":{"start":{"line":119,"column":12},"end":{"line":119,"column":161}},"38":{"start":{"line":120,"column":20},"end":{"line":120,"column":38}},"39":{"start":{"line":123,"column":30},"end":{"line":157,"column":5}},"40":{"start":{"line":124,"column":25},"end":{"line":124,"column":65}},"41":{"start":{"line":125,"column":30},"end":{"line":125,"column":48}},"42":{"start":{"line":126,"column":8},"end":{"line":129,"column":9}},"43":{"start":{"line":127,"column":12},"end":{"line":127,"column":103}},"44":{"start":{"line":128,"column":12},"end":{"line":128,"column":19}},"45":{"start":{"line":131,"column":8},"end":{"line":131,"column":31}},"46":{"start":{"line":132,"column":8},"end":{"line":156,"column":9}},"47":{"start":{"line":133,"column":27},"end":{"line":133,"column":75}},"48":{"start":{"line":134,"column":29},"end":{"line":134,"column":39}},"49":{"start":{"line":136,"column":12},"end":{"line":138,"column":13}},"50":{"start":{"line":137,"column":16},"end":{"line":137,"column":69}},"51":{"start":{"line":139,"column":12},"end":{"line":139,"column":89}},"52":{"start":{"line":140,"column":12},"end":{"line":140,"column":87}},"53":{"start":{"line":141,"column":12},"end":{"line":141,"column":83}},"54":{"start":{"line":142,"column":12},"end":{"line":142,"column":79}},"55":{"start":{"line":144,"column":12},"end":{"line":144,"column":35}},"56":{"start":{"line":146,"column":12},"end":{"line":151,"column":15}},"57":{"start":{"line":153,"column":12},"end":{"line":153,"column":73}},"58":{"start":{"line":155,"column":12},"end":{"line":155,"column":36}},"59":{"start":{"line":159,"column":37},"end":{"line":187,"column":5}},"60":{"start":{"line":160,"column":8},"end":{"line":160,"column":63}},"61":{"start":{"line":160,"column":56},"end":{"line":160,"column":63}},"62":{"start":{"line":161,"column":29},"end":{"line":180,"column":9}},"63":{"start":{"line":162,"column":12},"end":{"line":162,"column":46}},"64":{"start":{"line":162,"column":39},"end":{"line":162,"column":46}},"65":{"start":{"line":163,"column":12},"end":{"line":179,"column":142}},"66":{"start":{"line":164,"column":38},"end":{"line":164,"column":60}},"67":{"start":{"line":164,"column":62},"end":{"line":164,"column":86}},"68":{"start":{"line":165,"column":16},"end":{"line":178,"column":53}},"69":{"start":{"line":166,"column":46},"end":{"line":166,"column":88}},"70":{"start":{"line":167,"column":46},"end":{"line":167,"column":216}},"71":{"start":{"line":168,"column":36},"end":{"line":168,"column":81}},"72":{"start":{"line":169,"column":38},"end":{"line":169,"column":48}},"73":{"start":{"line":170,"column":21},"end":{"line":170,"column":74}},"74":{"start":{"line":170,"column":75},"end":{"line":170,"column":152}},"75":{"start":{"line":171,"column":21},"end":{"line":171,"column":96}},"76":{"start":{"line":172,"column":21},"end":{"line":172,"column":92}},"77":{"start":{"line":173,"column":21},"end":{"line":173,"column":88}},"78":{"start":{"line":174,"column":21},"end":{"line":174,"column":44}},"79":{"start":{"line":175,"column":21},"end":{"line":175,"column":40}},"80":{"start":{"line":176,"column":21},"end":{"line":176,"column":194}},"81":{"start":{"line":177,"column":42},"end":{"line":177,"column":111}},"82":{"start":{"line":178,"column":26},"end":{"line":178,"column":51}},"83":{"start":{"line":179,"column":21},"end":{"line":179,"column":114}},"84":{"start":{"line":179,"column":115},"end":{"line":179,"column":140}},"85":{"start":{"line":181,"column":8},"end":{"line":186,"column":10}},"86":{"start":{"line":183,"column":72},"end":{"line":183,"column":442}},"87":{"start":{"line":183,"column":91},"end":{"line":183,"column":140}},"88":{"start":{"line":183,"column":142},"end":{"line":183,"column":261}},"89":{"start":{"line":183,"column":163},"end":{"line":183,"column":251}},"90":{"start":{"line":183,"column":252},"end":{"line":183,"column":259}},"91":{"start":{"line":183,"column":274},"end":{"line":183,"column":338}},"92":{"start":{"line":183,"column":340},"end":{"line":183,"column":364}},"93":{"start":{"line":183,"column":379},"end":{"line":183,"column":396}},"94":{"start":{"line":183,"column":397},"end":{"line":183,"column":440}},"95":{"start":{"line":184,"column":73},"end":{"line":184,"column":502}},"96":{"start":{"line":184,"column":92},"end":{"line":184,"column":147}},"97":{"start":{"line":184,"column":149},"end":{"line":184,"column":278}},"98":{"start":{"line":184,"column":170},"end":{"line":184,"column":268}},"99":{"start":{"line":184,"column":269},"end":{"line":184,"column":276}},"100":{"start":{"line":184,"column":291},"end":{"line":184,"column":397}},"101":{"start":{"line":184,"column":399},"end":{"line":184,"column":423}},"102":{"start":{"line":184,"column":438},"end":{"line":184,"column":455}},"103":{"start":{"line":184,"column":456},"end":{"line":184,"column":500}},"104":{"start":{"line":189,"column":25},"end":{"line":189,"column":67}},"105":{"start":{"line":190,"column":33},"end":{"line":190,"column":122}},"106":{"start":{"line":192,"column":4},"end":{"line":276,"column":6}},"107":{"start":{"line":210,"column":36},"end":{"line":210,"column":61}},"108":{"start":{"line":210,"column":54},"end":{"line":210,"column":61}},"109":{"start":{"line":211,"column":36},"end":{"line":211,"column":80}},"110":{"start":{"line":279,"column":18},"end":{"line":317,"column":3}},"111":{"start":{"line":279,"column":41},"end":{"line":317,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":58,"column":50},"end":{"line":58,"column":51}},"loc":{"start":{"line":69,"column":6},"end":{"line":277,"column":1}},"line":69},"1":{"name":"(anonymous_1)","decl":{"start":{"line":78,"column":14},"end":{"line":78,"column":15}},"loc":{"start":{"line":78,"column":20},"end":{"line":87,"column":5}},"line":78},"2":{"name":"(anonymous_2)","decl":{"start":{"line":89,"column":31},"end":{"line":89,"column":32}},"loc":{"start":{"line":89,"column":76},"end":{"line":91,"column":5}},"line":89},"3":{"name":"(anonymous_3)","decl":{"start":{"line":93,"column":33},"end":{"line":93,"column":34}},"loc":{"start":{"line":93,"column":45},"end":{"line":121,"column":5}},"line":93},"4":{"name":"(anonymous_4)","decl":{"start":{"line":123,"column":30},"end":{"line":123,"column":31}},"loc":{"start":{"line":123,"column":42},"end":{"line":157,"column":5}},"line":123},"5":{"name":"(anonymous_5)","decl":{"start":{"line":159,"column":37},"end":{"line":159,"column":38}},"loc":{"start":{"line":159,"column":49},"end":{"line":187,"column":5}},"line":159},"6":{"name":"(anonymous_6)","decl":{"start":{"line":161,"column":29},"end":{"line":161,"column":30}},"loc":{"start":{"line":161,"column":72},"end":{"line":180,"column":9}},"line":161},"7":{"name":"(anonymous_7)","decl":{"start":{"line":183,"column":58},"end":{"line":183,"column":59}},"loc":{"start":{"line":183,"column":70},"end":{"line":183,"column":444}},"line":183},"8":{"name":"(anonymous_8)","decl":{"start":{"line":184,"column":59},"end":{"line":184,"column":60}},"loc":{"start":{"line":184,"column":71},"end":{"line":184,"column":504}},"line":184},"9":{"name":"(anonymous_9)","decl":{"start":{"line":209,"column":41},"end":{"line":209,"column":42}},"loc":{"start":{"line":209,"column":52},"end":{"line":212,"column":33}},"line":209},"10":{"name":"(anonymous_10)","decl":{"start":{"line":279,"column":29},"end":{"line":279,"column":30}},"loc":{"start":{"line":279,"column":41},"end":{"line":317,"column":1}},"line":279}},"branchMap":{"0":{"loc":{"start":{"line":56,"column":33},"end":{"line":56,"column":63}},"type":"cond-expr","locations":[{"start":{"line":56,"column":57},"end":{"line":56,"column":59}},{"start":{"line":56,"column":62},"end":{"line":56,"column":63}}],"line":56},"1":{"loc":{"start":{"line":79,"column":8},"end":{"line":86,"column":9}},"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":86,"column":9}},{"start":{},"end":{}}],"line":79},"2":{"loc":{"start":{"line":85,"column":25},"end":{"line":85,"column":55}},"type":"cond-expr","locations":[{"start":{"line":85,"column":36},"end":{"line":85,"column":44}},{"start":{"line":85,"column":47},"end":{"line":85,"column":55}}],"line":85},"3":{"loc":{"start":{"line":90,"column":15},"end":{"line":90,"column":44}},"type":"cond-expr","locations":[{"start":{"line":90,"column":26},"end":{"line":90,"column":34}},{"start":{"line":90,"column":37},"end":{"line":90,"column":44}}],"line":90},"4":{"loc":{"start":{"line":95,"column":28},"end":{"line":95,"column":57}},"type":"cond-expr","locations":[{"start":{"line":95,"column":39},"end":{"line":95,"column":47}},{"start":{"line":95,"column":50},"end":{"line":95,"column":57}}],"line":95},"5":{"loc":{"start":{"line":99,"column":19},"end":{"line":99,"column":41}},"type":"binary-expr","locations":[{"start":{"line":99,"column":19},"end":{"line":99,"column":35}},{"start":{"line":99,"column":39},"end":{"line":99,"column":41}}],"line":99},"6":{"loc":{"start":{"line":103,"column":8},"end":{"line":107,"column":9}},"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":107,"column":9}},{"start":{},"end":{}}],"line":103},"7":{"loc":{"start":{"line":110,"column":12},"end":{"line":116,"column":13}},"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":116,"column":13}},{"start":{"line":113,"column":19},"end":{"line":116,"column":13}}],"line":110},"8":{"loc":{"start":{"line":119,"column":55},"end":{"line":119,"column":159}},"type":"binary-expr","locations":[{"start":{"line":119,"column":55},"end":{"line":119,"column":68}},{"start":{"line":119,"column":72},"end":{"line":119,"column":159}}],"line":119},"9":{"loc":{"start":{"line":119,"column":74},"end":{"line":119,"column":158}},"type":"cond-expr","locations":[{"start":{"line":119,"column":85},"end":{"line":119,"column":120}},{"start":{"line":119,"column":123},"end":{"line":119,"column":158}}],"line":119},"10":{"loc":{"start":{"line":124,"column":26},"end":{"line":124,"column":57}},"type":"binary-expr","locations":[{"start":{"line":124,"column":26},"end":{"line":124,"column":51}},{"start":{"line":124,"column":55},"end":{"line":124,"column":57}}],"line":124},"11":{"loc":{"start":{"line":126,"column":8},"end":{"line":129,"column":9}},"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":129,"column":9}},{"start":{},"end":{}}],"line":126},"12":{"loc":{"start":{"line":126,"column":12},"end":{"line":126,"column":39}},"type":"binary-expr","locations":[{"start":{"line":126,"column":12},"end":{"line":126,"column":21}},{"start":{"line":126,"column":25},"end":{"line":126,"column":39}}],"line":126},"13":{"loc":{"start":{"line":136,"column":12},"end":{"line":138,"column":13}},"type":"if","locations":[{"start":{"line":136,"column":12},"end":{"line":138,"column":13}},{"start":{},"end":{}}],"line":136},"14":{"loc":{"start":{"line":148,"column":23},"end":{"line":148,"column":106}},"type":"cond-expr","locations":[{"start":{"line":148,"column":34},"end":{"line":148,"column":71}},{"start":{"line":148,"column":74},"end":{"line":148,"column":106}}],"line":148},"15":{"loc":{"start":{"line":149,"column":23},"end":{"line":149,"column":116}},"type":"cond-expr","locations":[{"start":{"line":149,"column":34},"end":{"line":149,"column":43}},{"start":{"line":149,"column":46},"end":{"line":149,"column":116}}],"line":149},"16":{"loc":{"start":{"line":160,"column":8},"end":{"line":160,"column":63}},"type":"if","locations":[{"start":{"line":160,"column":8},"end":{"line":160,"column":63}},{"start":{},"end":{}}],"line":160},"17":{"loc":{"start":{"line":160,"column":12},"end":{"line":160,"column":54}},"type":"binary-expr","locations":[{"start":{"line":160,"column":12},"end":{"line":160,"column":26}},{"start":{"line":160,"column":30},"end":{"line":160,"column":43}},{"start":{"line":160,"column":47},"end":{"line":160,"column":54}}],"line":160},"18":{"loc":{"start":{"line":162,"column":12},"end":{"line":162,"column":46}},"type":"if","locations":[{"start":{"line":162,"column":12},"end":{"line":162,"column":46}},{"start":{},"end":{}}],"line":162},"19":{"loc":{"start":{"line":163,"column":12},"end":{"line":179,"column":142}},"type":"if","locations":[{"start":{"line":163,"column":12},"end":{"line":179,"column":142}},{"start":{"line":179,"column":19},"end":{"line":179,"column":142}}],"line":163},"20":{"loc":{"start":{"line":163,"column":16},"end":{"line":163,"column":69}},"type":"binary-expr","locations":[{"start":{"line":163,"column":16},"end":{"line":163,"column":35}},{"start":{"line":163,"column":39},"end":{"line":163,"column":69}}],"line":163},"21":{"loc":{"start":{"line":167,"column":46},"end":{"line":167,"column":216}},"type":"cond-expr","locations":[{"start":{"line":167,"column":65},"end":{"line":167,"column":200}},{"start":{"line":167,"column":203},"end":{"line":167,"column":216}}],"line":167},"22":{"loc":{"start":{"line":183,"column":142},"end":{"line":183,"column":261}},"type":"if","locations":[{"start":{"line":183,"column":142},"end":{"line":183,"column":261}},{"start":{},"end":{}}],"line":183},"23":{"loc":{"start":{"line":184,"column":149},"end":{"line":184,"column":278}},"type":"if","locations":[{"start":{"line":184,"column":149},"end":{"line":184,"column":278}},{"start":{},"end":{}}],"line":184},"24":{"loc":{"start":{"line":189,"column":25},"end":{"line":189,"column":67}},"type":"binary-expr","locations":[{"start":{"line":189,"column":25},"end":{"line":189,"column":32}},{"start":{"line":189,"column":36},"end":{"line":189,"column":49}},{"start":{"line":189,"column":53},"end":{"line":189,"column":67}}],"line":189},"25":{"loc":{"start":{"line":193,"column":56},"end":{"line":193,"column":97}},"type":"cond-expr","locations":[{"start":{"line":193,"column":72},"end":{"line":193,"column":85}},{"start":{"line":193,"column":88},"end":{"line":193,"column":97}}],"line":193},"26":{"loc":{"start":{"line":194,"column":44},"end":{"line":194,"column":88}},"type":"cond-expr","locations":[{"start":{"line":194,"column":68},"end":{"line":194,"column":77}},{"start":{"line":194,"column":80},"end":{"line":194,"column":88}}],"line":194},"27":{"loc":{"start":{"line":197,"column":63},"end":{"line":197,"column":130}},"type":"cond-expr","locations":[{"start":{"line":197,"column":74},"end":{"line":197,"column":101}},{"start":{"line":197,"column":104},"end":{"line":197,"column":130}}],"line":197},"28":{"loc":{"start":{"line":198,"column":39},"end":{"line":198,"column":110}},"type":"cond-expr","locations":[{"start":{"line":198,"column":50},"end":{"line":198,"column":80}},{"start":{"line":198,"column":83},"end":{"line":198,"column":110}}],"line":198},"29":{"loc":{"start":{"line":199,"column":81},"end":{"line":199,"column":135}},"type":"cond-expr","locations":[{"start":{"line":199,"column":92},"end":{"line":199,"column":112}},{"start":{"line":199,"column":115},"end":{"line":199,"column":135}}],"line":199},"30":{"loc":{"start":{"line":201,"column":104},"end":{"line":201,"column":145}},"type":"cond-expr","locations":[{"start":{"line":201,"column":120},"end":{"line":201,"column":133}},{"start":{"line":201,"column":136},"end":{"line":201,"column":145}}],"line":201},"31":{"loc":{"start":{"line":205,"column":25},"end":{"line":220,"column":25}},"type":"binary-expr","locations":[{"start":{"line":205,"column":25},"end":{"line":205,"column":34}},{"start":{"line":206,"column":28},"end":{"line":219,"column":30}}],"line":205},"32":{"loc":{"start":{"line":208,"column":47},"end":{"line":208,"column":77}},"type":"cond-expr","locations":[{"start":{"line":208,"column":72},"end":{"line":208,"column":73}},{"start":{"line":208,"column":76},"end":{"line":208,"column":77}}],"line":208},"33":{"loc":{"start":{"line":210,"column":36},"end":{"line":210,"column":61}},"type":"if","locations":[{"start":{"line":210,"column":36},"end":{"line":210,"column":61}},{"start":{},"end":{}}],"line":210},"34":{"loc":{"start":{"line":211,"column":49},"end":{"line":211,"column":78}},"type":"cond-expr","locations":[{"start":{"line":211,"column":63},"end":{"line":211,"column":71}},{"start":{"line":211,"column":74},"end":{"line":211,"column":78}}],"line":211},"35":{"loc":{"start":{"line":224,"column":29},"end":{"line":269,"column":29}},"type":"cond-expr","locations":[{"start":{"line":225,"column":32},"end":{"line":233,"column":39}},{"start":{"line":235,"column":32},"end":{"line":268,"column":39}}],"line":224}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\ConfirmationModal.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\ConfirmationModal.tsx","statementMap":{"0":{"start":{"line":19,"column":60},"end":{"line":68,"column":1}},"1":{"start":{"line":29,"column":20},"end":{"line":29,"column":30}},"2":{"start":{"line":31,"column":21},"end":{"line":31,"column":65}},"3":{"start":{"line":32,"column":23},"end":{"line":32,"column":71}},"4":{"start":{"line":33,"column":27},"end":{"line":33,"column":90}},"5":{"start":{"line":36,"column":2},"end":{"line":67,"column":4}},"6":{"start":{"line":70,"column":15},"end":{"line":104,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":19,"column":60},"end":{"line":19,"column":61}},"loc":{"start":{"line":28,"column":6},"end":{"line":68,"column":1}},"line":28}},"branchMap":{"0":{"loc":{"start":{"line":31,"column":21},"end":{"line":31,"column":65}},"type":"binary-expr","locations":[{"start":{"line":31,"column":21},"end":{"line":31,"column":26}},{"start":{"line":31,"column":30},"end":{"line":31,"column":65}}],"line":31},"1":{"loc":{"start":{"line":32,"column":23},"end":{"line":32,"column":71}},"type":"binary-expr","locations":[{"start":{"line":32,"column":23},"end":{"line":32,"column":30}},{"start":{"line":32,"column":34},"end":{"line":32,"column":71}}],"line":32},"2":{"loc":{"start":{"line":33,"column":27},"end":{"line":33,"column":90}},"type":"binary-expr","locations":[{"start":{"line":33,"column":27},"end":{"line":33,"column":43}},{"start":{"line":33,"column":47},"end":{"line":33,"column":90}}],"line":33}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"f":{"0":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\DailyEntryListItem.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\DailyEntryListItem.tsx","statementMap":{"0":{"start":{"line":23,"column":27},"end":{"line":140,"column":2}},"1":{"start":{"line":33,"column":22},"end":{"line":33,"column":32}},"2":{"start":{"line":34,"column":19},"end":{"line":34,"column":30}},"3":{"start":{"line":36,"column":27},"end":{"line":44,"column":36}},"4":{"start":{"line":37,"column":8},"end":{"line":42,"column":9}},"5":{"start":{"line":38,"column":12},"end":{"line":40,"column":13}},"6":{"start":{"line":39,"column":16},"end":{"line":39,"column":49}},"7":{"start":{"line":41,"column":12},"end":{"line":41,"column":50}},"8":{"start":{"line":43,"column":8},"end":{"line":43,"column":20}},"9":{"start":{"line":46,"column":4},"end":{"line":50,"column":67}},"10":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"11":{"start":{"line":48,"column":12},"end":{"line":48,"column":82}},"12":{"start":{"line":48,"column":34},"end":{"line":48,"column":79}},"13":{"start":{"line":53,"column":48},"end":{"line":56,"column":26}},"14":{"start":{"line":54,"column":8},"end":{"line":54,"column":60}},"15":{"start":{"line":54,"column":48},"end":{"line":54,"column":60}},"16":{"start":{"line":55,"column":8},"end":{"line":55,"column":75}},"17":{"start":{"line":59,"column":31},"end":{"line":76,"column":5}},"18":{"start":{"line":60,"column":8},"end":{"line":66,"column":9}},"19":{"start":{"line":61,"column":13},"end":{"line":65,"column":15}},"20":{"start":{"line":67,"column":8},"end":{"line":75,"column":9}},"21":{"start":{"line":68,"column":12},"end":{"line":68,"column":78}},"22":{"start":{"line":70,"column":12},"end":{"line":74,"column":14}},"23":{"start":{"line":78,"column":5},"end":{"line":86,"column":6}},"24":{"start":{"line":79,"column":9},"end":{"line":85,"column":11}},"25":{"start":{"line":88,"column":28},"end":{"line":88,"column":81}},"26":{"start":{"line":88,"column":36},"end":{"line":88,"column":79}},"27":{"start":{"line":88,"column":51},"end":{"line":88,"column":79}},"28":{"start":{"line":89,"column":30},"end":{"line":89,"column":79}},"29":{"start":{"line":89,"column":38},"end":{"line":89,"column":77}},"30":{"start":{"line":89,"column":53},"end":{"line":89,"column":77}},"31":{"start":{"line":91,"column":31},"end":{"line":91,"column":82}},"32":{"start":{"line":92,"column":30},"end":{"line":92,"column":80}},"33":{"start":{"line":93,"column":28},"end":{"line":93,"column":76}},"34":{"start":{"line":94,"column":26},"end":{"line":94,"column":72}},"35":{"start":{"line":96,"column":4},"end":{"line":139,"column":6}},"36":{"start":{"line":100,"column":16},"end":{"line":107,"column":18}},"37":{"start":{"line":102,"column":37},"end":{"line":102,"column":55}},"38":{"start":{"line":102,"column":56},"end":{"line":102,"column":64}},"39":{"start":{"line":110,"column":16},"end":{"line":117,"column":18}},"40":{"start":{"line":112,"column":37},"end":{"line":112,"column":57}},"41":{"start":{"line":112,"column":58},"end":{"line":112,"column":66}},"42":{"start":{"line":142,"column":18},"end":{"line":179,"column":3}},"43":{"start":{"line":142,"column":41},"end":{"line":179,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":23,"column":57},"end":{"line":23,"column":58}},"loc":{"start":{"line":32,"column":6},"end":{"line":140,"column":1}},"line":32},"1":{"name":"(anonymous_1)","decl":{"start":{"line":36,"column":35},"end":{"line":36,"column":36}},"loc":{"start":{"line":36,"column":41},"end":{"line":44,"column":5}},"line":36},"2":{"name":"(anonymous_2)","decl":{"start":{"line":46,"column":14},"end":{"line":46,"column":15}},"loc":{"start":{"line":46,"column":20},"end":{"line":50,"column":5}},"line":46},"3":{"name":"(anonymous_3)","decl":{"start":{"line":48,"column":25},"end":{"line":48,"column":26}},"loc":{"start":{"line":48,"column":34},"end":{"line":48,"column":79}},"line":48},"4":{"name":"(anonymous_4)","decl":{"start":{"line":53,"column":56},"end":{"line":53,"column":57}},"loc":{"start":{"line":53,"column":62},"end":{"line":56,"column":5}},"line":53},"5":{"name":"(anonymous_5)","decl":{"start":{"line":59,"column":31},"end":{"line":59,"column":32}},"loc":{"start":{"line":59,"column":37},"end":{"line":76,"column":5}},"line":59},"6":{"name":"(anonymous_6)","decl":{"start":{"line":88,"column":28},"end":{"line":88,"column":29}},"loc":{"start":{"line":88,"column":34},"end":{"line":88,"column":81}},"line":88},"7":{"name":"(anonymous_7)","decl":{"start":{"line":89,"column":30},"end":{"line":89,"column":31}},"loc":{"start":{"line":89,"column":36},"end":{"line":89,"column":79}},"line":89},"8":{"name":"(anonymous_8)","decl":{"start":{"line":99,"column":25},"end":{"line":99,"column":26}},"loc":{"start":{"line":100,"column":16},"end":{"line":107,"column":18}},"line":100},"9":{"name":"(anonymous_9)","decl":{"start":{"line":102,"column":29},"end":{"line":102,"column":30}},"loc":{"start":{"line":102,"column":35},"end":{"line":102,"column":66}},"line":102},"10":{"name":"(anonymous_10)","decl":{"start":{"line":109,"column":26},"end":{"line":109,"column":27}},"loc":{"start":{"line":110,"column":16},"end":{"line":117,"column":18}},"line":110},"11":{"name":"(anonymous_11)","decl":{"start":{"line":112,"column":29},"end":{"line":112,"column":30}},"loc":{"start":{"line":112,"column":35},"end":{"line":112,"column":68}},"line":112},"12":{"name":"(anonymous_12)","decl":{"start":{"line":142,"column":29},"end":{"line":142,"column":30}},"loc":{"start":{"line":142,"column":41},"end":{"line":179,"column":1}},"line":142}},"branchMap":{"0":{"loc":{"start":{"line":37,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":42,"column":9}},{"start":{},"end":{}}],"line":37},"1":{"loc":{"start":{"line":38,"column":12},"end":{"line":40,"column":13}},"type":"if","locations":[{"start":{"line":38,"column":12},"end":{"line":40,"column":13}},{"start":{},"end":{}}],"line":38},"2":{"loc":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},{"start":{},"end":{}}],"line":47},"3":{"loc":{"start":{"line":47,"column":12},"end":{"line":47,"column":103}},"type":"binary-expr","locations":[{"start":{"line":47,"column":12},"end":{"line":47,"column":28}},{"start":{"line":47,"column":32},"end":{"line":47,"column":60}},{"start":{"line":47,"column":64},"end":{"line":47,"column":103}}],"line":47},"4":{"loc":{"start":{"line":54,"column":8},"end":{"line":54,"column":60}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":60}},{"start":{},"end":{}}],"line":54},"5":{"loc":{"start":{"line":54,"column":12},"end":{"line":54,"column":46}},"type":"binary-expr","locations":[{"start":{"line":54,"column":12},"end":{"line":54,"column":17}},{"start":{"line":54,"column":21},"end":{"line":54,"column":31}},{"start":{"line":54,"column":35},"end":{"line":54,"column":46}}],"line":54},"6":{"loc":{"start":{"line":60,"column":8},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":66,"column":9}},{"start":{},"end":{}}],"line":60},"7":{"loc":{"start":{"line":67,"column":8},"end":{"line":75,"column":9}},"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":75,"column":9}},{"start":{"line":69,"column":15},"end":{"line":75,"column":9}}],"line":67},"8":{"loc":{"start":{"line":78,"column":5},"end":{"line":86,"column":6}},"type":"if","locations":[{"start":{"line":78,"column":5},"end":{"line":86,"column":6}},{"start":{},"end":{}}],"line":78},"9":{"loc":{"start":{"line":78,"column":9},"end":{"line":78,"column":28}},"type":"binary-expr","locations":[{"start":{"line":78,"column":9},"end":{"line":78,"column":14}},{"start":{"line":78,"column":18},"end":{"line":78,"column":28}}],"line":78},"10":{"loc":{"start":{"line":88,"column":36},"end":{"line":88,"column":79}},"type":"if","locations":[{"start":{"line":88,"column":36},"end":{"line":88,"column":79}},{"start":{},"end":{}}],"line":88},"11":{"loc":{"start":{"line":89,"column":38},"end":{"line":89,"column":77}},"type":"if","locations":[{"start":{"line":89,"column":38},"end":{"line":89,"column":77}},{"start":{},"end":{}}],"line":89},"12":{"loc":{"start":{"line":124,"column":21},"end":{"line":128,"column":21}},"type":"binary-expr","locations":[{"start":{"line":124,"column":21},"end":{"line":124,"column":32}},{"start":{"line":125,"column":24},"end":{"line":127,"column":31}}],"line":124}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\DailyGoalsInput.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\DailyGoalsInput.tsx","statementMap":{"0":{"start":{"line":14,"column":56},"end":{"line":46,"column":1}},"1":{"start":{"line":18,"column":20},"end":{"line":18,"column":30}},"2":{"start":{"line":19,"column":17},"end":{"line":19,"column":28}},"3":{"start":{"line":21,"column":19},"end":{"line":29,"column":3}},"4":{"start":{"line":22,"column":4},"end":{"line":28,"column":5}},"5":{"start":{"line":23,"column":25},"end":{"line":23,"column":66}},"6":{"start":{"line":24,"column":24},"end":{"line":24,"column":64}},"7":{"start":{"line":25,"column":22},"end":{"line":25,"column":60}},"8":{"start":{"line":26,"column":20},"end":{"line":26,"column":56}},"9":{"start":{"line":27,"column":17},"end":{"line":27,"column":30}},"10":{"start":{"line":31,"column":2},"end":{"line":45,"column":4}},"11":{"start":{"line":34,"column":8},"end":{"line":42,"column":10}},"12":{"start":{"line":39,"column":35},"end":{"line":39,"column":61}},"13":{"start":{"line":49,"column":18},"end":{"line":58,"column":3}},"14":{"start":{"line":49,"column":41},"end":{"line":58,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":56},"end":{"line":14,"column":57}},"loc":{"start":{"line":17,"column":6},"end":{"line":46,"column":1}},"line":17},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":19},"end":{"line":21,"column":20}},"loc":{"start":{"line":21,"column":41},"end":{"line":29,"column":3}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":33,"column":68},"end":{"line":33,"column":69}},"loc":{"start":{"line":34,"column":8},"end":{"line":42,"column":10}},"line":34},"3":{"name":"(anonymous_3)","decl":{"start":{"line":39,"column":24},"end":{"line":39,"column":25}},"loc":{"start":{"line":39,"column":35},"end":{"line":39,"column":61}},"line":39},"4":{"name":"(anonymous_4)","decl":{"start":{"line":49,"column":29},"end":{"line":49,"column":30}},"loc":{"start":{"line":49,"column":41},"end":{"line":58,"column":1}},"line":49}},"branchMap":{"0":{"loc":{"start":{"line":22,"column":4},"end":{"line":28,"column":5}},"type":"switch","locations":[{"start":{"line":23,"column":8},"end":{"line":23,"column":66}},{"start":{"line":24,"column":8},"end":{"line":24,"column":64}},{"start":{"line":25,"column":8},"end":{"line":25,"column":60}},{"start":{"line":26,"column":8},"end":{"line":26,"column":56}},{"start":{"line":27,"column":8},"end":{"line":27,"column":30}}],"line":22},"1":{"loc":{"start":{"line":38,"column":17},"end":{"line":38,"column":54}},"type":"binary-expr","locations":[{"start":{"line":38,"column":17},"end":{"line":38,"column":48}},{"start":{"line":38,"column":52},"end":{"line":38,"column":54}}],"line":38}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0},"b":{"0":[0,0,0,0,0],"1":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\DailyProgress.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\DailyProgress.tsx","statementMap":{"0":{"start":{"line":20,"column":52},"end":{"line":61,"column":1}},"1":{"start":{"line":27,"column":20},"end":{"line":27,"column":30}},"2":{"start":{"line":28,"column":17},"end":{"line":28,"column":28}},"3":{"start":{"line":30,"column":28},"end":{"line":33,"column":3}},"4":{"start":{"line":31,"column":4},"end":{"line":31,"column":37}},"5":{"start":{"line":31,"column":28},"end":{"line":31,"column":37}},"6":{"start":{"line":32,"column":4},"end":{"line":32,"column":39}},"7":{"start":{"line":35,"column":28},"end":{"line":51,"column":3}},"8":{"start":{"line":36,"column":23},"end":{"line":36,"column":55}},"9":{"start":{"line":37,"column":24},"end":{"line":37,"column":54}},"10":{"start":{"line":38,"column":6},"end":{"line":50,"column":7}},"11":{"start":{"line":53,"column":2},"end":{"line":60,"column":4}},"12":{"start":{"line":63,"column":18},"end":{"line":93,"column":3}},"13":{"start":{"line":63,"column":41},"end":{"line":93,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":20,"column":52},"end":{"line":20,"column":53}},"loc":{"start":{"line":26,"column":6},"end":{"line":61,"column":1}},"line":26},"1":{"name":"(anonymous_1)","decl":{"start":{"line":30,"column":28},"end":{"line":30,"column":29}},"loc":{"start":{"line":30,"column":64},"end":{"line":33,"column":3}},"line":30},"2":{"name":"(anonymous_2)","decl":{"start":{"line":35,"column":28},"end":{"line":35,"column":29}},"loc":{"start":{"line":35,"column":142},"end":{"line":51,"column":3}},"line":35},"3":{"name":"(anonymous_3)","decl":{"start":{"line":63,"column":29},"end":{"line":63,"column":30}},"loc":{"start":{"line":63,"column":41},"end":{"line":93,"column":1}},"line":63}},"branchMap":{"0":{"loc":{"start":{"line":31,"column":4},"end":{"line":31,"column":37}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":37}},{"start":{},"end":{}}],"line":31},"1":{"loc":{"start":{"line":31,"column":8},"end":{"line":31,"column":26}},"type":"binary-expr","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":13}},{"start":{"line":31,"column":17},"end":{"line":31,"column":26}}],"line":31},"2":{"loc":{"start":{"line":43,"column":53},"end":{"line":43,"column":62}},"type":"binary-expr","locations":[{"start":{"line":43,"column":53},"end":{"line":43,"column":57}},{"start":{"line":43,"column":61},"end":{"line":43,"column":62}}],"line":43}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"f":{"0":0,"1":0,"2":0,"3":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\DataManagementButtons.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\DataManagementButtons.tsx","statementMap":{"0":{"start":{"line":30,"column":68},"end":{"line":146,"column":1}},"1":{"start":{"line":33,"column":60},"end":{"line":33,"column":75}},"2":{"start":{"line":34,"column":50},"end":{"line":34,"column":62}},"3":{"start":{"line":35,"column":20},"end":{"line":35,"column":30}},"4":{"start":{"line":37,"column":27},"end":{"line":59,"column":3}},"5":{"start":{"line":38,"column":4},"end":{"line":58,"column":5}},"6":{"start":{"line":39,"column":27},"end":{"line":39,"column":51}},"7":{"start":{"line":40,"column":35},"end":{"line":40,"column":52}},"8":{"start":{"line":41,"column":23},"end":{"line":41,"column":43}},"9":{"start":{"line":43,"column":25},"end":{"line":43,"column":69}},"10":{"start":{"line":45,"column":31},"end":{"line":45,"column":66}},"11":{"start":{"line":46,"column":28},"end":{"line":46,"column":53}},"12":{"start":{"line":47,"column":23},"end":{"line":47,"column":57}},"13":{"start":{"line":48,"column":22},"end":{"line":48,"column":61}},"14":{"start":{"line":49,"column":6},"end":{"line":49,"column":114}},"15":{"start":{"line":50,"column":6},"end":{"line":53,"column":7}},"16":{"start":{"line":51,"column":8},"end":{"line":51,"column":95}},"17":{"start":{"line":52,"column":8},"end":{"line":52,"column":15}},"18":{"start":{"line":54,"column":6},"end":{"line":54,"column":139}},"19":{"start":{"line":56,"column":6},"end":{"line":56,"column":44}},"20":{"start":{"line":57,"column":6},"end":{"line":57,"column":110}},"21":{"start":{"line":61,"column":27},"end":{"line":92,"column":3}},"22":{"start":{"line":62,"column":4},"end":{"line":91,"column":5}},"23":{"start":{"line":63,"column":21},"end":{"line":63,"column":133}},"24":{"start":{"line":64,"column":6},"end":{"line":64,"column":88}},"25":{"start":{"line":64,"column":29},"end":{"line":64,"column":78}},"26":{"start":{"line":64,"column":79},"end":{"line":64,"column":86}},"27":{"start":{"line":65,"column":6},"end":{"line":86,"column":7}},"28":{"start":{"line":66,"column":21},"end":{"line":66,"column":37}},"29":{"start":{"line":67,"column":8},"end":{"line":67,"column":174}},"30":{"start":{"line":67,"column":59},"end":{"line":67,"column":164}},"31":{"start":{"line":67,"column":165},"end":{"line":67,"column":172}},"32":{"start":{"line":68,"column":8},"end":{"line":68,"column":166}},"33":{"start":{"line":68,"column":57},"end":{"line":68,"column":156}},"34":{"start":{"line":68,"column":157},"end":{"line":68,"column":164}},"35":{"start":{"line":69,"column":28},"end":{"line":69,"column":117}},"36":{"start":{"line":70,"column":8},"end":{"line":83,"column":9}},"37":{"start":{"line":71,"column":31},"end":{"line":71,"column":54}},"38":{"start":{"line":72,"column":10},"end":{"line":74,"column":11}},"39":{"start":{"line":73,"column":12},"end":{"line":73,"column":108}},"40":{"start":{"line":73,"column":109},"end":{"line":73,"column":116}},"41":{"start":{"line":75,"column":10},"end":{"line":75,"column":76}},"42":{"start":{"line":76,"column":10},"end":{"line":76,"column":56}},"43":{"start":{"line":77,"column":10},"end":{"line":77,"column":64}},"44":{"start":{"line":78,"column":10},"end":{"line":78,"column":105}},"45":{"start":{"line":79,"column":10},"end":{"line":79,"column":28}},"46":{"start":{"line":81,"column":10},"end":{"line":81,"column":71}},"47":{"start":{"line":82,"column":10},"end":{"line":82,"column":100}},"48":{"start":{"line":82,"column":101},"end":{"line":82,"column":108}},"49":{"start":{"line":85,"column":8},"end":{"line":85,"column":99}},"50":{"start":{"line":88,"column":6},"end":{"line":88,"column":44}},"51":{"start":{"line":89,"column":6},"end":{"line":90,"column":124}},"52":{"start":{"line":89,"column":45},"end":{"line":89,"column":140}},"53":{"start":{"line":90,"column":13},"end":{"line":90,"column":122}},"54":{"start":{"line":94,"column":26},"end":{"line":94,"column":67}},"55":{"start":{"line":94,"column":34},"end":{"line":94,"column":65}},"56":{"start":{"line":96,"column":27},"end":{"line":111,"column":3}},"57":{"start":{"line":97,"column":4},"end":{"line":110,"column":5}},"58":{"start":{"line":98,"column":6},"end":{"line":107,"column":7}},"59":{"start":{"line":99,"column":8},"end":{"line":99,"column":29}},"60":{"start":{"line":100,"column":8},"end":{"line":100,"column":103}},"61":{"start":{"line":101,"column":8},"end":{"line":101,"column":26}},"62":{"start":{"line":103,"column":8},"end":{"line":103,"column":50}},"63":{"start":{"line":104,"column":8},"end":{"line":104,"column":118}},"64":{"start":{"line":106,"column":8},"end":{"line":106,"column":32}},"65":{"start":{"line":106,"column":33},"end":{"line":106,"column":65}},"66":{"start":{"line":109,"column":6},"end":{"line":109,"column":115}},"67":{"start":{"line":113,"column":2},"end":{"line":145,"column":4}},"68":{"start":{"line":136,"column":26},"end":{"line":136,"column":58}},"69":{"start":{"line":136,"column":59},"end":{"line":136,"column":83}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":30,"column":68},"end":{"line":30,"column":69}},"loc":{"start":{"line":32,"column":6},"end":{"line":146,"column":1}},"line":32},"1":{"name":"(anonymous_1)","decl":{"start":{"line":37,"column":27},"end":{"line":37,"column":28}},"loc":{"start":{"line":37,"column":39},"end":{"line":59,"column":3}},"line":37},"2":{"name":"(anonymous_2)","decl":{"start":{"line":61,"column":27},"end":{"line":61,"column":28}},"loc":{"start":{"line":61,"column":39},"end":{"line":92,"column":3}},"line":61},"3":{"name":"(anonymous_3)","decl":{"start":{"line":94,"column":26},"end":{"line":94,"column":27}},"loc":{"start":{"line":94,"column":32},"end":{"line":94,"column":67}},"line":94},"4":{"name":"(anonymous_4)","decl":{"start":{"line":96,"column":27},"end":{"line":96,"column":28}},"loc":{"start":{"line":96,"column":39},"end":{"line":111,"column":3}},"line":96},"5":{"name":"(anonymous_5)","decl":{"start":{"line":136,"column":18},"end":{"line":136,"column":19}},"loc":{"start":{"line":136,"column":24},"end":{"line":136,"column":85}},"line":136}},"branchMap":{"0":{"loc":{"start":{"line":50,"column":6},"end":{"line":53,"column":7}},"type":"if","locations":[{"start":{"line":50,"column":6},"end":{"line":53,"column":7}},{"start":{},"end":{}}],"line":50},"1":{"loc":{"start":{"line":57,"column":52},"end":{"line":57,"column":108}},"type":"binary-expr","locations":[{"start":{"line":57,"column":52},"end":{"line":57,"column":65}},{"start":{"line":57,"column":69},"end":{"line":57,"column":108}}],"line":57},"2":{"loc":{"start":{"line":64,"column":6},"end":{"line":64,"column":88}},"type":"if","locations":[{"start":{"line":64,"column":6},"end":{"line":64,"column":88}},{"start":{},"end":{}}],"line":64},"3":{"loc":{"start":{"line":65,"column":6},"end":{"line":86,"column":7}},"type":"if","locations":[{"start":{"line":65,"column":6},"end":{"line":86,"column":7}},{"start":{"line":84,"column":13},"end":{"line":86,"column":7}}],"line":65},"4":{"loc":{"start":{"line":65,"column":10},"end":{"line":65,"column":51}},"type":"binary-expr","locations":[{"start":{"line":65,"column":10},"end":{"line":65,"column":23}},{"start":{"line":65,"column":27},"end":{"line":65,"column":51}}],"line":65},"5":{"loc":{"start":{"line":67,"column":8},"end":{"line":67,"column":174}},"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":174}},{"start":{},"end":{}}],"line":67},"6":{"loc":{"start":{"line":68,"column":8},"end":{"line":68,"column":166}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":166}},{"start":{},"end":{}}],"line":68},"7":{"loc":{"start":{"line":68,"column":12},"end":{"line":68,"column":53}},"type":"binary-expr","locations":[{"start":{"line":68,"column":12},"end":{"line":68,"column":21}},{"start":{"line":68,"column":25},"end":{"line":68,"column":53}}],"line":68},"8":{"loc":{"start":{"line":72,"column":10},"end":{"line":74,"column":11}},"type":"if","locations":[{"start":{"line":72,"column":10},"end":{"line":74,"column":11}},{"start":{},"end":{}}],"line":72},"9":{"loc":{"start":{"line":72,"column":15},"end":{"line":72,"column":333}},"type":"binary-expr","locations":[{"start":{"line":72,"column":15},"end":{"line":72,"column":47}},{"start":{"line":72,"column":51},"end":{"line":72,"column":72}},{"start":{"line":72,"column":76},"end":{"line":72,"column":120}},{"start":{"line":72,"column":124},"end":{"line":72,"column":165}},{"start":{"line":72,"column":169},"end":{"line":72,"column":206}},{"start":{"line":72,"column":210},"end":{"line":72,"column":244}},{"start":{"line":72,"column":248},"end":{"line":72,"column":288}},{"start":{"line":72,"column":292},"end":{"line":72,"column":333}}],"line":72},"10":{"loc":{"start":{"line":89,"column":6},"end":{"line":90,"column":124}},"type":"if","locations":[{"start":{"line":89,"column":6},"end":{"line":90,"column":124}},{"start":{"line":90,"column":11},"end":{"line":90,"column":124}}],"line":89},"11":{"loc":{"start":{"line":90,"column":59},"end":{"line":90,"column":120}},"type":"binary-expr","locations":[{"start":{"line":90,"column":59},"end":{"line":90,"column":72}},{"start":{"line":90,"column":76},"end":{"line":90,"column":120}}],"line":90},"12":{"loc":{"start":{"line":97,"column":4},"end":{"line":110,"column":5}},"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":110,"column":5}},{"start":{"line":108,"column":11},"end":{"line":110,"column":5}}],"line":97},"13":{"loc":{"start":{"line":104,"column":57},"end":{"line":104,"column":116}},"type":"binary-expr","locations":[{"start":{"line":104,"column":57},"end":{"line":104,"column":70}},{"start":{"line":104,"column":74},"end":{"line":104,"column":116}}],"line":104}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0,0,0,0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\DateNavigator.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\DateNavigator.tsx","statementMap":{"0":{"start":{"line":19,"column":52},"end":{"line":71,"column":1}},"1":{"start":{"line":27,"column":22},"end":{"line":27,"column":32}},"2":{"start":{"line":28,"column":19},"end":{"line":28,"column":30}},"3":{"start":{"line":29,"column":42},"end":{"line":29,"column":88}},"4":{"start":{"line":31,"column":4},"end":{"line":42,"column":36}},"5":{"start":{"line":32,"column":34},"end":{"line":40,"column":9}},"6":{"start":{"line":33,"column":31},"end":{"line":33,"column":53}},"7":{"start":{"line":34,"column":12},"end":{"line":39,"column":13}},"8":{"start":{"line":35,"column":34},"end":{"line":35,"column":75}},"9":{"start":{"line":36,"column":16},"end":{"line":36,"column":42}},"10":{"start":{"line":38,"column":16},"end":{"line":38,"column":63}},"11":{"start":{"line":41,"column":8},"end":{"line":41,"column":28}},"12":{"start":{"line":44,"column":23},"end":{"line":44,"column":48}},"13":{"start":{"line":46,"column":4},"end":{"line":70,"column":6}},"14":{"start":{"line":73,"column":18},"end":{"line":98,"column":3}},"15":{"start":{"line":73,"column":41},"end":{"line":98,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":19,"column":52},"end":{"line":19,"column":53}},"loc":{"start":{"line":26,"column":6},"end":{"line":71,"column":1}},"line":26},"1":{"name":"(anonymous_1)","decl":{"start":{"line":31,"column":20},"end":{"line":31,"column":21}},"loc":{"start":{"line":31,"column":26},"end":{"line":42,"column":5}},"line":31},"2":{"name":"(anonymous_2)","decl":{"start":{"line":32,"column":34},"end":{"line":32,"column":35}},"loc":{"start":{"line":32,"column":46},"end":{"line":40,"column":9}},"line":32},"3":{"name":"(anonymous_3)","decl":{"start":{"line":73,"column":29},"end":{"line":73,"column":30}},"loc":{"start":{"line":73,"column":41},"end":{"line":98,"column":1}},"line":73}},"branchMap":{"0":{"loc":{"start":{"line":34,"column":12},"end":{"line":39,"column":13}},"type":"if","locations":[{"start":{"line":34,"column":12},"end":{"line":39,"column":13}},{"start":{"line":37,"column":19},"end":{"line":39,"column":13}}],"line":34},"1":{"loc":{"start":{"line":44,"column":23},"end":{"line":44,"column":48}},"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":31}},{"start":{"line":44,"column":35},"end":{"line":44,"column":48}}],"line":44},"2":{"loc":{"start":{"line":57,"column":52},"end":{"line":57,"column":85}},"type":"binary-expr","locations":[{"start":{"line":57,"column":52},"end":{"line":57,"column":62}},{"start":{"line":57,"column":66},"end":{"line":57,"column":85}}],"line":57}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"f":{"0":0,"1":0,"2":0,"3":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\FoodFormFields.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\FoodFormFields.tsx","statementMap":{"0":{"start":{"line":20,"column":54},"end":{"line":112,"column":1}},"1":{"start":{"line":27,"column":22},"end":{"line":27,"column":32}},"2":{"start":{"line":28,"column":19},"end":{"line":28,"column":30}},"3":{"start":{"line":30,"column":21},"end":{"line":37,"column":5}},"4":{"start":{"line":31,"column":21},"end":{"line":31,"column":32}},"5":{"start":{"line":32,"column":9},"end":{"line":35,"column":10}},"6":{"start":{"line":33,"column":14},"end":{"line":33,"column":53}},"7":{"start":{"line":33,"column":43},"end":{"line":33,"column":53}},"8":{"start":{"line":34,"column":14},"end":{"line":34,"column":33}},"9":{"start":{"line":36,"column":9},"end":{"line":36,"column":34}},"10":{"start":{"line":39,"column":25},"end":{"line":50,"column":5}},"11":{"start":{"line":40,"column":25},"end":{"line":40,"column":41}},"12":{"start":{"line":41,"column":8},"end":{"line":41,"column":33}},"13":{"start":{"line":41,"column":23},"end":{"line":41,"column":33}},"14":{"start":{"line":45,"column":8},"end":{"line":45,"column":113}},"15":{"start":{"line":45,"column":68},"end":{"line":45,"column":113}},"16":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"17":{"start":{"line":47,"column":12},"end":{"line":47,"column":56}},"18":{"start":{"line":49,"column":8},"end":{"line":49,"column":24}},"19":{"start":{"line":52,"column":4},"end":{"line":111,"column":6}},"20":{"start":{"line":57,"column":40},"end":{"line":57,"column":78}},"21":{"start":{"line":69,"column":40},"end":{"line":69,"column":82}},"22":{"start":{"line":80,"column":40},"end":{"line":80,"column":81}},"23":{"start":{"line":91,"column":40},"end":{"line":91,"column":79}},"24":{"start":{"line":102,"column":40},"end":{"line":102,"column":77}},"25":{"start":{"line":114,"column":18},"end":{"line":119,"column":3}},"26":{"start":{"line":114,"column":41},"end":{"line":119,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":20,"column":54},"end":{"line":20,"column":55}},"loc":{"start":{"line":26,"column":6},"end":{"line":112,"column":1}},"line":26},"1":{"name":"(anonymous_1)","decl":{"start":{"line":30,"column":21},"end":{"line":30,"column":22}},"loc":{"start":{"line":30,"column":58},"end":{"line":37,"column":5}},"line":30},"2":{"name":"(anonymous_2)","decl":{"start":{"line":39,"column":25},"end":{"line":39,"column":26}},"loc":{"start":{"line":39,"column":59},"end":{"line":50,"column":5}},"line":39},"3":{"name":"(anonymous_3)","decl":{"start":{"line":57,"column":30},"end":{"line":57,"column":31}},"loc":{"start":{"line":57,"column":40},"end":{"line":57,"column":78}},"line":57},"4":{"name":"(anonymous_4)","decl":{"start":{"line":69,"column":30},"end":{"line":69,"column":31}},"loc":{"start":{"line":69,"column":40},"end":{"line":69,"column":82}},"line":69},"5":{"name":"(anonymous_5)","decl":{"start":{"line":80,"column":30},"end":{"line":80,"column":31}},"loc":{"start":{"line":80,"column":40},"end":{"line":80,"column":81}},"line":80},"6":{"name":"(anonymous_6)","decl":{"start":{"line":91,"column":30},"end":{"line":91,"column":31}},"loc":{"start":{"line":91,"column":40},"end":{"line":91,"column":79}},"line":91},"7":{"name":"(anonymous_7)","decl":{"start":{"line":102,"column":30},"end":{"line":102,"column":31}},"loc":{"start":{"line":102,"column":40},"end":{"line":102,"column":77}},"line":102},"8":{"name":"(anonymous_8)","decl":{"start":{"line":114,"column":29},"end":{"line":114,"column":30}},"loc":{"start":{"line":114,"column":41},"end":{"line":119,"column":1}},"line":114}},"branchMap":{"0":{"loc":{"start":{"line":32,"column":9},"end":{"line":35,"column":10}},"type":"if","locations":[{"start":{"line":32,"column":9},"end":{"line":35,"column":10}},{"start":{},"end":{}}],"line":32},"1":{"loc":{"start":{"line":33,"column":14},"end":{"line":33,"column":53}},"type":"if","locations":[{"start":{"line":33,"column":14},"end":{"line":33,"column":53}},{"start":{},"end":{}}],"line":33},"2":{"loc":{"start":{"line":33,"column":18},"end":{"line":33,"column":41}},"type":"binary-expr","locations":[{"start":{"line":33,"column":18},"end":{"line":33,"column":27}},{"start":{"line":33,"column":31},"end":{"line":33,"column":41}}],"line":33},"3":{"loc":{"start":{"line":36,"column":23},"end":{"line":36,"column":32}},"type":"binary-expr","locations":[{"start":{"line":36,"column":23},"end":{"line":36,"column":26}},{"start":{"line":36,"column":30},"end":{"line":36,"column":32}}],"line":36},"4":{"loc":{"start":{"line":41,"column":8},"end":{"line":41,"column":33}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":41,"column":33}},{"start":{},"end":{}}],"line":41},"5":{"loc":{"start":{"line":45,"column":8},"end":{"line":45,"column":113}},"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":113}},{"start":{},"end":{}}],"line":45},"6":{"loc":{"start":{"line":45,"column":12},"end":{"line":45,"column":66}},"type":"binary-expr","locations":[{"start":{"line":45,"column":12},"end":{"line":45,"column":31}},{"start":{"line":45,"column":35},"end":{"line":45,"column":66}}],"line":45},"7":{"loc":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},{"start":{},"end":{}}],"line":46},"8":{"loc":{"start":{"line":46,"column":12},"end":{"line":46,"column":118}},"type":"binary-expr","locations":[{"start":{"line":46,"column":12},"end":{"line":46,"column":70}},{"start":{"line":46,"column":74},"end":{"line":46,"column":118}}],"line":46},"9":{"loc":{"start":{"line":62,"column":85},"end":{"line":62,"column":138}},"type":"cond-expr","locations":[{"start":{"line":62,"column":99},"end":{"line":62,"column":117}},{"start":{"line":62,"column":120},"end":{"line":62,"column":138}}],"line":62},"10":{"loc":{"start":{"line":74,"column":79},"end":{"line":74,"column":136}},"type":"cond-expr","locations":[{"start":{"line":74,"column":97},"end":{"line":74,"column":115}},{"start":{"line":74,"column":118},"end":{"line":74,"column":136}}],"line":74},"11":{"loc":{"start":{"line":85,"column":89},"end":{"line":85,"column":145}},"type":"cond-expr","locations":[{"start":{"line":85,"column":106},"end":{"line":85,"column":124}},{"start":{"line":85,"column":127},"end":{"line":85,"column":145}}],"line":85},"12":{"loc":{"start":{"line":96,"column":86},"end":{"line":96,"column":140}},"type":"cond-expr","locations":[{"start":{"line":96,"column":101},"end":{"line":96,"column":119}},{"start":{"line":96,"column":122},"end":{"line":96,"column":140}}],"line":96},"13":{"loc":{"start":{"line":107,"column":78},"end":{"line":107,"column":130}},"type":"cond-expr","locations":[{"start":{"line":107,"column":91},"end":{"line":107,"column":109}},{"start":{"line":107,"column":112},"end":{"line":107,"column":130}}],"line":107}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\FoodItem.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\FoodItem.tsx","statementMap":{"0":{"start":{"line":20,"column":17},"end":{"line":89,"column":2}},"1":{"start":{"line":22,"column":22},"end":{"line":22,"column":32}},"2":{"start":{"line":23,"column":19},"end":{"line":23,"column":30}},"3":{"start":{"line":25,"column":27},"end":{"line":28,"column":32}},"4":{"start":{"line":26,"column":8},"end":{"line":26,"column":58}},"5":{"start":{"line":26,"column":39},"end":{"line":26,"column":58}},"6":{"start":{"line":27,"column":8},"end":{"line":27,"column":41}},"7":{"start":{"line":30,"column":4},"end":{"line":34,"column":69}},"8":{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},"9":{"start":{"line":32,"column":12},"end":{"line":32,"column":58}},"10":{"start":{"line":36,"column":48},"end":{"line":38,"column":14}},"11":{"start":{"line":37,"column":8},"end":{"line":37,"column":44}},"12":{"start":{"line":40,"column":23},"end":{"line":50,"column":5}},"13":{"start":{"line":41,"column":8},"end":{"line":49,"column":9}},"14":{"start":{"line":42,"column":12},"end":{"line":42,"column":78}},"15":{"start":{"line":44,"column":12},"end":{"line":48,"column":14}},"16":{"start":{"line":52,"column":4},"end":{"line":87,"column":6}},"17":{"start":{"line":57,"column":10},"end":{"line":57,"column":221}},"18":{"start":{"line":57,"column":68},"end":{"line":57,"column":81}},"19":{"start":{"line":57,"column":82},"end":{"line":57,"column":90}},"20":{"start":{"line":60,"column":10},"end":{"line":60,"column":232}},"21":{"start":{"line":60,"column":70},"end":{"line":60,"column":88}},"22":{"start":{"line":60,"column":89},"end":{"line":60,"column":97}},"23":{"start":{"line":80,"column":41},"end":{"line":80,"column":54}},"24":{"start":{"line":83,"column":41},"end":{"line":83,"column":57}},"25":{"start":{"line":91,"column":18},"end":{"line":116,"column":3}},"26":{"start":{"line":91,"column":41},"end":{"line":116,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":21,"column":2},"end":{"line":21,"column":3}},"loc":{"start":{"line":21,"column":93},"end":{"line":88,"column":3}},"line":21},"1":{"name":"(anonymous_1)","decl":{"start":{"line":25,"column":35},"end":{"line":25,"column":36}},"loc":{"start":{"line":25,"column":41},"end":{"line":28,"column":5}},"line":25},"2":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":14},"end":{"line":30,"column":15}},"loc":{"start":{"line":30,"column":20},"end":{"line":34,"column":5}},"line":30},"3":{"name":"(anonymous_3)","decl":{"start":{"line":36,"column":56},"end":{"line":36,"column":57}},"loc":{"start":{"line":36,"column":62},"end":{"line":38,"column":5}},"line":36},"4":{"name":"(anonymous_4)","decl":{"start":{"line":40,"column":23},"end":{"line":40,"column":24}},"loc":{"start":{"line":40,"column":29},"end":{"line":50,"column":5}},"line":40},"5":{"name":"(anonymous_5)","decl":{"start":{"line":56,"column":21},"end":{"line":56,"column":22}},"loc":{"start":{"line":57,"column":10},"end":{"line":57,"column":221}},"line":57},"6":{"name":"(anonymous_6)","decl":{"start":{"line":57,"column":60},"end":{"line":57,"column":61}},"loc":{"start":{"line":57,"column":66},"end":{"line":57,"column":92}},"line":57},"7":{"name":"(anonymous_7)","decl":{"start":{"line":59,"column":22},"end":{"line":59,"column":23}},"loc":{"start":{"line":60,"column":10},"end":{"line":60,"column":232}},"line":60},"8":{"name":"(anonymous_8)","decl":{"start":{"line":60,"column":62},"end":{"line":60,"column":63}},"loc":{"start":{"line":60,"column":68},"end":{"line":60,"column":99}},"line":60},"9":{"name":"(anonymous_9)","decl":{"start":{"line":80,"column":35},"end":{"line":80,"column":36}},"loc":{"start":{"line":80,"column":41},"end":{"line":80,"column":54}},"line":80},"10":{"name":"(anonymous_10)","decl":{"start":{"line":83,"column":35},"end":{"line":83,"column":36}},"loc":{"start":{"line":83,"column":41},"end":{"line":83,"column":57}},"line":83},"11":{"name":"(anonymous_11)","decl":{"start":{"line":91,"column":29},"end":{"line":91,"column":30}},"loc":{"start":{"line":91,"column":41},"end":{"line":116,"column":1}},"line":91}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":8},"end":{"line":26,"column":58}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":58}},{"start":{},"end":{}}],"line":26},"1":{"loc":{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":33,"column":9}},{"start":{},"end":{}}],"line":31},"2":{"loc":{"start":{"line":31,"column":12},"end":{"line":31,"column":82}},"type":"binary-expr","locations":[{"start":{"line":31,"column":12},"end":{"line":31,"column":21}},{"start":{"line":31,"column":25},"end":{"line":31,"column":53}},{"start":{"line":31,"column":57},"end":{"line":31,"column":82}}],"line":31},"3":{"loc":{"start":{"line":41,"column":8},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":49,"column":9}},{"start":{"line":43,"column":15},"end":{"line":49,"column":9}}],"line":41},"4":{"loc":{"start":{"line":67,"column":13},"end":{"line":71,"column":13}},"type":"binary-expr","locations":[{"start":{"line":67,"column":13},"end":{"line":67,"column":24}},{"start":{"line":68,"column":16},"end":{"line":70,"column":23}}],"line":67}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\QuickAddList.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\QuickAddList.tsx","statementMap":{"0":{"start":{"line":38,"column":50},"end":{"line":116,"column":1}},"1":{"start":{"line":56,"column":22},"end":{"line":56,"column":32}},"2":{"start":{"line":57,"column":19},"end":{"line":57,"column":30}},"3":{"start":{"line":59,"column":23},"end":{"line":85,"column":5}},"4":{"start":{"line":60,"column":27},"end":{"line":60,"column":53}},"5":{"start":{"line":61,"column":34},"end":{"line":61,"column":56}},"6":{"start":{"line":62,"column":33},"end":{"line":62,"column":54}},"7":{"start":{"line":64,"column":8},"end":{"line":84,"column":10}},"8":{"start":{"line":87,"column":4},"end":{"line":94,"column":5}},"9":{"start":{"line":88,"column":9},"end":{"line":93,"column":11}},"10":{"start":{"line":96,"column":4},"end":{"line":115,"column":6}},"11":{"start":{"line":99,"column":43},"end":{"line":99,"column":108}},"12":{"start":{"line":118,"column":18},"end":{"line":154,"column":3}},"13":{"start":{"line":118,"column":41},"end":{"line":154,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":38,"column":50},"end":{"line":38,"column":51}},"loc":{"start":{"line":55,"column":6},"end":{"line":116,"column":1}},"line":55},"1":{"name":"(anonymous_1)","decl":{"start":{"line":59,"column":23},"end":{"line":59,"column":24}},"loc":{"start":{"line":59,"column":88},"end":{"line":85,"column":5}},"line":59},"2":{"name":"(anonymous_2)","decl":{"start":{"line":99,"column":26},"end":{"line":99,"column":27}},"loc":{"start":{"line":99,"column":43},"end":{"line":99,"column":108}},"line":99},"3":{"name":"(anonymous_3)","decl":{"start":{"line":118,"column":29},"end":{"line":118,"column":30}},"loc":{"start":{"line":118,"column":41},"end":{"line":154,"column":1}},"line":118}},"branchMap":{"0":{"loc":{"start":{"line":73,"column":28},"end":{"line":73,"column":63}},"type":"cond-expr","locations":[{"start":{"line":73,"column":48},"end":{"line":73,"column":58}},{"start":{"line":73,"column":61},"end":{"line":73,"column":63}}],"line":73},"1":{"loc":{"start":{"line":74,"column":29},"end":{"line":74,"column":65}},"type":"cond-expr","locations":[{"start":{"line":74,"column":49},"end":{"line":74,"column":60}},{"start":{"line":74,"column":63},"end":{"line":74,"column":65}}],"line":74},"2":{"loc":{"start":{"line":87,"column":4},"end":{"line":94,"column":5}},"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":94,"column":5}},{"start":{},"end":{}}],"line":87},"3":{"loc":{"start":{"line":87,"column":8},"end":{"line":87,"column":39}},"type":"binary-expr","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":17}},{"start":{"line":87,"column":21},"end":{"line":87,"column":39}}],"line":87},"4":{"loc":{"start":{"line":102,"column":16},"end":{"line":108,"column":24}},"type":"cond-expr","locations":[{"start":{"line":103,"column":20},"end":{"line":107,"column":27}},{"start":{"line":108,"column":20},"end":{"line":108,"column":24}}],"line":102},"5":{"loc":{"start":{"line":113,"column":35},"end":{"line":113,"column":124}},"type":"cond-expr","locations":[{"start":{"line":113,"column":70},"end":{"line":113,"column":102}},{"start":{"line":113,"column":105},"end":{"line":113,"column":124}}],"line":113},"6":{"loc":{"start":{"line":113,"column":35},"end":{"line":113,"column":67}},"type":"binary-expr","locations":[{"start":{"line":113,"column":35},"end":{"line":113,"column":53}},{"start":{"line":113,"column":57},"end":{"line":113,"column":67}}],"line":113}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"f":{"0":0,"1":0,"2":0,"3":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\StatisticsChart.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\StatisticsChart.tsx","statementMap":{"0":{"start":{"line":29,"column":56},"end":{"line":241,"column":1}},"1":{"start":{"line":30,"column":20},"end":{"line":30,"column":30}},"2":{"start":{"line":32,"column":24},"end":{"line":42,"column":3}},"3":{"start":{"line":33,"column":4},"end":{"line":41,"column":5}},"4":{"start":{"line":34,"column":25},"end":{"line":34,"column":60}},"5":{"start":{"line":35,"column":24},"end":{"line":35,"column":58}},"6":{"start":{"line":36,"column":22},"end":{"line":36,"column":54}},"7":{"start":{"line":37,"column":20},"end":{"line":37,"column":50}},"8":{"start":{"line":39,"column":43},"end":{"line":39,"column":48}},"9":{"start":{"line":40,"column":12},"end":{"line":40,"column":35}},"10":{"start":{"line":44,"column":28},"end":{"line":44,"column":31}},"11":{"start":{"line":45,"column":36},"end":{"line":45,"column":38}},"12":{"start":{"line":46,"column":38},"end":{"line":46,"column":109}},"13":{"start":{"line":48,"column":28},"end":{"line":177,"column":3}},"14":{"start":{"line":49,"column":22},"end":{"line":54,"column":66}},"15":{"start":{"line":50,"column":6},"end":{"line":52,"column":8}},"16":{"start":{"line":51,"column":8},"end":{"line":51,"column":63}},"17":{"start":{"line":51,"column":30},"end":{"line":51,"column":61}},"18":{"start":{"line":53,"column":6},"end":{"line":53,"column":17}},"19":{"start":{"line":56,"column":22},"end":{"line":56,"column":39}},"20":{"start":{"line":57,"column":22},"end":{"line":57,"column":40}},"21":{"start":{"line":58,"column":23},"end":{"line":58,"column":70}},"22":{"start":{"line":60,"column":23},"end":{"line":63,"column":5}},"23":{"start":{"line":65,"column":4},"end":{"line":176,"column":10}},"24":{"start":{"line":83,"column":41},"end":{"line":83,"column":57}},"25":{"start":{"line":84,"column":35},"end":{"line":84,"column":55}},"26":{"start":{"line":85,"column":35},"end":{"line":85,"column":55}},"27":{"start":{"line":87,"column":43},"end":{"line":87,"column":77}},"28":{"start":{"line":88,"column":34},"end":{"line":88,"column":59}},"29":{"start":{"line":90,"column":56},"end":{"line":96,"column":17}},"30":{"start":{"line":98,"column":54},"end":{"line":104,"column":17}},"31":{"start":{"line":106,"column":58},"end":{"line":109,"column":17}},"32":{"start":{"line":111,"column":16},"end":{"line":113,"column":17}},"33":{"start":{"line":112,"column":20},"end":{"line":112,"column":50}},"34":{"start":{"line":116,"column":16},"end":{"line":173,"column":14}},"35":{"start":{"line":179,"column":2},"end":{"line":240,"column":4}},"36":{"start":{"line":190,"column":32},"end":{"line":190,"column":46}},"37":{"start":{"line":191,"column":10},"end":{"line":191,"column":55}},"38":{"start":{"line":194,"column":34},"end":{"line":194,"column":48}},"39":{"start":{"line":195,"column":12},"end":{"line":195,"column":115}},"40":{"start":{"line":199,"column":12},"end":{"line":199,"column":68}},"41":{"start":{"line":243,"column":15},"end":{"line":252,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":29,"column":56},"end":{"line":29,"column":57}},"loc":{"start":{"line":29,"column":76},"end":{"line":241,"column":1}},"line":29},"1":{"name":"(anonymous_1)","decl":{"start":{"line":32,"column":24},"end":{"line":32,"column":25}},"loc":{"start":{"line":32,"column":54},"end":{"line":42,"column":3}},"line":32},"2":{"name":"(anonymous_2)","decl":{"start":{"line":48,"column":28},"end":{"line":48,"column":29}},"loc":{"start":{"line":48,"column":34},"end":{"line":177,"column":3}},"line":48},"3":{"name":"(anonymous_3)","decl":{"start":{"line":49,"column":65},"end":{"line":49,"column":66}},"loc":{"start":{"line":49,"column":81},"end":{"line":54,"column":5}},"line":49},"4":{"name":"(anonymous_4)","decl":{"start":{"line":50,"column":41},"end":{"line":50,"column":42}},"loc":{"start":{"line":51,"column":8},"end":{"line":51,"column":63}},"line":51},"5":{"name":"(anonymous_5)","decl":{"start":{"line":51,"column":19},"end":{"line":51,"column":20}},"loc":{"start":{"line":51,"column":30},"end":{"line":51,"column":61}},"line":51},"6":{"name":"(anonymous_6)","decl":{"start":{"line":82,"column":54},"end":{"line":82,"column":55}},"loc":{"start":{"line":82,"column":65},"end":{"line":173,"column":15}},"line":82},"7":{"name":"(anonymous_7)","decl":{"start":{"line":189,"column":17},"end":{"line":189,"column":18}},"loc":{"start":{"line":189,"column":37},"end":{"line":192,"column":9}},"line":189},"8":{"name":"(anonymous_8)","decl":{"start":{"line":193,"column":21},"end":{"line":193,"column":22}},"loc":{"start":{"line":193,"column":41},"end":{"line":196,"column":9}},"line":193},"9":{"name":"(anonymous_9)","decl":{"start":{"line":198,"column":19},"end":{"line":198,"column":20}},"loc":{"start":{"line":198,"column":30},"end":{"line":200,"column":9}},"line":198}},"branchMap":{"0":{"loc":{"start":{"line":33,"column":4},"end":{"line":41,"column":5}},"type":"switch","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":60}},{"start":{"line":35,"column":8},"end":{"line":35,"column":58}},{"start":{"line":36,"column":8},"end":{"line":36,"column":54}},{"start":{"line":37,"column":8},"end":{"line":37,"column":50}},{"start":{"line":38,"column":8},"end":{"line":40,"column":35}}],"line":33},"1":{"loc":{"start":{"line":58,"column":23},"end":{"line":58,"column":70}},"type":"cond-expr","locations":[{"start":{"line":58,"column":47},"end":{"line":58,"column":55}},{"start":{"line":58,"column":58},"end":{"line":58,"column":70}}],"line":58},"2":{"loc":{"start":{"line":111,"column":16},"end":{"line":113,"column":17}},"type":"if","locations":[{"start":{"line":111,"column":16},"end":{"line":113,"column":17}},{"start":{},"end":{}}],"line":111},"3":{"loc":{"start":{"line":155,"column":87},"end":{"line":155,"column":138}},"type":"binary-expr","locations":[{"start":{"line":155,"column":87},"end":{"line":155,"column":129}},{"start":{"line":155,"column":133},"end":{"line":155,"column":138}}],"line":155},"4":{"loc":{"start":{"line":183,"column":54},"end":{"line":183,"column":111}},"type":"cond-expr","locations":[{"start":{"line":183,"column":82},"end":{"line":183,"column":106}},{"start":{"line":183,"column":109},"end":{"line":183,"column":111}}],"line":183}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"0":[0,0,0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\ThemeSwitch.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\ThemeSwitch.tsx","statementMap":{"0":{"start":{"line":12,"column":48},"end":{"line":33,"column":1}},"1":{"start":{"line":13,"column":20},"end":{"line":13,"column":30}},"2":{"start":{"line":15,"column":2},"end":{"line":32,"column":4}},"3":{"start":{"line":28,"column":10},"end":{"line":28,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":48},"end":{"line":12,"column":49}},"loc":{"start":{"line":12,"column":80},"end":{"line":33,"column":1}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":27,"column":23},"end":{"line":27,"column":24}},"loc":{"start":{"line":27,"column":37},"end":{"line":29,"column":9}},"line":27}},"branchMap":{"0":{"loc":{"start":{"line":28,"column":19},"end":{"line":28,"column":46}},"type":"cond-expr","locations":[{"start":{"line":28,"column":30},"end":{"line":28,"column":36}},{"start":{"line":28,"column":39},"end":{"line":28,"column":46}}],"line":28}},"s":{"0":0,"1":0,"2":0,"3":0},"f":{"0":0,"1":0},"b":{"0":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\AddEntryModal\\AddEntryModal.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\AddEntryModal\\AddEntryModal.tsx","statementMap":{"0":{"start":{"line":37,"column":33},"end":{"line":37,"column":63}},"1":{"start":{"line":38,"column":25},"end":{"line":38,"column":27}},"2":{"start":{"line":39,"column":30},"end":{"line":39,"column":31}},"3":{"start":{"line":44,"column":52},"end":{"line":354,"column":1}},"4":{"start":{"line":48,"column":20},"end":{"line":48,"column":30}},"5":{"start":{"line":49,"column":17},"end":{"line":49,"column":28}},"6":{"start":{"line":51,"column":58},"end":{"line":51,"column":85}},"7":{"start":{"line":52,"column":44},"end":{"line":52,"column":56}},"8":{"start":{"line":53,"column":46},"end":{"line":53,"column":58}},"9":{"start":{"line":54,"column":40},"end":{"line":54,"column":60}},"10":{"start":{"line":55,"column":46},"end":{"line":55,"column":74}},"11":{"start":{"line":56,"column":36},"end":{"line":56,"column":88}},"12":{"start":{"line":57,"column":34},"end":{"line":57,"column":61}},"13":{"start":{"line":58,"column":36},"end":{"line":58,"column":48}},"14":{"start":{"line":59,"column":40},"end":{"line":59,"column":55}},"15":{"start":{"line":61,"column":36},"end":{"line":61,"column":65}},"16":{"start":{"line":62,"column":48},"end":{"line":62,"column":63}},"17":{"start":{"line":63,"column":44},"end":{"line":63,"column":77}},"18":{"start":{"line":64,"column":64},"end":{"line":64,"column":96}},"19":{"start":{"line":65,"column":66},"end":{"line":65,"column":95}},"20":{"start":{"line":66,"column":46},"end":{"line":66,"column":66}},"21":{"start":{"line":67,"column":40},"end":{"line":67,"column":60}},"22":{"start":{"line":68,"column":60},"end":{"line":68,"column":123}},"23":{"start":{"line":70,"column":52},"end":{"line":70,"column":64}},"24":{"start":{"line":71,"column":60},"end":{"line":71,"column":75}},"25":{"start":{"line":73,"column":27},"end":{"line":73,"column":57}},"26":{"start":{"line":75,"column":28},"end":{"line":79,"column":17}},"27":{"start":{"line":76,"column":4},"end":{"line":76,"column":63}},"28":{"start":{"line":76,"column":56},"end":{"line":76,"column":63}},"29":{"start":{"line":77,"column":17},"end":{"line":77,"column":41}},"30":{"start":{"line":78,"column":4},"end":{"line":78,"column":68}},"31":{"start":{"line":78,"column":31},"end":{"line":78,"column":65}},"32":{"start":{"line":81,"column":26},"end":{"line":87,"column":55}},"33":{"start":{"line":82,"column":30},"end":{"line":82,"column":55}},"34":{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},"35":{"start":{"line":84,"column":8},"end":{"line":84,"column":93}},"36":{"start":{"line":86,"column":4},"end":{"line":86,"column":16}},"37":{"start":{"line":89,"column":2},"end":{"line":112,"column":9}},"38":{"start":{"line":90,"column":37},"end":{"line":90,"column":107}},"39":{"start":{"line":91,"column":32},"end":{"line":91,"column":73}},"40":{"start":{"line":93,"column":4},"end":{"line":105,"column":5}},"41":{"start":{"line":94,"column":8},"end":{"line":94,"column":31}},"42":{"start":{"line":95,"column":8},"end":{"line":95,"column":29}},"43":{"start":{"line":96,"column":8},"end":{"line":96,"column":60}},"44":{"start":{"line":97,"column":8},"end":{"line":97,"column":39}},"45":{"start":{"line":98,"column":8},"end":{"line":98,"column":97}},"46":{"start":{"line":98,"column":46},"end":{"line":98,"column":97}},"47":{"start":{"line":99,"column":11},"end":{"line":105,"column":5}},"48":{"start":{"line":100,"column":8},"end":{"line":100,"column":31}},"49":{"start":{"line":101,"column":8},"end":{"line":101,"column":29}},"50":{"start":{"line":102,"column":8},"end":{"line":102,"column":60}},"51":{"start":{"line":103,"column":8},"end":{"line":103,"column":45}},"52":{"start":{"line":104,"column":8},"end":{"line":104,"column":97}},"53":{"start":{"line":104,"column":46},"end":{"line":104,"column":97}},"54":{"start":{"line":108,"column":4},"end":{"line":111,"column":5}},"55":{"start":{"line":109,"column":8},"end":{"line":109,"column":47}},"56":{"start":{"line":110,"column":8},"end":{"line":110,"column":53}},"57":{"start":{"line":115,"column":2},"end":{"line":115,"column":116}},"58":{"start":{"line":115,"column":20},"end":{"line":115,"column":78}},"59":{"start":{"line":115,"column":48},"end":{"line":115,"column":76}},"60":{"start":{"line":117,"column":27},"end":{"line":123,"column":8}},"61":{"start":{"line":118,"column":4},"end":{"line":118,"column":34}},"62":{"start":{"line":118,"column":27},"end":{"line":118,"column":34}},"63":{"start":{"line":119,"column":4},"end":{"line":122,"column":7}},"64":{"start":{"line":120,"column":22},"end":{"line":120,"column":94}},"65":{"start":{"line":120,"column":49},"end":{"line":120,"column":65}},"66":{"start":{"line":121,"column":6},"end":{"line":121,"column":47}},"67":{"start":{"line":121,"column":48},"end":{"line":121,"column":63}},"68":{"start":{"line":125,"column":38},"end":{"line":139,"column":8}},"69":{"start":{"line":126,"column":4},"end":{"line":126,"column":49}},"70":{"start":{"line":126,"column":42},"end":{"line":126,"column":49}},"71":{"start":{"line":128,"column":4},"end":{"line":138,"column":7}},"72":{"start":{"line":129,"column":28},"end":{"line":129,"column":47}},"73":{"start":{"line":130,"column":8},"end":{"line":135,"column":11}},"74":{"start":{"line":131,"column":33},"end":{"line":131,"column":50}},"75":{"start":{"line":132,"column":43},"end":{"line":132,"column":68}},"76":{"start":{"line":133,"column":43},"end":{"line":133,"column":116}},"77":{"start":{"line":133,"column":96},"end":{"line":133,"column":114}},"78":{"start":{"line":134,"column":12},"end":{"line":134,"column":103}},"79":{"start":{"line":136,"column":8},"end":{"line":136,"column":56}},"80":{"start":{"line":137,"column":8},"end":{"line":137,"column":27}},"81":{"start":{"line":141,"column":33},"end":{"line":151,"column":47}},"82":{"start":{"line":142,"column":4},"end":{"line":142,"column":45}},"83":{"start":{"line":142,"column":35},"end":{"line":142,"column":45}},"84":{"start":{"line":144,"column":28},"end":{"line":144,"column":73}},"85":{"start":{"line":145,"column":4},"end":{"line":145,"column":48}},"86":{"start":{"line":145,"column":38},"end":{"line":145,"column":48}},"87":{"start":{"line":147,"column":4},"end":{"line":150,"column":8}},"88":{"start":{"line":147,"column":48},"end":{"line":150,"column":5}},"89":{"start":{"line":153,"column":30},"end":{"line":161,"column":55}},"90":{"start":{"line":154,"column":4},"end":{"line":154,"column":23}},"91":{"start":{"line":154,"column":24},"end":{"line":154,"column":94}},"92":{"start":{"line":154,"column":87},"end":{"line":154,"column":94}},"93":{"start":{"line":155,"column":4},"end":{"line":155,"column":25}},"94":{"start":{"line":156,"column":4},"end":{"line":160,"column":103}},"95":{"start":{"line":157,"column":29},"end":{"line":157,"column":100}},"96":{"start":{"line":158,"column":27},"end":{"line":158,"column":61}},"97":{"start":{"line":158,"column":63},"end":{"line":158,"column":94}},"98":{"start":{"line":158,"column":95},"end":{"line":158,"column":116}},"99":{"start":{"line":158,"column":117},"end":{"line":158,"column":134}},"100":{"start":{"line":159,"column":6},"end":{"line":159,"column":219}},"101":{"start":{"line":160,"column":79},"end":{"line":160,"column":101}},"102":{"start":{"line":163,"column":39},"end":{"line":173,"column":145}},"103":{"start":{"line":164,"column":4},"end":{"line":164,"column":23}},"104":{"start":{"line":164,"column":24},"end":{"line":164,"column":163}},"105":{"start":{"line":164,"column":55},"end":{"line":164,"column":163}},"106":{"start":{"line":165,"column":30},"end":{"line":165,"column":55}},"107":{"start":{"line":166,"column":4},"end":{"line":166,"column":174}},"108":{"start":{"line":166,"column":70},"end":{"line":166,"column":174}},"109":{"start":{"line":167,"column":4},"end":{"line":167,"column":33}},"110":{"start":{"line":167,"column":26},"end":{"line":167,"column":33}},"111":{"start":{"line":168,"column":4},"end":{"line":168,"column":66}},"112":{"start":{"line":169,"column":4},"end":{"line":172,"column":5}},"113":{"start":{"line":170,"column":8},"end":{"line":170,"column":47}},"114":{"start":{"line":171,"column":8},"end":{"line":171,"column":101}},"115":{"start":{"line":175,"column":44},"end":{"line":178,"column":40}},"116":{"start":{"line":176,"column":4},"end":{"line":176,"column":51}},"117":{"start":{"line":176,"column":44},"end":{"line":176,"column":51}},"118":{"start":{"line":177,"column":4},"end":{"line":177,"column":186}},"119":{"start":{"line":177,"column":54},"end":{"line":177,"column":67}},"120":{"start":{"line":177,"column":69},"end":{"line":177,"column":167}},"121":{"start":{"line":177,"column":168},"end":{"line":177,"column":182}},"122":{"start":{"line":180,"column":43},"end":{"line":189,"column":160}},"123":{"start":{"line":181,"column":4},"end":{"line":181,"column":107}},"124":{"start":{"line":181,"column":100},"end":{"line":181,"column":107}},"125":{"start":{"line":182,"column":4},"end":{"line":182,"column":23}},"126":{"start":{"line":183,"column":25},"end":{"line":183,"column":67}},"127":{"start":{"line":183,"column":69},"end":{"line":183,"column":107}},"128":{"start":{"line":183,"column":100},"end":{"line":183,"column":107}},"129":{"start":{"line":184,"column":4},"end":{"line":184,"column":49}},"130":{"start":{"line":185,"column":4},"end":{"line":185,"column":64}},"131":{"start":{"line":185,"column":34},"end":{"line":185,"column":62}},"132":{"start":{"line":186,"column":26},"end":{"line":186,"column":88}},"133":{"start":{"line":186,"column":49},"end":{"line":186,"column":86}},"134":{"start":{"line":187,"column":4},"end":{"line":187,"column":47}},"135":{"start":{"line":188,"column":4},"end":{"line":188,"column":40}},"136":{"start":{"line":191,"column":30},"end":{"line":223,"column":40}},"137":{"start":{"line":192,"column":4},"end":{"line":192,"column":27}},"138":{"start":{"line":192,"column":20},"end":{"line":192,"column":27}},"139":{"start":{"line":193,"column":4},"end":{"line":193,"column":25}},"140":{"start":{"line":193,"column":26},"end":{"line":193,"column":64}},"141":{"start":{"line":193,"column":65},"end":{"line":193,"column":99}},"142":{"start":{"line":194,"column":4},"end":{"line":194,"column":35}},"143":{"start":{"line":194,"column":36},"end":{"line":194,"column":61}},"144":{"start":{"line":194,"column":62},"end":{"line":194,"column":94}},"145":{"start":{"line":197,"column":4},"end":{"line":222,"column":5}},"146":{"start":{"line":198,"column":6},"end":{"line":198,"column":155}},"147":{"start":{"line":199,"column":6},"end":{"line":199,"column":74}},"148":{"start":{"line":199,"column":37},"end":{"line":199,"column":74}},"149":{"start":{"line":200,"column":6},"end":{"line":200,"column":204}},"150":{"start":{"line":201,"column":6},"end":{"line":201,"column":67}},"151":{"start":{"line":201,"column":33},"end":{"line":201,"column":67}},"152":{"start":{"line":203,"column":20},"end":{"line":203,"column":44}},"153":{"start":{"line":203,"column":46},"end":{"line":203,"column":122}},"154":{"start":{"line":203,"column":58},"end":{"line":203,"column":122}},"155":{"start":{"line":204,"column":25},"end":{"line":204,"column":59}},"156":{"start":{"line":205,"column":31},"end":{"line":205,"column":109}},"157":{"start":{"line":206,"column":21},"end":{"line":206,"column":65}},"158":{"start":{"line":207,"column":23},"end":{"line":207,"column":58}},"159":{"start":{"line":208,"column":22},"end":{"line":208,"column":71}},"160":{"start":{"line":210,"column":6},"end":{"line":216,"column":7}},"161":{"start":{"line":211,"column":8},"end":{"line":211,"column":100}},"162":{"start":{"line":212,"column":8},"end":{"line":212,"column":31}},"163":{"start":{"line":214,"column":8},"end":{"line":214,"column":34}},"164":{"start":{"line":214,"column":35},"end":{"line":214,"column":97}},"165":{"start":{"line":214,"column":92},"end":{"line":214,"column":93}},"166":{"start":{"line":215,"column":8},"end":{"line":215,"column":66}},"167":{"start":{"line":215,"column":32},"end":{"line":215,"column":64}},"168":{"start":{"line":218,"column":6},"end":{"line":218,"column":237}},"169":{"start":{"line":218,"column":123},"end":{"line":218,"column":237}},"170":{"start":{"line":219,"column":6},"end":{"line":219,"column":29}},"171":{"start":{"line":221,"column":6},"end":{"line":221,"column":32}},"172":{"start":{"line":225,"column":30},"end":{"line":233,"column":86}},"173":{"start":{"line":226,"column":4},"end":{"line":226,"column":23}},"174":{"start":{"line":226,"column":24},"end":{"line":226,"column":67}},"175":{"start":{"line":226,"column":60},"end":{"line":226,"column":67}},"176":{"start":{"line":227,"column":4},"end":{"line":227,"column":168}},"177":{"start":{"line":227,"column":43},"end":{"line":227,"column":168}},"178":{"start":{"line":228,"column":4},"end":{"line":232,"column":7}},"179":{"start":{"line":230,"column":58},"end":{"line":230,"column":87}},"180":{"start":{"line":231,"column":59},"end":{"line":231,"column":89}},"181":{"start":{"line":235,"column":29},"end":{"line":239,"column":36}},"182":{"start":{"line":236,"column":4},"end":{"line":236,"column":23}},"183":{"start":{"line":236,"column":24},"end":{"line":236,"column":67}},"184":{"start":{"line":236,"column":60},"end":{"line":236,"column":67}},"185":{"start":{"line":237,"column":4},"end":{"line":237,"column":33}},"186":{"start":{"line":238,"column":4},"end":{"line":238,"column":25}},"187":{"start":{"line":238,"column":26},"end":{"line":238,"column":64}},"188":{"start":{"line":238,"column":65},"end":{"line":238,"column":99}},"189":{"start":{"line":241,"column":28},"end":{"line":257,"column":3}},"190":{"start":{"line":242,"column":26},"end":{"line":242,"column":50}},"191":{"start":{"line":243,"column":4},"end":{"line":243,"column":50}},"192":{"start":{"line":243,"column":43},"end":{"line":243,"column":50}},"193":{"start":{"line":244,"column":4},"end":{"line":244,"column":23}},"194":{"start":{"line":245,"column":4},"end":{"line":245,"column":29}},"195":{"start":{"line":245,"column":30},"end":{"line":245,"column":61}},"196":{"start":{"line":246,"column":4},"end":{"line":256,"column":75}},"197":{"start":{"line":247,"column":24},"end":{"line":247,"column":69}},"198":{"start":{"line":248,"column":8},"end":{"line":254,"column":9}},"199":{"start":{"line":249,"column":12},"end":{"line":249,"column":106}},"200":{"start":{"line":251,"column":12},"end":{"line":251,"column":38}},"201":{"start":{"line":251,"column":39},"end":{"line":251,"column":101}},"202":{"start":{"line":251,"column":96},"end":{"line":251,"column":97}},"203":{"start":{"line":252,"column":12},"end":{"line":252,"column":98}},"204":{"start":{"line":252,"column":38},"end":{"line":252,"column":94}},"205":{"start":{"line":252,"column":59},"end":{"line":252,"column":92}},"206":{"start":{"line":253,"column":12},"end":{"line":253,"column":43}},"207":{"start":{"line":256,"column":14},"end":{"line":256,"column":40}},"208":{"start":{"line":256,"column":41},"end":{"line":256,"column":73}},"209":{"start":{"line":259,"column":35},"end":{"line":262,"column":50}},"210":{"start":{"line":260,"column":4},"end":{"line":260,"column":70}},"211":{"start":{"line":260,"column":63},"end":{"line":260,"column":70}},"212":{"start":{"line":261,"column":4},"end":{"line":261,"column":151}},"213":{"start":{"line":261,"column":56},"end":{"line":261,"column":69}},"214":{"start":{"line":261,"column":71},"end":{"line":261,"column":132}},"215":{"start":{"line":261,"column":133},"end":{"line":261,"column":147}},"216":{"start":{"line":264,"column":33},"end":{"line":268,"column":65}},"217":{"start":{"line":265,"column":4},"end":{"line":265,"column":70}},"218":{"start":{"line":265,"column":63},"end":{"line":265,"column":70}},"219":{"start":{"line":266,"column":17},"end":{"line":266,"column":37}},"220":{"start":{"line":266,"column":39},"end":{"line":266,"column":74}},"221":{"start":{"line":267,"column":4},"end":{"line":267,"column":37}},"222":{"start":{"line":267,"column":38},"end":{"line":267,"column":100}},"223":{"start":{"line":270,"column":37},"end":{"line":277,"column":101}},"224":{"start":{"line":271,"column":4},"end":{"line":271,"column":70}},"225":{"start":{"line":271,"column":63},"end":{"line":271,"column":70}},"226":{"start":{"line":272,"column":24},"end":{"line":272,"column":45}},"227":{"start":{"line":272,"column":47},"end":{"line":272,"column":181}},"228":{"start":{"line":272,"column":65},"end":{"line":272,"column":181}},"229":{"start":{"line":273,"column":25},"end":{"line":273,"column":48}},"230":{"start":{"line":273,"column":50},"end":{"line":273,"column":227}},"231":{"start":{"line":273,"column":109},"end":{"line":273,"column":227}},"232":{"start":{"line":274,"column":4},"end":{"line":274,"column":176}},"233":{"start":{"line":274,"column":29},"end":{"line":274,"column":174}},"234":{"start":{"line":274,"column":51},"end":{"line":274,"column":173}},"235":{"start":{"line":275,"column":4},"end":{"line":275,"column":52}},"236":{"start":{"line":275,"column":21},"end":{"line":275,"column":52}},"237":{"start":{"line":276,"column":4},"end":{"line":276,"column":38}},"238":{"start":{"line":276,"column":39},"end":{"line":276,"column":61}},"239":{"start":{"line":276,"column":62},"end":{"line":276,"column":81}},"240":{"start":{"line":276,"column":82},"end":{"line":276,"column":101}},"241":{"start":{"line":279,"column":39},"end":{"line":282,"column":24}},"242":{"start":{"line":280,"column":4},"end":{"line":280,"column":33}},"243":{"start":{"line":280,"column":26},"end":{"line":280,"column":33}},"244":{"start":{"line":280,"column":34},"end":{"line":280,"column":68}},"245":{"start":{"line":281,"column":4},"end":{"line":281,"column":26}},"246":{"start":{"line":281,"column":27},"end":{"line":281,"column":46}},"247":{"start":{"line":281,"column":47},"end":{"line":281,"column":66}},"248":{"start":{"line":284,"column":32},"end":{"line":297,"column":170}},"249":{"start":{"line":285,"column":4},"end":{"line":285,"column":23}},"250":{"start":{"line":285,"column":24},"end":{"line":285,"column":142}},"251":{"start":{"line":285,"column":135},"end":{"line":285,"column":142}},"252":{"start":{"line":286,"column":25},"end":{"line":291,"column":6}},"253":{"start":{"line":287,"column":21},"end":{"line":287,"column":41}},"254":{"start":{"line":288,"column":29},"end":{"line":288,"column":98}},"255":{"start":{"line":288,"column":45},"end":{"line":288,"column":97}},"256":{"start":{"line":289,"column":32},"end":{"line":289,"column":308}},"257":{"start":{"line":290,"column":8},"end":{"line":290,"column":99}},"258":{"start":{"line":292,"column":4},"end":{"line":296,"column":5}},"259":{"start":{"line":293,"column":8},"end":{"line":293,"column":53}},"260":{"start":{"line":294,"column":30},"end":{"line":294,"column":92}},"261":{"start":{"line":294,"column":53},"end":{"line":294,"column":90}},"262":{"start":{"line":295,"column":8},"end":{"line":295,"column":51}},"263":{"start":{"line":299,"column":36},"end":{"line":299,"column":114}},"264":{"start":{"line":299,"column":66},"end":{"line":299,"column":109}},"265":{"start":{"line":301,"column":42},"end":{"line":321,"column":58}},"266":{"start":{"line":302,"column":4},"end":{"line":302,"column":25}},"267":{"start":{"line":303,"column":4},"end":{"line":320,"column":150}},"268":{"start":{"line":304,"column":57},"end":{"line":304,"column":246}},"269":{"start":{"line":305,"column":29},"end":{"line":305,"column":98}},"270":{"start":{"line":305,"column":45},"end":{"line":305,"column":97}},"271":{"start":{"line":306,"column":8},"end":{"line":319,"column":9}},"272":{"start":{"line":307,"column":12},"end":{"line":314,"column":15}},"273":{"start":{"line":308,"column":83},"end":{"line":308,"column":104}},"274":{"start":{"line":310,"column":40},"end":{"line":310,"column":107}},"275":{"start":{"line":311,"column":20},"end":{"line":311,"column":215}},"276":{"start":{"line":311,"column":39},"end":{"line":311,"column":176}},"277":{"start":{"line":311,"column":177},"end":{"line":311,"column":213}},"278":{"start":{"line":312,"column":20},"end":{"line":312,"column":42}},"279":{"start":{"line":316,"column":28},"end":{"line":316,"column":72}},"280":{"start":{"line":317,"column":12},"end":{"line":317,"column":193}},"281":{"start":{"line":317,"column":27},"end":{"line":317,"column":158}},"282":{"start":{"line":317,"column":159},"end":{"line":317,"column":191}},"283":{"start":{"line":318,"column":12},"end":{"line":318,"column":34}},"284":{"start":{"line":320,"column":22},"end":{"line":320,"column":125}},"285":{"start":{"line":320,"column":126},"end":{"line":320,"column":148}},"286":{"start":{"line":323,"column":21},"end":{"line":325,"column":93}},"287":{"start":{"line":327,"column":36},"end":{"line":327,"column":175}},"288":{"start":{"line":328,"column":35},"end":{"line":328,"column":153}},"289":{"start":{"line":329,"column":29},"end":{"line":329,"column":132}},"290":{"start":{"line":330,"column":36},"end":{"line":330,"column":194}},"291":{"start":{"line":331,"column":40},"end":{"line":331,"column":89}},"292":{"start":{"line":332,"column":39},"end":{"line":332,"column":88}},"293":{"start":{"line":334,"column":2},"end":{"line":353,"column":4}},"294":{"start":{"line":344,"column":40},"end":{"line":344,"column":63}},"295":{"start":{"line":344,"column":64},"end":{"line":344,"column":89}},"296":{"start":{"line":356,"column":18},"end":{"line":366,"column":3}},"297":{"start":{"line":356,"column":41},"end":{"line":366,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":44,"column":52},"end":{"line":44,"column":53}},"loc":{"start":{"line":47,"column":6},"end":{"line":354,"column":1}},"line":47},"1":{"name":"(anonymous_1)","decl":{"start":{"line":75,"column":40},"end":{"line":75,"column":41}},"loc":{"start":{"line":75,"column":62},"end":{"line":79,"column":3}},"line":75},"2":{"name":"(anonymous_2)","decl":{"start":{"line":78,"column":17},"end":{"line":78,"column":18}},"loc":{"start":{"line":78,"column":31},"end":{"line":78,"column":65}},"line":78},"3":{"name":"(anonymous_3)","decl":{"start":{"line":81,"column":34},"end":{"line":81,"column":35}},"loc":{"start":{"line":81,"column":64},"end":{"line":87,"column":3}},"line":81},"4":{"name":"(anonymous_4)","decl":{"start":{"line":89,"column":12},"end":{"line":89,"column":13}},"loc":{"start":{"line":89,"column":18},"end":{"line":112,"column":3}},"line":89},"5":{"name":"(anonymous_5)","decl":{"start":{"line":115,"column":12},"end":{"line":115,"column":13}},"loc":{"start":{"line":115,"column":18},"end":{"line":115,"column":80}},"line":115},"6":{"name":"(anonymous_6)","decl":{"start":{"line":115,"column":40},"end":{"line":115,"column":41}},"loc":{"start":{"line":115,"column":48},"end":{"line":115,"column":76}},"line":115},"7":{"name":"(anonymous_7)","decl":{"start":{"line":117,"column":39},"end":{"line":117,"column":40}},"loc":{"start":{"line":117,"column":61},"end":{"line":123,"column":3}},"line":117},"8":{"name":"(anonymous_8)","decl":{"start":{"line":119,"column":19},"end":{"line":119,"column":20}},"loc":{"start":{"line":119,"column":27},"end":{"line":122,"column":5}},"line":119},"9":{"name":"(anonymous_9)","decl":{"start":{"line":120,"column":44},"end":{"line":120,"column":45}},"loc":{"start":{"line":120,"column":49},"end":{"line":120,"column":65}},"line":120},"10":{"name":"(anonymous_10)","decl":{"start":{"line":121,"column":37},"end":{"line":121,"column":38}},"loc":{"start":{"line":121,"column":43},"end":{"line":121,"column":45}},"line":121},"11":{"name":"(anonymous_11)","decl":{"start":{"line":125,"column":50},"end":{"line":125,"column":51}},"loc":{"start":{"line":125,"column":106},"end":{"line":139,"column":3}},"line":125},"12":{"name":"(anonymous_12)","decl":{"start":{"line":128,"column":22},"end":{"line":128,"column":23}},"loc":{"start":{"line":128,"column":38},"end":{"line":138,"column":5}},"line":128},"13":{"name":"(anonymous_13)","decl":{"start":{"line":130,"column":24},"end":{"line":130,"column":25}},"loc":{"start":{"line":130,"column":47},"end":{"line":135,"column":9}},"line":130},"14":{"name":"(anonymous_14)","decl":{"start":{"line":133,"column":91},"end":{"line":133,"column":92}},"loc":{"start":{"line":133,"column":96},"end":{"line":133,"column":114}},"line":133},"15":{"name":"(anonymous_15)","decl":{"start":{"line":136,"column":46},"end":{"line":136,"column":47}},"loc":{"start":{"line":136,"column":52},"end":{"line":136,"column":54}},"line":136},"16":{"name":"(anonymous_16)","decl":{"start":{"line":141,"column":41},"end":{"line":141,"column":42}},"loc":{"start":{"line":141,"column":47},"end":{"line":151,"column":3}},"line":141},"17":{"name":"(anonymous_17)","decl":{"start":{"line":147,"column":31},"end":{"line":147,"column":32}},"loc":{"start":{"line":147,"column":48},"end":{"line":150,"column":5}},"line":147},"18":{"name":"(anonymous_18)","decl":{"start":{"line":153,"column":42},"end":{"line":153,"column":43}},"loc":{"start":{"line":153,"column":54},"end":{"line":161,"column":3}},"line":153},"19":{"name":"(anonymous_19)","decl":{"start":{"line":163,"column":51},"end":{"line":163,"column":52}},"loc":{"start":{"line":163,"column":63},"end":{"line":173,"column":3}},"line":163},"20":{"name":"(anonymous_20)","decl":{"start":{"line":175,"column":56},"end":{"line":175,"column":57}},"loc":{"start":{"line":175,"column":94},"end":{"line":178,"column":3}},"line":175},"21":{"name":"(anonymous_21)","decl":{"start":{"line":177,"column":29},"end":{"line":177,"column":30}},"loc":{"start":{"line":177,"column":37},"end":{"line":177,"column":184}},"line":177},"22":{"name":"(anonymous_22)","decl":{"start":{"line":180,"column":55},"end":{"line":180,"column":56}},"loc":{"start":{"line":180,"column":67},"end":{"line":189,"column":3}},"line":180},"23":{"name":"(anonymous_23)","decl":{"start":{"line":185,"column":25},"end":{"line":185,"column":26}},"loc":{"start":{"line":185,"column":34},"end":{"line":185,"column":62}},"line":185},"24":{"name":"(anonymous_24)","decl":{"start":{"line":186,"column":43},"end":{"line":186,"column":44}},"loc":{"start":{"line":186,"column":49},"end":{"line":186,"column":86}},"line":186},"25":{"name":"(anonymous_25)","decl":{"start":{"line":191,"column":42},"end":{"line":191,"column":43}},"loc":{"start":{"line":191,"column":82},"end":{"line":223,"column":3}},"line":191},"26":{"name":"(anonymous_26)","decl":{"start":{"line":214,"column":82},"end":{"line":214,"column":83}},"loc":{"start":{"line":214,"column":92},"end":{"line":214,"column":93}},"line":214},"27":{"name":"(anonymous_27)","decl":{"start":{"line":215,"column":24},"end":{"line":215,"column":25}},"loc":{"start":{"line":215,"column":32},"end":{"line":215,"column":64}},"line":215},"28":{"name":"(anonymous_28)","decl":{"start":{"line":225,"column":42},"end":{"line":225,"column":43}},"loc":{"start":{"line":225,"column":48},"end":{"line":233,"column":3}},"line":225},"29":{"name":"(anonymous_29)","decl":{"start":{"line":230,"column":52},"end":{"line":230,"column":53}},"loc":{"start":{"line":230,"column":58},"end":{"line":230,"column":87}},"line":230},"30":{"name":"(anonymous_30)","decl":{"start":{"line":231,"column":53},"end":{"line":231,"column":54}},"loc":{"start":{"line":231,"column":59},"end":{"line":231,"column":89}},"line":231},"31":{"name":"(anonymous_31)","decl":{"start":{"line":235,"column":41},"end":{"line":235,"column":42}},"loc":{"start":{"line":235,"column":47},"end":{"line":239,"column":3}},"line":235},"32":{"name":"(anonymous_32)","decl":{"start":{"line":241,"column":28},"end":{"line":241,"column":29}},"loc":{"start":{"line":241,"column":40},"end":{"line":257,"column":3}},"line":241},"33":{"name":"(anonymous_33)","decl":{"start":{"line":251,"column":86},"end":{"line":251,"column":87}},"loc":{"start":{"line":251,"column":96},"end":{"line":251,"column":97}},"line":251},"34":{"name":"(anonymous_34)","decl":{"start":{"line":252,"column":28},"end":{"line":252,"column":29}},"loc":{"start":{"line":252,"column":36},"end":{"line":252,"column":96}},"line":252},"35":{"name":"(anonymous_35)","decl":{"start":{"line":259,"column":47},"end":{"line":259,"column":48}},"loc":{"start":{"line":259,"column":66},"end":{"line":262,"column":3}},"line":259},"36":{"name":"(anonymous_36)","decl":{"start":{"line":261,"column":31},"end":{"line":261,"column":32}},"loc":{"start":{"line":261,"column":39},"end":{"line":261,"column":149}},"line":261},"37":{"name":"(anonymous_37)","decl":{"start":{"line":264,"column":45},"end":{"line":264,"column":46}},"loc":{"start":{"line":264,"column":64},"end":{"line":268,"column":3}},"line":264},"38":{"name":"(anonymous_38)","decl":{"start":{"line":270,"column":49},"end":{"line":270,"column":50}},"loc":{"start":{"line":270,"column":55},"end":{"line":277,"column":3}},"line":270},"39":{"name":"(anonymous_39)","decl":{"start":{"line":274,"column":21},"end":{"line":274,"column":22}},"loc":{"start":{"line":274,"column":29},"end":{"line":274,"column":174}},"line":274},"40":{"name":"(anonymous_40)","decl":{"start":{"line":274,"column":38},"end":{"line":274,"column":39}},"loc":{"start":{"line":274,"column":51},"end":{"line":274,"column":173}},"line":274},"41":{"name":"(anonymous_41)","decl":{"start":{"line":279,"column":51},"end":{"line":279,"column":52}},"loc":{"start":{"line":279,"column":57},"end":{"line":282,"column":3}},"line":279},"42":{"name":"(anonymous_42)","decl":{"start":{"line":284,"column":44},"end":{"line":284,"column":45}},"loc":{"start":{"line":284,"column":50},"end":{"line":297,"column":3}},"line":284},"43":{"name":"(anonymous_43)","decl":{"start":{"line":286,"column":65},"end":{"line":286,"column":66}},"loc":{"start":{"line":286,"column":74},"end":{"line":291,"column":5}},"line":286},"44":{"name":"(anonymous_44)","decl":{"start":{"line":288,"column":40},"end":{"line":288,"column":41}},"loc":{"start":{"line":288,"column":45},"end":{"line":288,"column":97}},"line":288},"45":{"name":"(anonymous_45)","decl":{"start":{"line":294,"column":47},"end":{"line":294,"column":48}},"loc":{"start":{"line":294,"column":53},"end":{"line":294,"column":90}},"line":294},"46":{"name":"(anonymous_46)","decl":{"start":{"line":299,"column":48},"end":{"line":299,"column":49}},"loc":{"start":{"line":299,"column":66},"end":{"line":299,"column":109}},"line":299},"47":{"name":"(anonymous_47)","decl":{"start":{"line":301,"column":54},"end":{"line":301,"column":55}},"loc":{"start":{"line":301,"column":134},"end":{"line":321,"column":3}},"line":301},"48":{"name":"(anonymous_48)","decl":{"start":{"line":305,"column":40},"end":{"line":305,"column":41}},"loc":{"start":{"line":305,"column":45},"end":{"line":305,"column":97}},"line":305},"49":{"name":"(anonymous_49)","decl":{"start":{"line":308,"column":77},"end":{"line":308,"column":78}},"loc":{"start":{"line":308,"column":83},"end":{"line":308,"column":104}},"line":308},"50":{"name":"(anonymous_50)","decl":{"start":{"line":309,"column":63},"end":{"line":309,"column":64}},"loc":{"start":{"line":309,"column":75},"end":{"line":313,"column":17}},"line":309},"51":{"name":"(anonymous_51)","decl":{"start":{"line":344,"column":32},"end":{"line":344,"column":33}},"loc":{"start":{"line":344,"column":38},"end":{"line":344,"column":91}},"line":344},"52":{"name":"(anonymous_52)","decl":{"start":{"line":356,"column":29},"end":{"line":356,"column":30}},"loc":{"start":{"line":356,"column":41},"end":{"line":366,"column":1}},"line":356}},"branchMap":{"0":{"loc":{"start":{"line":37,"column":33},"end":{"line":37,"column":63}},"type":"cond-expr","locations":[{"start":{"line":37,"column":57},"end":{"line":37,"column":59}},{"start":{"line":37,"column":62},"end":{"line":37,"column":63}}],"line":37},"1":{"loc":{"start":{"line":73,"column":27},"end":{"line":73,"column":57}},"type":"binary-expr","locations":[{"start":{"line":73,"column":27},"end":{"line":73,"column":38}},{"start":{"line":73,"column":42},"end":{"line":73,"column":57}}],"line":73},"2":{"loc":{"start":{"line":76,"column":4},"end":{"line":76,"column":63}},"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":63}},{"start":{},"end":{}}],"line":76},"3":{"loc":{"start":{"line":76,"column":8},"end":{"line":76,"column":54}},"type":"binary-expr","locations":[{"start":{"line":76,"column":8},"end":{"line":76,"column":17}},{"start":{"line":76,"column":21},"end":{"line":76,"column":54}}],"line":76},"4":{"loc":{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},{"start":{},"end":{}}],"line":83},"5":{"loc":{"start":{"line":83,"column":8},"end":{"line":83,"column":104}},"type":"binary-expr","locations":[{"start":{"line":83,"column":8},"end":{"line":83,"column":28}},{"start":{"line":83,"column":32},"end":{"line":83,"column":65}},{"start":{"line":83,"column":69},"end":{"line":83,"column":90}},{"start":{"line":83,"column":94},"end":{"line":83,"column":104}}],"line":83},"6":{"loc":{"start":{"line":90,"column":37},"end":{"line":90,"column":107}},"type":"binary-expr","locations":[{"start":{"line":90,"column":37},"end":{"line":90,"column":47}},{"start":{"line":90,"column":51},"end":{"line":90,"column":77}},{"start":{"line":90,"column":81},"end":{"line":90,"column":107}}],"line":90},"7":{"loc":{"start":{"line":91,"column":32},"end":{"line":91,"column":73}},"type":"binary-expr","locations":[{"start":{"line":91,"column":32},"end":{"line":91,"column":43}},{"start":{"line":91,"column":47},"end":{"line":91,"column":73}}],"line":91},"8":{"loc":{"start":{"line":93,"column":4},"end":{"line":105,"column":5}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":105,"column":5}},{"start":{"line":99,"column":11},"end":{"line":105,"column":5}}],"line":93},"9":{"loc":{"start":{"line":98,"column":8},"end":{"line":98,"column":97}},"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":98,"column":97}},{"start":{},"end":{}}],"line":98},"10":{"loc":{"start":{"line":99,"column":11},"end":{"line":105,"column":5}},"type":"if","locations":[{"start":{"line":99,"column":11},"end":{"line":105,"column":5}},{"start":{},"end":{}}],"line":99},"11":{"loc":{"start":{"line":103,"column":25},"end":{"line":103,"column":43}},"type":"binary-expr","locations":[{"start":{"line":103,"column":25},"end":{"line":103,"column":37}},{"start":{"line":103,"column":41},"end":{"line":103,"column":43}}],"line":103},"12":{"loc":{"start":{"line":104,"column":8},"end":{"line":104,"column":97}},"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":97}},{"start":{},"end":{}}],"line":104},"13":{"loc":{"start":{"line":108,"column":4},"end":{"line":111,"column":5}},"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":111,"column":5}},{"start":{},"end":{}}],"line":108},"14":{"loc":{"start":{"line":118,"column":4},"end":{"line":118,"column":34}},"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":34}},{"start":{},"end":{}}],"line":118},"15":{"loc":{"start":{"line":118,"column":8},"end":{"line":118,"column":25}},"type":"binary-expr","locations":[{"start":{"line":118,"column":8},"end":{"line":118,"column":13}},{"start":{"line":118,"column":17},"end":{"line":118,"column":25}}],"line":118},"16":{"loc":{"start":{"line":126,"column":4},"end":{"line":126,"column":49}},"type":"if","locations":[{"start":{"line":126,"column":4},"end":{"line":126,"column":49}},{"start":{},"end":{}}],"line":126},"17":{"loc":{"start":{"line":126,"column":8},"end":{"line":126,"column":40}},"type":"binary-expr","locations":[{"start":{"line":126,"column":8},"end":{"line":126,"column":16}},{"start":{"line":126,"column":20},"end":{"line":126,"column":40}}],"line":126},"18":{"loc":{"start":{"line":132,"column":43},"end":{"line":132,"column":68}},"type":"binary-expr","locations":[{"start":{"line":132,"column":43},"end":{"line":132,"column":62}},{"start":{"line":132,"column":66},"end":{"line":132,"column":68}}],"line":132},"19":{"loc":{"start":{"line":142,"column":4},"end":{"line":142,"column":45}},"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":45}},{"start":{},"end":{}}],"line":142},"20":{"loc":{"start":{"line":144,"column":28},"end":{"line":144,"column":73}},"type":"binary-expr","locations":[{"start":{"line":144,"column":28},"end":{"line":144,"column":67}},{"start":{"line":144,"column":71},"end":{"line":144,"column":73}}],"line":144},"21":{"loc":{"start":{"line":145,"column":4},"end":{"line":145,"column":48}},"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":48}},{"start":{},"end":{}}],"line":145},"22":{"loc":{"start":{"line":148,"column":15},"end":{"line":148,"column":91}},"type":"cond-expr","locations":[{"start":{"line":148,"column":29},"end":{"line":148,"column":79}},{"start":{"line":148,"column":82},"end":{"line":148,"column":91}}],"line":148},"23":{"loc":{"start":{"line":154,"column":24},"end":{"line":154,"column":94}},"type":"if","locations":[{"start":{"line":154,"column":24},"end":{"line":154,"column":94}},{"start":{},"end":{}}],"line":154},"24":{"loc":{"start":{"line":154,"column":28},"end":{"line":154,"column":85}},"type":"binary-expr","locations":[{"start":{"line":154,"column":28},"end":{"line":154,"column":49}},{"start":{"line":154,"column":53},"end":{"line":154,"column":70}},{"start":{"line":154,"column":74},"end":{"line":154,"column":85}}],"line":154},"25":{"loc":{"start":{"line":164,"column":24},"end":{"line":164,"column":163}},"type":"if","locations":[{"start":{"line":164,"column":24},"end":{"line":164,"column":163}},{"start":{},"end":{}}],"line":164},"26":{"loc":{"start":{"line":166,"column":4},"end":{"line":166,"column":174}},"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":166,"column":174}},{"start":{},"end":{}}],"line":166},"27":{"loc":{"start":{"line":166,"column":8},"end":{"line":166,"column":68}},"type":"binary-expr","locations":[{"start":{"line":166,"column":8},"end":{"line":166,"column":42}},{"start":{"line":166,"column":46},"end":{"line":166,"column":68}}],"line":166},"28":{"loc":{"start":{"line":167,"column":4},"end":{"line":167,"column":33}},"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":167,"column":33}},{"start":{},"end":{}}],"line":167},"29":{"loc":{"start":{"line":169,"column":4},"end":{"line":172,"column":5}},"type":"if","locations":[{"start":{"line":169,"column":4},"end":{"line":172,"column":5}},{"start":{},"end":{}}],"line":169},"30":{"loc":{"start":{"line":176,"column":4},"end":{"line":176,"column":51}},"type":"if","locations":[{"start":{"line":176,"column":4},"end":{"line":176,"column":51}},{"start":{},"end":{}}],"line":176},"31":{"loc":{"start":{"line":176,"column":8},"end":{"line":176,"column":42}},"type":"binary-expr","locations":[{"start":{"line":176,"column":8},"end":{"line":176,"column":18}},{"start":{"line":176,"column":22},"end":{"line":176,"column":42}}],"line":176},"32":{"loc":{"start":{"line":177,"column":69},"end":{"line":177,"column":166}},"type":"cond-expr","locations":[{"start":{"line":177,"column":91},"end":{"line":177,"column":113}},{"start":{"line":177,"column":116},"end":{"line":177,"column":166}}],"line":177},"33":{"loc":{"start":{"line":181,"column":4},"end":{"line":181,"column":107}},"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":107}},{"start":{},"end":{}}],"line":181},"34":{"loc":{"start":{"line":181,"column":8},"end":{"line":181,"column":98}},"type":"binary-expr","locations":[{"start":{"line":181,"column":8},"end":{"line":181,"column":18}},{"start":{"line":181,"column":22},"end":{"line":181,"column":42}},{"start":{"line":181,"column":46},"end":{"line":181,"column":78}},{"start":{"line":181,"column":82},"end":{"line":181,"column":98}}],"line":181},"35":{"loc":{"start":{"line":183,"column":69},"end":{"line":183,"column":107}},"type":"if","locations":[{"start":{"line":183,"column":69},"end":{"line":183,"column":107}},{"start":{},"end":{}}],"line":183},"36":{"loc":{"start":{"line":192,"column":4},"end":{"line":192,"column":27}},"type":"if","locations":[{"start":{"line":192,"column":4},"end":{"line":192,"column":27}},{"start":{},"end":{}}],"line":192},"37":{"loc":{"start":{"line":198,"column":25},"end":{"line":198,"column":154}},"type":"cond-expr","locations":[{"start":{"line":198,"column":47},"end":{"line":198,"column":96}},{"start":{"line":198,"column":99},"end":{"line":198,"column":154}}],"line":198},"38":{"loc":{"start":{"line":199,"column":6},"end":{"line":199,"column":74}},"type":"if","locations":[{"start":{"line":199,"column":6},"end":{"line":199,"column":74}},{"start":{},"end":{}}],"line":199},"39":{"loc":{"start":{"line":200,"column":21},"end":{"line":200,"column":203}},"type":"cond-expr","locations":[{"start":{"line":200,"column":43},"end":{"line":200,"column":94}},{"start":{"line":200,"column":97},"end":{"line":200,"column":203}}],"line":200},"40":{"loc":{"start":{"line":201,"column":6},"end":{"line":201,"column":67}},"type":"if","locations":[{"start":{"line":201,"column":6},"end":{"line":201,"column":67}},{"start":{},"end":{}}],"line":201},"41":{"loc":{"start":{"line":203,"column":46},"end":{"line":203,"column":122}},"type":"if","locations":[{"start":{"line":203,"column":46},"end":{"line":203,"column":122}},{"start":{},"end":{}}],"line":203},"42":{"loc":{"start":{"line":205,"column":31},"end":{"line":205,"column":109}},"type":"cond-expr","locations":[{"start":{"line":205,"column":44},"end":{"line":205,"column":101}},{"start":{"line":205,"column":104},"end":{"line":205,"column":109}}],"line":205},"43":{"loc":{"start":{"line":210,"column":6},"end":{"line":216,"column":7}},"type":"if","locations":[{"start":{"line":210,"column":6},"end":{"line":216,"column":7}},{"start":{"line":213,"column":13},"end":{"line":216,"column":7}}],"line":210},"44":{"loc":{"start":{"line":218,"column":6},"end":{"line":218,"column":237}},"type":"if","locations":[{"start":{"line":218,"column":6},"end":{"line":218,"column":237}},{"start":{},"end":{}}],"line":218},"45":{"loc":{"start":{"line":218,"column":10},"end":{"line":218,"column":121}},"type":"binary-expr","locations":[{"start":{"line":218,"column":10},"end":{"line":218,"column":44}},{"start":{"line":218,"column":48},"end":{"line":218,"column":85}},{"start":{"line":218,"column":89},"end":{"line":218,"column":121}}],"line":218},"46":{"loc":{"start":{"line":218,"column":174},"end":{"line":218,"column":235}},"type":"binary-expr","locations":[{"start":{"line":218,"column":174},"end":{"line":218,"column":187}},{"start":{"line":218,"column":191},"end":{"line":218,"column":235}}],"line":218},"47":{"loc":{"start":{"line":226,"column":24},"end":{"line":226,"column":67}},"type":"if","locations":[{"start":{"line":226,"column":24},"end":{"line":226,"column":67}},{"start":{},"end":{}}],"line":226},"48":{"loc":{"start":{"line":226,"column":28},"end":{"line":226,"column":58}},"type":"binary-expr","locations":[{"start":{"line":226,"column":28},"end":{"line":226,"column":38}},{"start":{"line":226,"column":42},"end":{"line":226,"column":58}}],"line":226},"49":{"loc":{"start":{"line":227,"column":4},"end":{"line":227,"column":168}},"type":"if","locations":[{"start":{"line":227,"column":4},"end":{"line":227,"column":168}},{"start":{},"end":{}}],"line":227},"50":{"loc":{"start":{"line":236,"column":24},"end":{"line":236,"column":67}},"type":"if","locations":[{"start":{"line":236,"column":24},"end":{"line":236,"column":67}},{"start":{},"end":{}}],"line":236},"51":{"loc":{"start":{"line":236,"column":28},"end":{"line":236,"column":58}},"type":"binary-expr","locations":[{"start":{"line":236,"column":28},"end":{"line":236,"column":38}},{"start":{"line":236,"column":42},"end":{"line":236,"column":58}}],"line":236},"52":{"loc":{"start":{"line":243,"column":4},"end":{"line":243,"column":50}},"type":"if","locations":[{"start":{"line":243,"column":4},"end":{"line":243,"column":50}},{"start":{},"end":{}}],"line":243},"53":{"loc":{"start":{"line":243,"column":8},"end":{"line":243,"column":41}},"type":"binary-expr","locations":[{"start":{"line":243,"column":8},"end":{"line":243,"column":22}},{"start":{"line":243,"column":26},"end":{"line":243,"column":41}}],"line":243},"54":{"loc":{"start":{"line":248,"column":8},"end":{"line":254,"column":9}},"type":"if","locations":[{"start":{"line":248,"column":8},"end":{"line":254,"column":9}},{"start":{"line":250,"column":15},"end":{"line":254,"column":9}}],"line":248},"55":{"loc":{"start":{"line":252,"column":38},"end":{"line":252,"column":94}},"type":"if","locations":[{"start":{"line":252,"column":38},"end":{"line":252,"column":94}},{"start":{},"end":{}}],"line":252},"56":{"loc":{"start":{"line":260,"column":4},"end":{"line":260,"column":70}},"type":"if","locations":[{"start":{"line":260,"column":4},"end":{"line":260,"column":70}},{"start":{},"end":{}}],"line":260},"57":{"loc":{"start":{"line":260,"column":8},"end":{"line":260,"column":61}},"type":"binary-expr","locations":[{"start":{"line":260,"column":8},"end":{"line":260,"column":41}},{"start":{"line":260,"column":45},"end":{"line":260,"column":61}}],"line":260},"58":{"loc":{"start":{"line":261,"column":71},"end":{"line":261,"column":131}},"type":"cond-expr","locations":[{"start":{"line":261,"column":91},"end":{"line":261,"column":111}},{"start":{"line":261,"column":114},"end":{"line":261,"column":131}}],"line":261},"59":{"loc":{"start":{"line":265,"column":4},"end":{"line":265,"column":70}},"type":"if","locations":[{"start":{"line":265,"column":4},"end":{"line":265,"column":70}},{"start":{},"end":{}}],"line":265},"60":{"loc":{"start":{"line":265,"column":8},"end":{"line":265,"column":61}},"type":"binary-expr","locations":[{"start":{"line":265,"column":8},"end":{"line":265,"column":41}},{"start":{"line":265,"column":45},"end":{"line":265,"column":61}}],"line":265},"61":{"loc":{"start":{"line":271,"column":4},"end":{"line":271,"column":70}},"type":"if","locations":[{"start":{"line":271,"column":4},"end":{"line":271,"column":70}},{"start":{},"end":{}}],"line":271},"62":{"loc":{"start":{"line":271,"column":8},"end":{"line":271,"column":61}},"type":"binary-expr","locations":[{"start":{"line":271,"column":8},"end":{"line":271,"column":41}},{"start":{"line":271,"column":45},"end":{"line":271,"column":61}}],"line":271},"63":{"loc":{"start":{"line":272,"column":47},"end":{"line":272,"column":181}},"type":"if","locations":[{"start":{"line":272,"column":47},"end":{"line":272,"column":181}},{"start":{},"end":{}}],"line":272},"64":{"loc":{"start":{"line":273,"column":50},"end":{"line":273,"column":227}},"type":"if","locations":[{"start":{"line":273,"column":50},"end":{"line":273,"column":227}},{"start":{},"end":{}}],"line":273},"65":{"loc":{"start":{"line":273,"column":54},"end":{"line":273,"column":107}},"type":"binary-expr","locations":[{"start":{"line":273,"column":54},"end":{"line":273,"column":86}},{"start":{"line":273,"column":90},"end":{"line":273,"column":107}}],"line":273},"66":{"loc":{"start":{"line":274,"column":51},"end":{"line":274,"column":173}},"type":"cond-expr","locations":[{"start":{"line":274,"column":84},"end":{"line":274,"column":166}},{"start":{"line":274,"column":169},"end":{"line":274,"column":173}}],"line":274},"67":{"loc":{"start":{"line":275,"column":4},"end":{"line":275,"column":52}},"type":"if","locations":[{"start":{"line":275,"column":4},"end":{"line":275,"column":52}},{"start":{},"end":{}}],"line":275},"68":{"loc":{"start":{"line":280,"column":4},"end":{"line":280,"column":33}},"type":"if","locations":[{"start":{"line":280,"column":4},"end":{"line":280,"column":33}},{"start":{},"end":{}}],"line":280},"69":{"loc":{"start":{"line":285,"column":24},"end":{"line":285,"column":142}},"type":"if","locations":[{"start":{"line":285,"column":24},"end":{"line":285,"column":142}},{"start":{},"end":{}}],"line":285},"70":{"loc":{"start":{"line":285,"column":28},"end":{"line":285,"column":133}},"type":"binary-expr","locations":[{"start":{"line":285,"column":28},"end":{"line":285,"column":38}},{"start":{"line":285,"column":42},"end":{"line":285,"column":58}},{"start":{"line":285,"column":62},"end":{"line":285,"column":95}},{"start":{"line":285,"column":99},"end":{"line":285,"column":133}}],"line":285},"71":{"loc":{"start":{"line":289,"column":32},"end":{"line":289,"column":308}},"type":"binary-expr","locations":[{"start":{"line":289,"column":32},"end":{"line":289,"column":44}},{"start":{"line":289,"column":48},"end":{"line":289,"column":308}}],"line":289},"72":{"loc":{"start":{"line":289,"column":106},"end":{"line":289,"column":133}},"type":"binary-expr","locations":[{"start":{"line":289,"column":106},"end":{"line":289,"column":128}},{"start":{"line":289,"column":132},"end":{"line":289,"column":133}}],"line":289},"73":{"loc":{"start":{"line":289,"column":156},"end":{"line":289,"column":182}},"type":"binary-expr","locations":[{"start":{"line":289,"column":156},"end":{"line":289,"column":177}},{"start":{"line":289,"column":181},"end":{"line":289,"column":182}}],"line":289},"74":{"loc":{"start":{"line":289,"column":203},"end":{"line":289,"column":227}},"type":"binary-expr","locations":[{"start":{"line":289,"column":203},"end":{"line":289,"column":222}},{"start":{"line":289,"column":226},"end":{"line":289,"column":227}}],"line":289},"75":{"loc":{"start":{"line":289,"column":246},"end":{"line":289,"column":268}},"type":"binary-expr","locations":[{"start":{"line":289,"column":246},"end":{"line":289,"column":263}},{"start":{"line":289,"column":267},"end":{"line":289,"column":268}}],"line":289},"76":{"loc":{"start":{"line":290,"column":64},"end":{"line":290,"column":94}},"type":"binary-expr","locations":[{"start":{"line":290,"column":64},"end":{"line":290,"column":89}},{"start":{"line":290,"column":93},"end":{"line":290,"column":94}}],"line":290},"77":{"loc":{"start":{"line":292,"column":4},"end":{"line":296,"column":5}},"type":"if","locations":[{"start":{"line":292,"column":4},"end":{"line":296,"column":5}},{"start":{},"end":{}}],"line":292},"78":{"loc":{"start":{"line":306,"column":8},"end":{"line":319,"column":9}},"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":319,"column":9}},{"start":{"line":315,"column":15},"end":{"line":319,"column":9}}],"line":306},"79":{"loc":{"start":{"line":311,"column":20},"end":{"line":311,"column":215}},"type":"if","locations":[{"start":{"line":311,"column":20},"end":{"line":311,"column":215}},{"start":{},"end":{}}],"line":311},"80":{"loc":{"start":{"line":317,"column":12},"end":{"line":317,"column":193}},"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":193}},{"start":{},"end":{}}],"line":317},"81":{"loc":{"start":{"line":323,"column":21},"end":{"line":325,"column":93}},"type":"cond-expr","locations":[{"start":{"line":323,"column":55},"end":{"line":323,"column":230}},{"start":{"line":324,"column":22},"end":{"line":325,"column":93}}],"line":323},"82":{"loc":{"start":{"line":323,"column":55},"end":{"line":323,"column":230}},"type":"cond-expr","locations":[{"start":{"line":323,"column":91},"end":{"line":323,"column":127}},{"start":{"line":323,"column":130},"end":{"line":323,"column":230}}],"line":323},"83":{"loc":{"start":{"line":323,"column":130},"end":{"line":323,"column":230}},"type":"cond-expr","locations":[{"start":{"line":323,"column":148},"end":{"line":323,"column":189}},{"start":{"line":323,"column":192},"end":{"line":323,"column":230}}],"line":323},"84":{"loc":{"start":{"line":324,"column":22},"end":{"line":325,"column":93}},"type":"cond-expr","locations":[{"start":{"line":324,"column":53},"end":{"line":324,"column":93}},{"start":{"line":325,"column":22},"end":{"line":325,"column":93}}],"line":324},"85":{"loc":{"start":{"line":325,"column":22},"end":{"line":325,"column":93}},"type":"cond-expr","locations":[{"start":{"line":325,"column":35},"end":{"line":325,"column":63}},{"start":{"line":325,"column":66},"end":{"line":325,"column":93}}],"line":325},"86":{"loc":{"start":{"line":327,"column":36},"end":{"line":327,"column":175}},"type":"binary-expr","locations":[{"start":{"line":327,"column":36},"end":{"line":327,"column":58}},{"start":{"line":327,"column":62},"end":{"line":327,"column":83}},{"start":{"line":327,"column":87},"end":{"line":327,"column":121}},{"start":{"line":327,"column":125},"end":{"line":327,"column":155}},{"start":{"line":327,"column":159},"end":{"line":327,"column":175}}],"line":327},"87":{"loc":{"start":{"line":328,"column":35},"end":{"line":328,"column":153}},"type":"binary-expr","locations":[{"start":{"line":328,"column":35},"end":{"line":328,"column":57}},{"start":{"line":328,"column":61},"end":{"line":328,"column":93}},{"start":{"line":328,"column":97},"end":{"line":328,"column":119}},{"start":{"line":328,"column":123},"end":{"line":328,"column":133}},{"start":{"line":328,"column":137},"end":{"line":328,"column":153}}],"line":328},"88":{"loc":{"start":{"line":329,"column":29},"end":{"line":329,"column":132}},"type":"binary-expr","locations":[{"start":{"line":329,"column":29},"end":{"line":329,"column":51}},{"start":{"line":329,"column":55},"end":{"line":329,"column":76}},{"start":{"line":329,"column":80},"end":{"line":329,"column":97}},{"start":{"line":329,"column":101},"end":{"line":329,"column":117}},{"start":{"line":329,"column":121},"end":{"line":329,"column":132}}],"line":329},"89":{"loc":{"start":{"line":330,"column":36},"end":{"line":330,"column":194}},"type":"binary-expr","locations":[{"start":{"line":330,"column":36},"end":{"line":330,"column":46}},{"start":{"line":330,"column":50},"end":{"line":330,"column":80}},{"start":{"line":330,"column":84},"end":{"line":330,"column":118}},{"start":{"line":330,"column":122},"end":{"line":330,"column":155}},{"start":{"line":330,"column":159},"end":{"line":330,"column":175}},{"start":{"line":330,"column":179},"end":{"line":330,"column":194}}],"line":330},"90":{"loc":{"start":{"line":331,"column":40},"end":{"line":331,"column":89}},"type":"binary-expr","locations":[{"start":{"line":331,"column":40},"end":{"line":331,"column":50}},{"start":{"line":331,"column":54},"end":{"line":331,"column":70}},{"start":{"line":331,"column":74},"end":{"line":331,"column":89}}],"line":331},"91":{"loc":{"start":{"line":332,"column":39},"end":{"line":332,"column":88}},"type":"binary-expr","locations":[{"start":{"line":332,"column":39},"end":{"line":332,"column":49}},{"start":{"line":332,"column":53},"end":{"line":332,"column":69}},{"start":{"line":332,"column":73},"end":{"line":332,"column":88}}],"line":332},"92":{"loc":{"start":{"line":335,"column":52},"end":{"line":335,"column":97}},"type":"cond-expr","locations":[{"start":{"line":335,"column":72},"end":{"line":335,"column":85}},{"start":{"line":335,"column":88},"end":{"line":335,"column":97}}],"line":335},"93":{"loc":{"start":{"line":336,"column":38},"end":{"line":336,"column":82}},"type":"cond-expr","locations":[{"start":{"line":336,"column":62},"end":{"line":336,"column":71}},{"start":{"line":336,"column":74},"end":{"line":336,"column":82}}],"line":336},"94":{"loc":{"start":{"line":346,"column":11},"end":{"line":346,"column":1143}},"type":"binary-expr","locations":[{"start":{"line":346,"column":11},"end":{"line":346,"column":33}},{"start":{"line":346,"column":37},"end":{"line":346,"column":1143}}],"line":346},"95":{"loc":{"start":{"line":346,"column":657},"end":{"line":346,"column":1135}},"type":"binary-expr","locations":[{"start":{"line":346,"column":657},"end":{"line":346,"column":677}},{"start":{"line":346,"column":681},"end":{"line":346,"column":1135}}],"line":346},"96":{"loc":{"start":{"line":347,"column":11},"end":{"line":347,"column":690}},"type":"binary-expr","locations":[{"start":{"line":347,"column":11},"end":{"line":347,"column":39}},{"start":{"line":347,"column":43},"end":{"line":347,"column":690}}],"line":347},"97":{"loc":{"start":{"line":347,"column":514},"end":{"line":347,"column":564}},"type":"binary-expr","locations":[{"start":{"line":347,"column":514},"end":{"line":347,"column":535}},{"start":{"line":347,"column":539},"end":{"line":347,"column":564}}],"line":347},"98":{"loc":{"start":{"line":348,"column":11},"end":{"line":348,"column":605}},"type":"binary-expr","locations":[{"start":{"line":348,"column":11},"end":{"line":348,"column":41}},{"start":{"line":348,"column":45},"end":{"line":348,"column":605}}],"line":348},"99":{"loc":{"start":{"line":349,"column":33},"end":{"line":349,"column":64}},"type":"cond-expr","locations":[{"start":{"line":349,"column":57},"end":{"line":349,"column":59}},{"start":{"line":349,"column":62},"end":{"line":349,"column":64}}],"line":349}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0,0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0,0,0,0],"87":[0,0,0,0,0],"88":[0,0,0,0,0],"89":[0,0,0,0,0,0],"90":[0,0,0],"91":[0,0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\AddEntryModal\\AmountInputSection.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\AddEntryModal\\AmountInputSection.tsx","statementMap":{"0":{"start":{"line":29,"column":62},"end":{"line":167,"column":1}},"1":{"start":{"line":45,"column":22},"end":{"line":45,"column":32}},"2":{"start":{"line":46,"column":19},"end":{"line":46,"column":30}},"3":{"start":{"line":47,"column":26},"end":{"line":47,"column":43}},"4":{"start":{"line":49,"column":4},"end":{"line":56,"column":31}},"5":{"start":{"line":50,"column":8},"end":{"line":55,"column":9}},"6":{"start":{"line":51,"column":26},"end":{"line":53,"column":19}},"7":{"start":{"line":52,"column":16},"end":{"line":52,"column":47}},"8":{"start":{"line":54,"column":12},"end":{"line":54,"column":45}},"9":{"start":{"line":54,"column":25},"end":{"line":54,"column":44}},"10":{"start":{"line":59,"column":30},"end":{"line":62,"column":5}},"11":{"start":{"line":60,"column":28},"end":{"line":60,"column":84}},"12":{"start":{"line":61,"column":8},"end":{"line":61,"column":30}},"13":{"start":{"line":64,"column":4},"end":{"line":166,"column":6}},"14":{"start":{"line":80,"column":28},"end":{"line":83,"column":29}},"15":{"start":{"line":81,"column":32},"end":{"line":81,"column":76}},"16":{"start":{"line":82,"column":32},"end":{"line":82,"column":51}},"17":{"start":{"line":102,"column":36},"end":{"line":114,"column":55}},"18":{"start":{"line":106,"column":44},"end":{"line":109,"column":45}},"19":{"start":{"line":107,"column":48},"end":{"line":107,"column":75}},"20":{"start":{"line":108,"column":48},"end":{"line":108,"column":67}},"21":{"start":{"line":154,"column":41},"end":{"line":154,"column":60}},"22":{"start":{"line":154,"column":61},"end":{"line":154,"column":83}},"23":{"start":{"line":169,"column":18},"end":{"line":297,"column":3}},"24":{"start":{"line":169,"column":41},"end":{"line":297,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":29,"column":62},"end":{"line":29,"column":63}},"loc":{"start":{"line":44,"column":6},"end":{"line":167,"column":1}},"line":44},"1":{"name":"(anonymous_1)","decl":{"start":{"line":49,"column":14},"end":{"line":49,"column":15}},"loc":{"start":{"line":49,"column":20},"end":{"line":56,"column":5}},"line":49},"2":{"name":"(anonymous_2)","decl":{"start":{"line":51,"column":37},"end":{"line":51,"column":38}},"loc":{"start":{"line":51,"column":43},"end":{"line":53,"column":13}},"line":51},"3":{"name":"(anonymous_3)","decl":{"start":{"line":54,"column":19},"end":{"line":54,"column":20}},"loc":{"start":{"line":54,"column":25},"end":{"line":54,"column":44}},"line":54},"4":{"name":"(anonymous_4)","decl":{"start":{"line":59,"column":30},"end":{"line":59,"column":31}},"loc":{"start":{"line":59,"column":48},"end":{"line":62,"column":5}},"line":59},"5":{"name":"(anonymous_5)","decl":{"start":{"line":79,"column":33},"end":{"line":79,"column":34}},"loc":{"start":{"line":79,"column":44},"end":{"line":84,"column":25}},"line":79},"6":{"name":"(anonymous_6)","decl":{"start":{"line":101,"column":60},"end":{"line":101,"column":61}},"loc":{"start":{"line":102,"column":36},"end":{"line":114,"column":55}},"line":102},"7":{"name":"(anonymous_7)","decl":{"start":{"line":105,"column":49},"end":{"line":105,"column":50}},"loc":{"start":{"line":105,"column":55},"end":{"line":110,"column":41}},"line":105},"8":{"name":"(anonymous_8)","decl":{"start":{"line":154,"column":33},"end":{"line":154,"column":34}},"loc":{"start":{"line":154,"column":39},"end":{"line":154,"column":85}},"line":154},"9":{"name":"(anonymous_9)","decl":{"start":{"line":169,"column":29},"end":{"line":169,"column":30}},"loc":{"start":{"line":169,"column":41},"end":{"line":297,"column":1}},"line":169}},"branchMap":{"0":{"loc":{"start":{"line":50,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":55,"column":9}},{"start":{},"end":{}}],"line":50},"1":{"loc":{"start":{"line":50,"column":12},"end":{"line":50,"column":46}},"type":"binary-expr","locations":[{"start":{"line":50,"column":12},"end":{"line":50,"column":22}},{"start":{"line":50,"column":26},"end":{"line":50,"column":46}}],"line":50},"2":{"loc":{"start":{"line":69,"column":21},"end":{"line":73,"column":21}},"type":"binary-expr","locations":[{"start":{"line":69,"column":21},"end":{"line":69,"column":36}},{"start":{"line":70,"column":24},"end":{"line":72,"column":31}}],"line":69},"3":{"loc":{"start":{"line":75,"column":17},"end":{"line":93,"column":17}},"type":"binary-expr","locations":[{"start":{"line":75,"column":17},"end":{"line":75,"column":28}},{"start":{"line":76,"column":20},"end":{"line":92,"column":22}}],"line":75},"4":{"loc":{"start":{"line":78,"column":39},"end":{"line":78,"column":67}},"type":"cond-expr","locations":[{"start":{"line":78,"column":62},"end":{"line":78,"column":63}},{"start":{"line":78,"column":66},"end":{"line":78,"column":67}}],"line":78},"5":{"loc":{"start":{"line":80,"column":28},"end":{"line":83,"column":29}},"type":"if","locations":[{"start":{"line":80,"column":28},"end":{"line":83,"column":29}},{"start":{},"end":{}}],"line":80},"6":{"loc":{"start":{"line":81,"column":44},"end":{"line":81,"column":74}},"type":"cond-expr","locations":[{"start":{"line":81,"column":58},"end":{"line":81,"column":65}},{"start":{"line":81,"column":68},"end":{"line":81,"column":74}}],"line":81},"7":{"loc":{"start":{"line":89,"column":34},"end":{"line":89,"column":64}},"type":"cond-expr","locations":[{"start":{"line":89,"column":53},"end":{"line":89,"column":59}},{"start":{"line":89,"column":62},"end":{"line":89,"column":64}}],"line":89},"8":{"loc":{"start":{"line":95,"column":13},"end":{"line":137,"column":13}},"type":"binary-expr","locations":[{"start":{"line":95,"column":13},"end":{"line":95,"column":33}},{"start":{"line":96,"column":16},"end":{"line":136,"column":19}}],"line":95},"9":{"loc":{"start":{"line":97,"column":21},"end":{"line":118,"column":21}},"type":"binary-expr","locations":[{"start":{"line":97,"column":21},"end":{"line":97,"column":32}},{"start":{"line":97,"column":36},"end":{"line":97,"column":69}},{"start":{"line":98,"column":24},"end":{"line":117,"column":31}}],"line":97},"10":{"loc":{"start":{"line":104,"column":74},"end":{"line":104,"column":116}},"type":"binary-expr","locations":[{"start":{"line":104,"column":74},"end":{"line":104,"column":90}},{"start":{"line":104,"column":94},"end":{"line":104,"column":116}}],"line":104},"11":{"loc":{"start":{"line":106,"column":44},"end":{"line":109,"column":45}},"type":"if","locations":[{"start":{"line":106,"column":44},"end":{"line":109,"column":45}},{"start":{},"end":{}}],"line":106},"12":{"loc":{"start":{"line":121,"column":37},"end":{"line":121,"column":127}},"type":"cond-expr","locations":[{"start":{"line":121,"column":50},"end":{"line":121,"column":89}},{"start":{"line":121,"column":92},"end":{"line":121,"column":127}}],"line":121},"13":{"loc":{"start":{"line":127,"column":38},"end":{"line":127,"column":134}},"type":"cond-expr","locations":[{"start":{"line":127,"column":100},"end":{"line":127,"column":129}},{"start":{"line":127,"column":132},"end":{"line":127,"column":134}}],"line":127},"14":{"loc":{"start":{"line":127,"column":38},"end":{"line":127,"column":97}},"type":"binary-expr","locations":[{"start":{"line":127,"column":38},"end":{"line":127,"column":64}},{"start":{"line":127,"column":68},"end":{"line":127,"column":80}},{"start":{"line":127,"column":84},"end":{"line":127,"column":97}}],"line":127},"15":{"loc":{"start":{"line":138,"column":13},"end":{"line":164,"column":13}},"type":"binary-expr","locations":[{"start":{"line":138,"column":13},"end":{"line":138,"column":32}},{"start":{"line":138,"column":36},"end":{"line":138,"column":47}},{"start":{"line":139,"column":16},"end":{"line":163,"column":23}}],"line":138},"16":{"loc":{"start":{"line":155,"column":34},"end":{"line":155,"column":72}},"type":"binary-expr","locations":[{"start":{"line":155,"column":34},"end":{"line":155,"column":52}},{"start":{"line":155,"column":56},"end":{"line":155,"column":72}}],"line":155},"17":{"loc":{"start":{"line":158,"column":30},"end":{"line":160,"column":25}},"type":"cond-expr","locations":[{"start":{"line":158,"column":44},"end":{"line":158,"column":53}},{"start":{"line":159,"column":28},"end":{"line":159,"column":125}}],"line":158},"18":{"loc":{"start":{"line":161,"column":31},"end":{"line":161,"column":52}},"type":"cond-expr","locations":[{"start":{"line":161,"column":45},"end":{"line":161,"column":47}},{"start":{"line":161,"column":50},"end":{"line":161,"column":52}}],"line":161}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\AddEntryModal\\FoodSelectionList.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\AddEntryModal\\FoodSelectionList.tsx","statementMap":{"0":{"start":{"line":11,"column":36},"end":{"line":11,"column":39}},"1":{"start":{"line":34,"column":60},"end":{"line":309,"column":1}},"2":{"start":{"line":52,"column":22},"end":{"line":52,"column":32}},"3":{"start":{"line":53,"column":19},"end":{"line":53,"column":30}},"4":{"start":{"line":54,"column":24},"end":{"line":54,"column":63}},"5":{"start":{"line":56,"column":35},"end":{"line":72,"column":23}},"6":{"start":{"line":57,"column":37},"end":{"line":57,"column":64}},"7":{"start":{"line":58,"column":8},"end":{"line":58,"column":45}},"8":{"start":{"line":58,"column":35},"end":{"line":58,"column":45}},"9":{"start":{"line":61,"column":33},"end":{"line":63,"column":9}},"10":{"start":{"line":62,"column":12},"end":{"line":62,"column":66}},"11":{"start":{"line":64,"column":29},"end":{"line":64,"column":69}},"12":{"start":{"line":64,"column":63},"end":{"line":64,"column":67}},"13":{"start":{"line":67,"column":32},"end":{"line":67,"column":81}},"14":{"start":{"line":68,"column":36},"end":{"line":68,"column":88}},"15":{"start":{"line":68,"column":64},"end":{"line":68,"column":87}},"16":{"start":{"line":71,"column":8},"end":{"line":71,"column":61}},"17":{"start":{"line":74,"column":28},"end":{"line":107,"column":74}},"18":{"start":{"line":76,"column":8},"end":{"line":79,"column":9}},"19":{"start":{"line":77,"column":32},"end":{"line":77,"column":81}},"20":{"start":{"line":77,"column":55},"end":{"line":77,"column":80}},"21":{"start":{"line":78,"column":12},"end":{"line":78,"column":64}},"22":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"23":{"start":{"line":83,"column":12},"end":{"line":83,"column":42}},"24":{"start":{"line":87,"column":52},"end":{"line":87,"column":54}},"25":{"start":{"line":88,"column":29},"end":{"line":88,"column":46}},"26":{"start":{"line":90,"column":8},"end":{"line":95,"column":11}},"27":{"start":{"line":91,"column":12},"end":{"line":94,"column":13}},"28":{"start":{"line":92,"column":16},"end":{"line":92,"column":65}},"29":{"start":{"line":93,"column":16},"end":{"line":93,"column":40}},"30":{"start":{"line":97,"column":34},"end":{"line":100,"column":25}},"31":{"start":{"line":98,"column":28},"end":{"line":98,"column":54}},"32":{"start":{"line":99,"column":28},"end":{"line":99,"column":56}},"33":{"start":{"line":102,"column":8},"end":{"line":104,"column":11}},"34":{"start":{"line":103,"column":12},"end":{"line":103,"column":63}},"35":{"start":{"line":106,"column":8},"end":{"line":106,"column":32}},"36":{"start":{"line":109,"column":4},"end":{"line":118,"column":48}},"37":{"start":{"line":110,"column":8},"end":{"line":117,"column":9}},"38":{"start":{"line":111,"column":26},"end":{"line":111,"column":88}},"39":{"start":{"line":111,"column":60},"end":{"line":111,"column":87}},"40":{"start":{"line":112,"column":12},"end":{"line":116,"column":13}},"41":{"start":{"line":113,"column":16},"end":{"line":115,"column":24}},"42":{"start":{"line":114,"column":20},"end":{"line":114,"column":101}},"43":{"start":{"line":120,"column":43},"end":{"line":156,"column":6}},"44":{"start":{"line":121,"column":8},"end":{"line":124,"column":9}},"45":{"start":{"line":122,"column":12},"end":{"line":122,"column":31}},"46":{"start":{"line":123,"column":12},"end":{"line":123,"column":19}},"47":{"start":{"line":125,"column":8},"end":{"line":125,"column":27}},"48":{"start":{"line":126,"column":8},"end":{"line":146,"column":9}},"49":{"start":{"line":127,"column":12},"end":{"line":127,"column":35}},"50":{"start":{"line":128,"column":12},"end":{"line":128,"column":25}},"51":{"start":{"line":129,"column":12},"end":{"line":129,"column":29}},"52":{"start":{"line":130,"column":12},"end":{"line":130,"column":48}},"53":{"start":{"line":131,"column":15},"end":{"line":146,"column":9}},"54":{"start":{"line":132,"column":12},"end":{"line":132,"column":35}},"55":{"start":{"line":133,"column":12},"end":{"line":133,"column":25}},"56":{"start":{"line":134,"column":15},"end":{"line":146,"column":9}},"57":{"start":{"line":135,"column":12},"end":{"line":135,"column":35}},"58":{"start":{"line":136,"column":12},"end":{"line":136,"column":29}},"59":{"start":{"line":137,"column":12},"end":{"line":137,"column":48}},"60":{"start":{"line":138,"column":12},"end":{"line":145,"column":13}},"61":{"start":{"line":139,"column":36},"end":{"line":139,"column":64}},"62":{"start":{"line":140,"column":16},"end":{"line":144,"column":17}},"63":{"start":{"line":141,"column":20},"end":{"line":141,"column":50}},"64":{"start":{"line":143,"column":20},"end":{"line":143,"column":66}},"65":{"start":{"line":158,"column":31},"end":{"line":163,"column":5}},"66":{"start":{"line":159,"column":8},"end":{"line":159,"column":27}},"67":{"start":{"line":160,"column":8},"end":{"line":162,"column":9}},"68":{"start":{"line":161,"column":12},"end":{"line":161,"column":49}},"69":{"start":{"line":165,"column":27},"end":{"line":232,"column":5}},"70":{"start":{"line":166,"column":25},"end":{"line":166,"column":29}},"71":{"start":{"line":167,"column":41},"end":{"line":167,"column":73}},"72":{"start":{"line":168,"column":32},"end":{"line":168,"column":70}},"73":{"start":{"line":169,"column":31},"end":{"line":169,"column":60}},"74":{"start":{"line":170,"column":37},"end":{"line":170,"column":100}},"75":{"start":{"line":172,"column":32},"end":{"line":172,"column":122}},"76":{"start":{"line":173,"column":42},"end":{"line":173,"column":113}},"77":{"start":{"line":175,"column":8},"end":{"line":231,"column":10}},"78":{"start":{"line":178,"column":20},"end":{"line":178,"column":49}},"79":{"start":{"line":178,"column":42},"end":{"line":178,"column":49}},"80":{"start":{"line":179,"column":20},"end":{"line":183,"column":21}},"81":{"start":{"line":180,"column":24},"end":{"line":180,"column":90}},"82":{"start":{"line":182,"column":24},"end":{"line":182,"column":65}},"83":{"start":{"line":200,"column":32},"end":{"line":200,"column":61}},"84":{"start":{"line":200,"column":54},"end":{"line":200,"column":61}},"85":{"start":{"line":201,"column":32},"end":{"line":201,"column":98}},"86":{"start":{"line":234,"column":35},"end":{"line":272,"column":5}},"87":{"start":{"line":235,"column":8},"end":{"line":252,"column":9}},"88":{"start":{"line":236,"column":12},"end":{"line":251,"column":14}},"89":{"start":{"line":253,"column":8},"end":{"line":270,"column":9}},"90":{"start":{"line":254,"column":13},"end":{"line":269,"column":15}},"91":{"start":{"line":271,"column":8},"end":{"line":271,"column":20}},"92":{"start":{"line":274,"column":4},"end":{"line":308,"column":6}},"93":{"start":{"line":284,"column":34},"end":{"line":284,"column":51}},"94":{"start":{"line":284,"column":52},"end":{"line":284,"column":71}},"95":{"start":{"line":286,"column":31},"end":{"line":286,"column":47}},"96":{"start":{"line":293,"column":40},"end":{"line":293,"column":61}},"97":{"start":{"line":304,"column":20},"end":{"line":304,"column":61}},"98":{"start":{"line":311,"column":18},"end":{"line":427,"column":3}},"99":{"start":{"line":311,"column":41},"end":{"line":427,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":34,"column":60},"end":{"line":34,"column":61}},"loc":{"start":{"line":51,"column":6},"end":{"line":309,"column":1}},"line":51},"1":{"name":"(anonymous_1)","decl":{"start":{"line":56,"column":43},"end":{"line":56,"column":44}},"loc":{"start":{"line":56,"column":49},"end":{"line":72,"column":5}},"line":56},"2":{"name":"(anonymous_2)","decl":{"start":{"line":61,"column":46},"end":{"line":61,"column":47}},"loc":{"start":{"line":62,"column":12},"end":{"line":62,"column":66}},"line":62},"3":{"name":"(anonymous_3)","decl":{"start":{"line":64,"column":58},"end":{"line":64,"column":59}},"loc":{"start":{"line":64,"column":63},"end":{"line":64,"column":67}},"line":64},"4":{"name":"(anonymous_4)","decl":{"start":{"line":68,"column":59},"end":{"line":68,"column":60}},"loc":{"start":{"line":68,"column":64},"end":{"line":68,"column":87}},"line":68},"5":{"name":"(anonymous_5)","decl":{"start":{"line":74,"column":36},"end":{"line":74,"column":37}},"loc":{"start":{"line":74,"column":61},"end":{"line":107,"column":5}},"line":74},"6":{"name":"(anonymous_6)","decl":{"start":{"line":77,"column":49},"end":{"line":77,"column":50}},"loc":{"start":{"line":77,"column":55},"end":{"line":77,"column":80}},"line":77},"7":{"name":"(anonymous_7)","decl":{"start":{"line":90,"column":28},"end":{"line":90,"column":29}},"loc":{"start":{"line":90,"column":34},"end":{"line":95,"column":9}},"line":90},"8":{"name":"(anonymous_8)","decl":{"start":{"line":98,"column":20},"end":{"line":98,"column":21}},"loc":{"start":{"line":98,"column":28},"end":{"line":98,"column":54}},"line":98},"9":{"name":"(anonymous_9)","decl":{"start":{"line":99,"column":18},"end":{"line":99,"column":19}},"loc":{"start":{"line":99,"column":28},"end":{"line":99,"column":56}},"line":99},"10":{"name":"(anonymous_10)","decl":{"start":{"line":102,"column":34},"end":{"line":102,"column":35}},"loc":{"start":{"line":102,"column":41},"end":{"line":104,"column":9}},"line":102},"11":{"name":"(anonymous_11)","decl":{"start":{"line":109,"column":14},"end":{"line":109,"column":15}},"loc":{"start":{"line":109,"column":20},"end":{"line":118,"column":5}},"line":109},"12":{"name":"(anonymous_12)","decl":{"start":{"line":111,"column":52},"end":{"line":111,"column":53}},"loc":{"start":{"line":111,"column":60},"end":{"line":111,"column":87}},"line":111},"13":{"name":"(anonymous_13)","decl":{"start":{"line":113,"column":27},"end":{"line":113,"column":28}},"loc":{"start":{"line":113,"column":33},"end":{"line":115,"column":17}},"line":113},"14":{"name":"(anonymous_14)","decl":{"start":{"line":120,"column":55},"end":{"line":120,"column":56}},"loc":{"start":{"line":120,"column":78},"end":{"line":147,"column":5}},"line":120},"15":{"name":"(anonymous_15)","decl":{"start":{"line":158,"column":31},"end":{"line":158,"column":32}},"loc":{"start":{"line":158,"column":49},"end":{"line":163,"column":5}},"line":158},"16":{"name":"(anonymous_16)","decl":{"start":{"line":165,"column":27},"end":{"line":165,"column":28}},"loc":{"start":{"line":165,"column":68},"end":{"line":232,"column":5}},"line":165},"17":{"name":"(anonymous_17)","decl":{"start":{"line":177,"column":25},"end":{"line":177,"column":26}},"loc":{"start":{"line":177,"column":31},"end":{"line":184,"column":17}},"line":177},"18":{"name":"(anonymous_18)","decl":{"start":{"line":199,"column":37},"end":{"line":199,"column":38}},"loc":{"start":{"line":199,"column":43},"end":{"line":202,"column":29}},"line":199},"19":{"name":"(anonymous_19)","decl":{"start":{"line":234,"column":35},"end":{"line":234,"column":36}},"loc":{"start":{"line":234,"column":41},"end":{"line":272,"column":5}},"line":234},"20":{"name":"(anonymous_20)","decl":{"start":{"line":284,"column":26},"end":{"line":284,"column":27}},"loc":{"start":{"line":284,"column":32},"end":{"line":284,"column":72}},"line":284},"21":{"name":"(anonymous_21)","decl":{"start":{"line":286,"column":25},"end":{"line":286,"column":26}},"loc":{"start":{"line":286,"column":31},"end":{"line":286,"column":47}},"line":286},"22":{"name":"(anonymous_22)","decl":{"start":{"line":293,"column":30},"end":{"line":293,"column":31}},"loc":{"start":{"line":293,"column":40},"end":{"line":293,"column":61}},"line":293},"23":{"name":"(anonymous_23)","decl":{"start":{"line":303,"column":31},"end":{"line":303,"column":32}},"loc":{"start":{"line":304,"column":20},"end":{"line":304,"column":61}},"line":304},"24":{"name":"(anonymous_24)","decl":{"start":{"line":311,"column":29},"end":{"line":311,"column":30}},"loc":{"start":{"line":311,"column":41},"end":{"line":427,"column":1}},"line":311}},"branchMap":{"0":{"loc":{"start":{"line":58,"column":8},"end":{"line":58,"column":45}},"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":45}},{"start":{},"end":{}}],"line":58},"1":{"loc":{"start":{"line":76,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":76,"column":8},"end":{"line":79,"column":9}},{"start":{},"end":{}}],"line":76},"2":{"loc":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},{"start":{},"end":{}}],"line":82},"3":{"loc":{"start":{"line":91,"column":12},"end":{"line":94,"column":13}},"type":"if","locations":[{"start":{"line":91,"column":12},"end":{"line":94,"column":13}},{"start":{},"end":{}}],"line":91},"4":{"loc":{"start":{"line":110,"column":8},"end":{"line":117,"column":9}},"type":"if","locations":[{"start":{"line":110,"column":8},"end":{"line":117,"column":9}},{"start":{},"end":{}}],"line":110},"5":{"loc":{"start":{"line":110,"column":12},"end":{"line":110,"column":88}},"type":"binary-expr","locations":[{"start":{"line":110,"column":12},"end":{"line":110,"column":24}},{"start":{"line":110,"column":28},"end":{"line":110,"column":47}},{"start":{"line":110,"column":51},"end":{"line":110,"column":77}},{"start":{"line":110,"column":81},"end":{"line":110,"column":88}}],"line":110},"6":{"loc":{"start":{"line":112,"column":12},"end":{"line":116,"column":13}},"type":"if","locations":[{"start":{"line":112,"column":12},"end":{"line":116,"column":13}},{"start":{},"end":{}}],"line":112},"7":{"loc":{"start":{"line":121,"column":8},"end":{"line":124,"column":9}},"type":"if","locations":[{"start":{"line":121,"column":8},"end":{"line":124,"column":9}},{"start":{},"end":{}}],"line":121},"8":{"loc":{"start":{"line":121,"column":12},"end":{"line":121,"column":109}},"type":"binary-expr","locations":[{"start":{"line":121,"column":12},"end":{"line":121,"column":42}},{"start":{"line":121,"column":46},"end":{"line":121,"column":59}},{"start":{"line":121,"column":64},"end":{"line":121,"column":77}},{"start":{"line":121,"column":81},"end":{"line":121,"column":108}}],"line":121},"9":{"loc":{"start":{"line":126,"column":8},"end":{"line":146,"column":9}},"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":146,"column":9}},{"start":{"line":131,"column":15},"end":{"line":146,"column":9}}],"line":126},"10":{"loc":{"start":{"line":126,"column":12},"end":{"line":126,"column":63}},"type":"binary-expr","locations":[{"start":{"line":126,"column":12},"end":{"line":126,"column":24}},{"start":{"line":126,"column":28},"end":{"line":126,"column":32}},{"start":{"line":126,"column":36},"end":{"line":126,"column":63}}],"line":126},"11":{"loc":{"start":{"line":131,"column":15},"end":{"line":146,"column":9}},"type":"if","locations":[{"start":{"line":131,"column":15},"end":{"line":146,"column":9}},{"start":{"line":134,"column":15},"end":{"line":146,"column":9}}],"line":131},"12":{"loc":{"start":{"line":134,"column":15},"end":{"line":146,"column":9}},"type":"if","locations":[{"start":{"line":134,"column":15},"end":{"line":146,"column":9}},{"start":{},"end":{}}],"line":134},"13":{"loc":{"start":{"line":138,"column":12},"end":{"line":145,"column":13}},"type":"if","locations":[{"start":{"line":138,"column":12},"end":{"line":145,"column":13}},{"start":{},"end":{}}],"line":138},"14":{"loc":{"start":{"line":140,"column":16},"end":{"line":144,"column":17}},"type":"if","locations":[{"start":{"line":140,"column":16},"end":{"line":144,"column":17}},{"start":{"line":142,"column":23},"end":{"line":144,"column":17}}],"line":140},"15":{"loc":{"start":{"line":160,"column":8},"end":{"line":162,"column":9}},"type":"if","locations":[{"start":{"line":160,"column":8},"end":{"line":162,"column":9}},{"start":{},"end":{}}],"line":160},"16":{"loc":{"start":{"line":160,"column":12},"end":{"line":160,"column":46}},"type":"binary-expr","locations":[{"start":{"line":160,"column":12},"end":{"line":160,"column":24}},{"start":{"line":160,"column":28},"end":{"line":160,"column":46}}],"line":160},"17":{"loc":{"start":{"line":170,"column":37},"end":{"line":170,"column":100}},"type":"binary-expr","locations":[{"start":{"line":170,"column":37},"end":{"line":170,"column":69}},{"start":{"line":170,"column":73},"end":{"line":170,"column":100}}],"line":170},"18":{"loc":{"start":{"line":172,"column":32},"end":{"line":172,"column":122}},"type":"binary-expr","locations":[{"start":{"line":172,"column":32},"end":{"line":172,"column":54}},{"start":{"line":172,"column":58},"end":{"line":172,"column":69}},{"start":{"line":172,"column":74},"end":{"line":172,"column":104}},{"start":{"line":172,"column":108},"end":{"line":172,"column":121}}],"line":172},"19":{"loc":{"start":{"line":173,"column":42},"end":{"line":173,"column":113}},"type":"binary-expr","locations":[{"start":{"line":173,"column":42},"end":{"line":173,"column":66}},{"start":{"line":173,"column":70},"end":{"line":173,"column":102}},{"start":{"line":173,"column":106},"end":{"line":173,"column":113}}],"line":173},"20":{"loc":{"start":{"line":178,"column":20},"end":{"line":178,"column":49}},"type":"if","locations":[{"start":{"line":178,"column":20},"end":{"line":178,"column":49}},{"start":{},"end":{}}],"line":178},"21":{"loc":{"start":{"line":179,"column":20},"end":{"line":183,"column":21}},"type":"if","locations":[{"start":{"line":179,"column":20},"end":{"line":183,"column":21}},{"start":{"line":181,"column":27},"end":{"line":183,"column":21}}],"line":179},"22":{"loc":{"start":{"line":186,"column":24},"end":{"line":186,"column":66}},"type":"binary-expr","locations":[{"start":{"line":186,"column":24},"end":{"line":186,"column":40}},{"start":{"line":186,"column":44},"end":{"line":186,"column":66}}],"line":186},"23":{"loc":{"start":{"line":192,"column":24},"end":{"line":192,"column":97}},"type":"binary-expr","locations":[{"start":{"line":192,"column":25},"end":{"line":192,"column":50}},{"start":{"line":192,"column":54},"end":{"line":192,"column":69}},{"start":{"line":192,"column":74},"end":{"line":192,"column":97}}],"line":192},"24":{"loc":{"start":{"line":193,"column":24},"end":{"line":193,"column":77}},"type":"binary-expr","locations":[{"start":{"line":193,"column":24},"end":{"line":193,"column":39}},{"start":{"line":193,"column":43},"end":{"line":193,"column":77}}],"line":193},"25":{"loc":{"start":{"line":196,"column":21},"end":{"line":207,"column":21}},"type":"binary-expr","locations":[{"start":{"line":196,"column":21},"end":{"line":196,"column":36}},{"start":{"line":197,"column":24},"end":{"line":206,"column":26}}],"line":196},"26":{"loc":{"start":{"line":200,"column":32},"end":{"line":200,"column":61}},"type":"if","locations":[{"start":{"line":200,"column":32},"end":{"line":200,"column":61}},{"start":{},"end":{}}],"line":200},"27":{"loc":{"start":{"line":208,"column":21},"end":{"line":214,"column":21}},"type":"cond-expr","locations":[{"start":{"line":209,"column":24},"end":{"line":209,"column":82}},{"start":{"line":211,"column":24},"end":{"line":213,"column":31}}],"line":208},"28":{"loc":{"start":{"line":219,"column":25},"end":{"line":223,"column":25}},"type":"binary-expr","locations":[{"start":{"line":219,"column":25},"end":{"line":219,"column":40}},{"start":{"line":220,"column":28},"end":{"line":222,"column":48}}],"line":219},"29":{"loc":{"start":{"line":224,"column":25},"end":{"line":226,"column":25}},"type":"binary-expr","locations":[{"start":{"line":224,"column":25},"end":{"line":224,"column":42}},{"start":{"line":224,"column":46},"end":{"line":224,"column":53}},{"start":{"line":224,"column":58},"end":{"line":224,"column":71}},{"start":{"line":224,"column":75},"end":{"line":224,"column":106}},{"start":{"line":225,"column":29},"end":{"line":225,"column":96}}],"line":224},"30":{"loc":{"start":{"line":228,"column":21},"end":{"line":228,"column":138}},"type":"binary-expr","locations":[{"start":{"line":228,"column":21},"end":{"line":228,"column":46}},{"start":{"line":228,"column":51},"end":{"line":228,"column":137}}],"line":228},"31":{"loc":{"start":{"line":235,"column":8},"end":{"line":252,"column":9}},"type":"if","locations":[{"start":{"line":235,"column":8},"end":{"line":252,"column":9}},{"start":{},"end":{}}],"line":235},"32":{"loc":{"start":{"line":235,"column":12},"end":{"line":235,"column":57}},"type":"binary-expr","locations":[{"start":{"line":235,"column":12},"end":{"line":235,"column":18}},{"start":{"line":235,"column":22},"end":{"line":235,"column":57}}],"line":235},"33":{"loc":{"start":{"line":253,"column":8},"end":{"line":270,"column":9}},"type":"if","locations":[{"start":{"line":253,"column":8},"end":{"line":270,"column":9}},{"start":{},"end":{}}],"line":253},"34":{"loc":{"start":{"line":253,"column":12},"end":{"line":253,"column":69}},"type":"binary-expr","locations":[{"start":{"line":253,"column":12},"end":{"line":253,"column":19}},{"start":{"line":253,"column":23},"end":{"line":253,"column":41}},{"start":{"line":253,"column":45},"end":{"line":253,"column":69}}],"line":253},"35":{"loc":{"start":{"line":280,"column":26},"end":{"line":280,"column":67}},"type":"cond-expr","locations":[{"start":{"line":280,"column":50},"end":{"line":280,"column":55}},{"start":{"line":280,"column":58},"end":{"line":280,"column":67}}],"line":280},"36":{"loc":{"start":{"line":287,"column":26},"end":{"line":287,"column":68}},"type":"binary-expr","locations":[{"start":{"line":287,"column":26},"end":{"line":287,"column":42}},{"start":{"line":287,"column":46},"end":{"line":287,"column":68}}],"line":287},"37":{"loc":{"start":{"line":321,"column":25},"end":{"line":321,"column":68}},"type":"binary-expr","locations":[{"start":{"line":321,"column":25},"end":{"line":321,"column":46}},{"start":{"line":321,"column":50},"end":{"line":321,"column":68}}],"line":321},"38":{"loc":{"start":{"line":327,"column":19},"end":{"line":327,"column":55}},"type":"cond-expr","locations":[{"start":{"line":327,"column":39},"end":{"line":327,"column":46}},{"start":{"line":327,"column":49},"end":{"line":327,"column":55}}],"line":327}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0,0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\AddEntryModal\\ModalHeader.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\AddEntryModal\\ModalHeader.tsx","statementMap":{"0":{"start":{"line":36,"column":48},"end":{"line":111,"column":1}},"1":{"start":{"line":43,"column":22},"end":{"line":43,"column":32}},"2":{"start":{"line":44,"column":19},"end":{"line":44,"column":30}},"3":{"start":{"line":46,"column":24},"end":{"line":49,"column":5}},"4":{"start":{"line":47,"column":8},"end":{"line":47,"column":27}},"5":{"start":{"line":48,"column":8},"end":{"line":48,"column":24}},"6":{"start":{"line":51,"column":32},"end":{"line":51,"column":133}},"7":{"start":{"line":53,"column":4},"end":{"line":110,"column":6}},"8":{"start":{"line":58,"column":37},"end":{"line":58,"column":66}},"9":{"start":{"line":58,"column":59},"end":{"line":58,"column":66}},"10":{"start":{"line":58,"column":67},"end":{"line":58,"column":86}},"11":{"start":{"line":58,"column":87},"end":{"line":58,"column":108}},"12":{"start":{"line":113,"column":18},"end":{"line":125,"column":3}},"13":{"start":{"line":113,"column":41},"end":{"line":125,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":36,"column":48},"end":{"line":36,"column":49}},"loc":{"start":{"line":42,"column":6},"end":{"line":111,"column":1}},"line":42},"1":{"name":"(anonymous_1)","decl":{"start":{"line":46,"column":24},"end":{"line":46,"column":25}},"loc":{"start":{"line":46,"column":30},"end":{"line":49,"column":5}},"line":46},"2":{"name":"(anonymous_2)","decl":{"start":{"line":58,"column":29},"end":{"line":58,"column":30}},"loc":{"start":{"line":58,"column":35},"end":{"line":58,"column":110}},"line":58},"3":{"name":"(anonymous_3)","decl":{"start":{"line":113,"column":29},"end":{"line":113,"column":30}},"loc":{"start":{"line":113,"column":41},"end":{"line":125,"column":1}},"line":113}},"branchMap":{"0":{"loc":{"start":{"line":51,"column":32},"end":{"line":51,"column":133}},"type":"binary-expr","locations":[{"start":{"line":51,"column":33},"end":{"line":51,"column":63}},{"start":{"line":51,"column":67},"end":{"line":51,"column":95}},{"start":{"line":51,"column":100},"end":{"line":51,"column":133}}],"line":51},"1":{"loc":{"start":{"line":55,"column":13},"end":{"line":67,"column":13}},"type":"cond-expr","locations":[{"start":{"line":56,"column":16},"end":{"line":62,"column":18}},{"start":{"line":64,"column":16},"end":{"line":66,"column":35}}],"line":55},"2":{"loc":{"start":{"line":58,"column":37},"end":{"line":58,"column":66}},"type":"if","locations":[{"start":{"line":58,"column":37},"end":{"line":58,"column":66}},{"start":{},"end":{}}],"line":58},"3":{"loc":{"start":{"line":59,"column":82},"end":{"line":59,"column":142}},"type":"cond-expr","locations":[{"start":{"line":59,"column":101},"end":{"line":59,"column":119}},{"start":{"line":59,"column":122},"end":{"line":59,"column":142}}],"line":59},"4":{"loc":{"start":{"line":65,"column":72},"end":{"line":65,"column":129}},"type":"cond-expr","locations":[{"start":{"line":65,"column":91},"end":{"line":65,"column":109}},{"start":{"line":65,"column":112},"end":{"line":65,"column":129}}],"line":65},"5":{"loc":{"start":{"line":69,"column":52},"end":{"line":69,"column":112}},"type":"binary-expr","locations":[{"start":{"line":69,"column":52},"end":{"line":69,"column":62}},{"start":{"line":69,"column":66},"end":{"line":69,"column":88}},{"start":{"line":69,"column":92},"end":{"line":69,"column":112}}],"line":69},"6":{"loc":{"start":{"line":74,"column":17},"end":{"line":102,"column":17}},"type":"binary-expr","locations":[{"start":{"line":74,"column":17},"end":{"line":74,"column":39}},{"start":{"line":75,"column":20},"end":{"line":101,"column":23}}],"line":74},"7":{"loc":{"start":{"line":76,"column":25},"end":{"line":93,"column":25}},"type":"binary-expr","locations":[{"start":{"line":76,"column":25},"end":{"line":76,"column":36}},{"start":{"line":76,"column":40},"end":{"line":76,"column":53}},{"start":{"line":77,"column":28},"end":{"line":92,"column":35}}],"line":76},"8":{"loc":{"start":{"line":79,"column":37},"end":{"line":83,"column":37}},"type":"cond-expr","locations":[{"start":{"line":80,"column":40},"end":{"line":80,"column":103}},{"start":{"line":82,"column":40},"end":{"line":82,"column":196}}],"line":79},"9":{"loc":{"start":{"line":79,"column":37},"end":{"line":79,"column":75}},"type":"binary-expr","locations":[{"start":{"line":79,"column":37},"end":{"line":79,"column":52}},{"start":{"line":79,"column":56},"end":{"line":79,"column":75}}],"line":79},"10":{"loc":{"start":{"line":82,"column":120},"end":{"line":82,"column":192}},"type":"cond-expr","locations":[{"start":{"line":82,"column":151},"end":{"line":82,"column":169}},{"start":{"line":82,"column":172},"end":{"line":82,"column":192}}],"line":82},"11":{"loc":{"start":{"line":86,"column":37},"end":{"line":90,"column":37}},"type":"cond-expr","locations":[{"start":{"line":87,"column":40},"end":{"line":87,"column":103}},{"start":{"line":89,"column":40},"end":{"line":89,"column":186}}],"line":86},"12":{"loc":{"start":{"line":86,"column":37},"end":{"line":86,"column":76}},"type":"binary-expr","locations":[{"start":{"line":86,"column":37},"end":{"line":86,"column":52}},{"start":{"line":86,"column":56},"end":{"line":86,"column":76}}],"line":86},"13":{"loc":{"start":{"line":89,"column":109},"end":{"line":89,"column":182}},"type":"cond-expr","locations":[{"start":{"line":89,"column":141},"end":{"line":89,"column":159}},{"start":{"line":89,"column":162},"end":{"line":89,"column":182}}],"line":89},"14":{"loc":{"start":{"line":94,"column":25},"end":{"line":100,"column":25}},"type":"cond-expr","locations":[{"start":{"line":95,"column":28},"end":{"line":95,"column":279}},{"start":{"line":96,"column":28},"end":{"line":100,"column":25}}],"line":94},"15":{"loc":{"start":{"line":95,"column":246},"end":{"line":95,"column":275}},"type":"binary-expr","locations":[{"start":{"line":95,"column":246},"end":{"line":95,"column":257}},{"start":{"line":95,"column":261},"end":{"line":95,"column":275}}],"line":95},"16":{"loc":{"start":{"line":96,"column":28},"end":{"line":100,"column":25}},"type":"cond-expr","locations":[{"start":{"line":97,"column":28},"end":{"line":97,"column":235}},{"start":{"line":99,"column":28},"end":{"line":99,"column":307}}],"line":96},"17":{"loc":{"start":{"line":103,"column":17},"end":{"line":105,"column":17}},"type":"binary-expr","locations":[{"start":{"line":103,"column":17},"end":{"line":103,"column":47}},{"start":{"line":103,"column":51},"end":{"line":103,"column":84}},{"start":{"line":104,"column":20},"end":{"line":104,"column":370}}],"line":103},"18":{"loc":{"start":{"line":104,"column":35},"end":{"line":104,"column":164}},"type":"cond-expr","locations":[{"start":{"line":104,"column":53},"end":{"line":104,"column":85}},{"start":{"line":104,"column":88},"end":{"line":104,"column":164}}],"line":104},"19":{"loc":{"start":{"line":106,"column":17},"end":{"line":106,"column":94}},"type":"binary-expr","locations":[{"start":{"line":106,"column":17},"end":{"line":106,"column":45}},{"start":{"line":106,"column":49},"end":{"line":106,"column":94}}],"line":106},"20":{"loc":{"start":{"line":107,"column":17},"end":{"line":107,"column":133}},"type":"binary-expr","locations":[{"start":{"line":107,"column":17},"end":{"line":107,"column":47}},{"start":{"line":107,"column":51},"end":{"line":107,"column":84}},{"start":{"line":107,"column":88},"end":{"line":107,"column":133}}],"line":107}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"f":{"0":0,"1":0,"2":0,"3":0},"b":{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\Entry\\QuickAddItem.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\components\\Entry\\QuickAddItem.tsx","statementMap":{"0":{"start":{"line":53,"column":50},"end":{"line":308,"column":1}},"1":{"start":{"line":72,"column":20},"end":{"line":72,"column":30}},"2":{"start":{"line":73,"column":17},"end":{"line":73,"column":28}},"3":{"start":{"line":74,"column":52},"end":{"line":74,"column":67}},"4":{"start":{"line":76,"column":28},"end":{"line":78,"column":3}},"5":{"start":{"line":80,"column":35},"end":{"line":98,"column":3}},"6":{"start":{"line":81,"column":11},"end":{"line":89,"column":5}},"7":{"start":{"line":100,"column":46},"end":{"line":103,"column":3}},"8":{"start":{"line":101,"column":10},"end":{"line":101,"column":52}},"9":{"start":{"line":105,"column":22},"end":{"line":107,"column":28}},"10":{"start":{"line":106,"column":4},"end":{"line":106,"column":87}},"11":{"start":{"line":106,"column":30},"end":{"line":106,"column":85}},"12":{"start":{"line":109,"column":35},"end":{"line":112,"column":3}},"13":{"start":{"line":110,"column":4},"end":{"line":110,"column":67}},"14":{"start":{"line":110,"column":60},"end":{"line":110,"column":67}},"15":{"start":{"line":111,"column":4},"end":{"line":111,"column":54}},"16":{"start":{"line":114,"column":25},"end":{"line":130,"column":3}},"17":{"start":{"line":116,"column":27},"end":{"line":116,"column":74}},"18":{"start":{"line":117,"column":4},"end":{"line":119,"column":5}},"19":{"start":{"line":118,"column":6},"end":{"line":118,"column":72}},"20":{"start":{"line":120,"column":4},"end":{"line":129,"column":6}},"21":{"start":{"line":133,"column":4},"end":{"line":133,"column":57}},"22":{"start":{"line":135,"column":2},"end":{"line":307,"column":4}},"23":{"start":{"line":137,"column":21},"end":{"line":137,"column":62}},"24":{"start":{"line":230,"column":29},"end":{"line":230,"column":48}},"25":{"start":{"line":289,"column":31},"end":{"line":289,"column":48}},"26":{"start":{"line":310,"column":18},"end":{"line":461,"column":3}},"27":{"start":{"line":310,"column":41},"end":{"line":461,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":53,"column":50},"end":{"line":53,"column":51}},"loc":{"start":{"line":71,"column":6},"end":{"line":308,"column":1}},"line":71},"1":{"name":"(anonymous_1)","decl":{"start":{"line":81,"column":4},"end":{"line":81,"column":5}},"loc":{"start":{"line":81,"column":11},"end":{"line":89,"column":5}},"line":81},"2":{"name":"(anonymous_2)","decl":{"start":{"line":101,"column":4},"end":{"line":101,"column":5}},"loc":{"start":{"line":101,"column":10},"end":{"line":101,"column":52}},"line":101},"3":{"name":"(anonymous_3)","decl":{"start":{"line":105,"column":30},"end":{"line":105,"column":31}},"loc":{"start":{"line":105,"column":36},"end":{"line":107,"column":3}},"line":105},"4":{"name":"(anonymous_4)","decl":{"start":{"line":106,"column":22},"end":{"line":106,"column":23}},"loc":{"start":{"line":106,"column":30},"end":{"line":106,"column":85}},"line":106},"5":{"name":"(anonymous_5)","decl":{"start":{"line":109,"column":35},"end":{"line":109,"column":36}},"loc":{"start":{"line":109,"column":47},"end":{"line":112,"column":3}},"line":109},"6":{"name":"(anonymous_6)","decl":{"start":{"line":114,"column":25},"end":{"line":114,"column":26}},"loc":{"start":{"line":114,"column":47},"end":{"line":130,"column":3}},"line":114},"7":{"name":"(anonymous_7)","decl":{"start":{"line":137,"column":15},"end":{"line":137,"column":16}},"loc":{"start":{"line":137,"column":21},"end":{"line":137,"column":62}},"line":137},"8":{"name":"(anonymous_8)","decl":{"start":{"line":230,"column":23},"end":{"line":230,"column":24}},"loc":{"start":{"line":230,"column":29},"end":{"line":230,"column":48}},"line":230},"9":{"name":"(anonymous_9)","decl":{"start":{"line":289,"column":25},"end":{"line":289,"column":26}},"loc":{"start":{"line":289,"column":31},"end":{"line":289,"column":48}},"line":289},"10":{"name":"(anonymous_10)","decl":{"start":{"line":310,"column":29},"end":{"line":310,"column":30}},"loc":{"start":{"line":310,"column":41},"end":{"line":461,"column":1}},"line":310}},"branchMap":{"0":{"loc":{"start":{"line":110,"column":4},"end":{"line":110,"column":67}},"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":110,"column":67}},{"start":{},"end":{}}],"line":110},"1":{"loc":{"start":{"line":110,"column":8},"end":{"line":110,"column":58}},"type":"binary-expr","locations":[{"start":{"line":110,"column":8},"end":{"line":110,"column":25}},{"start":{"line":110,"column":29},"end":{"line":110,"column":45}},{"start":{"line":110,"column":49},"end":{"line":110,"column":58}}],"line":110},"2":{"loc":{"start":{"line":116,"column":27},"end":{"line":116,"column":74}},"type":"binary-expr","locations":[{"start":{"line":116,"column":27},"end":{"line":116,"column":46}},{"start":{"line":116,"column":50},"end":{"line":116,"column":74}}],"line":116},"3":{"loc":{"start":{"line":117,"column":4},"end":{"line":119,"column":5}},"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":119,"column":5}},{"start":{},"end":{}}],"line":117},"4":{"loc":{"start":{"line":133,"column":4},"end":{"line":133,"column":57}},"type":"binary-expr","locations":[{"start":{"line":133,"column":4},"end":{"line":133,"column":21}},{"start":{"line":133,"column":25},"end":{"line":133,"column":35}},{"start":{"line":133,"column":39},"end":{"line":133,"column":57}}],"line":133},"5":{"loc":{"start":{"line":137,"column":21},"end":{"line":137,"column":62}},"type":"binary-expr","locations":[{"start":{"line":137,"column":21},"end":{"line":137,"column":39}},{"start":{"line":137,"column":43},"end":{"line":137,"column":62}}],"line":137},"6":{"loc":{"start":{"line":139,"column":8},"end":{"line":141,"column":25}},"type":"binary-expr","locations":[{"start":{"line":139,"column":9},"end":{"line":139,"column":25}},{"start":{"line":139,"column":29},"end":{"line":139,"column":47}},{"start":{"line":140,"column":8},"end":{"line":140,"column":17}},{"start":{"line":141,"column":8},"end":{"line":141,"column":25}}],"line":139},"7":{"loc":{"start":{"line":148,"column":10},"end":{"line":148,"column":57}},"type":"binary-expr","locations":[{"start":{"line":148,"column":10},"end":{"line":148,"column":27}},{"start":{"line":148,"column":31},"end":{"line":148,"column":57}}],"line":148},"8":{"loc":{"start":{"line":149,"column":10},"end":{"line":149,"column":73}},"type":"binary-expr","locations":[{"start":{"line":149,"column":10},"end":{"line":149,"column":20}},{"start":{"line":149,"column":24},"end":{"line":149,"column":42}},{"start":{"line":149,"column":46},"end":{"line":149,"column":73}}],"line":149},"9":{"loc":{"start":{"line":150,"column":10},"end":{"line":153,"column":31}},"type":"binary-expr","locations":[{"start":{"line":150,"column":12},"end":{"line":150,"column":28}},{"start":{"line":150,"column":32},"end":{"line":150,"column":50}},{"start":{"line":151,"column":12},"end":{"line":151,"column":21}},{"start":{"line":152,"column":12},"end":{"line":152,"column":29}},{"start":{"line":153,"column":12},"end":{"line":153,"column":31}}],"line":150},"10":{"loc":{"start":{"line":156,"column":9},"end":{"line":304,"column":9}},"type":"cond-expr","locations":[{"start":{"line":157,"column":10},"end":{"line":225,"column":17}},{"start":{"line":227,"column":10},"end":{"line":303,"column":13}}],"line":156},"11":{"loc":{"start":{"line":160,"column":15},"end":{"line":173,"column":15}},"type":"binary-expr","locations":[{"start":{"line":160,"column":15},"end":{"line":160,"column":26}},{"start":{"line":161,"column":16},"end":{"line":172,"column":23}}],"line":160},"12":{"loc":{"start":{"line":196,"column":18},"end":{"line":198,"column":24}},"type":"cond-expr","locations":[{"start":{"line":197,"column":22},"end":{"line":197,"column":57}},{"start":{"line":198,"column":22},"end":{"line":198,"column":24}}],"line":196},"13":{"loc":{"start":{"line":196,"column":18},"end":{"line":196,"column":72}},"type":"binary-expr","locations":[{"start":{"line":196,"column":18},"end":{"line":196,"column":50}},{"start":{"line":196,"column":54},"end":{"line":196,"column":72}}],"line":196},"14":{"loc":{"start":{"line":239,"column":17},"end":{"line":248,"column":17}},"type":"binary-expr","locations":[{"start":{"line":239,"column":17},"end":{"line":239,"column":28}},{"start":{"line":240,"column":18},"end":{"line":247,"column":25}}],"line":239},"15":{"loc":{"start":{"line":264,"column":15},"end":{"line":287,"column":15}},"type":"cond-expr","locations":[{"start":{"line":265,"column":16},"end":{"line":269,"column":18}},{"start":{"line":271,"column":16},"end":{"line":286,"column":35}}],"line":264},"16":{"loc":{"start":{"line":277,"column":26},"end":{"line":277,"column":76}},"type":"cond-expr","locations":[{"start":{"line":277,"column":40},"end":{"line":277,"column":50}},{"start":{"line":277,"column":53},"end":{"line":277,"column":76}}],"line":277},"17":{"loc":{"start":{"line":281,"column":22},"end":{"line":283,"column":44}},"type":"cond-expr","locations":[{"start":{"line":282,"column":26},"end":{"line":282,"column":46}},{"start":{"line":283,"column":26},"end":{"line":283,"column":44}}],"line":281},"18":{"loc":{"start":{"line":298,"column":20},"end":{"line":298,"column":83}},"type":"cond-expr","locations":[{"start":{"line":298,"column":40},"end":{"line":298,"column":62}},{"start":{"line":298,"column":65},"end":{"line":298,"column":83}}],"line":298}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[0,0],"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0,0,0],"7":[0,0],"8":[0,0,0],"9":[0,0,0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\context\\AuthContext.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\context\\AuthContext.tsx","statementMap":{"0":{"start":{"line":23,"column":27},"end":{"line":23,"column":70}},"1":{"start":{"line":26,"column":2},"end":{"line":26,"column":33}},"2":{"start":{"line":29,"column":67},"end":{"line":91,"column":1}},"3":{"start":{"line":30,"column":36},"end":{"line":30,"column":94}},"4":{"start":{"line":31,"column":34},"end":{"line":35,"column":4}},"5":{"start":{"line":36,"column":36},"end":{"line":36,"column":50}},"6":{"start":{"line":38,"column":2},"end":{"line":56,"column":9}},"7":{"start":{"line":39,"column":25},"end":{"line":53,"column":5}},"8":{"start":{"line":40,"column":6},"end":{"line":52,"column":7}},"9":{"start":{"line":41,"column":26},"end":{"line":41,"column":58}},"10":{"start":{"line":42,"column":31},"end":{"line":42,"column":51}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":36}},"12":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"13":{"start":{"line":46,"column":10},"end":{"line":46,"column":79}},"14":{"start":{"line":49,"column":8},"end":{"line":49,"column":53}},"15":{"start":{"line":51,"column":8},"end":{"line":51,"column":28}},"16":{"start":{"line":55,"column":4},"end":{"line":55,"column":19}},"17":{"start":{"line":58,"column":16},"end":{"line":61,"column":3}},"18":{"start":{"line":59,"column":4},"end":{"line":59,"column":46}},"19":{"start":{"line":60,"column":4},"end":{"line":60,"column":73}},"20":{"start":{"line":63,"column":17},"end":{"line":66,"column":3}},"21":{"start":{"line":64,"column":4},"end":{"line":64,"column":35}},"22":{"start":{"line":65,"column":4},"end":{"line":65,"column":56}},"23":{"start":{"line":68,"column":22},"end":{"line":72,"column":16}},"24":{"start":{"line":69,"column":24},"end":{"line":69,"column":46}},"25":{"start":{"line":70,"column":4},"end":{"line":70,"column":29}},"26":{"start":{"line":71,"column":4},"end":{"line":71,"column":36}},"27":{"start":{"line":74,"column":23},"end":{"line":78,"column":16}},"28":{"start":{"line":75,"column":24},"end":{"line":75,"column":57}},"29":{"start":{"line":76,"column":4},"end":{"line":76,"column":29}},"30":{"start":{"line":77,"column":4},"end":{"line":77,"column":36}},"31":{"start":{"line":80,"column":33},"end":{"line":88,"column":3}},"32":{"start":{"line":90,"column":2},"end":{"line":90,"column":79}}},"fnMap":{"0":{"name":"useAuth","decl":{"start":{"line":25,"column":16},"end":{"line":25,"column":23}},"loc":{"start":{"line":25,"column":26},"end":{"line":27,"column":1}},"line":25},"1":{"name":"(anonymous_1)","decl":{"start":{"line":29,"column":67},"end":{"line":29,"column":68}},"loc":{"start":{"line":29,"column":85},"end":{"line":91,"column":1}},"line":29},"2":{"name":"(anonymous_2)","decl":{"start":{"line":38,"column":12},"end":{"line":38,"column":13}},"loc":{"start":{"line":38,"column":18},"end":{"line":56,"column":3}},"line":38},"3":{"name":"(anonymous_3)","decl":{"start":{"line":39,"column":25},"end":{"line":39,"column":26}},"loc":{"start":{"line":39,"column":37},"end":{"line":53,"column":5}},"line":39},"4":{"name":"(anonymous_4)","decl":{"start":{"line":58,"column":16},"end":{"line":58,"column":17}},"loc":{"start":{"line":58,"column":44},"end":{"line":61,"column":3}},"line":58},"5":{"name":"(anonymous_5)","decl":{"start":{"line":63,"column":17},"end":{"line":63,"column":18}},"loc":{"start":{"line":63,"column":29},"end":{"line":66,"column":3}},"line":63},"6":{"name":"(anonymous_6)","decl":{"start":{"line":68,"column":34},"end":{"line":68,"column":35}},"loc":{"start":{"line":68,"column":80},"end":{"line":72,"column":3}},"line":68},"7":{"name":"(anonymous_7)","decl":{"start":{"line":74,"column":35},"end":{"line":74,"column":36}},"loc":{"start":{"line":74,"column":67},"end":{"line":78,"column":3}},"line":74}},"branchMap":{"0":{"loc":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},{"start":{},"end":{}}],"line":45}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"0":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\localization\\i18n.ts": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\localization\\i18n.ts","statementMap":{"0":{"start":{"line":11,"column":21},"end":{"line":15,"column":1}},"1":{"start":{"line":17,"column":13},"end":{"line":17,"column":35}},"2":{"start":{"line":42,"column":25},"end":{"line":54,"column":1}},"3":{"start":{"line":43,"column":22},"end":{"line":43,"column":42}},"4":{"start":{"line":44,"column":2},"end":{"line":44,"column":28}},"5":{"start":{"line":45,"column":2},"end":{"line":45,"column":28}},"6":{"start":{"line":47,"column":16},"end":{"line":47,"column":36}},"7":{"start":{"line":48,"column":2},"end":{"line":53,"column":3}},"8":{"start":{"line":49,"column":4},"end":{"line":49,"column":32}},"9":{"start":{"line":50,"column":4},"end":{"line":50,"column":128}},"10":{"start":{"line":51,"column":9},"end":{"line":53,"column":3}},"11":{"start":{"line":52,"column":6},"end":{"line":52,"column":59}},"12":{"start":{"line":56,"column":21},"end":{"line":56,"column":75}},"13":{"start":{"line":57,"column":0},"end":{"line":57,"column":24}},"14":{"start":{"line":61,"column":2},"end":{"line":61,"column":81}},"15":{"start":{"line":65,"column":31},"end":{"line":76,"column":1}},"16":{"start":{"line":66,"column":24},"end":{"line":66,"column":49}},"17":{"start":{"line":67,"column":2},"end":{"line":75,"column":3}},"18":{"start":{"line":69,"column":6},"end":{"line":69,"column":22}},"19":{"start":{"line":71,"column":6},"end":{"line":71,"column":22}},"20":{"start":{"line":74,"column":6},"end":{"line":74,"column":18}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":42,"column":25},"end":{"line":42,"column":26}},"loc":{"start":{"line":42,"column":45},"end":{"line":54,"column":1}},"line":42},"1":{"name":"t","decl":{"start":{"line":60,"column":16},"end":{"line":60,"column":17}},"loc":{"start":{"line":60,"column":83},"end":{"line":62,"column":1}},"line":60},"2":{"name":"(anonymous_2)","decl":{"start":{"line":65,"column":31},"end":{"line":65,"column":32}},"loc":{"start":{"line":65,"column":43},"end":{"line":76,"column":1}},"line":65}},"branchMap":{"0":{"loc":{"start":{"line":48,"column":2},"end":{"line":53,"column":3}},"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":53,"column":3}},{"start":{"line":51,"column":9},"end":{"line":53,"column":3}}],"line":48},"1":{"loc":{"start":{"line":48,"column":6},"end":{"line":48,"column":58}},"type":"binary-expr","locations":[{"start":{"line":48,"column":6},"end":{"line":48,"column":27}},{"start":{"line":48,"column":31},"end":{"line":48,"column":58}}],"line":48},"2":{"loc":{"start":{"line":51,"column":9},"end":{"line":53,"column":3}},"type":"if","locations":[{"start":{"line":51,"column":9},"end":{"line":53,"column":3}},{"start":{},"end":{}}],"line":51},"3":{"loc":{"start":{"line":52,"column":37},"end":{"line":52,"column":58}},"type":"cond-expr","locations":[{"start":{"line":52,"column":45},"end":{"line":52,"column":50}},{"start":{"line":52,"column":53},"end":{"line":52,"column":58}}],"line":52},"4":{"loc":{"start":{"line":56,"column":21},"end":{"line":56,"column":75}},"type":"binary-expr","locations":[{"start":{"line":56,"column":21},"end":{"line":56,"column":64}},{"start":{"line":56,"column":68},"end":{"line":56,"column":75}}],"line":56},"5":{"loc":{"start":{"line":67,"column":2},"end":{"line":75,"column":3}},"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":69,"column":22}},{"start":{"line":70,"column":4},"end":{"line":71,"column":22}},{"start":{"line":72,"column":4},"end":{"line":72,"column":14}},{"start":{"line":73,"column":4},"end":{"line":74,"column":18}}],"line":67}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\screens\\DailyEntryScreen.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\screens\\DailyEntryScreen.tsx","statementMap":{"0":{"start":{"line":31,"column":35},"end":{"line":517,"column":1}},"1":{"start":{"line":32,"column":42},"end":{"line":32,"column":68}},"2":{"start":{"line":33,"column":42},"end":{"line":33,"column":80}},"3":{"start":{"line":34,"column":28},"end":{"line":34,"column":48}},"4":{"start":{"line":36,"column":50},"end":{"line":36,"column":65}},"5":{"start":{"line":37,"column":46},"end":{"line":37,"column":61}},"6":{"start":{"line":38,"column":38},"end":{"line":38,"column":128}},"7":{"start":{"line":40,"column":36},"end":{"line":40,"column":65}},"8":{"start":{"line":41,"column":56},"end":{"line":41,"column":95}},"9":{"start":{"line":42,"column":50},"end":{"line":42,"column":77}},"10":{"start":{"line":44,"column":36},"end":{"line":44,"column":88}},"11":{"start":{"line":45,"column":44},"end":{"line":45,"column":58}},"12":{"start":{"line":46,"column":34},"end":{"line":46,"column":49}},"13":{"start":{"line":47,"column":42},"end":{"line":47,"column":54}},"14":{"start":{"line":48,"column":56},"end":{"line":48,"column":83}},"15":{"start":{"line":50,"column":20},"end":{"line":50,"column":30}},"16":{"start":{"line":51,"column":17},"end":{"line":51,"column":28}},"17":{"start":{"line":53,"column":21},"end":{"line":53,"column":68}},"18":{"start":{"line":54,"column":16},"end":{"line":54,"column":53}},"19":{"start":{"line":56,"column":2},"end":{"line":67,"column":37}},"20":{"start":{"line":57,"column":31},"end":{"line":65,"column":5}},"21":{"start":{"line":58,"column":25},"end":{"line":58,"column":47}},"22":{"start":{"line":59,"column":6},"end":{"line":64,"column":7}},"23":{"start":{"line":60,"column":26},"end":{"line":60,"column":67}},"24":{"start":{"line":61,"column":8},"end":{"line":61,"column":35}},"25":{"start":{"line":63,"column":8},"end":{"line":63,"column":56}},"26":{"start":{"line":66,"column":4},"end":{"line":66,"column":25}},"27":{"start":{"line":69,"column":28},"end":{"line":75,"column":17}},"28":{"start":{"line":70,"column":4},"end":{"line":70,"column":26}},"29":{"start":{"line":70,"column":19},"end":{"line":70,"column":26}},"30":{"start":{"line":71,"column":4},"end":{"line":74,"column":5}},"31":{"start":{"line":72,"column":19},"end":{"line":72,"column":43}},"32":{"start":{"line":73,"column":6},"end":{"line":73,"column":60}},"33":{"start":{"line":73,"column":28},"end":{"line":73,"column":57}},"34":{"start":{"line":77,"column":30},"end":{"line":98,"column":17}},"35":{"start":{"line":78,"column":28},"end":{"line":78,"column":45}},"36":{"start":{"line":79,"column":4},"end":{"line":85,"column":7}},"37":{"start":{"line":80,"column":6},"end":{"line":84,"column":7}},"38":{"start":{"line":81,"column":8},"end":{"line":83,"column":11}},"39":{"start":{"line":82,"column":10},"end":{"line":82,"column":67}},"40":{"start":{"line":82,"column":31},"end":{"line":82,"column":67}},"41":{"start":{"line":87,"column":4},"end":{"line":97,"column":5}},"42":{"start":{"line":88,"column":67},"end":{"line":88,"column":69}},"43":{"start":{"line":89,"column":6},"end":{"line":93,"column":9}},"44":{"start":{"line":90,"column":8},"end":{"line":92,"column":9}},"45":{"start":{"line":91,"column":11},"end":{"line":91,"column":59}},"46":{"start":{"line":94,"column":6},"end":{"line":96,"column":7}},"47":{"start":{"line":95,"column":10},"end":{"line":95,"column":69}},"48":{"start":{"line":95,"column":32},"end":{"line":95,"column":66}},"49":{"start":{"line":100,"column":19},"end":{"line":123,"column":44}},"50":{"start":{"line":101,"column":4},"end":{"line":101,"column":27}},"51":{"start":{"line":102,"column":4},"end":{"line":122,"column":5}},"52":{"start":{"line":103,"column":59},"end":{"line":107,"column":8}},"53":{"start":{"line":109,"column":31},"end":{"line":109,"column":48}},"54":{"start":{"line":111,"column":6},"end":{"line":111,"column":105}},"55":{"start":{"line":112,"column":6},"end":{"line":112,"column":68}},"56":{"start":{"line":112,"column":38},"end":{"line":112,"column":66}},"57":{"start":{"line":113,"column":6},"end":{"line":113,"column":33}},"58":{"start":{"line":114,"column":6},"end":{"line":114,"column":37}},"59":{"start":{"line":115,"column":6},"end":{"line":115,"column":55}},"60":{"start":{"line":117,"column":6},"end":{"line":117,"column":66}},"61":{"start":{"line":118,"column":6},"end":{"line":118,"column":91}},"62":{"start":{"line":119,"column":6},"end":{"line":119,"column":19}},"63":{"start":{"line":119,"column":20},"end":{"line":119,"column":40}},"64":{"start":{"line":119,"column":41},"end":{"line":119,"column":102}},"65":{"start":{"line":121,"column":6},"end":{"line":121,"column":30}},"66":{"start":{"line":125,"column":2},"end":{"line":131,"column":33}},"67":{"start":{"line":126,"column":30},"end":{"line":126,"column":56}},"68":{"start":{"line":127,"column":4},"end":{"line":130,"column":5}},"69":{"start":{"line":128,"column":6},"end":{"line":128,"column":48}},"70":{"start":{"line":129,"column":6},"end":{"line":129,"column":56}},"71":{"start":{"line":133,"column":2},"end":{"line":146,"column":87}},"72":{"start":{"line":134,"column":4},"end":{"line":145,"column":5}},"73":{"start":{"line":135,"column":34},"end":{"line":135,"column":82}},"74":{"start":{"line":135,"column":50},"end":{"line":135,"column":81}},"75":{"start":{"line":136,"column":24},"end":{"line":136,"column":66}},"76":{"start":{"line":138,"column":6},"end":{"line":138,"column":37}},"77":{"start":{"line":139,"column":6},"end":{"line":139,"column":33}},"78":{"start":{"line":140,"column":6},"end":{"line":140,"column":25}},"79":{"start":{"line":142,"column":6},"end":{"line":142,"column":60}},"80":{"start":{"line":142,"column":26},"end":{"line":142,"column":60}},"81":{"start":{"line":143,"column":6},"end":{"line":143,"column":32}},"82":{"start":{"line":144,"column":6},"end":{"line":144,"column":35}},"83":{"start":{"line":148,"column":2},"end":{"line":153,"column":4}},"84":{"start":{"line":150,"column":6},"end":{"line":150,"column":17}},"85":{"start":{"line":151,"column":6},"end":{"line":151,"column":22}},"86":{"start":{"line":155,"column":28},"end":{"line":158,"column":34}},"87":{"start":{"line":156,"column":18},"end":{"line":156,"column":67}},"88":{"start":{"line":156,"column":43},"end":{"line":156,"column":66}},"89":{"start":{"line":157,"column":4},"end":{"line":157,"column":51}},"90":{"start":{"line":160,"column":27},"end":{"line":164,"column":34}},"91":{"start":{"line":161,"column":18},"end":{"line":161,"column":67}},"92":{"start":{"line":161,"column":43},"end":{"line":161,"column":66}},"93":{"start":{"line":162,"column":4},"end":{"line":162,"column":86}},"94":{"start":{"line":162,"column":76},"end":{"line":162,"column":86}},"95":{"start":{"line":163,"column":4},"end":{"line":163,"column":50}},"96":{"start":{"line":166,"column":31},"end":{"line":187,"column":23}},"97":{"start":{"line":167,"column":4},"end":{"line":167,"column":22}},"98":{"start":{"line":168,"column":33},"end":{"line":168,"column":45}},"99":{"start":{"line":171,"column":4},"end":{"line":175,"column":5}},"100":{"start":{"line":172,"column":8},"end":{"line":172,"column":78}},"101":{"start":{"line":174,"column":8},"end":{"line":174,"column":56}},"102":{"start":{"line":177,"column":4},"end":{"line":177,"column":47}},"103":{"start":{"line":179,"column":4},"end":{"line":186,"column":5}},"104":{"start":{"line":180,"column":6},"end":{"line":180,"column":56}},"105":{"start":{"line":182,"column":6},"end":{"line":182,"column":91}},"106":{"start":{"line":183,"column":6},"end":{"line":183,"column":44}},"107":{"start":{"line":185,"column":6},"end":{"line":185,"column":25}},"108":{"start":{"line":189,"column":39},"end":{"line":232,"column":105}},"109":{"start":{"line":190,"column":4},"end":{"line":190,"column":25}},"110":{"start":{"line":190,"column":18},"end":{"line":190,"column":25}},"111":{"start":{"line":191,"column":38},"end":{"line":191,"column":76}},"112":{"start":{"line":192,"column":32},"end":{"line":192,"column":50}},"113":{"start":{"line":194,"column":4},"end":{"line":222,"column":7}},"114":{"start":{"line":195,"column":35},"end":{"line":195,"column":101}},"115":{"start":{"line":195,"column":73},"end":{"line":195,"column":100}},"116":{"start":{"line":197,"column":8},"end":{"line":220,"column":9}},"117":{"start":{"line":198,"column":34},"end":{"line":198,"column":70}},"118":{"start":{"line":200,"column":12},"end":{"line":209,"column":13}},"119":{"start":{"line":201,"column":42},"end":{"line":201,"column":69}},"120":{"start":{"line":202,"column":16},"end":{"line":205,"column":17}},"121":{"start":{"line":203,"column":20},"end":{"line":203,"column":105}},"122":{"start":{"line":204,"column":20},"end":{"line":204,"column":44}},"123":{"start":{"line":206,"column":16},"end":{"line":206,"column":120}},"124":{"start":{"line":206,"column":72},"end":{"line":206,"column":118}},"125":{"start":{"line":208,"column":16},"end":{"line":208,"column":75}},"126":{"start":{"line":210,"column":33},"end":{"line":210,"column":74}},"127":{"start":{"line":211,"column":12},"end":{"line":211,"column":126}},"128":{"start":{"line":211,"column":73},"end":{"line":211,"column":124}},"129":{"start":{"line":213,"column":12},"end":{"line":216,"column":13}},"130":{"start":{"line":214,"column":16},"end":{"line":214,"column":93}},"131":{"start":{"line":215,"column":16},"end":{"line":215,"column":40}},"132":{"start":{"line":217,"column":46},"end":{"line":217,"column":88}},"133":{"start":{"line":218,"column":12},"end":{"line":218,"column":71}},"134":{"start":{"line":219,"column":12},"end":{"line":219,"column":77}},"135":{"start":{"line":219,"column":47},"end":{"line":219,"column":75}},"136":{"start":{"line":221,"column":8},"end":{"line":221,"column":35}},"137":{"start":{"line":224,"column":4},"end":{"line":224,"column":59}},"138":{"start":{"line":224,"column":25},"end":{"line":224,"column":59}},"139":{"start":{"line":226,"column":4},"end":{"line":226,"column":31}},"140":{"start":{"line":227,"column":4},"end":{"line":227,"column":23}},"141":{"start":{"line":228,"column":4},"end":{"line":228,"column":38}},"142":{"start":{"line":229,"column":4},"end":{"line":229,"column":30}},"143":{"start":{"line":231,"column":4},"end":{"line":231,"column":176}},"144":{"start":{"line":235,"column":40},"end":{"line":266,"column":88}},"145":{"start":{"line":236,"column":4},"end":{"line":236,"column":25}},"146":{"start":{"line":236,"column":18},"end":{"line":236,"column":25}},"147":{"start":{"line":237,"column":4},"end":{"line":265,"column":151}},"148":{"start":{"line":238,"column":6},"end":{"line":238,"column":61}},"149":{"start":{"line":238,"column":54},"end":{"line":238,"column":61}},"150":{"start":{"line":239,"column":41},"end":{"line":239,"column":112}},"151":{"start":{"line":239,"column":70},"end":{"line":239,"column":110}},"152":{"start":{"line":241,"column":6},"end":{"line":255,"column":9}},"153":{"start":{"line":242,"column":37},"end":{"line":242,"column":103}},"154":{"start":{"line":242,"column":75},"end":{"line":242,"column":102}},"155":{"start":{"line":244,"column":10},"end":{"line":253,"column":11}},"156":{"start":{"line":245,"column":34},"end":{"line":245,"column":70}},"157":{"start":{"line":246,"column":33},"end":{"line":246,"column":78}},"158":{"start":{"line":247,"column":33},"end":{"line":247,"column":74}},"159":{"start":{"line":248,"column":12},"end":{"line":248,"column":126}},"160":{"start":{"line":248,"column":73},"end":{"line":248,"column":124}},"161":{"start":{"line":250,"column":46},"end":{"line":250,"column":85}},"162":{"start":{"line":251,"column":12},"end":{"line":251,"column":71}},"163":{"start":{"line":252,"column":12},"end":{"line":252,"column":77}},"164":{"start":{"line":252,"column":47},"end":{"line":252,"column":75}},"165":{"start":{"line":254,"column":10},"end":{"line":254,"column":37}},"166":{"start":{"line":257,"column":6},"end":{"line":257,"column":92}},"167":{"start":{"line":257,"column":33},"end":{"line":257,"column":88}},"168":{"start":{"line":257,"column":54},"end":{"line":257,"column":88}},"169":{"start":{"line":259,"column":6},"end":{"line":259,"column":221}},"170":{"start":{"line":261,"column":6},"end":{"line":261,"column":33}},"171":{"start":{"line":262,"column":6},"end":{"line":262,"column":25}},"172":{"start":{"line":263,"column":6},"end":{"line":263,"column":40}},"173":{"start":{"line":264,"column":6},"end":{"line":264,"column":32}},"174":{"start":{"line":265,"column":22},"end":{"line":265,"column":121}},"175":{"start":{"line":265,"column":122},"end":{"line":265,"column":149}},"176":{"start":{"line":269,"column":32},"end":{"line":289,"column":41}},"177":{"start":{"line":270,"column":4},"end":{"line":270,"column":25}},"178":{"start":{"line":270,"column":18},"end":{"line":270,"column":25}},"179":{"start":{"line":271,"column":4},"end":{"line":271,"column":17}},"180":{"start":{"line":272,"column":4},"end":{"line":287,"column":7}},"181":{"start":{"line":273,"column":25},"end":{"line":273,"column":78}},"182":{"start":{"line":273,"column":57},"end":{"line":273,"column":77}},"183":{"start":{"line":275,"column":8},"end":{"line":285,"column":9}},"184":{"start":{"line":276,"column":34},"end":{"line":276,"column":60}},"185":{"start":{"line":277,"column":33},"end":{"line":277,"column":57}},"186":{"start":{"line":278,"column":12},"end":{"line":278,"column":76}},"187":{"start":{"line":279,"column":34},"end":{"line":279,"column":75}},"188":{"start":{"line":280,"column":12},"end":{"line":280,"column":102}},"189":{"start":{"line":280,"column":62},"end":{"line":280,"column":100}},"190":{"start":{"line":282,"column":46},"end":{"line":282,"column":89}},"191":{"start":{"line":283,"column":12},"end":{"line":283,"column":64}},"192":{"start":{"line":284,"column":12},"end":{"line":284,"column":70}},"193":{"start":{"line":284,"column":40},"end":{"line":284,"column":68}},"194":{"start":{"line":286,"column":8},"end":{"line":286,"column":28}},"195":{"start":{"line":288,"column":4},"end":{"line":288,"column":122}},"196":{"start":{"line":291,"column":25},"end":{"line":291,"column":54}},"197":{"start":{"line":292,"column":2},"end":{"line":292,"column":96}},"198":{"start":{"line":292,"column":20},"end":{"line":292,"column":67}},"199":{"start":{"line":294,"column":28},"end":{"line":341,"column":87}},"200":{"start":{"line":295,"column":4},"end":{"line":295,"column":25}},"201":{"start":{"line":295,"column":18},"end":{"line":295,"column":25}},"202":{"start":{"line":296,"column":30},"end":{"line":296,"column":65}},"203":{"start":{"line":297,"column":4},"end":{"line":300,"column":5}},"204":{"start":{"line":298,"column":6},"end":{"line":298,"column":106}},"205":{"start":{"line":299,"column":6},"end":{"line":299,"column":13}},"206":{"start":{"line":302,"column":26},"end":{"line":302,"column":75}},"207":{"start":{"line":302,"column":51},"end":{"line":302,"column":74}},"208":{"start":{"line":303,"column":33},"end":{"line":303,"column":72}},"209":{"start":{"line":305,"column":4},"end":{"line":308,"column":5}},"210":{"start":{"line":306,"column":6},"end":{"line":306,"column":95}},"211":{"start":{"line":307,"column":6},"end":{"line":307,"column":13}},"212":{"start":{"line":310,"column":4},"end":{"line":330,"column":7}},"213":{"start":{"line":311,"column":32},"end":{"line":311,"column":90}},"214":{"start":{"line":311,"column":66},"end":{"line":311,"column":89}},"215":{"start":{"line":312,"column":6},"end":{"line":315,"column":7}},"216":{"start":{"line":313,"column":8},"end":{"line":313,"column":93}},"217":{"start":{"line":314,"column":8},"end":{"line":314,"column":32}},"218":{"start":{"line":316,"column":27},"end":{"line":316,"column":62}},"219":{"start":{"line":317,"column":6},"end":{"line":320,"column":7}},"220":{"start":{"line":318,"column":8},"end":{"line":318,"column":88}},"221":{"start":{"line":319,"column":8},"end":{"line":319,"column":32}},"222":{"start":{"line":322,"column":27},"end":{"line":322,"column":87}},"223":{"start":{"line":322,"column":63},"end":{"line":322,"column":86}},"224":{"start":{"line":324,"column":6},"end":{"line":329,"column":7}},"225":{"start":{"line":325,"column":8},"end":{"line":325,"column":79}},"226":{"start":{"line":325,"column":50},"end":{"line":325,"column":77}},"227":{"start":{"line":327,"column":29},"end":{"line":327,"column":69}},"228":{"start":{"line":328,"column":8},"end":{"line":328,"column":98}},"229":{"start":{"line":328,"column":50},"end":{"line":328,"column":96}},"230":{"start":{"line":332,"column":4},"end":{"line":340,"column":7}},"231":{"start":{"line":339,"column":23},"end":{"line":339,"column":100}},"232":{"start":{"line":344,"column":24},"end":{"line":358,"column":35}},"233":{"start":{"line":345,"column":4},"end":{"line":345,"column":25}},"234":{"start":{"line":345,"column":18},"end":{"line":345,"column":25}},"235":{"start":{"line":347,"column":4},"end":{"line":356,"column":5}},"236":{"start":{"line":348,"column":6},"end":{"line":348,"column":43}},"237":{"start":{"line":349,"column":6},"end":{"line":349,"column":55}},"238":{"start":{"line":350,"column":6},"end":{"line":350,"column":38}},"239":{"start":{"line":351,"column":6},"end":{"line":351,"column":72}},"240":{"start":{"line":351,"column":32},"end":{"line":351,"column":72}},"241":{"start":{"line":353,"column":6},"end":{"line":353,"column":32}},"242":{"start":{"line":354,"column":6},"end":{"line":354,"column":40}},"243":{"start":{"line":355,"column":6},"end":{"line":355,"column":25}},"244":{"start":{"line":357,"column":4},"end":{"line":357,"column":47}},"245":{"start":{"line":357,"column":37},"end":{"line":357,"column":45}},"246":{"start":{"line":360,"column":43},"end":{"line":367,"column":28}},"247":{"start":{"line":361,"column":4},"end":{"line":361,"column":25}},"248":{"start":{"line":361,"column":18},"end":{"line":361,"column":25}},"249":{"start":{"line":362,"column":4},"end":{"line":362,"column":31}},"250":{"start":{"line":363,"column":4},"end":{"line":363,"column":30}},"251":{"start":{"line":364,"column":4},"end":{"line":364,"column":38}},"252":{"start":{"line":365,"column":4},"end":{"line":365,"column":23}},"253":{"start":{"line":366,"column":4},"end":{"line":366,"column":69}},"254":{"start":{"line":370,"column":44},"end":{"line":398,"column":38}},"255":{"start":{"line":374,"column":4},"end":{"line":374,"column":30}},"256":{"start":{"line":374,"column":18},"end":{"line":374,"column":30}},"257":{"start":{"line":375,"column":4},"end":{"line":375,"column":22}},"258":{"start":{"line":376,"column":4},"end":{"line":397,"column":5}},"259":{"start":{"line":378,"column":6},"end":{"line":388,"column":7}},"260":{"start":{"line":379,"column":8},"end":{"line":379,"column":66}},"261":{"start":{"line":380,"column":8},"end":{"line":382,"column":10}},"262":{"start":{"line":381,"column":10},"end":{"line":381,"column":122}},"263":{"start":{"line":381,"column":30},"end":{"line":381,"column":75}},"264":{"start":{"line":381,"column":93},"end":{"line":381,"column":121}},"265":{"start":{"line":383,"column":13},"end":{"line":388,"column":7}},"266":{"start":{"line":384,"column":8},"end":{"line":384,"column":85}},"267":{"start":{"line":385,"column":8},"end":{"line":385,"column":106}},"268":{"start":{"line":385,"column":30},"end":{"line":385,"column":104}},"269":{"start":{"line":385,"column":75},"end":{"line":385,"column":103}},"270":{"start":{"line":387,"column":8},"end":{"line":387,"column":72}},"271":{"start":{"line":389,"column":6},"end":{"line":389,"column":67}},"272":{"start":{"line":389,"column":29},"end":{"line":389,"column":67}},"273":{"start":{"line":390,"column":6},"end":{"line":390,"column":27}},"274":{"start":{"line":392,"column":6},"end":{"line":392,"column":64}},"275":{"start":{"line":393,"column":6},"end":{"line":393,"column":181}},"276":{"start":{"line":394,"column":6},"end":{"line":394,"column":18}},"277":{"start":{"line":396,"column":6},"end":{"line":396,"column":25}},"278":{"start":{"line":401,"column":34},"end":{"line":401,"column":117}},"279":{"start":{"line":401,"column":83},"end":{"line":401,"column":117}},"280":{"start":{"line":403,"column":27},"end":{"line":421,"column":23}},"281":{"start":{"line":404,"column":29},"end":{"line":404,"column":84}},"282":{"start":{"line":405,"column":4},"end":{"line":405,"column":45}},"283":{"start":{"line":406,"column":4},"end":{"line":416,"column":5}},"284":{"start":{"line":407,"column":6},"end":{"line":415,"column":7}},"285":{"start":{"line":408,"column":30},"end":{"line":408,"column":86}},"286":{"start":{"line":409,"column":8},"end":{"line":412,"column":9}},"287":{"start":{"line":410,"column":11},"end":{"line":410,"column":42}},"288":{"start":{"line":411,"column":11},"end":{"line":411,"column":30}},"289":{"start":{"line":414,"column":8},"end":{"line":414,"column":107}},"290":{"start":{"line":418,"column":4},"end":{"line":420,"column":5}},"291":{"start":{"line":419,"column":8},"end":{"line":419,"column":33}},"292":{"start":{"line":423,"column":28},"end":{"line":436,"column":45}},"293":{"start":{"line":424,"column":4},"end":{"line":424,"column":42}},"294":{"start":{"line":424,"column":35},"end":{"line":424,"column":42}},"295":{"start":{"line":425,"column":4},"end":{"line":435,"column":62}},"296":{"start":{"line":426,"column":29},"end":{"line":426,"column":51}},"297":{"start":{"line":427,"column":6},"end":{"line":430,"column":7}},"298":{"start":{"line":428,"column":10},"end":{"line":428,"column":83}},"299":{"start":{"line":429,"column":10},"end":{"line":429,"column":17}},"300":{"start":{"line":431,"column":22},"end":{"line":431,"column":48}},"301":{"start":{"line":432,"column":28},"end":{"line":432,"column":74}},"302":{"start":{"line":433,"column":6},"end":{"line":433,"column":37}},"303":{"start":{"line":434,"column":6},"end":{"line":434,"column":25}},"304":{"start":{"line":435,"column":18},"end":{"line":435,"column":60}},"305":{"start":{"line":438,"column":24},"end":{"line":451,"column":45}},"306":{"start":{"line":439,"column":4},"end":{"line":439,"column":42}},"307":{"start":{"line":439,"column":35},"end":{"line":439,"column":42}},"308":{"start":{"line":440,"column":4},"end":{"line":450,"column":62}},"309":{"start":{"line":441,"column":29},"end":{"line":441,"column":51}},"310":{"start":{"line":442,"column":6},"end":{"line":445,"column":7}},"311":{"start":{"line":443,"column":10},"end":{"line":443,"column":79}},"312":{"start":{"line":444,"column":10},"end":{"line":444,"column":17}},"313":{"start":{"line":446,"column":22},"end":{"line":446,"column":48}},"314":{"start":{"line":447,"column":28},"end":{"line":447,"column":74}},"315":{"start":{"line":448,"column":6},"end":{"line":448,"column":37}},"316":{"start":{"line":449,"column":6},"end":{"line":449,"column":25}},"317":{"start":{"line":450,"column":18},"end":{"line":450,"column":60}},"318":{"start":{"line":453,"column":26},"end":{"line":463,"column":34}},"319":{"start":{"line":454,"column":33},"end":{"line":454,"column":90}},"320":{"start":{"line":454,"column":62},"end":{"line":454,"column":89}},"321":{"start":{"line":455,"column":17},"end":{"line":455,"column":82}},"322":{"start":{"line":456,"column":4},"end":{"line":462,"column":5}},"323":{"start":{"line":457,"column":6},"end":{"line":461,"column":9}},"324":{"start":{"line":458,"column":8},"end":{"line":460,"column":9}},"325":{"start":{"line":459,"column":25},"end":{"line":459,"column":41}},"326":{"start":{"line":459,"column":43},"end":{"line":459,"column":95}},"327":{"start":{"line":459,"column":96},"end":{"line":459,"column":146}},"328":{"start":{"line":459,"column":147},"end":{"line":459,"column":193}},"329":{"start":{"line":459,"column":194},"end":{"line":459,"column":236}},"330":{"start":{"line":462,"column":6},"end":{"line":462,"column":195}},"331":{"start":{"line":465,"column":2},"end":{"line":516,"column":4}},"332":{"start":{"line":467,"column":133},"end":{"line":467,"column":187}},"333":{"start":{"line":477,"column":41},"end":{"line":477,"column":155}},"334":{"start":{"line":479,"column":12},"end":{"line":487,"column":40}},"335":{"start":{"line":498,"column":99},"end":{"line":498,"column":127}},"336":{"start":{"line":519,"column":18},"end":{"line":533,"column":3}},"337":{"start":{"line":519,"column":41},"end":{"line":533,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":31,"column":35},"end":{"line":31,"column":36}},"loc":{"start":{"line":31,"column":41},"end":{"line":517,"column":1}},"line":31},"1":{"name":"(anonymous_1)","decl":{"start":{"line":56,"column":12},"end":{"line":56,"column":13}},"loc":{"start":{"line":56,"column":18},"end":{"line":67,"column":3}},"line":56},"2":{"name":"(anonymous_2)","decl":{"start":{"line":57,"column":31},"end":{"line":57,"column":32}},"loc":{"start":{"line":57,"column":43},"end":{"line":65,"column":5}},"line":57},"3":{"name":"(anonymous_3)","decl":{"start":{"line":69,"column":40},"end":{"line":69,"column":41}},"loc":{"start":{"line":69,"column":62},"end":{"line":75,"column":3}},"line":69},"4":{"name":"(anonymous_4)","decl":{"start":{"line":73,"column":19},"end":{"line":73,"column":20}},"loc":{"start":{"line":73,"column":28},"end":{"line":73,"column":57}},"line":73},"5":{"name":"(anonymous_5)","decl":{"start":{"line":77,"column":42},"end":{"line":77,"column":43}},"loc":{"start":{"line":77,"column":98},"end":{"line":98,"column":3}},"line":77},"6":{"name":"(anonymous_6)","decl":{"start":{"line":79,"column":20},"end":{"line":79,"column":21}},"loc":{"start":{"line":79,"column":29},"end":{"line":85,"column":5}},"line":79},"7":{"name":"(anonymous_7)","decl":{"start":{"line":81,"column":28},"end":{"line":81,"column":29}},"loc":{"start":{"line":81,"column":36},"end":{"line":83,"column":9}},"line":81},"8":{"name":"(anonymous_8)","decl":{"start":{"line":89,"column":42},"end":{"line":89,"column":43}},"loc":{"start":{"line":89,"column":50},"end":{"line":93,"column":7}},"line":89},"9":{"name":"(anonymous_9)","decl":{"start":{"line":95,"column":23},"end":{"line":95,"column":24}},"loc":{"start":{"line":95,"column":32},"end":{"line":95,"column":66}},"line":95},"10":{"name":"(anonymous_10)","decl":{"start":{"line":100,"column":31},"end":{"line":100,"column":32}},"loc":{"start":{"line":100,"column":43},"end":{"line":123,"column":3}},"line":100},"11":{"name":"(anonymous_11)","decl":{"start":{"line":112,"column":28},"end":{"line":112,"column":29}},"loc":{"start":{"line":112,"column":38},"end":{"line":112,"column":66}},"line":112},"12":{"name":"(anonymous_12)","decl":{"start":{"line":125,"column":12},"end":{"line":125,"column":13}},"loc":{"start":{"line":125,"column":18},"end":{"line":131,"column":3}},"line":125},"13":{"name":"(anonymous_13)","decl":{"start":{"line":133,"column":12},"end":{"line":133,"column":13}},"loc":{"start":{"line":133,"column":18},"end":{"line":146,"column":3}},"line":133},"14":{"name":"(anonymous_14)","decl":{"start":{"line":135,"column":45},"end":{"line":135,"column":46}},"loc":{"start":{"line":135,"column":50},"end":{"line":135,"column":81}},"line":135},"15":{"name":"(anonymous_15)","decl":{"start":{"line":149,"column":16},"end":{"line":149,"column":17}},"loc":{"start":{"line":149,"column":22},"end":{"line":152,"column":5}},"line":149},"16":{"name":"(anonymous_16)","decl":{"start":{"line":151,"column":13},"end":{"line":151,"column":14}},"loc":{"start":{"line":151,"column":19},"end":{"line":151,"column":21}},"line":151},"17":{"name":"(anonymous_17)","decl":{"start":{"line":155,"column":36},"end":{"line":155,"column":37}},"loc":{"start":{"line":155,"column":42},"end":{"line":158,"column":3}},"line":155},"18":{"name":"(anonymous_18)","decl":{"start":{"line":156,"column":36},"end":{"line":156,"column":37}},"loc":{"start":{"line":156,"column":43},"end":{"line":156,"column":66}},"line":156},"19":{"name":"(anonymous_19)","decl":{"start":{"line":160,"column":39},"end":{"line":160,"column":40}},"loc":{"start":{"line":160,"column":74},"end":{"line":164,"column":3}},"line":160},"20":{"name":"(anonymous_20)","decl":{"start":{"line":161,"column":36},"end":{"line":161,"column":37}},"loc":{"start":{"line":161,"column":43},"end":{"line":161,"column":66}},"line":161},"21":{"name":"(anonymous_21)","decl":{"start":{"line":166,"column":43},"end":{"line":166,"column":44}},"loc":{"start":{"line":166,"column":136},"end":{"line":187,"column":3}},"line":166},"22":{"name":"(anonymous_22)","decl":{"start":{"line":189,"column":51},"end":{"line":189,"column":52}},"loc":{"start":{"line":189,"column":98},"end":{"line":232,"column":3}},"line":189},"23":{"name":"(anonymous_23)","decl":{"start":{"line":194,"column":31},"end":{"line":194,"column":32}},"loc":{"start":{"line":194,"column":53},"end":{"line":222,"column":5}},"line":194},"24":{"name":"(anonymous_24)","decl":{"start":{"line":195,"column":62},"end":{"line":195,"column":63}},"loc":{"start":{"line":195,"column":73},"end":{"line":195,"column":100}},"line":195},"25":{"name":"(anonymous_25)","decl":{"start":{"line":206,"column":55},"end":{"line":206,"column":56}},"loc":{"start":{"line":206,"column":72},"end":{"line":206,"column":118}},"line":206},"26":{"name":"(anonymous_26)","decl":{"start":{"line":211,"column":55},"end":{"line":211,"column":56}},"loc":{"start":{"line":211,"column":73},"end":{"line":211,"column":124}},"line":211},"27":{"name":"(anonymous_27)","decl":{"start":{"line":219,"column":37},"end":{"line":219,"column":38}},"loc":{"start":{"line":219,"column":47},"end":{"line":219,"column":75}},"line":219},"28":{"name":"(anonymous_28)","decl":{"start":{"line":235,"column":52},"end":{"line":235,"column":53}},"loc":{"start":{"line":235,"column":109},"end":{"line":266,"column":3}},"line":235},"29":{"name":"(anonymous_29)","decl":{"start":{"line":239,"column":58},"end":{"line":239,"column":59}},"loc":{"start":{"line":239,"column":70},"end":{"line":239,"column":110}},"line":239},"30":{"name":"(anonymous_30)","decl":{"start":{"line":241,"column":33},"end":{"line":241,"column":34}},"loc":{"start":{"line":241,"column":55},"end":{"line":255,"column":7}},"line":241},"31":{"name":"(anonymous_31)","decl":{"start":{"line":242,"column":64},"end":{"line":242,"column":65}},"loc":{"start":{"line":242,"column":75},"end":{"line":242,"column":102}},"line":242},"32":{"name":"(anonymous_32)","decl":{"start":{"line":248,"column":55},"end":{"line":248,"column":56}},"loc":{"start":{"line":248,"column":73},"end":{"line":248,"column":124}},"line":248},"33":{"name":"(anonymous_33)","decl":{"start":{"line":252,"column":37},"end":{"line":252,"column":38}},"loc":{"start":{"line":252,"column":47},"end":{"line":252,"column":75}},"line":252},"34":{"name":"(anonymous_34)","decl":{"start":{"line":257,"column":23},"end":{"line":257,"column":24}},"loc":{"start":{"line":257,"column":31},"end":{"line":257,"column":90}},"line":257},"35":{"name":"(anonymous_35)","decl":{"start":{"line":269,"column":44},"end":{"line":269,"column":45}},"loc":{"start":{"line":269,"column":138},"end":{"line":289,"column":3}},"line":269},"36":{"name":"(anonymous_36)","decl":{"start":{"line":272,"column":31},"end":{"line":272,"column":32}},"loc":{"start":{"line":272,"column":53},"end":{"line":287,"column":5}},"line":272},"37":{"name":"(anonymous_37)","decl":{"start":{"line":273,"column":52},"end":{"line":273,"column":53}},"loc":{"start":{"line":273,"column":57},"end":{"line":273,"column":77}},"line":273},"38":{"name":"(anonymous_38)","decl":{"start":{"line":280,"column":48},"end":{"line":280,"column":49}},"loc":{"start":{"line":280,"column":62},"end":{"line":280,"column":100}},"line":280},"39":{"name":"(anonymous_39)","decl":{"start":{"line":284,"column":30},"end":{"line":284,"column":31}},"loc":{"start":{"line":284,"column":40},"end":{"line":284,"column":68}},"line":284},"40":{"name":"(anonymous_40)","decl":{"start":{"line":292,"column":12},"end":{"line":292,"column":13}},"loc":{"start":{"line":292,"column":18},"end":{"line":292,"column":69}},"line":292},"41":{"name":"(anonymous_41)","decl":{"start":{"line":294,"column":40},"end":{"line":294,"column":41}},"loc":{"start":{"line":294,"column":77},"end":{"line":341,"column":3}},"line":294},"42":{"name":"(anonymous_42)","decl":{"start":{"line":302,"column":44},"end":{"line":302,"column":45}},"loc":{"start":{"line":302,"column":51},"end":{"line":302,"column":74}},"line":302},"43":{"name":"(anonymous_43)","decl":{"start":{"line":310,"column":31},"end":{"line":310,"column":32}},"loc":{"start":{"line":310,"column":53},"end":{"line":330,"column":5}},"line":310},"44":{"name":"(anonymous_44)","decl":{"start":{"line":311,"column":59},"end":{"line":311,"column":60}},"loc":{"start":{"line":311,"column":66},"end":{"line":311,"column":89}},"line":311},"45":{"name":"(anonymous_45)","decl":{"start":{"line":322,"column":53},"end":{"line":322,"column":54}},"loc":{"start":{"line":322,"column":63},"end":{"line":322,"column":86}},"line":322},"46":{"name":"(anonymous_46)","decl":{"start":{"line":325,"column":39},"end":{"line":325,"column":40}},"loc":{"start":{"line":325,"column":50},"end":{"line":325,"column":77}},"line":325},"47":{"name":"(anonymous_47)","decl":{"start":{"line":328,"column":36},"end":{"line":328,"column":37}},"loc":{"start":{"line":328,"column":50},"end":{"line":328,"column":96}},"line":328},"48":{"name":"(anonymous_48)","decl":{"start":{"line":339,"column":17},"end":{"line":339,"column":18}},"loc":{"start":{"line":339,"column":23},"end":{"line":339,"column":100}},"line":339},"49":{"name":"(anonymous_49)","decl":{"start":{"line":344,"column":36},"end":{"line":344,"column":37}},"loc":{"start":{"line":344,"column":123},"end":{"line":358,"column":3}},"line":344},"50":{"name":"(anonymous_50)","decl":{"start":{"line":357,"column":24},"end":{"line":357,"column":25}},"loc":{"start":{"line":357,"column":37},"end":{"line":357,"column":45}},"line":357},"51":{"name":"(anonymous_51)","decl":{"start":{"line":360,"column":55},"end":{"line":360,"column":56}},"loc":{"start":{"line":360,"column":61},"end":{"line":367,"column":3}},"line":360},"52":{"name":"(anonymous_52)","decl":{"start":{"line":370,"column":56},"end":{"line":370,"column":57}},"loc":{"start":{"line":373,"column":29},"end":{"line":398,"column":3}},"line":373},"53":{"name":"(anonymous_53)","decl":{"start":{"line":380,"column":17},"end":{"line":380,"column":18}},"loc":{"start":{"line":381,"column":10},"end":{"line":381,"column":122}},"line":381},"54":{"name":"(anonymous_54)","decl":{"start":{"line":381,"column":24},"end":{"line":381,"column":25}},"loc":{"start":{"line":381,"column":30},"end":{"line":381,"column":75}},"line":381},"55":{"name":"(anonymous_55)","decl":{"start":{"line":381,"column":83},"end":{"line":381,"column":84}},"loc":{"start":{"line":381,"column":93},"end":{"line":381,"column":121}},"line":381},"56":{"name":"(anonymous_56)","decl":{"start":{"line":385,"column":17},"end":{"line":385,"column":18}},"loc":{"start":{"line":385,"column":30},"end":{"line":385,"column":104}},"line":385},"57":{"name":"(anonymous_57)","decl":{"start":{"line":385,"column":65},"end":{"line":385,"column":66}},"loc":{"start":{"line":385,"column":75},"end":{"line":385,"column":103}},"line":385},"58":{"name":"(anonymous_58)","decl":{"start":{"line":401,"column":34},"end":{"line":401,"column":35}},"loc":{"start":{"line":401,"column":83},"end":{"line":401,"column":117}},"line":401},"59":{"name":"(anonymous_59)","decl":{"start":{"line":403,"column":39},"end":{"line":403,"column":40}},"loc":{"start":{"line":403,"column":97},"end":{"line":421,"column":3}},"line":403},"60":{"name":"(anonymous_60)","decl":{"start":{"line":423,"column":40},"end":{"line":423,"column":41}},"loc":{"start":{"line":423,"column":46},"end":{"line":436,"column":3}},"line":423},"61":{"name":"(anonymous_61)","decl":{"start":{"line":438,"column":36},"end":{"line":438,"column":37}},"loc":{"start":{"line":438,"column":42},"end":{"line":451,"column":3}},"line":438},"62":{"name":"(anonymous_62)","decl":{"start":{"line":453,"column":34},"end":{"line":453,"column":35}},"loc":{"start":{"line":453,"column":40},"end":{"line":463,"column":3}},"line":453},"63":{"name":"(anonymous_63)","decl":{"start":{"line":454,"column":51},"end":{"line":454,"column":52}},"loc":{"start":{"line":454,"column":62},"end":{"line":454,"column":89}},"line":454},"64":{"name":"(anonymous_64)","decl":{"start":{"line":457,"column":41},"end":{"line":457,"column":42}},"loc":{"start":{"line":457,"column":51},"end":{"line":461,"column":7}},"line":457},"65":{"name":"(anonymous_65)","decl":{"start":{"line":467,"column":127},"end":{"line":467,"column":128}},"loc":{"start":{"line":467,"column":133},"end":{"line":467,"column":187}},"line":467},"66":{"name":"(anonymous_66)","decl":{"start":{"line":477,"column":24},"end":{"line":477,"column":25}},"loc":{"start":{"line":477,"column":41},"end":{"line":477,"column":155}},"line":477},"67":{"name":"(anonymous_67)","decl":{"start":{"line":478,"column":22},"end":{"line":478,"column":23}},"loc":{"start":{"line":479,"column":12},"end":{"line":487,"column":40}},"line":479},"68":{"name":"(anonymous_68)","decl":{"start":{"line":498,"column":93},"end":{"line":498,"column":94}},"loc":{"start":{"line":498,"column":99},"end":{"line":498,"column":127}},"line":498},"69":{"name":"(anonymous_69)","decl":{"start":{"line":519,"column":29},"end":{"line":519,"column":30}},"loc":{"start":{"line":519,"column":41},"end":{"line":533,"column":1}},"line":519}},"branchMap":{"0":{"loc":{"start":{"line":59,"column":6},"end":{"line":64,"column":7}},"type":"if","locations":[{"start":{"line":59,"column":6},"end":{"line":64,"column":7}},{"start":{"line":62,"column":13},"end":{"line":64,"column":7}}],"line":59},"1":{"loc":{"start":{"line":70,"column":4},"end":{"line":70,"column":26}},"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":26}},{"start":{},"end":{}}],"line":70},"2":{"loc":{"start":{"line":71,"column":4},"end":{"line":74,"column":5}},"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":74,"column":5}},{"start":{},"end":{}}],"line":71},"3":{"loc":{"start":{"line":80,"column":6},"end":{"line":84,"column":7}},"type":"if","locations":[{"start":{"line":80,"column":6},"end":{"line":84,"column":7}},{"start":{},"end":{}}],"line":80},"4":{"loc":{"start":{"line":80,"column":10},"end":{"line":80,"column":59}},"type":"binary-expr","locations":[{"start":{"line":80,"column":10},"end":{"line":80,"column":44}},{"start":{"line":80,"column":48},"end":{"line":80,"column":59}}],"line":80},"5":{"loc":{"start":{"line":82,"column":10},"end":{"line":82,"column":67}},"type":"if","locations":[{"start":{"line":82,"column":10},"end":{"line":82,"column":67}},{"start":{},"end":{}}],"line":82},"6":{"loc":{"start":{"line":87,"column":4},"end":{"line":97,"column":5}},"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":97,"column":5}},{"start":{},"end":{}}],"line":87},"7":{"loc":{"start":{"line":90,"column":8},"end":{"line":92,"column":9}},"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":92,"column":9}},{"start":{},"end":{}}],"line":90},"8":{"loc":{"start":{"line":94,"column":6},"end":{"line":96,"column":7}},"type":"if","locations":[{"start":{"line":94,"column":6},"end":{"line":96,"column":7}},{"start":{},"end":{}}],"line":94},"9":{"loc":{"start":{"line":111,"column":20},"end":{"line":111,"column":103}},"type":"binary-expr","locations":[{"start":{"line":111,"column":20},"end":{"line":111,"column":46}},{"start":{"line":111,"column":50},"end":{"line":111,"column":103}}],"line":111},"10":{"loc":{"start":{"line":127,"column":4},"end":{"line":130,"column":5}},"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":130,"column":5}},{"start":{},"end":{}}],"line":127},"11":{"loc":{"start":{"line":134,"column":4},"end":{"line":145,"column":5}},"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":145,"column":5}},{"start":{},"end":{}}],"line":134},"12":{"loc":{"start":{"line":134,"column":8},"end":{"line":134,"column":86}},"type":"binary-expr","locations":[{"start":{"line":134,"column":8},"end":{"line":134,"column":27}},{"start":{"line":134,"column":31},"end":{"line":134,"column":45}},{"start":{"line":134,"column":49},"end":{"line":134,"column":66}},{"start":{"line":134,"column":70},"end":{"line":134,"column":86}}],"line":134},"13":{"loc":{"start":{"line":136,"column":24},"end":{"line":136,"column":66}},"type":"binary-expr","locations":[{"start":{"line":136,"column":24},"end":{"line":136,"column":43}},{"start":{"line":136,"column":47},"end":{"line":136,"column":66}}],"line":136},"14":{"loc":{"start":{"line":142,"column":6},"end":{"line":142,"column":60}},"type":"if","locations":[{"start":{"line":142,"column":6},"end":{"line":142,"column":60}},{"start":{},"end":{}}],"line":142},"15":{"loc":{"start":{"line":157,"column":11},"end":{"line":157,"column":50}},"type":"cond-expr","locations":[{"start":{"line":157,"column":19},"end":{"line":157,"column":45}},{"start":{"line":157,"column":48},"end":{"line":157,"column":50}}],"line":157},"16":{"loc":{"start":{"line":162,"column":4},"end":{"line":162,"column":86}},"type":"if","locations":[{"start":{"line":162,"column":4},"end":{"line":162,"column":86}},{"start":{},"end":{}}],"line":162},"17":{"loc":{"start":{"line":162,"column":8},"end":{"line":162,"column":74}},"type":"binary-expr","locations":[{"start":{"line":162,"column":8},"end":{"line":162,"column":14}},{"start":{"line":162,"column":18},"end":{"line":162,"column":35}},{"start":{"line":162,"column":39},"end":{"line":162,"column":74}}],"line":162},"18":{"loc":{"start":{"line":171,"column":4},"end":{"line":175,"column":5}},"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":175,"column":5}},{"start":{"line":173,"column":11},"end":{"line":175,"column":5}}],"line":171},"19":{"loc":{"start":{"line":190,"column":4},"end":{"line":190,"column":25}},"type":"if","locations":[{"start":{"line":190,"column":4},"end":{"line":190,"column":25}},{"start":{},"end":{}}],"line":190},"20":{"loc":{"start":{"line":197,"column":8},"end":{"line":220,"column":9}},"type":"if","locations":[{"start":{"line":197,"column":8},"end":{"line":220,"column":9}},{"start":{"line":212,"column":15},"end":{"line":220,"column":9}}],"line":197},"21":{"loc":{"start":{"line":200,"column":12},"end":{"line":209,"column":13}},"type":"if","locations":[{"start":{"line":200,"column":12},"end":{"line":209,"column":13}},{"start":{"line":207,"column":19},"end":{"line":209,"column":13}}],"line":200},"22":{"loc":{"start":{"line":200,"column":16},"end":{"line":200,"column":57}},"type":"binary-expr","locations":[{"start":{"line":200,"column":16},"end":{"line":200,"column":35}},{"start":{"line":200,"column":39},"end":{"line":200,"column":57}}],"line":200},"23":{"loc":{"start":{"line":202,"column":16},"end":{"line":205,"column":17}},"type":"if","locations":[{"start":{"line":202,"column":16},"end":{"line":205,"column":17}},{"start":{},"end":{}}],"line":202},"24":{"loc":{"start":{"line":206,"column":72},"end":{"line":206,"column":118}},"type":"cond-expr","locations":[{"start":{"line":206,"column":102},"end":{"line":206,"column":111}},{"start":{"line":206,"column":114},"end":{"line":206,"column":118}}],"line":206},"25":{"loc":{"start":{"line":208,"column":47},"end":{"line":208,"column":72}},"type":"binary-expr","locations":[{"start":{"line":208,"column":47},"end":{"line":208,"column":66}},{"start":{"line":208,"column":70},"end":{"line":208,"column":72}}],"line":208},"26":{"loc":{"start":{"line":211,"column":73},"end":{"line":211,"column":124}},"type":"cond-expr","locations":[{"start":{"line":211,"column":104},"end":{"line":211,"column":116}},{"start":{"line":211,"column":119},"end":{"line":211,"column":124}}],"line":211},"27":{"loc":{"start":{"line":213,"column":12},"end":{"line":216,"column":13}},"type":"if","locations":[{"start":{"line":213,"column":12},"end":{"line":216,"column":13}},{"start":{},"end":{}}],"line":213},"28":{"loc":{"start":{"line":224,"column":4},"end":{"line":224,"column":59}},"type":"if","locations":[{"start":{"line":224,"column":4},"end":{"line":224,"column":59}},{"start":{},"end":{}}],"line":224},"29":{"loc":{"start":{"line":231,"column":43},"end":{"line":231,"column":128}},"type":"cond-expr","locations":[{"start":{"line":231,"column":65},"end":{"line":231,"column":96}},{"start":{"line":231,"column":99},"end":{"line":231,"column":128}}],"line":231},"30":{"loc":{"start":{"line":236,"column":4},"end":{"line":236,"column":25}},"type":"if","locations":[{"start":{"line":236,"column":4},"end":{"line":236,"column":25}},{"start":{},"end":{}}],"line":236},"31":{"loc":{"start":{"line":238,"column":6},"end":{"line":238,"column":61}},"type":"if","locations":[{"start":{"line":238,"column":6},"end":{"line":238,"column":61}},{"start":{},"end":{}}],"line":238},"32":{"loc":{"start":{"line":238,"column":10},"end":{"line":238,"column":52}},"type":"binary-expr","locations":[{"start":{"line":238,"column":10},"end":{"line":238,"column":23}},{"start":{"line":238,"column":27},"end":{"line":238,"column":52}}],"line":238},"33":{"loc":{"start":{"line":244,"column":10},"end":{"line":253,"column":11}},"type":"if","locations":[{"start":{"line":244,"column":10},"end":{"line":253,"column":11}},{"start":{"line":249,"column":17},"end":{"line":253,"column":11}}],"line":244},"34":{"loc":{"start":{"line":246,"column":51},"end":{"line":246,"column":76}},"type":"binary-expr","locations":[{"start":{"line":246,"column":51},"end":{"line":246,"column":70}},{"start":{"line":246,"column":74},"end":{"line":246,"column":76}}],"line":246},"35":{"loc":{"start":{"line":248,"column":73},"end":{"line":248,"column":124}},"type":"cond-expr","locations":[{"start":{"line":248,"column":104},"end":{"line":248,"column":116}},{"start":{"line":248,"column":119},"end":{"line":248,"column":124}}],"line":248},"36":{"loc":{"start":{"line":257,"column":33},"end":{"line":257,"column":88}},"type":"if","locations":[{"start":{"line":257,"column":33},"end":{"line":257,"column":88}},{"start":{},"end":{}}],"line":257},"37":{"loc":{"start":{"line":270,"column":4},"end":{"line":270,"column":25}},"type":"if","locations":[{"start":{"line":270,"column":4},"end":{"line":270,"column":25}},{"start":{},"end":{}}],"line":270},"38":{"loc":{"start":{"line":275,"column":8},"end":{"line":285,"column":9}},"type":"if","locations":[{"start":{"line":275,"column":8},"end":{"line":285,"column":9}},{"start":{"line":281,"column":15},"end":{"line":285,"column":9}}],"line":275},"39":{"loc":{"start":{"line":280,"column":62},"end":{"line":280,"column":100}},"type":"cond-expr","locations":[{"start":{"line":280,"column":79},"end":{"line":280,"column":92}},{"start":{"line":280,"column":95},"end":{"line":280,"column":100}}],"line":280},"40":{"loc":{"start":{"line":295,"column":4},"end":{"line":295,"column":25}},"type":"if","locations":[{"start":{"line":295,"column":4},"end":{"line":295,"column":25}},{"start":{},"end":{}}],"line":295},"41":{"loc":{"start":{"line":297,"column":4},"end":{"line":300,"column":5}},"type":"if","locations":[{"start":{"line":297,"column":4},"end":{"line":300,"column":5}},{"start":{},"end":{}}],"line":297},"42":{"loc":{"start":{"line":305,"column":4},"end":{"line":308,"column":5}},"type":"if","locations":[{"start":{"line":305,"column":4},"end":{"line":308,"column":5}},{"start":{},"end":{}}],"line":305},"43":{"loc":{"start":{"line":312,"column":6},"end":{"line":315,"column":7}},"type":"if","locations":[{"start":{"line":312,"column":6},"end":{"line":315,"column":7}},{"start":{},"end":{}}],"line":312},"44":{"loc":{"start":{"line":317,"column":6},"end":{"line":320,"column":7}},"type":"if","locations":[{"start":{"line":317,"column":6},"end":{"line":320,"column":7}},{"start":{},"end":{}}],"line":317},"45":{"loc":{"start":{"line":317,"column":10},"end":{"line":317,"column":81}},"type":"binary-expr","locations":[{"start":{"line":317,"column":10},"end":{"line":317,"column":31}},{"start":{"line":317,"column":35},"end":{"line":317,"column":81}}],"line":317},"46":{"loc":{"start":{"line":324,"column":6},"end":{"line":329,"column":7}},"type":"if","locations":[{"start":{"line":324,"column":6},"end":{"line":329,"column":7}},{"start":{"line":326,"column":13},"end":{"line":329,"column":7}}],"line":324},"47":{"loc":{"start":{"line":328,"column":50},"end":{"line":328,"column":96}},"type":"cond-expr","locations":[{"start":{"line":328,"column":76},"end":{"line":328,"column":88}},{"start":{"line":328,"column":91},"end":{"line":328,"column":96}}],"line":328},"48":{"loc":{"start":{"line":344,"column":37},"end":{"line":344,"column":77}},"type":"default-arg","locations":[{"start":{"line":344,"column":73},"end":{"line":344,"column":77}}],"line":344},"49":{"loc":{"start":{"line":344,"column":79},"end":{"line":344,"column":118}},"type":"default-arg","locations":[{"start":{"line":344,"column":114},"end":{"line":344,"column":118}}],"line":344},"50":{"loc":{"start":{"line":345,"column":4},"end":{"line":345,"column":25}},"type":"if","locations":[{"start":{"line":345,"column":4},"end":{"line":345,"column":25}},{"start":{},"end":{}}],"line":345},"51":{"loc":{"start":{"line":347,"column":4},"end":{"line":356,"column":5}},"type":"if","locations":[{"start":{"line":347,"column":4},"end":{"line":356,"column":5}},{"start":{"line":352,"column":11},"end":{"line":356,"column":5}}],"line":347},"52":{"loc":{"start":{"line":347,"column":8},"end":{"line":347,"column":48}},"type":"binary-expr","locations":[{"start":{"line":347,"column":8},"end":{"line":347,"column":18}},{"start":{"line":347,"column":22},"end":{"line":347,"column":48}}],"line":347},"53":{"loc":{"start":{"line":351,"column":6},"end":{"line":351,"column":72}},"type":"if","locations":[{"start":{"line":351,"column":6},"end":{"line":351,"column":72}},{"start":{},"end":{}}],"line":351},"54":{"loc":{"start":{"line":361,"column":4},"end":{"line":361,"column":25}},"type":"if","locations":[{"start":{"line":361,"column":4},"end":{"line":361,"column":25}},{"start":{},"end":{}}],"line":361},"55":{"loc":{"start":{"line":374,"column":4},"end":{"line":374,"column":30}},"type":"if","locations":[{"start":{"line":374,"column":4},"end":{"line":374,"column":30}},{"start":{},"end":{}}],"line":374},"56":{"loc":{"start":{"line":378,"column":6},"end":{"line":388,"column":7}},"type":"if","locations":[{"start":{"line":378,"column":6},"end":{"line":388,"column":7}},{"start":{"line":383,"column":13},"end":{"line":388,"column":7}}],"line":378},"57":{"loc":{"start":{"line":378,"column":10},"end":{"line":378,"column":38}},"type":"binary-expr","locations":[{"start":{"line":378,"column":10},"end":{"line":378,"column":18}},{"start":{"line":378,"column":22},"end":{"line":378,"column":38}}],"line":378},"58":{"loc":{"start":{"line":381,"column":30},"end":{"line":381,"column":75}},"type":"cond-expr","locations":[{"start":{"line":381,"column":58},"end":{"line":381,"column":71}},{"start":{"line":381,"column":74},"end":{"line":381,"column":75}}],"line":381},"59":{"loc":{"start":{"line":383,"column":13},"end":{"line":388,"column":7}},"type":"if","locations":[{"start":{"line":383,"column":13},"end":{"line":388,"column":7}},{"start":{"line":386,"column":13},"end":{"line":388,"column":7}}],"line":383},"60":{"loc":{"start":{"line":383,"column":17},"end":{"line":383,"column":49}},"type":"binary-expr","locations":[{"start":{"line":383,"column":17},"end":{"line":383,"column":26}},{"start":{"line":383,"column":30},"end":{"line":383,"column":49}}],"line":383},"61":{"loc":{"start":{"line":389,"column":6},"end":{"line":389,"column":67}},"type":"if","locations":[{"start":{"line":389,"column":6},"end":{"line":389,"column":67}},{"start":{},"end":{}}],"line":389},"62":{"loc":{"start":{"line":393,"column":50},"end":{"line":393,"column":178}},"type":"cond-expr","locations":[{"start":{"line":393,"column":75},"end":{"line":393,"column":88}},{"start":{"line":393,"column":91},"end":{"line":393,"column":178}}],"line":393},"63":{"loc":{"start":{"line":393,"column":93},"end":{"line":393,"column":177}},"type":"cond-expr","locations":[{"start":{"line":393,"column":104},"end":{"line":393,"column":139}},{"start":{"line":393,"column":142},"end":{"line":393,"column":177}}],"line":393},"64":{"loc":{"start":{"line":404,"column":29},"end":{"line":404,"column":84}},"type":"binary-expr","locations":[{"start":{"line":404,"column":29},"end":{"line":404,"column":54}},{"start":{"line":404,"column":58},"end":{"line":404,"column":84}}],"line":404},"65":{"loc":{"start":{"line":406,"column":4},"end":{"line":416,"column":5}},"type":"if","locations":[{"start":{"line":406,"column":4},"end":{"line":416,"column":5}},{"start":{},"end":{}}],"line":406},"66":{"loc":{"start":{"line":406,"column":8},"end":{"line":406,"column":70}},"type":"binary-expr","locations":[{"start":{"line":406,"column":8},"end":{"line":406,"column":25}},{"start":{"line":406,"column":29},"end":{"line":406,"column":49}},{"start":{"line":406,"column":53},"end":{"line":406,"column":70}}],"line":406},"67":{"loc":{"start":{"line":407,"column":6},"end":{"line":415,"column":7}},"type":"if","locations":[{"start":{"line":407,"column":6},"end":{"line":415,"column":7}},{"start":{"line":413,"column":13},"end":{"line":415,"column":7}}],"line":407},"68":{"loc":{"start":{"line":409,"column":8},"end":{"line":412,"column":9}},"type":"if","locations":[{"start":{"line":409,"column":8},"end":{"line":412,"column":9}},{"start":{},"end":{}}],"line":409},"69":{"loc":{"start":{"line":418,"column":4},"end":{"line":420,"column":5}},"type":"if","locations":[{"start":{"line":418,"column":4},"end":{"line":420,"column":5}},{"start":{},"end":{}}],"line":418},"70":{"loc":{"start":{"line":424,"column":4},"end":{"line":424,"column":42}},"type":"if","locations":[{"start":{"line":424,"column":4},"end":{"line":424,"column":42}},{"start":{},"end":{}}],"line":424},"71":{"loc":{"start":{"line":424,"column":8},"end":{"line":424,"column":33}},"type":"binary-expr","locations":[{"start":{"line":424,"column":8},"end":{"line":424,"column":16}},{"start":{"line":424,"column":20},"end":{"line":424,"column":33}}],"line":424},"72":{"loc":{"start":{"line":427,"column":6},"end":{"line":430,"column":7}},"type":"if","locations":[{"start":{"line":427,"column":6},"end":{"line":430,"column":7}},{"start":{},"end":{}}],"line":427},"73":{"loc":{"start":{"line":439,"column":4},"end":{"line":439,"column":42}},"type":"if","locations":[{"start":{"line":439,"column":4},"end":{"line":439,"column":42}},{"start":{},"end":{}}],"line":439},"74":{"loc":{"start":{"line":439,"column":8},"end":{"line":439,"column":33}},"type":"binary-expr","locations":[{"start":{"line":439,"column":8},"end":{"line":439,"column":16}},{"start":{"line":439,"column":20},"end":{"line":439,"column":33}}],"line":439},"75":{"loc":{"start":{"line":442,"column":6},"end":{"line":445,"column":7}},"type":"if","locations":[{"start":{"line":442,"column":6},"end":{"line":445,"column":7}},{"start":{},"end":{}}],"line":442},"76":{"loc":{"start":{"line":456,"column":4},"end":{"line":462,"column":5}},"type":"if","locations":[{"start":{"line":456,"column":4},"end":{"line":462,"column":5}},{"start":{},"end":{}}],"line":456},"77":{"loc":{"start":{"line":458,"column":8},"end":{"line":460,"column":9}},"type":"if","locations":[{"start":{"line":458,"column":8},"end":{"line":460,"column":9}},{"start":{},"end":{}}],"line":458},"78":{"loc":{"start":{"line":458,"column":12},"end":{"line":458,"column":232}},"type":"binary-expr","locations":[{"start":{"line":458,"column":12},"end":{"line":458,"column":21}},{"start":{"line":458,"column":25},"end":{"line":458,"column":63}},{"start":{"line":458,"column":67},"end":{"line":458,"column":104}},{"start":{"line":458,"column":108},"end":{"line":458,"column":143}},{"start":{"line":458,"column":147},"end":{"line":458,"column":180}},{"start":{"line":458,"column":184},"end":{"line":458,"column":214}},{"start":{"line":458,"column":218},"end":{"line":458,"column":232}}],"line":458},"79":{"loc":{"start":{"line":467,"column":133},"end":{"line":467,"column":187}},"type":"binary-expr","locations":[{"start":{"line":467,"column":133},"end":{"line":467,"column":142}},{"start":{"line":467,"column":146},"end":{"line":467,"column":160}},{"start":{"line":467,"column":164},"end":{"line":467,"column":187}}],"line":467},"80":{"loc":{"start":{"line":468,"column":7},"end":{"line":468,"column":219}},"type":"binary-expr","locations":[{"start":{"line":468,"column":7},"end":{"line":468,"column":21}},{"start":{"line":468,"column":26},"end":{"line":468,"column":218}}],"line":468},"81":{"loc":{"start":{"line":468,"column":49},"end":{"line":468,"column":118}},"type":"cond-expr","locations":[{"start":{"line":468,"column":83},"end":{"line":468,"column":105}},{"start":{"line":468,"column":108},"end":{"line":468,"column":118}}],"line":468},"82":{"loc":{"start":{"line":468,"column":141},"end":{"line":468,"column":186}},"type":"cond-expr","locations":[{"start":{"line":468,"column":165},"end":{"line":468,"column":174}},{"start":{"line":468,"column":177},"end":{"line":468,"column":186}}],"line":468},"83":{"loc":{"start":{"line":471,"column":7},"end":{"line":471,"column":197}},"type":"binary-expr","locations":[{"start":{"line":471,"column":7},"end":{"line":471,"column":15}},{"start":{"line":471,"column":20},"end":{"line":471,"column":196}}],"line":471},"84":{"loc":{"start":{"line":473,"column":7},"end":{"line":497,"column":7}},"type":"cond-expr","locations":[{"start":{"line":473,"column":24},"end":{"line":473,"column":208}},{"start":{"line":475,"column":8},"end":{"line":496,"column":10}}],"line":473},"85":{"loc":{"start":{"line":477,"column":50},"end":{"line":477,"column":77}},"type":"binary-expr","locations":[{"start":{"line":477,"column":50},"end":{"line":477,"column":64}},{"start":{"line":477,"column":68},"end":{"line":477,"column":77}}],"line":477},"86":{"loc":{"start":{"line":477,"column":108},"end":{"line":477,"column":128}},"type":"binary-expr","locations":[{"start":{"line":477,"column":108},"end":{"line":477,"column":119}},{"start":{"line":477,"column":123},"end":{"line":477,"column":128}}],"line":477},"87":{"loc":{"start":{"line":498,"column":99},"end":{"line":498,"column":127}},"type":"binary-expr","locations":[{"start":{"line":498,"column":99},"end":{"line":498,"column":108}},{"start":{"line":498,"column":112},"end":{"line":498,"column":127}}],"line":498},"88":{"loc":{"start":{"line":498,"column":189},"end":{"line":498,"column":214}},"type":"binary-expr","locations":[{"start":{"line":498,"column":189},"end":{"line":498,"column":197}},{"start":{"line":498,"column":201},"end":{"line":498,"column":214}}],"line":498},"89":{"loc":{"start":{"line":500,"column":7},"end":{"line":514,"column":7}},"type":"binary-expr","locations":[{"start":{"line":500,"column":7},"end":{"line":500,"column":23}},{"start":{"line":501,"column":10},"end":{"line":513,"column":12}}],"line":500},"90":{"loc":{"start":{"line":523,"column":145},"end":{"line":523,"column":181}},"type":"cond-expr","locations":[{"start":{"line":523,"column":165},"end":{"line":523,"column":172}},{"start":{"line":523,"column":175},"end":{"line":523,"column":181}}],"line":523},"91":{"loc":{"start":{"line":524,"column":50},"end":{"line":524,"column":84}},"type":"cond-expr","locations":[{"start":{"line":524,"column":70},"end":{"line":524,"column":79}},{"start":{"line":524,"column":82},"end":{"line":524,"column":84}}],"line":524},"92":{"loc":{"start":{"line":524,"column":92},"end":{"line":524,"column":126}},"type":"cond-expr","locations":[{"start":{"line":524,"column":112},"end":{"line":524,"column":114}},{"start":{"line":524,"column":117},"end":{"line":524,"column":126}}],"line":524}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0],"49":[0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0,0,0,0,0,0],"79":[0,0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\screens\\FoodListScreen.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\screens\\FoodListScreen.tsx","statementMap":{"0":{"start":{"line":21,"column":0},"end":{"line":23,"column":1}},"1":{"start":{"line":22,"column":2},"end":{"line":22,"column":56}},"2":{"start":{"line":26,"column":0},"end":{"line":36,"column":1}},"3":{"start":{"line":27,"column":2},"end":{"line":35,"column":4}},"4":{"start":{"line":28,"column":4},"end":{"line":34,"column":5}},"5":{"start":{"line":29,"column":25},"end":{"line":29,"column":42}},"6":{"start":{"line":30,"column":6},"end":{"line":30,"column":59}},"7":{"start":{"line":32,"column":6},"end":{"line":32,"column":51}},"8":{"start":{"line":33,"column":6},"end":{"line":33,"column":16}},"9":{"start":{"line":37,"column":0},"end":{"line":47,"column":1}},"10":{"start":{"line":38,"column":2},"end":{"line":46,"column":4}},"11":{"start":{"line":39,"column":5},"end":{"line":45,"column":6}},"12":{"start":{"line":40,"column":26},"end":{"line":40,"column":43}},"13":{"start":{"line":41,"column":7},"end":{"line":41,"column":60}},"14":{"start":{"line":43,"column":7},"end":{"line":43,"column":52}},"15":{"start":{"line":44,"column":7},"end":{"line":44,"column":17}},"16":{"start":{"line":56,"column":31},"end":{"line":72,"column":1}},"17":{"start":{"line":57,"column":19},"end":{"line":57,"column":65}},"18":{"start":{"line":58,"column":23},"end":{"line":58,"column":79}},"19":{"start":{"line":61,"column":4},"end":{"line":70,"column":5}},"20":{"start":{"line":62,"column":8},"end":{"line":62,"column":27}},"21":{"start":{"line":63,"column":11},"end":{"line":70,"column":5}},"22":{"start":{"line":64,"column":8},"end":{"line":64,"column":31}},"23":{"start":{"line":66,"column":8},"end":{"line":66,"column":51}},"24":{"start":{"line":67,"column":8},"end":{"line":69,"column":10}},"25":{"start":{"line":71,"column":4},"end":{"line":71,"column":74}},"26":{"start":{"line":74,"column":54},"end":{"line":474,"column":1}},"27":{"start":{"line":75,"column":42},"end":{"line":75,"column":62}},"28":{"start":{"line":76,"column":38},"end":{"line":76,"column":89}},"29":{"start":{"line":77,"column":38},"end":{"line":77,"column":52}},"30":{"start":{"line":78,"column":52},"end":{"line":78,"column":67}},"31":{"start":{"line":79,"column":32},"end":{"line":79,"column":44}},"32":{"start":{"line":80,"column":40},"end":{"line":80,"column":73}},"33":{"start":{"line":81,"column":38},"end":{"line":81,"column":49}},"34":{"start":{"line":82,"column":34},"end":{"line":82,"column":132}},"35":{"start":{"line":83,"column":36},"end":{"line":83,"column":63}},"36":{"start":{"line":84,"column":32},"end":{"line":84,"column":71}},"37":{"start":{"line":85,"column":36},"end":{"line":85,"column":51}},"38":{"start":{"line":86,"column":54},"end":{"line":86,"column":69}},"39":{"start":{"line":88,"column":22},"end":{"line":88,"column":32}},"40":{"start":{"line":89,"column":19},"end":{"line":89,"column":30}},"41":{"start":{"line":90,"column":29},"end":{"line":90,"column":64}},"42":{"start":{"line":91,"column":26},"end":{"line":91,"column":51}},"43":{"start":{"line":92,"column":56},"end":{"line":92,"column":101}},"44":{"start":{"line":95,"column":18},"end":{"line":95,"column":53}},"45":{"start":{"line":96,"column":23},"end":{"line":96,"column":68}},"46":{"start":{"line":98,"column":24},"end":{"line":102,"column":11}},"47":{"start":{"line":98,"column":81},"end":{"line":102,"column":5}},"48":{"start":{"line":104,"column":29},"end":{"line":109,"column":5}},"49":{"start":{"line":105,"column":8},"end":{"line":105,"column":42}},"50":{"start":{"line":105,"column":35},"end":{"line":105,"column":42}},"51":{"start":{"line":106,"column":8},"end":{"line":106,"column":28}},"52":{"start":{"line":107,"column":8},"end":{"line":107,"column":48}},"53":{"start":{"line":108,"column":8},"end":{"line":108,"column":36}},"54":{"start":{"line":111,"column":27},"end":{"line":116,"column":5}},"55":{"start":{"line":112,"column":8},"end":{"line":115,"column":11}},"56":{"start":{"line":113,"column":12},"end":{"line":113,"column":67}},"57":{"start":{"line":114,"column":12},"end":{"line":114,"column":53}},"58":{"start":{"line":118,"column":32},"end":{"line":129,"column":19}},"59":{"start":{"line":119,"column":8},"end":{"line":119,"column":63}},"60":{"start":{"line":119,"column":56},"end":{"line":119,"column":63}},"61":{"start":{"line":120,"column":65},"end":{"line":120,"column":67}},"62":{"start":{"line":121,"column":8},"end":{"line":125,"column":11}},"63":{"start":{"line":122,"column":12},"end":{"line":124,"column":13}},"64":{"start":{"line":123,"column":16},"end":{"line":123,"column":70}},"65":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"66":{"start":{"line":127,"column":12},"end":{"line":127,"column":77}},"67":{"start":{"line":127,"column":39},"end":{"line":127,"column":74}},"68":{"start":{"line":131,"column":4},"end":{"line":151,"column":6}},"69":{"start":{"line":133,"column":23},"end":{"line":133,"column":27}},"70":{"start":{"line":134,"column":29},"end":{"line":147,"column":9}},"71":{"start":{"line":135,"column":10},"end":{"line":135,"column":29}},"72":{"start":{"line":136,"column":10},"end":{"line":146,"column":11}},"73":{"start":{"line":137,"column":30},"end":{"line":137,"column":46}},"74":{"start":{"line":138,"column":12},"end":{"line":141,"column":13}},"75":{"start":{"line":139,"column":14},"end":{"line":139,"column":36}},"76":{"start":{"line":140,"column":14},"end":{"line":140,"column":41}},"77":{"start":{"line":143,"column":12},"end":{"line":143,"column":107}},"78":{"start":{"line":143,"column":26},"end":{"line":143,"column":107}},"79":{"start":{"line":145,"column":12},"end":{"line":145,"column":46}},"80":{"start":{"line":145,"column":26},"end":{"line":145,"column":46}},"81":{"start":{"line":148,"column":8},"end":{"line":148,"column":23}},"82":{"start":{"line":149,"column":8},"end":{"line":149,"column":43}},"83":{"start":{"line":149,"column":23},"end":{"line":149,"column":40}},"84":{"start":{"line":153,"column":27},"end":{"line":187,"column":41}},"85":{"start":{"line":155,"column":37},"end":{"line":155,"column":64}},"86":{"start":{"line":157,"column":8},"end":{"line":173,"column":9}},"87":{"start":{"line":158,"column":29},"end":{"line":158,"column":52}},"88":{"start":{"line":161,"column":37},"end":{"line":163,"column":13}},"89":{"start":{"line":162,"column":16},"end":{"line":162,"column":70}},"90":{"start":{"line":164,"column":12},"end":{"line":164,"column":74}},"91":{"start":{"line":164,"column":45},"end":{"line":164,"column":72}},"92":{"start":{"line":167,"column":36},"end":{"line":167,"column":91}},"93":{"start":{"line":168,"column":12},"end":{"line":168,"column":73}},"94":{"start":{"line":168,"column":44},"end":{"line":168,"column":71}},"95":{"start":{"line":170,"column":12},"end":{"line":170,"column":50}},"96":{"start":{"line":172,"column":12},"end":{"line":172,"column":37}},"97":{"start":{"line":176,"column":8},"end":{"line":185,"column":9}},"98":{"start":{"line":177,"column":12},"end":{"line":177,"column":63}},"99":{"start":{"line":177,"column":33},"end":{"line":177,"column":61}},"100":{"start":{"line":179,"column":33},"end":{"line":179,"column":59}},"101":{"start":{"line":180,"column":12},"end":{"line":184,"column":15}},"102":{"start":{"line":181,"column":30},"end":{"line":181,"column":77}},"103":{"start":{"line":182,"column":30},"end":{"line":182,"column":77}},"104":{"start":{"line":183,"column":16},"end":{"line":183,"column":79}},"105":{"start":{"line":186,"column":8},"end":{"line":186,"column":21}},"106":{"start":{"line":189,"column":26},"end":{"line":200,"column":18}},"107":{"start":{"line":190,"column":8},"end":{"line":190,"column":29}},"108":{"start":{"line":190,"column":22},"end":{"line":190,"column":29}},"109":{"start":{"line":191,"column":8},"end":{"line":197,"column":9}},"110":{"start":{"line":192,"column":12},"end":{"line":192,"column":43}},"111":{"start":{"line":193,"column":12},"end":{"line":193,"column":80}},"112":{"start":{"line":195,"column":12},"end":{"line":195,"column":30}},"113":{"start":{"line":196,"column":12},"end":{"line":196,"column":80}},"114":{"start":{"line":198,"column":8},"end":{"line":198,"column":22}},"115":{"start":{"line":199,"column":8},"end":{"line":199,"column":43}},"116":{"start":{"line":199,"column":36},"end":{"line":199,"column":41}},"117":{"start":{"line":202,"column":4},"end":{"line":242,"column":71}},"118":{"start":{"line":203,"column":21},"end":{"line":203,"column":33}},"119":{"start":{"line":204,"column":6},"end":{"line":241,"column":7}},"120":{"start":{"line":205,"column":8},"end":{"line":208,"column":9}},"121":{"start":{"line":206,"column":10},"end":{"line":206,"column":26}},"122":{"start":{"line":207,"column":10},"end":{"line":207,"column":64}},"123":{"start":{"line":209,"column":8},"end":{"line":240,"column":9}},"124":{"start":{"line":210,"column":10},"end":{"line":239,"column":11}},"125":{"start":{"line":212,"column":22},"end":{"line":212,"column":75}},"126":{"start":{"line":213,"column":33},"end":{"line":213,"column":42}},"127":{"start":{"line":214,"column":30},"end":{"line":214,"column":65}},"128":{"start":{"line":215,"column":12},"end":{"line":215,"column":100}},"129":{"start":{"line":215,"column":25},"end":{"line":215,"column":26}},"130":{"start":{"line":215,"column":58},"end":{"line":215,"column":100}},"131":{"start":{"line":216,"column":32},"end":{"line":216,"column":67}},"132":{"start":{"line":217,"column":39},"end":{"line":217,"column":62}},"133":{"start":{"line":220,"column":66},"end":{"line":226,"column":13}},"134":{"start":{"line":228,"column":12},"end":{"line":234,"column":13}},"135":{"start":{"line":229,"column":14},"end":{"line":229,"column":40}},"136":{"start":{"line":230,"column":14},"end":{"line":230,"column":32}},"137":{"start":{"line":231,"column":14},"end":{"line":231,"column":40}},"138":{"start":{"line":233,"column":14},"end":{"line":233,"column":107}},"139":{"start":{"line":236,"column":12},"end":{"line":236,"column":104}},"140":{"start":{"line":238,"column":12},"end":{"line":238,"column":58}},"141":{"start":{"line":244,"column":29},"end":{"line":259,"column":11}},"142":{"start":{"line":245,"column":8},"end":{"line":245,"column":21}},"143":{"start":{"line":246,"column":8},"end":{"line":249,"column":9}},"144":{"start":{"line":247,"column":12},"end":{"line":247,"column":51}},"145":{"start":{"line":248,"column":12},"end":{"line":248,"column":44}},"146":{"start":{"line":251,"column":8},"end":{"line":251,"column":77}},"147":{"start":{"line":252,"column":8},"end":{"line":252,"column":57}},"148":{"start":{"line":252,"column":31},"end":{"line":252,"column":55}},"149":{"start":{"line":253,"column":8},"end":{"line":258,"column":11}},"150":{"start":{"line":261,"column":29},"end":{"line":291,"column":56}},"151":{"start":{"line":262,"column":29},"end":{"line":262,"column":67}},"152":{"start":{"line":262,"column":51},"end":{"line":262,"column":66}},"153":{"start":{"line":263,"column":8},"end":{"line":263,"column":34}},"154":{"start":{"line":263,"column":27},"end":{"line":263,"column":34}},"155":{"start":{"line":265,"column":8},"end":{"line":265,"column":77}},"156":{"start":{"line":265,"column":38},"end":{"line":265,"column":77}},"157":{"start":{"line":267,"column":8},"end":{"line":267,"column":77}},"158":{"start":{"line":268,"column":8},"end":{"line":268,"column":66}},"159":{"start":{"line":268,"column":31},"end":{"line":268,"column":64}},"160":{"start":{"line":268,"column":48},"end":{"line":268,"column":63}},"161":{"start":{"line":270,"column":8},"end":{"line":280,"column":17}},"162":{"start":{"line":271,"column":12},"end":{"line":279,"column":17}},"163":{"start":{"line":273,"column":18},"end":{"line":273,"column":35}},"164":{"start":{"line":274,"column":18},"end":{"line":274,"column":63}},"165":{"start":{"line":277,"column":18},"end":{"line":277,"column":103}},"166":{"start":{"line":278,"column":18},"end":{"line":278,"column":66}},"167":{"start":{"line":278,"column":41},"end":{"line":278,"column":64}},"168":{"start":{"line":282,"column":8},"end":{"line":290,"column":11}},"169":{"start":{"line":288,"column":27},"end":{"line":288,"column":57}},"170":{"start":{"line":293,"column":27},"end":{"line":295,"column":20}},"171":{"start":{"line":294,"column":8},"end":{"line":294,"column":81}},"172":{"start":{"line":297,"column":25},"end":{"line":305,"column":5}},"173":{"start":{"line":298,"column":53},"end":{"line":298,"column":55}},"174":{"start":{"line":299,"column":8},"end":{"line":299,"column":82}},"175":{"start":{"line":299,"column":46},"end":{"line":299,"column":82}},"176":{"start":{"line":300,"column":8},"end":{"line":300,"column":128}},"177":{"start":{"line":300,"column":75},"end":{"line":300,"column":128}},"178":{"start":{"line":301,"column":8},"end":{"line":301,"column":125}},"179":{"start":{"line":301,"column":73},"end":{"line":301,"column":125}},"180":{"start":{"line":302,"column":8},"end":{"line":302,"column":119}},"181":{"start":{"line":302,"column":69},"end":{"line":302,"column":119}},"182":{"start":{"line":303,"column":8},"end":{"line":303,"column":113}},"183":{"start":{"line":303,"column":65},"end":{"line":303,"column":113}},"184":{"start":{"line":304,"column":8},"end":{"line":304,"column":70}},"185":{"start":{"line":307,"column":29},"end":{"line":320,"column":5}},"186":{"start":{"line":308,"column":28},"end":{"line":308,"column":69}},"187":{"start":{"line":309,"column":8},"end":{"line":309,"column":139}},"188":{"start":{"line":309,"column":41},"end":{"line":309,"column":129}},"189":{"start":{"line":309,"column":130},"end":{"line":309,"column":137}},"190":{"start":{"line":310,"column":8},"end":{"line":310,"column":26}},"191":{"start":{"line":311,"column":8},"end":{"line":319,"column":41}},"192":{"start":{"line":312,"column":28},"end":{"line":312,"column":57}},"193":{"start":{"line":313,"column":12},"end":{"line":313,"column":81}},"194":{"start":{"line":314,"column":12},"end":{"line":314,"column":55}},"195":{"start":{"line":314,"column":35},"end":{"line":314,"column":53}},"196":{"start":{"line":315,"column":12},"end":{"line":315,"column":39}},"197":{"start":{"line":315,"column":40},"end":{"line":315,"column":57}},"198":{"start":{"line":316,"column":12},"end":{"line":316,"column":130}},"199":{"start":{"line":317,"column":12},"end":{"line":317,"column":80}},"200":{"start":{"line":318,"column":31},"end":{"line":318,"column":133}},"201":{"start":{"line":319,"column":20},"end":{"line":319,"column":39}},"202":{"start":{"line":322,"column":29},"end":{"line":336,"column":5}},"203":{"start":{"line":323,"column":8},"end":{"line":323,"column":30}},"204":{"start":{"line":323,"column":23},"end":{"line":323,"column":30}},"205":{"start":{"line":324,"column":28},"end":{"line":324,"column":71}},"206":{"start":{"line":325,"column":8},"end":{"line":325,"column":139}},"207":{"start":{"line":325,"column":41},"end":{"line":325,"column":129}},"208":{"start":{"line":325,"column":130},"end":{"line":325,"column":137}},"209":{"start":{"line":326,"column":8},"end":{"line":326,"column":26}},"210":{"start":{"line":327,"column":8},"end":{"line":335,"column":41}},"211":{"start":{"line":328,"column":28},"end":{"line":328,"column":57}},"212":{"start":{"line":329,"column":12},"end":{"line":329,"column":81}},"213":{"start":{"line":330,"column":12},"end":{"line":330,"column":87}},"214":{"start":{"line":330,"column":35},"end":{"line":330,"column":85}},"215":{"start":{"line":330,"column":50},"end":{"line":330,"column":83}},"216":{"start":{"line":331,"column":12},"end":{"line":331,"column":39}},"217":{"start":{"line":331,"column":40},"end":{"line":331,"column":57}},"218":{"start":{"line":332,"column":12},"end":{"line":332,"column":132}},"219":{"start":{"line":333,"column":12},"end":{"line":333,"column":30}},"220":{"start":{"line":334,"column":31},"end":{"line":334,"column":133}},"221":{"start":{"line":335,"column":20},"end":{"line":335,"column":39}},"222":{"start":{"line":338,"column":28},"end":{"line":353,"column":11}},"223":{"start":{"line":339,"column":48},"end":{"line":342,"column":9}},"224":{"start":{"line":343,"column":8},"end":{"line":352,"column":116}},"225":{"start":{"line":344,"column":31},"end":{"line":344,"column":62}},"226":{"start":{"line":345,"column":30},"end":{"line":345,"column":66}},"227":{"start":{"line":346,"column":31},"end":{"line":346,"column":33}},"228":{"start":{"line":347,"column":12},"end":{"line":347,"column":88}},"229":{"start":{"line":347,"column":42},"end":{"line":347,"column":84}},"230":{"start":{"line":348,"column":31},"end":{"line":348,"column":107}},"231":{"start":{"line":349,"column":35},"end":{"line":349,"column":59}},"232":{"start":{"line":350,"column":29},"end":{"line":350,"column":78}},"233":{"start":{"line":351,"column":12},"end":{"line":351,"column":127}},"234":{"start":{"line":352,"column":26},"end":{"line":352,"column":114}},"235":{"start":{"line":355,"column":30},"end":{"line":368,"column":5}},"236":{"start":{"line":356,"column":70},"end":{"line":356,"column":109}},"237":{"start":{"line":357,"column":46},"end":{"line":357,"column":51}},"238":{"start":{"line":358,"column":8},"end":{"line":362,"column":9}},"239":{"start":{"line":359,"column":12},"end":{"line":361,"column":110}},"240":{"start":{"line":359,"column":49},"end":{"line":359,"column":72}},"241":{"start":{"line":360,"column":35},"end":{"line":360,"column":91}},"242":{"start":{"line":361,"column":19},"end":{"line":361,"column":108}},"243":{"start":{"line":361,"column":70},"end":{"line":361,"column":95}},"244":{"start":{"line":361,"column":101},"end":{"line":361,"column":108}},"245":{"start":{"line":363,"column":28},"end":{"line":366,"column":9}},"246":{"start":{"line":364,"column":46},"end":{"line":364,"column":190}},"247":{"start":{"line":365,"column":12},"end":{"line":365,"column":55}},"248":{"start":{"line":367,"column":8},"end":{"line":367,"column":75}},"249":{"start":{"line":367,"column":20},"end":{"line":367,"column":45}},"250":{"start":{"line":367,"column":51},"end":{"line":367,"column":75}},"251":{"start":{"line":370,"column":31},"end":{"line":375,"column":10}},"252":{"start":{"line":371,"column":8},"end":{"line":374,"column":11}},"253":{"start":{"line":372,"column":12},"end":{"line":372,"column":49}},"254":{"start":{"line":372,"column":37},"end":{"line":372,"column":49}},"255":{"start":{"line":373,"column":12},"end":{"line":373,"column":45}},"256":{"start":{"line":377,"column":4},"end":{"line":384,"column":5}},"257":{"start":{"line":378,"column":8},"end":{"line":383,"column":10}},"258":{"start":{"line":386,"column":4},"end":{"line":473,"column":6}},"259":{"start":{"line":396,"column":31},"end":{"line":396,"column":44}},"260":{"start":{"line":415,"column":28},"end":{"line":418,"column":47}},"261":{"start":{"line":415,"column":108},"end":{"line":415,"column":131}},"262":{"start":{"line":426,"column":40},"end":{"line":426,"column":47}},"263":{"start":{"line":428,"column":20},"end":{"line":436,"column":22}},"264":{"start":{"line":454,"column":31},"end":{"line":454,"column":59}},"265":{"start":{"line":462,"column":37},"end":{"line":462,"column":76}},"266":{"start":{"line":476,"column":18},"end":{"line":539,"column":3}},"267":{"start":{"line":476,"column":41},"end":{"line":539,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":27,"column":16},"end":{"line":27,"column":17}},"loc":{"start":{"line":27,"column":41},"end":{"line":35,"column":3}},"line":27},"1":{"name":"(anonymous_1)","decl":{"start":{"line":38,"column":16},"end":{"line":38,"column":17}},"loc":{"start":{"line":38,"column":41},"end":{"line":46,"column":3}},"line":38},"2":{"name":"(anonymous_2)","decl":{"start":{"line":56,"column":31},"end":{"line":56,"column":32}},"loc":{"start":{"line":56,"column":45},"end":{"line":72,"column":1}},"line":56},"3":{"name":"(anonymous_3)","decl":{"start":{"line":74,"column":54},"end":{"line":74,"column":55}},"loc":{"start":{"line":74,"column":76},"end":{"line":474,"column":1}},"line":74},"4":{"name":"(anonymous_4)","decl":{"start":{"line":98,"column":75},"end":{"line":98,"column":76}},"loc":{"start":{"line":98,"column":81},"end":{"line":102,"column":5}},"line":98},"5":{"name":"(anonymous_5)","decl":{"start":{"line":104,"column":29},"end":{"line":104,"column":30}},"loc":{"start":{"line":104,"column":48},"end":{"line":109,"column":5}},"line":104},"6":{"name":"(anonymous_6)","decl":{"start":{"line":111,"column":27},"end":{"line":111,"column":28}},"loc":{"start":{"line":111,"column":33},"end":{"line":116,"column":5}},"line":111},"7":{"name":"(anonymous_7)","decl":{"start":{"line":112,"column":39},"end":{"line":112,"column":40}},"loc":{"start":{"line":112,"column":124},"end":{"line":115,"column":9}},"line":112},"8":{"name":"(anonymous_8)","decl":{"start":{"line":118,"column":44},"end":{"line":118,"column":45}},"loc":{"start":{"line":118,"column":70},"end":{"line":129,"column":5}},"line":118},"9":{"name":"(anonymous_9)","decl":{"start":{"line":121,"column":29},"end":{"line":121,"column":30}},"loc":{"start":{"line":121,"column":37},"end":{"line":125,"column":9}},"line":121},"10":{"name":"(anonymous_10)","decl":{"start":{"line":127,"column":25},"end":{"line":127,"column":26}},"loc":{"start":{"line":127,"column":39},"end":{"line":127,"column":74}},"line":127},"11":{"name":"(anonymous_11)","decl":{"start":{"line":132,"column":18},"end":{"line":132,"column":19}},"loc":{"start":{"line":132,"column":24},"end":{"line":150,"column":7}},"line":132},"12":{"name":"(anonymous_12)","decl":{"start":{"line":134,"column":29},"end":{"line":134,"column":30}},"loc":{"start":{"line":134,"column":41},"end":{"line":147,"column":9}},"line":134},"13":{"name":"(anonymous_13)","decl":{"start":{"line":149,"column":15},"end":{"line":149,"column":16}},"loc":{"start":{"line":149,"column":21},"end":{"line":149,"column":42}},"line":149},"14":{"name":"(anonymous_14)","decl":{"start":{"line":153,"column":35},"end":{"line":153,"column":36}},"loc":{"start":{"line":153,"column":41},"end":{"line":187,"column":5}},"line":153},"15":{"name":"(anonymous_15)","decl":{"start":{"line":161,"column":56},"end":{"line":161,"column":57}},"loc":{"start":{"line":162,"column":16},"end":{"line":162,"column":70}},"line":162},"16":{"name":"(anonymous_16)","decl":{"start":{"line":164,"column":37},"end":{"line":164,"column":38}},"loc":{"start":{"line":164,"column":45},"end":{"line":164,"column":72}},"line":164},"17":{"name":"(anonymous_17)","decl":{"start":{"line":168,"column":36},"end":{"line":168,"column":37}},"loc":{"start":{"line":168,"column":44},"end":{"line":168,"column":71}},"line":168},"18":{"name":"(anonymous_18)","decl":{"start":{"line":177,"column":23},"end":{"line":177,"column":24}},"loc":{"start":{"line":177,"column":33},"end":{"line":177,"column":61}},"line":177},"19":{"name":"(anonymous_19)","decl":{"start":{"line":180,"column":23},"end":{"line":180,"column":24}},"loc":{"start":{"line":180,"column":33},"end":{"line":184,"column":13}},"line":180},"20":{"name":"(anonymous_20)","decl":{"start":{"line":189,"column":38},"end":{"line":189,"column":39}},"loc":{"start":{"line":189,"column":61},"end":{"line":200,"column":5}},"line":189},"21":{"name":"(anonymous_21)","decl":{"start":{"line":199,"column":28},"end":{"line":199,"column":29}},"loc":{"start":{"line":199,"column":36},"end":{"line":199,"column":41}},"line":199},"22":{"name":"(anonymous_22)","decl":{"start":{"line":202,"column":14},"end":{"line":202,"column":15}},"loc":{"start":{"line":202,"column":20},"end":{"line":242,"column":5}},"line":202},"23":{"name":"(anonymous_23)","decl":{"start":{"line":244,"column":41},"end":{"line":244,"column":42}},"loc":{"start":{"line":244,"column":66},"end":{"line":259,"column":5}},"line":244},"24":{"name":"(anonymous_24)","decl":{"start":{"line":252,"column":23},"end":{"line":252,"column":24}},"loc":{"start":{"line":252,"column":31},"end":{"line":252,"column":55}},"line":252},"25":{"name":"(anonymous_25)","decl":{"start":{"line":261,"column":41},"end":{"line":261,"column":42}},"loc":{"start":{"line":261,"column":61},"end":{"line":291,"column":5}},"line":261},"26":{"name":"(anonymous_26)","decl":{"start":{"line":262,"column":46},"end":{"line":262,"column":47}},"loc":{"start":{"line":262,"column":51},"end":{"line":262,"column":66}},"line":262},"27":{"name":"(anonymous_27)","decl":{"start":{"line":268,"column":23},"end":{"line":268,"column":24}},"loc":{"start":{"line":268,"column":31},"end":{"line":268,"column":64}},"line":268},"28":{"name":"(anonymous_28)","decl":{"start":{"line":268,"column":43},"end":{"line":268,"column":44}},"loc":{"start":{"line":268,"column":48},"end":{"line":268,"column":63}},"line":268},"29":{"name":"(anonymous_29)","decl":{"start":{"line":270,"column":46},"end":{"line":270,"column":47}},"loc":{"start":{"line":270,"column":52},"end":{"line":280,"column":9}},"line":270},"30":{"name":"(anonymous_30)","decl":{"start":{"line":272,"column":20},"end":{"line":272,"column":21}},"loc":{"start":{"line":272,"column":26},"end":{"line":275,"column":15}},"line":272},"31":{"name":"(anonymous_31)","decl":{"start":{"line":276,"column":21},"end":{"line":276,"column":22}},"loc":{"start":{"line":276,"column":30},"end":{"line":279,"column":15}},"line":276},"32":{"name":"(anonymous_32)","decl":{"start":{"line":278,"column":33},"end":{"line":278,"column":34}},"loc":{"start":{"line":278,"column":41},"end":{"line":278,"column":64}},"line":278},"33":{"name":"(anonymous_33)","decl":{"start":{"line":288,"column":21},"end":{"line":288,"column":22}},"loc":{"start":{"line":288,"column":27},"end":{"line":288,"column":57}},"line":288},"34":{"name":"(anonymous_34)","decl":{"start":{"line":293,"column":39},"end":{"line":293,"column":40}},"loc":{"start":{"line":293,"column":65},"end":{"line":295,"column":5}},"line":293},"35":{"name":"(anonymous_35)","decl":{"start":{"line":297,"column":25},"end":{"line":297,"column":26}},"loc":{"start":{"line":297,"column":118},"end":{"line":305,"column":5}},"line":297},"36":{"name":"(anonymous_36)","decl":{"start":{"line":307,"column":29},"end":{"line":307,"column":30}},"loc":{"start":{"line":307,"column":41},"end":{"line":320,"column":5}},"line":307},"37":{"name":"(anonymous_37)","decl":{"start":{"line":314,"column":27},"end":{"line":314,"column":28}},"loc":{"start":{"line":314,"column":35},"end":{"line":314,"column":53}},"line":314},"38":{"name":"(anonymous_38)","decl":{"start":{"line":322,"column":29},"end":{"line":322,"column":30}},"loc":{"start":{"line":322,"column":41},"end":{"line":336,"column":5}},"line":322},"39":{"name":"(anonymous_39)","decl":{"start":{"line":330,"column":27},"end":{"line":330,"column":28}},"loc":{"start":{"line":330,"column":35},"end":{"line":330,"column":85}},"line":330},"40":{"name":"(anonymous_40)","decl":{"start":{"line":330,"column":44},"end":{"line":330,"column":45}},"loc":{"start":{"line":330,"column":50},"end":{"line":330,"column":83}},"line":330},"41":{"name":"(anonymous_41)","decl":{"start":{"line":338,"column":40},"end":{"line":338,"column":41}},"loc":{"start":{"line":338,"column":69},"end":{"line":353,"column":5}},"line":338},"42":{"name":"(anonymous_42)","decl":{"start":{"line":347,"column":30},"end":{"line":347,"column":31}},"loc":{"start":{"line":347,"column":40},"end":{"line":347,"column":86}},"line":347},"43":{"name":"(anonymous_43)","decl":{"start":{"line":355,"column":30},"end":{"line":355,"column":31}},"loc":{"start":{"line":355,"column":109},"end":{"line":368,"column":5}},"line":355},"44":{"name":"(anonymous_44)","decl":{"start":{"line":363,"column":28},"end":{"line":363,"column":29}},"loc":{"start":{"line":363,"column":48},"end":{"line":366,"column":9}},"line":363},"45":{"name":"(anonymous_45)","decl":{"start":{"line":370,"column":43},"end":{"line":370,"column":44}},"loc":{"start":{"line":370,"column":82},"end":{"line":375,"column":5}},"line":370},"46":{"name":"(anonymous_46)","decl":{"start":{"line":371,"column":21},"end":{"line":371,"column":22}},"loc":{"start":{"line":371,"column":29},"end":{"line":374,"column":9}},"line":371},"47":{"name":"(anonymous_47)","decl":{"start":{"line":396,"column":25},"end":{"line":396,"column":26}},"loc":{"start":{"line":396,"column":31},"end":{"line":396,"column":44}},"line":396},"48":{"name":"(anonymous_48)","decl":{"start":{"line":414,"column":41},"end":{"line":414,"column":42}},"loc":{"start":{"line":415,"column":28},"end":{"line":418,"column":47}},"line":415},"49":{"name":"(anonymous_49)","decl":{"start":{"line":415,"column":102},"end":{"line":415,"column":103}},"loc":{"start":{"line":415,"column":108},"end":{"line":415,"column":131}},"line":415},"50":{"name":"(anonymous_50)","decl":{"start":{"line":426,"column":30},"end":{"line":426,"column":31}},"loc":{"start":{"line":426,"column":40},"end":{"line":426,"column":47}},"line":426},"51":{"name":"(anonymous_51)","decl":{"start":{"line":427,"column":28},"end":{"line":427,"column":29}},"loc":{"start":{"line":428,"column":20},"end":{"line":436,"column":22}},"line":428},"52":{"name":"(anonymous_52)","decl":{"start":{"line":454,"column":25},"end":{"line":454,"column":26}},"loc":{"start":{"line":454,"column":31},"end":{"line":454,"column":59}},"line":454},"53":{"name":"(anonymous_53)","decl":{"start":{"line":462,"column":31},"end":{"line":462,"column":32}},"loc":{"start":{"line":462,"column":37},"end":{"line":462,"column":76}},"line":462},"54":{"name":"(anonymous_54)","decl":{"start":{"line":476,"column":29},"end":{"line":476,"column":30}},"loc":{"start":{"line":476,"column":41},"end":{"line":539,"column":1}},"line":476}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":0},"end":{"line":23,"column":1}},"type":"if","locations":[{"start":{"line":21,"column":0},"end":{"line":23,"column":1}},{"start":{},"end":{}}],"line":21},"1":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":80}},"type":"binary-expr","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":29}},{"start":{"line":21,"column":33},"end":{"line":21,"column":80}}],"line":21},"2":{"loc":{"start":{"line":26,"column":0},"end":{"line":36,"column":1}},"type":"if","locations":[{"start":{"line":26,"column":0},"end":{"line":36,"column":1}},{"start":{},"end":{}}],"line":26},"3":{"loc":{"start":{"line":37,"column":0},"end":{"line":47,"column":1}},"type":"if","locations":[{"start":{"line":37,"column":0},"end":{"line":47,"column":1}},{"start":{},"end":{}}],"line":37},"4":{"loc":{"start":{"line":61,"column":4},"end":{"line":70,"column":5}},"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":70,"column":5}},{"start":{"line":63,"column":11},"end":{"line":70,"column":5}}],"line":61},"5":{"loc":{"start":{"line":63,"column":11},"end":{"line":70,"column":5}},"type":"if","locations":[{"start":{"line":63,"column":11},"end":{"line":70,"column":5}},{"start":{"line":65,"column":11},"end":{"line":70,"column":5}}],"line":63},"6":{"loc":{"start":{"line":105,"column":8},"end":{"line":105,"column":42}},"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":42}},{"start":{},"end":{}}],"line":105},"7":{"loc":{"start":{"line":105,"column":12},"end":{"line":105,"column":33}},"type":"binary-expr","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":21}},{"start":{"line":105,"column":25},"end":{"line":105,"column":33}}],"line":105},"8":{"loc":{"start":{"line":119,"column":8},"end":{"line":119,"column":63}},"type":"if","locations":[{"start":{"line":119,"column":8},"end":{"line":119,"column":63}},{"start":{},"end":{}}],"line":119},"9":{"loc":{"start":{"line":119,"column":12},"end":{"line":119,"column":54}},"type":"binary-expr","locations":[{"start":{"line":119,"column":12},"end":{"line":119,"column":25}},{"start":{"line":119,"column":29},"end":{"line":119,"column":54}}],"line":119},"10":{"loc":{"start":{"line":122,"column":12},"end":{"line":124,"column":13}},"type":"if","locations":[{"start":{"line":122,"column":12},"end":{"line":124,"column":13}},{"start":{},"end":{}}],"line":122},"11":{"loc":{"start":{"line":122,"column":16},"end":{"line":122,"column":63}},"type":"binary-expr","locations":[{"start":{"line":122,"column":16},"end":{"line":122,"column":25}},{"start":{"line":122,"column":29},"end":{"line":122,"column":63}}],"line":122},"12":{"loc":{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},"type":"if","locations":[{"start":{"line":126,"column":8},"end":{"line":128,"column":9}},{"start":{},"end":{}}],"line":126},"13":{"loc":{"start":{"line":138,"column":12},"end":{"line":141,"column":13}},"type":"if","locations":[{"start":{"line":138,"column":12},"end":{"line":141,"column":13}},{"start":{},"end":{}}],"line":138},"14":{"loc":{"start":{"line":143,"column":12},"end":{"line":143,"column":107}},"type":"if","locations":[{"start":{"line":143,"column":12},"end":{"line":143,"column":107}},{"start":{},"end":{}}],"line":143},"15":{"loc":{"start":{"line":145,"column":12},"end":{"line":145,"column":46}},"type":"if","locations":[{"start":{"line":145,"column":12},"end":{"line":145,"column":46}},{"start":{},"end":{}}],"line":145},"16":{"loc":{"start":{"line":157,"column":8},"end":{"line":173,"column":9}},"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":173,"column":9}},{"start":{"line":171,"column":15},"end":{"line":173,"column":9}}],"line":157},"17":{"loc":{"start":{"line":176,"column":8},"end":{"line":185,"column":9}},"type":"if","locations":[{"start":{"line":176,"column":8},"end":{"line":185,"column":9}},{"start":{"line":178,"column":15},"end":{"line":185,"column":9}}],"line":176},"18":{"loc":{"start":{"line":181,"column":39},"end":{"line":181,"column":66}},"type":"binary-expr","locations":[{"start":{"line":181,"column":39},"end":{"line":181,"column":50}},{"start":{"line":181,"column":54},"end":{"line":181,"column":66}}],"line":181},"19":{"loc":{"start":{"line":182,"column":39},"end":{"line":182,"column":66}},"type":"binary-expr","locations":[{"start":{"line":182,"column":39},"end":{"line":182,"column":50}},{"start":{"line":182,"column":54},"end":{"line":182,"column":66}}],"line":182},"20":{"loc":{"start":{"line":183,"column":23},"end":{"line":183,"column":78}},"type":"cond-expr","locations":[{"start":{"line":183,"column":49},"end":{"line":183,"column":62}},{"start":{"line":183,"column":65},"end":{"line":183,"column":78}}],"line":183},"21":{"loc":{"start":{"line":190,"column":8},"end":{"line":190,"column":29}},"type":"if","locations":[{"start":{"line":190,"column":8},"end":{"line":190,"column":29}},{"start":{},"end":{}}],"line":190},"22":{"loc":{"start":{"line":191,"column":8},"end":{"line":197,"column":9}},"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":197,"column":9}},{"start":{"line":194,"column":15},"end":{"line":197,"column":9}}],"line":191},"23":{"loc":{"start":{"line":204,"column":6},"end":{"line":241,"column":7}},"type":"if","locations":[{"start":{"line":204,"column":6},"end":{"line":241,"column":7}},{"start":{},"end":{}}],"line":204},"24":{"loc":{"start":{"line":205,"column":8},"end":{"line":208,"column":9}},"type":"if","locations":[{"start":{"line":205,"column":8},"end":{"line":208,"column":9}},{"start":{},"end":{}}],"line":205},"25":{"loc":{"start":{"line":205,"column":12},"end":{"line":205,"column":56}},"type":"binary-expr","locations":[{"start":{"line":205,"column":12},"end":{"line":205,"column":35}},{"start":{"line":205,"column":39},"end":{"line":205,"column":56}}],"line":205},"26":{"loc":{"start":{"line":209,"column":8},"end":{"line":240,"column":9}},"type":"if","locations":[{"start":{"line":209,"column":8},"end":{"line":240,"column":9}},{"start":{},"end":{}}],"line":209},"27":{"loc":{"start":{"line":209,"column":12},"end":{"line":209,"column":66}},"type":"binary-expr","locations":[{"start":{"line":209,"column":12},"end":{"line":209,"column":27}},{"start":{"line":209,"column":31},"end":{"line":209,"column":66}}],"line":209},"28":{"loc":{"start":{"line":221,"column":29},"end":{"line":221,"column":53}},"type":"binary-expr","locations":[{"start":{"line":221,"column":29},"end":{"line":221,"column":47}},{"start":{"line":221,"column":51},"end":{"line":221,"column":53}}],"line":221},"29":{"loc":{"start":{"line":222,"column":38},"end":{"line":222,"column":73}},"type":"binary-expr","locations":[{"start":{"line":222,"column":38},"end":{"line":222,"column":68}},{"start":{"line":222,"column":72},"end":{"line":222,"column":73}}],"line":222},"30":{"loc":{"start":{"line":223,"column":37},"end":{"line":223,"column":71}},"type":"binary-expr","locations":[{"start":{"line":223,"column":37},"end":{"line":223,"column":66}},{"start":{"line":223,"column":70},"end":{"line":223,"column":71}}],"line":223},"31":{"loc":{"start":{"line":224,"column":35},"end":{"line":224,"column":67}},"type":"binary-expr","locations":[{"start":{"line":224,"column":35},"end":{"line":224,"column":62}},{"start":{"line":224,"column":66},"end":{"line":224,"column":67}}],"line":224},"32":{"loc":{"start":{"line":225,"column":33},"end":{"line":225,"column":63}},"type":"binary-expr","locations":[{"start":{"line":225,"column":33},"end":{"line":225,"column":58}},{"start":{"line":225,"column":62},"end":{"line":225,"column":63}}],"line":225},"33":{"loc":{"start":{"line":228,"column":12},"end":{"line":234,"column":13}},"type":"if","locations":[{"start":{"line":228,"column":12},"end":{"line":234,"column":13}},{"start":{"line":232,"column":19},"end":{"line":234,"column":13}}],"line":228},"34":{"loc":{"start":{"line":246,"column":8},"end":{"line":249,"column":9}},"type":"if","locations":[{"start":{"line":246,"column":8},"end":{"line":249,"column":9}},{"start":{},"end":{}}],"line":246},"35":{"loc":{"start":{"line":263,"column":8},"end":{"line":263,"column":34}},"type":"if","locations":[{"start":{"line":263,"column":8},"end":{"line":263,"column":34}},{"start":{},"end":{}}],"line":263},"36":{"loc":{"start":{"line":265,"column":8},"end":{"line":265,"column":77}},"type":"if","locations":[{"start":{"line":265,"column":8},"end":{"line":265,"column":77}},{"start":{},"end":{}}],"line":265},"37":{"loc":{"start":{"line":299,"column":8},"end":{"line":299,"column":82}},"type":"if","locations":[{"start":{"line":299,"column":8},"end":{"line":299,"column":82}},{"start":{},"end":{}}],"line":299},"38":{"loc":{"start":{"line":300,"column":8},"end":{"line":300,"column":128}},"type":"if","locations":[{"start":{"line":300,"column":8},"end":{"line":300,"column":128}},{"start":{},"end":{}}],"line":300},"39":{"loc":{"start":{"line":300,"column":12},"end":{"line":300,"column":73}},"type":"binary-expr","locations":[{"start":{"line":300,"column":12},"end":{"line":300,"column":42}},{"start":{"line":300,"column":46},"end":{"line":300,"column":73}}],"line":300},"40":{"loc":{"start":{"line":301,"column":8},"end":{"line":301,"column":125}},"type":"if","locations":[{"start":{"line":301,"column":8},"end":{"line":301,"column":125}},{"start":{},"end":{}}],"line":301},"41":{"loc":{"start":{"line":301,"column":12},"end":{"line":301,"column":71}},"type":"binary-expr","locations":[{"start":{"line":301,"column":12},"end":{"line":301,"column":41}},{"start":{"line":301,"column":45},"end":{"line":301,"column":71}}],"line":301},"42":{"loc":{"start":{"line":302,"column":8},"end":{"line":302,"column":119}},"type":"if","locations":[{"start":{"line":302,"column":8},"end":{"line":302,"column":119}},{"start":{},"end":{}}],"line":302},"43":{"loc":{"start":{"line":302,"column":12},"end":{"line":302,"column":67}},"type":"binary-expr","locations":[{"start":{"line":302,"column":12},"end":{"line":302,"column":39}},{"start":{"line":302,"column":43},"end":{"line":302,"column":67}}],"line":302},"44":{"loc":{"start":{"line":303,"column":8},"end":{"line":303,"column":113}},"type":"if","locations":[{"start":{"line":303,"column":8},"end":{"line":303,"column":113}},{"start":{},"end":{}}],"line":303},"45":{"loc":{"start":{"line":303,"column":12},"end":{"line":303,"column":63}},"type":"binary-expr","locations":[{"start":{"line":303,"column":12},"end":{"line":303,"column":37}},{"start":{"line":303,"column":41},"end":{"line":303,"column":63}}],"line":303},"46":{"loc":{"start":{"line":304,"column":15},"end":{"line":304,"column":69}},"type":"cond-expr","locations":[{"start":{"line":304,"column":53},"end":{"line":304,"column":57}},{"start":{"line":304,"column":60},"end":{"line":304,"column":69}}],"line":304},"47":{"loc":{"start":{"line":309,"column":8},"end":{"line":309,"column":139}},"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":139}},{"start":{},"end":{}}],"line":309},"48":{"loc":{"start":{"line":318,"column":76},"end":{"line":318,"column":131}},"type":"binary-expr","locations":[{"start":{"line":318,"column":76},"end":{"line":318,"column":89}},{"start":{"line":318,"column":93},"end":{"line":318,"column":131}}],"line":318},"49":{"loc":{"start":{"line":323,"column":8},"end":{"line":323,"column":30}},"type":"if","locations":[{"start":{"line":323,"column":8},"end":{"line":323,"column":30}},{"start":{},"end":{}}],"line":323},"50":{"loc":{"start":{"line":325,"column":8},"end":{"line":325,"column":139}},"type":"if","locations":[{"start":{"line":325,"column":8},"end":{"line":325,"column":139}},{"start":{},"end":{}}],"line":325},"51":{"loc":{"start":{"line":330,"column":50},"end":{"line":330,"column":83}},"type":"cond-expr","locations":[{"start":{"line":330,"column":72},"end":{"line":330,"column":79}},{"start":{"line":330,"column":82},"end":{"line":330,"column":83}}],"line":330},"52":{"loc":{"start":{"line":334,"column":76},"end":{"line":334,"column":131}},"type":"binary-expr","locations":[{"start":{"line":334,"column":76},"end":{"line":334,"column":89}},{"start":{"line":334,"column":93},"end":{"line":334,"column":131}}],"line":334},"53":{"loc":{"start":{"line":358,"column":8},"end":{"line":362,"column":9}},"type":"if","locations":[{"start":{"line":358,"column":8},"end":{"line":362,"column":9}},{"start":{},"end":{}}],"line":358},"54":{"loc":{"start":{"line":359,"column":12},"end":{"line":361,"column":110}},"type":"if","locations":[{"start":{"line":359,"column":12},"end":{"line":361,"column":110}},{"start":{"line":360,"column":17},"end":{"line":361,"column":110}}],"line":359},"55":{"loc":{"start":{"line":359,"column":16},"end":{"line":359,"column":45}},"type":"binary-expr","locations":[{"start":{"line":359,"column":16},"end":{"line":359,"column":28}},{"start":{"line":359,"column":32},"end":{"line":359,"column":45}}],"line":359},"56":{"loc":{"start":{"line":361,"column":19},"end":{"line":361,"column":108}},"type":"if","locations":[{"start":{"line":361,"column":19},"end":{"line":361,"column":108}},{"start":{"line":361,"column":101},"end":{"line":361,"column":108}}],"line":361},"57":{"loc":{"start":{"line":361,"column":23},"end":{"line":361,"column":68}},"type":"binary-expr","locations":[{"start":{"line":361,"column":23},"end":{"line":361,"column":37}},{"start":{"line":361,"column":41},"end":{"line":361,"column":68}}],"line":361},"58":{"loc":{"start":{"line":364,"column":46},"end":{"line":364,"column":190}},"type":"cond-expr","locations":[{"start":{"line":364,"column":75},"end":{"line":364,"column":172}},{"start":{"line":364,"column":176},"end":{"line":364,"column":190}}],"line":364},"59":{"loc":{"start":{"line":364,"column":75},"end":{"line":364,"column":172}},"type":"cond-expr","locations":[{"start":{"line":364,"column":127},"end":{"line":364,"column":128}},{"start":{"line":364,"column":131},"end":{"line":364,"column":172}}],"line":364},"60":{"loc":{"start":{"line":364,"column":76},"end":{"line":364,"column":123}},"type":"binary-expr","locations":[{"start":{"line":364,"column":76},"end":{"line":364,"column":97}},{"start":{"line":364,"column":101},"end":{"line":364,"column":123}}],"line":364},"61":{"loc":{"start":{"line":364,"column":131},"end":{"line":364,"column":172}},"type":"binary-expr","locations":[{"start":{"line":364,"column":131},"end":{"line":364,"column":167}},{"start":{"line":364,"column":171},"end":{"line":364,"column":172}}],"line":364},"62":{"loc":{"start":{"line":367,"column":8},"end":{"line":367,"column":75}},"type":"if","locations":[{"start":{"line":367,"column":8},"end":{"line":367,"column":75}},{"start":{"line":367,"column":51},"end":{"line":367,"column":75}}],"line":367},"63":{"loc":{"start":{"line":372,"column":12},"end":{"line":372,"column":49}},"type":"if","locations":[{"start":{"line":372,"column":12},"end":{"line":372,"column":49}},{"start":{},"end":{}}],"line":372},"64":{"loc":{"start":{"line":377,"column":4},"end":{"line":384,"column":5}},"type":"if","locations":[{"start":{"line":377,"column":4},"end":{"line":384,"column":5}},{"start":{},"end":{}}],"line":377},"65":{"loc":{"start":{"line":411,"column":118},"end":{"line":411,"column":170}},"type":"cond-expr","locations":[{"start":{"line":411,"column":138},"end":{"line":411,"column":147}},{"start":{"line":411,"column":150},"end":{"line":411,"column":170}}],"line":411},"66":{"loc":{"start":{"line":411,"column":179},"end":{"line":411,"column":258}},"type":"cond-expr","locations":[{"start":{"line":411,"column":199},"end":{"line":411,"column":246}},{"start":{"line":411,"column":249},"end":{"line":411,"column":258}}],"line":411},"67":{"loc":{"start":{"line":411,"column":200},"end":{"line":411,"column":240}},"type":"binary-expr","locations":[{"start":{"line":411,"column":200},"end":{"line":411,"column":235}},{"start":{"line":411,"column":239},"end":{"line":411,"column":240}}],"line":411},"68":{"loc":{"start":{"line":417,"column":33},"end":{"line":417,"column":145}},"type":"binary-expr","locations":[{"start":{"line":417,"column":33},"end":{"line":417,"column":52}},{"start":{"line":417,"column":56},"end":{"line":417,"column":145}}],"line":417},"69":{"loc":{"start":{"line":442,"column":29},"end":{"line":442,"column":140}},"type":"cond-expr","locations":[{"start":{"line":442,"column":45},"end":{"line":442,"column":105}},{"start":{"line":442,"column":108},"end":{"line":442,"column":140}}],"line":442},"70":{"loc":{"start":{"line":444,"column":25},"end":{"line":444,"column":126}},"type":"binary-expr","locations":[{"start":{"line":444,"column":25},"end":{"line":444,"column":39}},{"start":{"line":444,"column":43},"end":{"line":444,"column":126}}],"line":444},"71":{"loc":{"start":{"line":447,"column":39},"end":{"line":447,"column":131}},"type":"cond-expr","locations":[{"start":{"line":447,"column":69},"end":{"line":447,"column":101}},{"start":{"line":447,"column":104},"end":{"line":447,"column":131}}],"line":447},"72":{"loc":{"start":{"line":454,"column":31},"end":{"line":454,"column":59}},"type":"binary-expr","locations":[{"start":{"line":454,"column":31},"end":{"line":454,"column":40}},{"start":{"line":454,"column":44},"end":{"line":454,"column":59}}],"line":454},"73":{"loc":{"start":{"line":460,"column":13},"end":{"line":471,"column":14}},"type":"binary-expr","locations":[{"start":{"line":460,"column":13},"end":{"line":460,"column":29}},{"start":{"line":460,"column":33},"end":{"line":471,"column":14}}],"line":460},"74":{"loc":{"start":{"line":462,"column":37},"end":{"line":462,"column":76}},"type":"binary-expr","locations":[{"start":{"line":462,"column":37},"end":{"line":462,"column":46}},{"start":{"line":462,"column":50},"end":{"line":462,"column":76}}],"line":462},"75":{"loc":{"start":{"line":487,"column":48},"end":{"line":487,"column":91}},"type":"binary-expr","locations":[{"start":{"line":487,"column":48},"end":{"line":487,"column":69}},{"start":{"line":487,"column":73},"end":{"line":487,"column":91}}],"line":487},"76":{"loc":{"start":{"line":488,"column":75},"end":{"line":488,"column":111}},"type":"cond-expr","locations":[{"start":{"line":488,"column":95},"end":{"line":488,"column":102}},{"start":{"line":488,"column":105},"end":{"line":488,"column":111}}],"line":488},"77":{"loc":{"start":{"line":536,"column":49},"end":{"line":536,"column":83}},"type":"cond-expr","locations":[{"start":{"line":536,"column":69},"end":{"line":536,"column":78}},{"start":{"line":536,"column":81},"end":{"line":536,"column":83}}],"line":536},"78":{"loc":{"start":{"line":537,"column":14},"end":{"line":537,"column":48}},"type":"cond-expr","locations":[{"start":{"line":537,"column":34},"end":{"line":537,"column":36}},{"start":{"line":537,"column":39},"end":{"line":537,"column":48}}],"line":537}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\screens\\ForgotPasswordScreen.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\screens\\ForgotPasswordScreen.tsx","statementMap":{"0":{"start":{"line":13,"column":39},"end":{"line":77,"column":1}},"1":{"start":{"line":14,"column":30},"end":{"line":14,"column":42}},"2":{"start":{"line":15,"column":38},"end":{"line":15,"column":53}},"3":{"start":{"line":16,"column":23},"end":{"line":16,"column":74}},"4":{"start":{"line":17,"column":22},"end":{"line":17,"column":32}},"5":{"start":{"line":19,"column":27},"end":{"line":37,"column":5}},"6":{"start":{"line":20,"column":8},"end":{"line":23,"column":9}},"7":{"start":{"line":21,"column":12},"end":{"line":21,"column":78}},"8":{"start":{"line":22,"column":12},"end":{"line":22,"column":19}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":27}},"10":{"start":{"line":25,"column":8},"end":{"line":36,"column":9}},"11":{"start":{"line":26,"column":29},"end":{"line":26,"column":62}},"12":{"start":{"line":27,"column":12},"end":{"line":31,"column":14}},"13":{"start":{"line":30,"column":46},"end":{"line":30,"column":65}},"14":{"start":{"line":35,"column":12},"end":{"line":35,"column":32}},"15":{"start":{"line":39,"column":4},"end":{"line":76,"column":6}},"16":{"start":{"line":41,"column":45},"end":{"line":41,"column":64}},"17":{"start":{"line":69,"column":50},"end":{"line":69,"column":78}},"18":{"start":{"line":79,"column":15},"end":{"line":121,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":39},"end":{"line":13,"column":40}},"loc":{"start":{"line":13,"column":45},"end":{"line":77,"column":1}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":27},"end":{"line":19,"column":28}},"loc":{"start":{"line":19,"column":39},"end":{"line":37,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":40},"end":{"line":30,"column":41}},"loc":{"start":{"line":30,"column":46},"end":{"line":30,"column":65}},"line":30},"3":{"name":"(anonymous_3)","decl":{"start":{"line":41,"column":39},"end":{"line":41,"column":40}},"loc":{"start":{"line":41,"column":45},"end":{"line":41,"column":64}},"line":41},"4":{"name":"(anonymous_4)","decl":{"start":{"line":69,"column":44},"end":{"line":69,"column":45}},"loc":{"start":{"line":69,"column":50},"end":{"line":69,"column":78}},"line":69}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":8},"end":{"line":23,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":23,"column":9}},{"start":{},"end":{}}],"line":20}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0},"b":{"0":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\screens\\LoginScreen.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\screens\\LoginScreen.tsx","statementMap":{"0":{"start":{"line":14,"column":30},"end":{"line":88,"column":1}},"1":{"start":{"line":15,"column":30},"end":{"line":15,"column":42}},"2":{"start":{"line":16,"column":36},"end":{"line":16,"column":48}},"3":{"start":{"line":17,"column":38},"end":{"line":17,"column":53}},"4":{"start":{"line":18,"column":54},"end":{"line":18,"column":69}},"5":{"start":{"line":19,"column":23},"end":{"line":19,"column":65}},"6":{"start":{"line":20,"column":22},"end":{"line":20,"column":50}},"7":{"start":{"line":21,"column":22},"end":{"line":21,"column":32}},"8":{"start":{"line":23,"column":24},"end":{"line":39,"column":5}},"9":{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},"10":{"start":{"line":25,"column":12},"end":{"line":25,"column":83}},"11":{"start":{"line":26,"column":12},"end":{"line":26,"column":19}},"12":{"start":{"line":28,"column":8},"end":{"line":28,"column":27}},"13":{"start":{"line":29,"column":8},"end":{"line":38,"column":9}},"14":{"start":{"line":30,"column":29},"end":{"line":30,"column":61}},"15":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"16":{"start":{"line":32,"column":16},"end":{"line":32,"column":38}},"17":{"start":{"line":37,"column":12},"end":{"line":37,"column":32}},"18":{"start":{"line":41,"column":4},"end":{"line":87,"column":6}},"19":{"start":{"line":62,"column":39},"end":{"line":62,"column":79}},"20":{"start":{"line":78,"column":45},"end":{"line":78,"column":82}},"21":{"start":{"line":83,"column":45},"end":{"line":83,"column":76}},"22":{"start":{"line":90,"column":15},"end":{"line":120,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":30},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":36},"end":{"line":88,"column":1}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":24},"end":{"line":23,"column":25}},"loc":{"start":{"line":23,"column":36},"end":{"line":39,"column":5}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":62,"column":33},"end":{"line":62,"column":34}},"loc":{"start":{"line":62,"column":39},"end":{"line":62,"column":79}},"line":62},"3":{"name":"(anonymous_3)","decl":{"start":{"line":78,"column":39},"end":{"line":78,"column":40}},"loc":{"start":{"line":78,"column":45},"end":{"line":78,"column":82}},"line":78},"4":{"name":"(anonymous_4)","decl":{"start":{"line":83,"column":39},"end":{"line":83,"column":40}},"loc":{"start":{"line":83,"column":45},"end":{"line":83,"column":76}},"line":83}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},{"start":{},"end":{}}],"line":24},"1":{"loc":{"start":{"line":24,"column":12},"end":{"line":24,"column":31}},"type":"binary-expr","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":18}},{"start":{"line":24,"column":22},"end":{"line":24,"column":31}}],"line":24},"2":{"loc":{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},"type":"if","locations":[{"start":{"line":31,"column":12},"end":{"line":33,"column":13}},{"start":{},"end":{}}],"line":31},"3":{"loc":{"start":{"line":59,"column":30},"end":{"line":59,"column":69}},"type":"cond-expr","locations":[{"start":{"line":59,"column":50},"end":{"line":59,"column":61}},{"start":{"line":59,"column":64},"end":{"line":59,"column":69}}],"line":59}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\screens\\QuestionnaireScreen.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\screens\\QuestionnaireScreen.tsx","statementMap":{"0":{"start":{"line":21,"column":38},"end":{"line":294,"column":1}},"1":{"start":{"line":22,"column":20},"end":{"line":22,"column":30}},"2":{"start":{"line":23,"column":17},"end":{"line":23,"column":28}},"3":{"start":{"line":24,"column":21},"end":{"line":24,"column":65}},"4":{"start":{"line":26,"column":34},"end":{"line":34,"column":4}},"5":{"start":{"line":36,"column":30},"end":{"line":36,"column":96}},"6":{"start":{"line":37,"column":44},"end":{"line":37,"column":59}},"7":{"start":{"line":39,"column":31},"end":{"line":46,"column":19}},"8":{"start":{"line":39,"column":45},"end":{"line":46,"column":3}},"9":{"start":{"line":48,"column":21},"end":{"line":52,"column":19}},"10":{"start":{"line":48,"column":35},"end":{"line":52,"column":3}},"11":{"start":{"line":54,"column":29},"end":{"line":59,"column":19}},"12":{"start":{"line":54,"column":43},"end":{"line":59,"column":3}},"13":{"start":{"line":61,"column":31},"end":{"line":65,"column":19}},"14":{"start":{"line":61,"column":45},"end":{"line":65,"column":3}},"15":{"start":{"line":68,"column":28},"end":{"line":73,"column":3}},"16":{"start":{"line":69,"column":4},"end":{"line":69,"column":55}},"17":{"start":{"line":69,"column":25},"end":{"line":69,"column":52}},"18":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"19":{"start":{"line":71,"column":6},"end":{"line":71,"column":59}},"20":{"start":{"line":71,"column":25},"end":{"line":71,"column":56}},"21":{"start":{"line":75,"column":23},"end":{"line":105,"column":3}},"22":{"start":{"line":76,"column":76},"end":{"line":76,"column":78}},"23":{"start":{"line":77,"column":19},"end":{"line":77,"column":43}},"24":{"start":{"line":78,"column":22},"end":{"line":78,"column":49}},"25":{"start":{"line":79,"column":22},"end":{"line":79,"column":49}},"26":{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},"27":{"start":{"line":82,"column":6},"end":{"line":82,"column":69}},"28":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"29":{"start":{"line":85,"column":6},"end":{"line":85,"column":68}},"30":{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},"31":{"start":{"line":88,"column":6},"end":{"line":88,"column":75}},"32":{"start":{"line":90,"column":4},"end":{"line":92,"column":5}},"33":{"start":{"line":91,"column":6},"end":{"line":91,"column":75}},"34":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"35":{"start":{"line":94,"column":6},"end":{"line":94,"column":88}},"36":{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},"37":{"start":{"line":97,"column":6},"end":{"line":97,"column":84}},"38":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"39":{"start":{"line":100,"column":8},"end":{"line":100,"column":90}},"40":{"start":{"line":103,"column":4},"end":{"line":103,"column":25}},"41":{"start":{"line":104,"column":4},"end":{"line":104,"column":47}},"42":{"start":{"line":107,"column":25},"end":{"line":177,"column":3}},"43":{"start":{"line":108,"column":16},"end":{"line":108,"column":40}},"44":{"start":{"line":109,"column":19},"end":{"line":109,"column":46}},"45":{"start":{"line":110,"column":19},"end":{"line":110,"column":46}},"46":{"start":{"line":114,"column":4},"end":{"line":118,"column":5}},"47":{"start":{"line":115,"column":6},"end":{"line":115,"column":54}},"48":{"start":{"line":117,"column":6},"end":{"line":117,"column":56}},"49":{"start":{"line":121,"column":29},"end":{"line":121,"column":32}},"50":{"start":{"line":122,"column":4},"end":{"line":128,"column":5}},"51":{"start":{"line":123,"column":36},"end":{"line":123,"column":61}},"52":{"start":{"line":123,"column":62},"end":{"line":123,"column":68}},"53":{"start":{"line":124,"column":32},"end":{"line":124,"column":59}},"54":{"start":{"line":124,"column":60},"end":{"line":124,"column":66}},"55":{"start":{"line":125,"column":35},"end":{"line":125,"column":61}},"56":{"start":{"line":125,"column":62},"end":{"line":125,"column":68}},"57":{"start":{"line":126,"column":33},"end":{"line":126,"column":60}},"58":{"start":{"line":126,"column":61},"end":{"line":126,"column":67}},"59":{"start":{"line":127,"column":38},"end":{"line":127,"column":63}},"60":{"start":{"line":127,"column":64},"end":{"line":127,"column":70}},"61":{"start":{"line":129,"column":17},"end":{"line":129,"column":41}},"62":{"start":{"line":132,"column":28},"end":{"line":132,"column":29}},"63":{"start":{"line":133,"column":4},"end":{"line":139,"column":5}},"64":{"start":{"line":134,"column":6},"end":{"line":138,"column":7}},"65":{"start":{"line":135,"column":33},"end":{"line":135,"column":117}},"66":{"start":{"line":135,"column":118},"end":{"line":135,"column":124}},"67":{"start":{"line":136,"column":37},"end":{"line":136,"column":121}},"68":{"start":{"line":136,"column":122},"end":{"line":136,"column":128}},"69":{"start":{"line":137,"column":39},"end":{"line":137,"column":123}},"70":{"start":{"line":137,"column":124},"end":{"line":137,"column":130}},"71":{"start":{"line":140,"column":22},"end":{"line":140,"column":46}},"72":{"start":{"line":143,"column":24},"end":{"line":143,"column":65}},"73":{"start":{"line":144,"column":4},"end":{"line":147,"column":5}},"74":{"start":{"line":145,"column":8},"end":{"line":145,"column":34}},"75":{"start":{"line":146,"column":8},"end":{"line":146,"column":214}},"76":{"start":{"line":148,"column":4},"end":{"line":150,"column":5}},"77":{"start":{"line":149,"column":8},"end":{"line":149,"column":33}},"78":{"start":{"line":151,"column":4},"end":{"line":153,"column":5}},"79":{"start":{"line":152,"column":8},"end":{"line":152,"column":33}},"80":{"start":{"line":157,"column":23},"end":{"line":157,"column":26}},"81":{"start":{"line":158,"column":4},"end":{"line":158,"column":77}},"82":{"start":{"line":158,"column":58},"end":{"line":158,"column":77}},"83":{"start":{"line":159,"column":4},"end":{"line":159,"column":67}},"84":{"start":{"line":159,"column":18},"end":{"line":159,"column":67}},"85":{"start":{"line":161,"column":25},"end":{"line":161,"column":46}},"86":{"start":{"line":162,"column":28},"end":{"line":162,"column":44}},"87":{"start":{"line":164,"column":26},"end":{"line":164,"column":30}},"88":{"start":{"line":165,"column":24},"end":{"line":165,"column":51}},"89":{"start":{"line":166,"column":21},"end":{"line":166,"column":36}},"90":{"start":{"line":168,"column":25},"end":{"line":168,"column":68}},"91":{"start":{"line":169,"column":22},"end":{"line":169,"column":38}},"92":{"start":{"line":171,"column":4},"end":{"line":176,"column":6}},"93":{"start":{"line":179,"column":23},"end":{"line":205,"column":3}},"94":{"start":{"line":180,"column":4},"end":{"line":183,"column":5}},"95":{"start":{"line":181,"column":6},"end":{"line":181,"column":110}},"96":{"start":{"line":182,"column":6},"end":{"line":182,"column":13}},"97":{"start":{"line":184,"column":4},"end":{"line":184,"column":27}},"98":{"start":{"line":185,"column":4},"end":{"line":204,"column":5}},"99":{"start":{"line":186,"column":25},"end":{"line":186,"column":41}},"100":{"start":{"line":187,"column":6},"end":{"line":198,"column":7}},"101":{"start":{"line":188,"column":32},"end":{"line":188,"column":52}},"102":{"start":{"line":189,"column":42},"end":{"line":192,"column":9}},"103":{"start":{"line":193,"column":8},"end":{"line":193,"column":44}},"104":{"start":{"line":194,"column":8},"end":{"line":194,"column":115}},"105":{"start":{"line":195,"column":8},"end":{"line":195,"column":28}},"106":{"start":{"line":197,"column":8},"end":{"line":197,"column":132}},"107":{"start":{"line":200,"column":6},"end":{"line":200,"column":60}},"108":{"start":{"line":201,"column":6},"end":{"line":201,"column":118}},"109":{"start":{"line":203,"column":6},"end":{"line":203,"column":30}},"110":{"start":{"line":207,"column":23},"end":{"line":229,"column":3}},"111":{"start":{"line":214,"column":4},"end":{"line":228,"column":11}},"112":{"start":{"line":224,"column":29},"end":{"line":224,"column":110}},"113":{"start":{"line":231,"column":2},"end":{"line":293,"column":4}},"114":{"start":{"line":240,"column":29},"end":{"line":240,"column":58}},"115":{"start":{"line":248,"column":78},"end":{"line":248,"column":107}},"116":{"start":{"line":255,"column":29},"end":{"line":255,"column":61}},"117":{"start":{"line":269,"column":29},"end":{"line":269,"column":61}},"118":{"start":{"line":278,"column":98},"end":{"line":278,"column":137}},"119":{"start":{"line":279,"column":94},"end":{"line":279,"column":131}},"120":{"start":{"line":282,"column":105},"end":{"line":282,"column":144}},"121":{"start":{"line":296,"column":18},"end":{"line":352,"column":3}},"122":{"start":{"line":296,"column":41},"end":{"line":352,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":21,"column":38},"end":{"line":21,"column":39}},"loc":{"start":{"line":21,"column":44},"end":{"line":294,"column":1}},"line":21},"1":{"name":"(anonymous_1)","decl":{"start":{"line":39,"column":39},"end":{"line":39,"column":40}},"loc":{"start":{"line":39,"column":45},"end":{"line":46,"column":3}},"line":39},"2":{"name":"(anonymous_2)","decl":{"start":{"line":48,"column":29},"end":{"line":48,"column":30}},"loc":{"start":{"line":48,"column":35},"end":{"line":52,"column":3}},"line":48},"3":{"name":"(anonymous_3)","decl":{"start":{"line":54,"column":37},"end":{"line":54,"column":38}},"loc":{"start":{"line":54,"column":43},"end":{"line":59,"column":3}},"line":54},"4":{"name":"(anonymous_4)","decl":{"start":{"line":61,"column":39},"end":{"line":61,"column":40}},"loc":{"start":{"line":61,"column":45},"end":{"line":65,"column":3}},"line":61},"5":{"name":"(anonymous_5)","decl":{"start":{"line":68,"column":28},"end":{"line":68,"column":29}},"loc":{"start":{"line":68,"column":80},"end":{"line":73,"column":3}},"line":68},"6":{"name":"(anonymous_6)","decl":{"start":{"line":69,"column":16},"end":{"line":69,"column":17}},"loc":{"start":{"line":69,"column":25},"end":{"line":69,"column":52}},"line":69},"7":{"name":"(anonymous_7)","decl":{"start":{"line":71,"column":16},"end":{"line":71,"column":17}},"loc":{"start":{"line":71,"column":25},"end":{"line":71,"column":56}},"line":71},"8":{"name":"(anonymous_8)","decl":{"start":{"line":75,"column":23},"end":{"line":75,"column":24}},"loc":{"start":{"line":75,"column":38},"end":{"line":105,"column":3}},"line":75},"9":{"name":"(anonymous_9)","decl":{"start":{"line":107,"column":25},"end":{"line":107,"column":26}},"loc":{"start":{"line":107,"column":55},"end":{"line":177,"column":3}},"line":107},"10":{"name":"(anonymous_10)","decl":{"start":{"line":179,"column":23},"end":{"line":179,"column":24}},"loc":{"start":{"line":179,"column":35},"end":{"line":205,"column":3}},"line":179},"11":{"name":"(anonymous_11)","decl":{"start":{"line":207,"column":23},"end":{"line":207,"column":24}},"loc":{"start":{"line":214,"column":4},"end":{"line":228,"column":11}},"line":214},"12":{"name":"(anonymous_12)","decl":{"start":{"line":224,"column":21},"end":{"line":224,"column":22}},"loc":{"start":{"line":224,"column":29},"end":{"line":224,"column":110}},"line":224},"13":{"name":"(anonymous_13)","decl":{"start":{"line":240,"column":22},"end":{"line":240,"column":23}},"loc":{"start":{"line":240,"column":29},"end":{"line":240,"column":58}},"line":240},"14":{"name":"(anonymous_14)","decl":{"start":{"line":248,"column":69},"end":{"line":248,"column":70}},"loc":{"start":{"line":248,"column":78},"end":{"line":248,"column":107}},"line":248},"15":{"name":"(anonymous_15)","decl":{"start":{"line":255,"column":22},"end":{"line":255,"column":23}},"loc":{"start":{"line":255,"column":29},"end":{"line":255,"column":61}},"line":255},"16":{"name":"(anonymous_16)","decl":{"start":{"line":269,"column":22},"end":{"line":269,"column":23}},"loc":{"start":{"line":269,"column":29},"end":{"line":269,"column":61}},"line":269},"17":{"name":"(anonymous_17)","decl":{"start":{"line":278,"column":89},"end":{"line":278,"column":90}},"loc":{"start":{"line":278,"column":98},"end":{"line":278,"column":137}},"line":278},"18":{"name":"(anonymous_18)","decl":{"start":{"line":279,"column":85},"end":{"line":279,"column":86}},"loc":{"start":{"line":279,"column":94},"end":{"line":279,"column":131}},"line":279},"19":{"name":"(anonymous_19)","decl":{"start":{"line":282,"column":96},"end":{"line":282,"column":97}},"loc":{"start":{"line":282,"column":105},"end":{"line":282,"column":144}},"line":282},"20":{"name":"(anonymous_20)","decl":{"start":{"line":296,"column":29},"end":{"line":296,"column":30}},"loc":{"start":{"line":296,"column":41},"end":{"line":352,"column":1}},"line":296}},"branchMap":{"0":{"loc":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},{"start":{},"end":{}}],"line":70},"1":{"loc":{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},{"start":{},"end":{}}],"line":81},"2":{"loc":{"start":{"line":81,"column":8},"end":{"line":81,"column":76}},"type":"binary-expr","locations":[{"start":{"line":81,"column":8},"end":{"line":81,"column":28}},{"start":{"line":81,"column":32},"end":{"line":81,"column":45}},{"start":{"line":81,"column":49},"end":{"line":81,"column":60}},{"start":{"line":81,"column":64},"end":{"line":81,"column":76}}],"line":81},"3":{"loc":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},{"start":{},"end":{}}],"line":84},"4":{"loc":{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},{"start":{},"end":{}}],"line":87},"5":{"loc":{"start":{"line":87,"column":8},"end":{"line":87,"column":89}},"type":"binary-expr","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":31}},{"start":{"line":87,"column":35},"end":{"line":87,"column":51}},{"start":{"line":87,"column":55},"end":{"line":87,"column":70}},{"start":{"line":87,"column":74},"end":{"line":87,"column":89}}],"line":87},"6":{"loc":{"start":{"line":90,"column":4},"end":{"line":92,"column":5}},"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":92,"column":5}},{"start":{},"end":{}}],"line":90},"7":{"loc":{"start":{"line":90,"column":8},"end":{"line":90,"column":89}},"type":"binary-expr","locations":[{"start":{"line":90,"column":8},"end":{"line":90,"column":31}},{"start":{"line":90,"column":35},"end":{"line":90,"column":51}},{"start":{"line":90,"column":55},"end":{"line":90,"column":70}},{"start":{"line":90,"column":74},"end":{"line":90,"column":89}}],"line":90},"8":{"loc":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},{"start":{},"end":{}}],"line":93},"9":{"loc":{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":98,"column":5}},{"start":{},"end":{}}],"line":96},"10":{"loc":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},{"start":{},"end":{}}],"line":99},"11":{"loc":{"start":{"line":99,"column":8},"end":{"line":99,"column":87}},"type":"binary-expr","locations":[{"start":{"line":99,"column":8},"end":{"line":99,"column":60}},{"start":{"line":99,"column":64},"end":{"line":99,"column":87}}],"line":99},"12":{"loc":{"start":{"line":114,"column":4},"end":{"line":118,"column":5}},"type":"if","locations":[{"start":{"line":114,"column":4},"end":{"line":118,"column":5}},{"start":{"line":116,"column":11},"end":{"line":118,"column":5}}],"line":114},"13":{"loc":{"start":{"line":122,"column":4},"end":{"line":128,"column":5}},"type":"switch","locations":[{"start":{"line":123,"column":6},"end":{"line":123,"column":68}},{"start":{"line":124,"column":6},"end":{"line":124,"column":66}},{"start":{"line":125,"column":6},"end":{"line":125,"column":68}},{"start":{"line":126,"column":6},"end":{"line":126,"column":67}},{"start":{"line":127,"column":6},"end":{"line":127,"column":70}}],"line":122},"14":{"loc":{"start":{"line":133,"column":4},"end":{"line":139,"column":5}},"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":139,"column":5}},{"start":{},"end":{}}],"line":133},"15":{"loc":{"start":{"line":134,"column":6},"end":{"line":138,"column":7}},"type":"switch","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":124}},{"start":{"line":136,"column":8},"end":{"line":136,"column":128}},{"start":{"line":137,"column":8},"end":{"line":137,"column":130}}],"line":134},"16":{"loc":{"start":{"line":135,"column":54},"end":{"line":135,"column":115}},"type":"cond-expr","locations":[{"start":{"line":135,"column":105},"end":{"line":135,"column":109}},{"start":{"line":135,"column":112},"end":{"line":135,"column":115}}],"line":135},"17":{"loc":{"start":{"line":136,"column":58},"end":{"line":136,"column":119}},"type":"cond-expr","locations":[{"start":{"line":136,"column":109},"end":{"line":136,"column":113}},{"start":{"line":136,"column":116},"end":{"line":136,"column":119}}],"line":136},"18":{"loc":{"start":{"line":137,"column":60},"end":{"line":137,"column":121}},"type":"cond-expr","locations":[{"start":{"line":137,"column":111},"end":{"line":137,"column":115}},{"start":{"line":137,"column":118},"end":{"line":137,"column":121}}],"line":137},"19":{"loc":{"start":{"line":143,"column":24},"end":{"line":143,"column":65}},"type":"cond-expr","locations":[{"start":{"line":143,"column":54},"end":{"line":143,"column":58}},{"start":{"line":143,"column":61},"end":{"line":143,"column":65}}],"line":143},"20":{"loc":{"start":{"line":144,"column":4},"end":{"line":147,"column":5}},"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":147,"column":5}},{"start":{},"end":{}}],"line":144},"21":{"loc":{"start":{"line":148,"column":4},"end":{"line":150,"column":5}},"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":150,"column":5}},{"start":{},"end":{}}],"line":148},"22":{"loc":{"start":{"line":148,"column":8},"end":{"line":148,"column":79}},"type":"binary-expr","locations":[{"start":{"line":148,"column":8},"end":{"line":148,"column":56}},{"start":{"line":148,"column":60},"end":{"line":148,"column":79}}],"line":148},"23":{"loc":{"start":{"line":151,"column":4},"end":{"line":153,"column":5}},"type":"if","locations":[{"start":{"line":151,"column":4},"end":{"line":153,"column":5}},{"start":{},"end":{}}],"line":151},"24":{"loc":{"start":{"line":151,"column":8},"end":{"line":151,"column":79}},"type":"binary-expr","locations":[{"start":{"line":151,"column":8},"end":{"line":151,"column":56}},{"start":{"line":151,"column":60},"end":{"line":151,"column":79}}],"line":151},"25":{"loc":{"start":{"line":158,"column":4},"end":{"line":158,"column":77}},"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":158,"column":77}},{"start":{},"end":{}}],"line":158},"26":{"loc":{"start":{"line":159,"column":4},"end":{"line":159,"column":67}},"type":"if","locations":[{"start":{"line":159,"column":4},"end":{"line":159,"column":67}},{"start":{},"end":{}}],"line":159},"27":{"loc":{"start":{"line":180,"column":4},"end":{"line":183,"column":5}},"type":"if","locations":[{"start":{"line":180,"column":4},"end":{"line":183,"column":5}},{"start":{},"end":{}}],"line":180},"28":{"loc":{"start":{"line":187,"column":6},"end":{"line":198,"column":7}},"type":"if","locations":[{"start":{"line":187,"column":6},"end":{"line":198,"column":7}},{"start":{"line":196,"column":13},"end":{"line":198,"column":7}}],"line":187},"29":{"loc":{"start":{"line":216,"column":42},"end":{"line":216,"column":73}},"type":"cond-expr","locations":[{"start":{"line":216,"column":50},"end":{"line":216,"column":68}},{"start":{"line":216,"column":71},"end":{"line":216,"column":73}}],"line":216},"30":{"loc":{"start":{"line":220,"column":33},"end":{"line":220,"column":136}},"type":"cond-expr","locations":[{"start":{"line":220,"column":61},"end":{"line":220,"column":131}},{"start":{"line":220,"column":134},"end":{"line":220,"column":136}}],"line":220},"31":{"loc":{"start":{"line":221,"column":41},"end":{"line":221,"column":96}},"type":"cond-expr","locations":[{"start":{"line":221,"column":65},"end":{"line":221,"column":91}},{"start":{"line":221,"column":94},"end":{"line":221,"column":96}}],"line":221},"32":{"loc":{"start":{"line":227,"column":7},"end":{"line":227,"column":61}},"type":"binary-expr","locations":[{"start":{"line":227,"column":7},"end":{"line":227,"column":12}},{"start":{"line":227,"column":16},"end":{"line":227,"column":61}}],"line":227},"33":{"loc":{"start":{"line":242,"column":33},"end":{"line":242,"column":69}},"type":"cond-expr","locations":[{"start":{"line":242,"column":53},"end":{"line":242,"column":60}},{"start":{"line":242,"column":63},"end":{"line":242,"column":69}}],"line":242},"34":{"loc":{"start":{"line":258,"column":33},"end":{"line":258,"column":69}},"type":"cond-expr","locations":[{"start":{"line":258,"column":53},"end":{"line":258,"column":60}},{"start":{"line":258,"column":63},"end":{"line":258,"column":69}}],"line":258},"35":{"loc":{"start":{"line":272,"column":33},"end":{"line":272,"column":69}},"type":"cond-expr","locations":[{"start":{"line":272,"column":53},"end":{"line":272,"column":60}},{"start":{"line":272,"column":63},"end":{"line":272,"column":69}}],"line":272},"36":{"loc":{"start":{"line":281,"column":7},"end":{"line":283,"column":7}},"type":"binary-expr","locations":[{"start":{"line":281,"column":7},"end":{"line":281,"column":27}},{"start":{"line":281,"column":31},"end":{"line":281,"column":83}},{"start":{"line":282,"column":8},"end":{"line":282,"column":189}}],"line":281},"37":{"loc":{"start":{"line":282,"column":66},"end":{"line":282,"column":94}},"type":"binary-expr","locations":[{"start":{"line":282,"column":66},"end":{"line":282,"column":88}},{"start":{"line":282,"column":92},"end":{"line":282,"column":94}}],"line":282},"38":{"loc":{"start":{"line":318,"column":15},"end":{"line":318,"column":51}},"type":"cond-expr","locations":[{"start":{"line":318,"column":35},"end":{"line":318,"column":42}},{"start":{"line":318,"column":45},"end":{"line":318,"column":51}}],"line":318},"39":{"loc":{"start":{"line":331,"column":12},"end":{"line":331,"column":44}},"type":"cond-expr","locations":[{"start":{"line":331,"column":36},"end":{"line":331,"column":39}},{"start":{"line":331,"column":42},"end":{"line":331,"column":44}}],"line":331},"40":{"loc":{"start":{"line":336,"column":16},"end":{"line":336,"column":52}},"type":"cond-expr","locations":[{"start":{"line":336,"column":36},"end":{"line":336,"column":43}},{"start":{"line":336,"column":46},"end":{"line":336,"column":52}}],"line":336},"41":{"loc":{"start":{"line":342,"column":15},"end":{"line":342,"column":51}},"type":"cond-expr","locations":[{"start":{"line":342,"column":35},"end":{"line":342,"column":42}},{"start":{"line":342,"column":45},"end":{"line":342,"column":51}}],"line":342}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\screens\\RegisterScreen.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\screens\\RegisterScreen.tsx","statementMap":{"0":{"start":{"line":12,"column":33},"end":{"line":77,"column":1}},"1":{"start":{"line":13,"column":30},"end":{"line":13,"column":42}},"2":{"start":{"line":14,"column":36},"end":{"line":14,"column":48}},"3":{"start":{"line":15,"column":38},"end":{"line":15,"column":53}},"4":{"start":{"line":16,"column":23},"end":{"line":16,"column":68}},"5":{"start":{"line":17,"column":22},"end":{"line":17,"column":32}},"6":{"start":{"line":19,"column":27},"end":{"line":41,"column":5}},"7":{"start":{"line":20,"column":8},"end":{"line":23,"column":9}},"8":{"start":{"line":21,"column":12},"end":{"line":21,"column":72}},"9":{"start":{"line":22,"column":12},"end":{"line":22,"column":19}},"10":{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},"11":{"start":{"line":25,"column":12},"end":{"line":25,"column":94}},"12":{"start":{"line":26,"column":12},"end":{"line":26,"column":19}},"13":{"start":{"line":28,"column":8},"end":{"line":28,"column":27}},"14":{"start":{"line":29,"column":8},"end":{"line":40,"column":9}},"15":{"start":{"line":30,"column":29},"end":{"line":30,"column":64}},"16":{"start":{"line":31,"column":12},"end":{"line":35,"column":14}},"17":{"start":{"line":34,"column":46},"end":{"line":34,"column":74}},"18":{"start":{"line":39,"column":12},"end":{"line":39,"column":32}},"19":{"start":{"line":43,"column":4},"end":{"line":76,"column":6}},"20":{"start":{"line":72,"column":45},"end":{"line":72,"column":73}},"21":{"start":{"line":79,"column":15},"end":{"line":105,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":33},"end":{"line":12,"column":34}},"loc":{"start":{"line":12,"column":39},"end":{"line":77,"column":1}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":27},"end":{"line":19,"column":28}},"loc":{"start":{"line":19,"column":39},"end":{"line":41,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":40},"end":{"line":34,"column":41}},"loc":{"start":{"line":34,"column":46},"end":{"line":34,"column":74}},"line":34},"3":{"name":"(anonymous_3)","decl":{"start":{"line":72,"column":39},"end":{"line":72,"column":40}},"loc":{"start":{"line":72,"column":45},"end":{"line":72,"column":73}},"line":72}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":8},"end":{"line":23,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":23,"column":9}},{"start":{},"end":{}}],"line":20},"1":{"loc":{"start":{"line":20,"column":12},"end":{"line":20,"column":31}},"type":"binary-expr","locations":[{"start":{"line":20,"column":12},"end":{"line":20,"column":18}},{"start":{"line":20,"column":22},"end":{"line":20,"column":31}}],"line":20},"2":{"loc":{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},{"start":{},"end":{}}],"line":24}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"f":{"0":0,"1":0,"2":0,"3":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\screens\\SettingsScreen.tsx": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\screens\\SettingsScreen.tsx","statementMap":{"0":{"start":{"line":36,"column":31},"end":{"line":47,"column":1}},"1":{"start":{"line":37,"column":4},"end":{"line":37,"column":37}},"2":{"start":{"line":37,"column":25},"end":{"line":37,"column":37}},"3":{"start":{"line":38,"column":43},"end":{"line":38,"column":45}},"4":{"start":{"line":39,"column":4},"end":{"line":45,"column":5}},"5":{"start":{"line":39,"column":17},"end":{"line":39,"column":18}},"6":{"start":{"line":40,"column":28},"end":{"line":40,"column":59}},"7":{"start":{"line":41,"column":28},"end":{"line":41,"column":58}},"8":{"start":{"line":42,"column":20},"end":{"line":42,"column":72}},"9":{"start":{"line":42,"column":55},"end":{"line":42,"column":68}},"10":{"start":{"line":43,"column":24},"end":{"line":43,"column":48}},"11":{"start":{"line":44,"column":8},"end":{"line":44,"column":73}},"12":{"start":{"line":46,"column":4},"end":{"line":46,"column":29}},"13":{"start":{"line":50,"column":54},"end":{"line":342,"column":1}},"14":{"start":{"line":51,"column":34},"end":{"line":56,"column":4}},"15":{"start":{"line":58,"column":38},"end":{"line":60,"column":4}},"16":{"start":{"line":61,"column":46},"end":{"line":61,"column":57}},"17":{"start":{"line":62,"column":36},"end":{"line":62,"column":65}},"18":{"start":{"line":63,"column":46},"end":{"line":63,"column":61}},"19":{"start":{"line":64,"column":44},"end":{"line":64,"column":59}},"20":{"start":{"line":65,"column":44},"end":{"line":65,"column":58}},"21":{"start":{"line":67,"column":20},"end":{"line":67,"column":30}},"22":{"start":{"line":68,"column":17},"end":{"line":68,"column":28}},"23":{"start":{"line":69,"column":21},"end":{"line":69,"column":60}},"24":{"start":{"line":71,"column":28},"end":{"line":127,"column":8}},"25":{"start":{"line":76,"column":26},"end":{"line":76,"column":51}},"26":{"start":{"line":77,"column":24},"end":{"line":77,"column":49}},"27":{"start":{"line":79,"column":4},"end":{"line":108,"column":7}},"28":{"start":{"line":80,"column":6},"end":{"line":107,"column":7}},"29":{"start":{"line":81,"column":26},"end":{"line":81,"column":46}},"30":{"start":{"line":82,"column":8},"end":{"line":85,"column":9}},"31":{"start":{"line":83,"column":10},"end":{"line":83,"column":75}},"32":{"start":{"line":84,"column":10},"end":{"line":84,"column":17}},"33":{"start":{"line":86,"column":31},"end":{"line":86,"column":62}},"34":{"start":{"line":88,"column":26},"end":{"line":88,"column":27}},"35":{"start":{"line":89,"column":8},"end":{"line":96,"column":9}},"36":{"start":{"line":90,"column":10},"end":{"line":95,"column":16}},"37":{"start":{"line":91,"column":12},"end":{"line":93,"column":13}},"38":{"start":{"line":92,"column":14},"end":{"line":92,"column":67}},"39":{"start":{"line":94,"column":12},"end":{"line":94,"column":25}},"40":{"start":{"line":97,"column":8},"end":{"line":97,"column":110}},"41":{"start":{"line":99,"column":8},"end":{"line":104,"column":9}},"42":{"start":{"line":100,"column":28},"end":{"line":100,"column":52}},"43":{"start":{"line":101,"column":11},"end":{"line":103,"column":12}},"44":{"start":{"line":102,"column":13},"end":{"line":102,"column":68}},"45":{"start":{"line":106,"column":8},"end":{"line":106,"column":90}},"46":{"start":{"line":110,"column":29},"end":{"line":110,"column":119}},"47":{"start":{"line":110,"column":113},"end":{"line":110,"column":118}},"48":{"start":{"line":112,"column":41},"end":{"line":115,"column":7}},"49":{"start":{"line":112,"column":69},"end":{"line":115,"column":5}},"50":{"start":{"line":117,"column":30},"end":{"line":117,"column":72}},"51":{"start":{"line":119,"column":4},"end":{"line":125,"column":5}},"52":{"start":{"line":120,"column":43},"end":{"line":123,"column":11}},"53":{"start":{"line":120,"column":71},"end":{"line":123,"column":9}},"54":{"start":{"line":124,"column":8},"end":{"line":124,"column":67}},"55":{"start":{"line":126,"column":4},"end":{"line":126,"column":48}},"56":{"start":{"line":130,"column":27},"end":{"line":144,"column":25}},"57":{"start":{"line":131,"column":4},"end":{"line":143,"column":5}},"58":{"start":{"line":132,"column":30},"end":{"line":132,"column":54}},"59":{"start":{"line":133,"column":41},"end":{"line":135,"column":9}},"60":{"start":{"line":136,"column":8},"end":{"line":138,"column":11}},"61":{"start":{"line":137,"column":12},"end":{"line":137,"column":88}},"62":{"start":{"line":139,"column":8},"end":{"line":139,"column":36}},"63":{"start":{"line":140,"column":8},"end":{"line":140,"column":52}},"64":{"start":{"line":140,"column":39},"end":{"line":140,"column":50}},"65":{"start":{"line":142,"column":8},"end":{"line":142,"column":77}},"66":{"start":{"line":146,"column":26},"end":{"line":163,"column":9}},"67":{"start":{"line":147,"column":4},"end":{"line":147,"column":28}},"68":{"start":{"line":148,"column":4},"end":{"line":162,"column":41}},"69":{"start":{"line":149,"column":21},"end":{"line":149,"column":42}},"70":{"start":{"line":150,"column":6},"end":{"line":150,"column":33}},"71":{"start":{"line":153,"column":6},"end":{"line":153,"column":25}},"72":{"start":{"line":154,"column":22},"end":{"line":154,"column":112}},"73":{"start":{"line":155,"column":6},"end":{"line":160,"column":9}},"74":{"start":{"line":162,"column":14},"end":{"line":162,"column":39}},"75":{"start":{"line":165,"column":2},"end":{"line":187,"column":4}},"76":{"start":{"line":166,"column":21},"end":{"line":166,"column":25}},"77":{"start":{"line":167,"column":6},"end":{"line":167,"column":29}},"78":{"start":{"line":168,"column":33},"end":{"line":183,"column":7}},"79":{"start":{"line":169,"column":8},"end":{"line":182,"column":9}},"80":{"start":{"line":170,"column":33},"end":{"line":170,"column":53}},"81":{"start":{"line":171,"column":10},"end":{"line":171,"column":32}},"82":{"start":{"line":171,"column":25},"end":{"line":171,"column":32}},"83":{"start":{"line":172,"column":10},"end":{"line":172,"column":38}},"84":{"start":{"line":173,"column":10},"end":{"line":173,"column":70}},"85":{"start":{"line":174,"column":10},"end":{"line":174,"column":34}},"86":{"start":{"line":175,"column":10},"end":{"line":175,"column":60}},"87":{"start":{"line":177,"column":10},"end":{"line":179,"column":11}},"88":{"start":{"line":178,"column":12},"end":{"line":178,"column":97}},"89":{"start":{"line":181,"column":10},"end":{"line":181,"column":48}},"90":{"start":{"line":181,"column":24},"end":{"line":181,"column":48}},"91":{"start":{"line":184,"column":6},"end":{"line":184,"column":27}},"92":{"start":{"line":185,"column":6},"end":{"line":185,"column":41}},"93":{"start":{"line":185,"column":21},"end":{"line":185,"column":38}},"94":{"start":{"line":189,"column":27},"end":{"line":206,"column":27}},"95":{"start":{"line":190,"column":25},"end":{"line":190,"column":42}},"96":{"start":{"line":191,"column":27},"end":{"line":191,"column":85}},"97":{"start":{"line":193,"column":4},"end":{"line":205,"column":7}},"98":{"start":{"line":194,"column":27},"end":{"line":194,"column":85}},"99":{"start":{"line":195,"column":40},"end":{"line":195,"column":85}},"100":{"start":{"line":197,"column":6},"end":{"line":203,"column":11}},"101":{"start":{"line":199,"column":10},"end":{"line":199,"column":55}},"102":{"start":{"line":202,"column":10},"end":{"line":202,"column":95}},"103":{"start":{"line":204,"column":6},"end":{"line":204,"column":29}},"104":{"start":{"line":209,"column":36},"end":{"line":225,"column":92}},"105":{"start":{"line":210,"column":4},"end":{"line":210,"column":27}},"106":{"start":{"line":211,"column":4},"end":{"line":224,"column":40}},"107":{"start":{"line":212,"column":31},"end":{"line":212,"column":51}},"108":{"start":{"line":213,"column":6},"end":{"line":213,"column":36}},"109":{"start":{"line":214,"column":6},"end":{"line":214,"column":58}},"110":{"start":{"line":215,"column":6},"end":{"line":215,"column":30}},"111":{"start":{"line":216,"column":6},"end":{"line":216,"column":44}},"112":{"start":{"line":217,"column":6},"end":{"line":217,"column":48}},"113":{"start":{"line":219,"column":6},"end":{"line":219,"column":24}},"114":{"start":{"line":221,"column":6},"end":{"line":221,"column":95}},"115":{"start":{"line":223,"column":20},"end":{"line":223,"column":105}},"116":{"start":{"line":224,"column":14},"end":{"line":224,"column":38}},"117":{"start":{"line":227,"column":31},"end":{"line":240,"column":11}},"118":{"start":{"line":228,"column":8},"end":{"line":228,"column":31}},"119":{"start":{"line":229,"column":8},"end":{"line":239,"column":44}},"120":{"start":{"line":230,"column":27},"end":{"line":230,"column":29}},"121":{"start":{"line":231,"column":34},"end":{"line":231,"column":62}},"122":{"start":{"line":232,"column":12},"end":{"line":232,"column":46}},"123":{"start":{"line":233,"column":12},"end":{"line":233,"column":174}},"124":{"start":{"line":236,"column":28},"end":{"line":236,"column":118}},"125":{"start":{"line":237,"column":12},"end":{"line":237,"column":121}},"126":{"start":{"line":239,"column":18},"end":{"line":239,"column":42}},"127":{"start":{"line":242,"column":31},"end":{"line":245,"column":3}},"128":{"start":{"line":243,"column":4},"end":{"line":243,"column":60}},"129":{"start":{"line":243,"column":25},"end":{"line":243,"column":57}},"130":{"start":{"line":244,"column":4},"end":{"line":244,"column":32}},"131":{"start":{"line":247,"column":40},"end":{"line":249,"column":3}},"132":{"start":{"line":248,"column":4},"end":{"line":248,"column":41}},"133":{"start":{"line":251,"column":23},"end":{"line":261,"column":3}},"134":{"start":{"line":252,"column":4},"end":{"line":260,"column":6}},"135":{"start":{"line":263,"column":2},"end":{"line":270,"column":3}},"136":{"start":{"line":264,"column":4},"end":{"line":269,"column":6}},"137":{"start":{"line":272,"column":2},"end":{"line":341,"column":4}},"138":{"start":{"line":304,"column":46},"end":{"line":304,"column":93}},"139":{"start":{"line":344,"column":18},"end":{"line":428,"column":3}},"140":{"start":{"line":344,"column":41},"end":{"line":428,"column":1}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":36,"column":31},"end":{"line":36,"column":32}},"loc":{"start":{"line":36,"column":87},"end":{"line":47,"column":1}},"line":36},"1":{"name":"(anonymous_1)","decl":{"start":{"line":42,"column":39},"end":{"line":42,"column":40}},"loc":{"start":{"line":42,"column":55},"end":{"line":42,"column":68}},"line":42},"2":{"name":"(anonymous_2)","decl":{"start":{"line":50,"column":54},"end":{"line":50,"column":55}},"loc":{"start":{"line":50,"column":120},"end":{"line":342,"column":1}},"line":50},"3":{"name":"(anonymous_3)","decl":{"start":{"line":71,"column":40},"end":{"line":71,"column":41}},"loc":{"start":{"line":75,"column":22},"end":{"line":127,"column":3}},"line":75},"4":{"name":"(anonymous_4)","decl":{"start":{"line":79,"column":25},"end":{"line":79,"column":26}},"loc":{"start":{"line":79,"column":36},"end":{"line":108,"column":5}},"line":79},"5":{"name":"(anonymous_5)","decl":{"start":{"line":90,"column":43},"end":{"line":90,"column":44}},"loc":{"start":{"line":90,"column":60},"end":{"line":95,"column":11}},"line":90},"6":{"name":"(anonymous_6)","decl":{"start":{"line":110,"column":104},"end":{"line":110,"column":105}},"loc":{"start":{"line":110,"column":113},"end":{"line":110,"column":118}},"line":110},"7":{"name":"(anonymous_7)","decl":{"start":{"line":112,"column":62},"end":{"line":112,"column":63}},"loc":{"start":{"line":112,"column":69},"end":{"line":115,"column":5}},"line":112},"8":{"name":"(anonymous_8)","decl":{"start":{"line":120,"column":64},"end":{"line":120,"column":65}},"loc":{"start":{"line":120,"column":71},"end":{"line":123,"column":9}},"line":120},"9":{"name":"(anonymous_9)","decl":{"start":{"line":130,"column":39},"end":{"line":130,"column":40}},"loc":{"start":{"line":130,"column":95},"end":{"line":144,"column":3}},"line":130},"10":{"name":"(anonymous_10)","decl":{"start":{"line":136,"column":59},"end":{"line":136,"column":60}},"loc":{"start":{"line":136,"column":68},"end":{"line":138,"column":9}},"line":136},"11":{"name":"(anonymous_11)","decl":{"start":{"line":140,"column":26},"end":{"line":140,"column":27}},"loc":{"start":{"line":140,"column":39},"end":{"line":140,"column":50}},"line":140},"12":{"name":"(anonymous_12)","decl":{"start":{"line":146,"column":38},"end":{"line":146,"column":39}},"loc":{"start":{"line":146,"column":50},"end":{"line":163,"column":3}},"line":146},"13":{"name":"(anonymous_13)","decl":{"start":{"line":165,"column":30},"end":{"line":165,"column":31}},"loc":{"start":{"line":165,"column":36},"end":{"line":186,"column":5}},"line":165},"14":{"name":"(anonymous_14)","decl":{"start":{"line":168,"column":33},"end":{"line":168,"column":34}},"loc":{"start":{"line":168,"column":45},"end":{"line":183,"column":7}},"line":168},"15":{"name":"(anonymous_15)","decl":{"start":{"line":185,"column":13},"end":{"line":185,"column":14}},"loc":{"start":{"line":185,"column":19},"end":{"line":185,"column":40}},"line":185},"16":{"name":"(anonymous_16)","decl":{"start":{"line":189,"column":39},"end":{"line":189,"column":40}},"loc":{"start":{"line":189,"column":85},"end":{"line":206,"column":3}},"line":189},"17":{"name":"(anonymous_17)","decl":{"start":{"line":193,"column":16},"end":{"line":193,"column":17}},"loc":{"start":{"line":193,"column":34},"end":{"line":205,"column":5}},"line":193},"18":{"name":"(anonymous_18)","decl":{"start":{"line":198,"column":14},"end":{"line":198,"column":15}},"loc":{"start":{"line":198,"column":20},"end":{"line":200,"column":9}},"line":198},"19":{"name":"(anonymous_19)","decl":{"start":{"line":201,"column":15},"end":{"line":201,"column":16}},"loc":{"start":{"line":201,"column":26},"end":{"line":203,"column":9}},"line":201},"20":{"name":"(anonymous_20)","decl":{"start":{"line":209,"column":48},"end":{"line":209,"column":49}},"loc":{"start":{"line":209,"column":60},"end":{"line":225,"column":3}},"line":209},"21":{"name":"(anonymous_21)","decl":{"start":{"line":227,"column":43},"end":{"line":227,"column":44}},"loc":{"start":{"line":227,"column":55},"end":{"line":240,"column":5}},"line":227},"22":{"name":"(anonymous_22)","decl":{"start":{"line":242,"column":31},"end":{"line":242,"column":32}},"loc":{"start":{"line":242,"column":62},"end":{"line":245,"column":3}},"line":242},"23":{"name":"(anonymous_23)","decl":{"start":{"line":243,"column":16},"end":{"line":243,"column":17}},"loc":{"start":{"line":243,"column":25},"end":{"line":243,"column":57}},"line":243},"24":{"name":"(anonymous_24)","decl":{"start":{"line":247,"column":40},"end":{"line":247,"column":41}},"loc":{"start":{"line":247,"column":46},"end":{"line":249,"column":3}},"line":247},"25":{"name":"(anonymous_25)","decl":{"start":{"line":251,"column":23},"end":{"line":251,"column":24}},"loc":{"start":{"line":251,"column":29},"end":{"line":261,"column":3}},"line":251},"26":{"name":"(anonymous_26)","decl":{"start":{"line":304,"column":31},"end":{"line":304,"column":32}},"loc":{"start":{"line":304,"column":46},"end":{"line":304,"column":93}},"line":304},"27":{"name":"(anonymous_27)","decl":{"start":{"line":344,"column":29},"end":{"line":344,"column":30}},"loc":{"start":{"line":344,"column":41},"end":{"line":428,"column":1}},"line":344}},"branchMap":{"0":{"loc":{"start":{"line":37,"column":4},"end":{"line":37,"column":37}},"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":37}},{"start":{},"end":{}}],"line":37},"1":{"loc":{"start":{"line":82,"column":8},"end":{"line":85,"column":9}},"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":85,"column":9}},{"start":{},"end":{}}],"line":82},"2":{"loc":{"start":{"line":89,"column":8},"end":{"line":96,"column":9}},"type":"if","locations":[{"start":{"line":89,"column":8},"end":{"line":96,"column":9}},{"start":{},"end":{}}],"line":89},"3":{"loc":{"start":{"line":89,"column":12},"end":{"line":89,"column":53}},"type":"binary-expr","locations":[{"start":{"line":89,"column":12},"end":{"line":89,"column":23}},{"start":{"line":89,"column":27},"end":{"line":89,"column":53}}],"line":89},"4":{"loc":{"start":{"line":91,"column":12},"end":{"line":93,"column":13}},"type":"if","locations":[{"start":{"line":91,"column":12},"end":{"line":93,"column":13}},{"start":{},"end":{}}],"line":91},"5":{"loc":{"start":{"line":91,"column":16},"end":{"line":91,"column":117}},"type":"binary-expr","locations":[{"start":{"line":91,"column":16},"end":{"line":91,"column":25}},{"start":{"line":91,"column":29},"end":{"line":91,"column":65}},{"start":{"line":91,"column":69},"end":{"line":91,"column":99}},{"start":{"line":91,"column":103},"end":{"line":91,"column":117}}],"line":91},"6":{"loc":{"start":{"line":97,"column":43},"end":{"line":97,"column":81}},"type":"binary-expr","locations":[{"start":{"line":97,"column":43},"end":{"line":97,"column":76}},{"start":{"line":97,"column":80},"end":{"line":97,"column":81}}],"line":97},"7":{"loc":{"start":{"line":99,"column":8},"end":{"line":104,"column":9}},"type":"if","locations":[{"start":{"line":99,"column":8},"end":{"line":104,"column":9}},{"start":{},"end":{}}],"line":99},"8":{"loc":{"start":{"line":100,"column":28},"end":{"line":100,"column":52}},"type":"binary-expr","locations":[{"start":{"line":100,"column":28},"end":{"line":100,"column":47}},{"start":{"line":100,"column":51},"end":{"line":100,"column":52}}],"line":100},"9":{"loc":{"start":{"line":101,"column":11},"end":{"line":103,"column":12}},"type":"if","locations":[{"start":{"line":101,"column":11},"end":{"line":103,"column":12}},{"start":{},"end":{}}],"line":101},"10":{"loc":{"start":{"line":114,"column":11},"end":{"line":114,"column":37}},"type":"binary-expr","locations":[{"start":{"line":114,"column":11},"end":{"line":114,"column":32}},{"start":{"line":114,"column":36},"end":{"line":114,"column":37}}],"line":114},"11":{"loc":{"start":{"line":119,"column":4},"end":{"line":125,"column":5}},"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":125,"column":5}},{"start":{},"end":{}}],"line":119},"12":{"loc":{"start":{"line":122,"column":15},"end":{"line":122,"column":62}},"type":"binary-expr","locations":[{"start":{"line":122,"column":15},"end":{"line":122,"column":34}},{"start":{"line":122,"column":38},"end":{"line":122,"column":57}},{"start":{"line":122,"column":61},"end":{"line":122,"column":62}}],"line":122},"13":{"loc":{"start":{"line":154,"column":22},"end":{"line":154,"column":112}},"type":"cond-expr","locations":[{"start":{"line":154,"column":54},"end":{"line":154,"column":67}},{"start":{"line":154,"column":70},"end":{"line":154,"column":112}}],"line":154},"14":{"loc":{"start":{"line":171,"column":10},"end":{"line":171,"column":32}},"type":"if","locations":[{"start":{"line":171,"column":10},"end":{"line":171,"column":32}},{"start":{},"end":{}}],"line":171},"15":{"loc":{"start":{"line":177,"column":10},"end":{"line":179,"column":11}},"type":"if","locations":[{"start":{"line":177,"column":10},"end":{"line":179,"column":11}},{"start":{},"end":{}}],"line":177},"16":{"loc":{"start":{"line":181,"column":10},"end":{"line":181,"column":48}},"type":"if","locations":[{"start":{"line":181,"column":10},"end":{"line":181,"column":48}},{"start":{},"end":{}}],"line":181},"17":{"loc":{"start":{"line":191,"column":27},"end":{"line":191,"column":85}},"type":"cond-expr","locations":[{"start":{"line":191,"column":69},"end":{"line":191,"column":70}},{"start":{"line":191,"column":73},"end":{"line":191,"column":85}}],"line":191},"18":{"loc":{"start":{"line":191,"column":27},"end":{"line":191,"column":66}},"type":"binary-expr","locations":[{"start":{"line":191,"column":27},"end":{"line":191,"column":46}},{"start":{"line":191,"column":50},"end":{"line":191,"column":66}}],"line":191},"19":{"loc":{"start":{"line":236,"column":28},"end":{"line":236,"column":118}},"type":"cond-expr","locations":[{"start":{"line":236,"column":60},"end":{"line":236,"column":73}},{"start":{"line":236,"column":76},"end":{"line":236,"column":118}}],"line":236},"20":{"loc":{"start":{"line":263,"column":2},"end":{"line":270,"column":3}},"type":"if","locations":[{"start":{"line":263,"column":2},"end":{"line":270,"column":3}},{"start":{},"end":{}}],"line":263},"21":{"loc":{"start":{"line":301,"column":21},"end":{"line":301,"column":79}},"type":"cond-expr","locations":[{"start":{"line":301,"column":45},"end":{"line":301,"column":47}},{"start":{"line":301,"column":50},"end":{"line":301,"column":79}}],"line":301},"22":{"loc":{"start":{"line":305,"column":44},"end":{"line":305,"column":147}},"type":"cond-expr","locations":[{"start":{"line":305,"column":72},"end":{"line":305,"column":142}},{"start":{"line":305,"column":145},"end":{"line":305,"column":147}}],"line":305},"23":{"loc":{"start":{"line":306,"column":52},"end":{"line":306,"column":109}},"type":"cond-expr","locations":[{"start":{"line":306,"column":76},"end":{"line":306,"column":104}},{"start":{"line":306,"column":107},"end":{"line":306,"column":109}}],"line":306},"24":{"loc":{"start":{"line":361,"column":15},"end":{"line":361,"column":51}},"type":"cond-expr","locations":[{"start":{"line":361,"column":35},"end":{"line":361,"column":42}},{"start":{"line":361,"column":45},"end":{"line":361,"column":51}}],"line":361},"25":{"loc":{"start":{"line":365,"column":19},"end":{"line":365,"column":60}},"type":"cond-expr","locations":[{"start":{"line":365,"column":39},"end":{"line":365,"column":52}},{"start":{"line":365,"column":55},"end":{"line":365,"column":60}}],"line":365},"26":{"loc":{"start":{"line":388,"column":16},"end":{"line":388,"column":41}},"type":"cond-expr","locations":[{"start":{"line":388,"column":36},"end":{"line":388,"column":37}},{"start":{"line":388,"column":40},"end":{"line":388,"column":41}}],"line":388},"27":{"loc":{"start":{"line":389,"column":17},"end":{"line":389,"column":42}},"type":"cond-expr","locations":[{"start":{"line":389,"column":37},"end":{"line":389,"column":38}},{"start":{"line":389,"column":41},"end":{"line":389,"column":42}}],"line":389},"28":{"loc":{"start":{"line":393,"column":15},"end":{"line":393,"column":51}},"type":"cond-expr","locations":[{"start":{"line":393,"column":35},"end":{"line":393,"column":42}},{"start":{"line":393,"column":45},"end":{"line":393,"column":51}}],"line":393},"29":{"loc":{"start":{"line":404,"column":17},"end":{"line":404,"column":53}},"type":"cond-expr","locations":[{"start":{"line":404,"column":37},"end":{"line":404,"column":44}},{"start":{"line":404,"column":47},"end":{"line":404,"column":53}}],"line":404},"30":{"loc":{"start":{"line":423,"column":12},"end":{"line":423,"column":44}},"type":"cond-expr","locations":[{"start":{"line":423,"column":36},"end":{"line":423,"column":39}},{"start":{"line":423,"column":42},"end":{"line":423,"column":44}}],"line":423},"31":{"loc":{"start":{"line":426,"column":15},"end":{"line":426,"column":51}},"type":"cond-expr","locations":[{"start":{"line":426,"column":35},"end":{"line":426,"column":42}},{"start":{"line":426,"column":45},"end":{"line":426,"column":51}}],"line":426}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\services\\authService.ts": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\services\\authService.ts","statementMap":{"0":{"start":{"line":9,"column":22},"end":{"line":27,"column":1}},"1":{"start":{"line":10,"column":16},"end":{"line":10,"column":48}},"2":{"start":{"line":12,"column":4},"end":{"line":26,"column":5}},"3":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"4":{"start":{"line":14,"column":12},"end":{"line":14,"column":47}},"5":{"start":{"line":16,"column":8},"end":{"line":18,"column":10}},"6":{"start":{"line":19,"column":8},"end":{"line":19,"column":39}},"7":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"8":{"start":{"line":22,"column":12},"end":{"line":22,"column":46}},"9":{"start":{"line":24,"column":8},"end":{"line":24,"column":93}},"10":{"start":{"line":25,"column":8},"end":{"line":25,"column":56}},"11":{"start":{"line":29,"column":25},"end":{"line":32,"column":1}},"12":{"start":{"line":30,"column":20},"end":{"line":30,"column":35}},"13":{"start":{"line":31,"column":4},"end":{"line":31,"column":90}},"14":{"start":{"line":34,"column":16},"end":{"line":34,"column":27}},"15":{"start":{"line":38,"column":31},"end":{"line":38,"column":35}},"16":{"start":{"line":40,"column":33},"end":{"line":42,"column":1}},"17":{"start":{"line":41,"column":4},"end":{"line":41,"column":24}},"18":{"start":{"line":44,"column":29},"end":{"line":52,"column":1}},"19":{"start":{"line":45,"column":4},"end":{"line":45,"column":44}},"20":{"start":{"line":46,"column":4},"end":{"line":46,"column":18}},"21":{"start":{"line":47,"column":4},"end":{"line":51,"column":5}},"22":{"start":{"line":48,"column":8},"end":{"line":48,"column":19}},"23":{"start":{"line":50,"column":8},"end":{"line":50,"column":70}},"24":{"start":{"line":63,"column":16},"end":{"line":63,"column":44}},"25":{"start":{"line":65,"column":44},"end":{"line":69,"column":5}},"26":{"start":{"line":71,"column":4},"end":{"line":89,"column":5}},"27":{"start":{"line":72,"column":25},"end":{"line":72,"column":66}},"28":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"29":{"start":{"line":75,"column":13},"end":{"line":75,"column":28}},"30":{"start":{"line":78,"column":29},"end":{"line":78,"column":50}},"31":{"start":{"line":80,"column":8},"end":{"line":84,"column":9}},"32":{"start":{"line":81,"column":33},"end":{"line":81,"column":84}},"33":{"start":{"line":82,"column":34},"end":{"line":82,"column":112}},"34":{"start":{"line":83,"column":12},"end":{"line":83,"column":43}},"35":{"start":{"line":85,"column":8},"end":{"line":85,"column":33}},"36":{"start":{"line":87,"column":8},"end":{"line":87,"column":97}},"37":{"start":{"line":88,"column":8},"end":{"line":88,"column":20}},"38":{"start":{"line":92,"column":28},"end":{"line":97,"column":1}},"39":{"start":{"line":93,"column":4},"end":{"line":96,"column":7}},"40":{"start":{"line":99,"column":25},"end":{"line":124,"column":1}},"41":{"start":{"line":100,"column":20},"end":{"line":100,"column":63}},"42":{"start":{"line":101,"column":21},"end":{"line":103,"column":18}},"43":{"start":{"line":102,"column":31},"end":{"line":102,"column":88}},"44":{"start":{"line":105,"column":16},"end":{"line":105,"column":39}},"45":{"start":{"line":107,"column":4},"end":{"line":123,"column":5}},"46":{"start":{"line":108,"column":25},"end":{"line":112,"column":10}},"47":{"start":{"line":114,"column":29},"end":{"line":114,"column":50}},"48":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"49":{"start":{"line":117,"column":12},"end":{"line":117,"column":67}},"50":{"start":{"line":119,"column":8},"end":{"line":119,"column":28}},"51":{"start":{"line":121,"column":8},"end":{"line":121,"column":88}},"52":{"start":{"line":122,"column":8},"end":{"line":122,"column":20}},"53":{"start":{"line":126,"column":32},"end":{"line":137,"column":1}},"54":{"start":{"line":127,"column":4},"end":{"line":136,"column":5}},"55":{"start":{"line":128,"column":26},"end":{"line":131,"column":10}},"56":{"start":{"line":132,"column":8},"end":{"line":132,"column":25}},"57":{"start":{"line":134,"column":8},"end":{"line":134,"column":54}},"58":{"start":{"line":135,"column":8},"end":{"line":135,"column":20}},"59":{"start":{"line":139,"column":26},"end":{"line":153,"column":1}},"60":{"start":{"line":140,"column":4},"end":{"line":152,"column":5}},"61":{"start":{"line":141,"column":26},"end":{"line":141,"column":42}},"62":{"start":{"line":142,"column":8},"end":{"line":147,"column":9}},"63":{"start":{"line":143,"column":12},"end":{"line":146,"column":15}},"64":{"start":{"line":149,"column":8},"end":{"line":149,"column":87}},"65":{"start":{"line":151,"column":8},"end":{"line":151,"column":28}},"66":{"start":{"line":155,"column":36},"end":{"line":160,"column":1}},"67":{"start":{"line":156,"column":4},"end":{"line":159,"column":7}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":22},"end":{"line":9,"column":23}},"loc":{"start":{"line":9,"column":36},"end":{"line":27,"column":1}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":29,"column":25},"end":{"line":29,"column":26}},"loc":{"start":{"line":29,"column":39},"end":{"line":32,"column":1}},"line":29},"2":{"name":"(anonymous_2)","decl":{"start":{"line":40,"column":33},"end":{"line":40,"column":34}},"loc":{"start":{"line":40,"column":63},"end":{"line":42,"column":1}},"line":40},"3":{"name":"(anonymous_3)","decl":{"start":{"line":44,"column":29},"end":{"line":44,"column":30}},"loc":{"start":{"line":44,"column":35},"end":{"line":52,"column":1}},"line":44},"4":{"name":"fetchAuthApi","decl":{"start":{"line":62,"column":15},"end":{"line":62,"column":27}},"loc":{"start":{"line":62,"column":88},"end":{"line":90,"column":1}},"line":62},"5":{"name":"(anonymous_5)","decl":{"start":{"line":92,"column":28},"end":{"line":92,"column":29}},"loc":{"start":{"line":92,"column":99},"end":{"line":97,"column":1}},"line":92},"6":{"name":"(anonymous_6)","decl":{"start":{"line":99,"column":25},"end":{"line":99,"column":26}},"loc":{"start":{"line":99,"column":84},"end":{"line":124,"column":1}},"line":99},"7":{"name":"(anonymous_7)","decl":{"start":{"line":102,"column":13},"end":{"line":102,"column":14}},"loc":{"start":{"line":102,"column":31},"end":{"line":102,"column":88}},"line":102},"8":{"name":"(anonymous_8)","decl":{"start":{"line":126,"column":32},"end":{"line":126,"column":33}},"loc":{"start":{"line":126,"column":87},"end":{"line":137,"column":1}},"line":126},"9":{"name":"(anonymous_9)","decl":{"start":{"line":139,"column":26},"end":{"line":139,"column":27}},"loc":{"start":{"line":139,"column":53},"end":{"line":153,"column":1}},"line":139},"10":{"name":"(anonymous_10)","decl":{"start":{"line":155,"column":36},"end":{"line":155,"column":37}},"loc":{"start":{"line":155,"column":89},"end":{"line":160,"column":1}},"line":155}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":4},"end":{"line":26,"column":5}},"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":26,"column":5}},{"start":{"line":20,"column":11},"end":{"line":26,"column":5}}],"line":12},"1":{"loc":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},{"start":{},"end":{}}],"line":13},"2":{"loc":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},{"start":{},"end":{}}],"line":21},"3":{"loc":{"start":{"line":31,"column":11},"end":{"line":31,"column":89}},"type":"cond-expr","locations":[{"start":{"line":31,"column":41},"end":{"line":31,"column":48}},{"start":{"line":31,"column":51},"end":{"line":31,"column":89}}],"line":31},"4":{"loc":{"start":{"line":47,"column":4},"end":{"line":51,"column":5}},"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":51,"column":5}},{"start":{"line":49,"column":11},"end":{"line":51,"column":5}}],"line":47},"5":{"loc":{"start":{"line":62,"column":49},"end":{"line":62,"column":74}},"type":"default-arg","locations":[{"start":{"line":62,"column":72},"end":{"line":62,"column":74}}],"line":62},"6":{"loc":{"start":{"line":68,"column":12},"end":{"line":68,"column":59}},"type":"binary-expr","locations":[{"start":{"line":68,"column":12},"end":{"line":68,"column":53}},{"start":{"line":68,"column":57},"end":{"line":68,"column":59}}],"line":68},"7":{"loc":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},{"start":{},"end":{}}],"line":74},"8":{"loc":{"start":{"line":80,"column":8},"end":{"line":84,"column":9}},"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":84,"column":9}},{"start":{},"end":{}}],"line":80},"9":{"loc":{"start":{"line":81,"column":33},"end":{"line":81,"column":84}},"type":"binary-expr","locations":[{"start":{"line":81,"column":33},"end":{"line":81,"column":52}},{"start":{"line":81,"column":56},"end":{"line":81,"column":84}}],"line":81},"10":{"loc":{"start":{"line":82,"column":34},"end":{"line":82,"column":112}},"type":"cond-expr","locations":[{"start":{"line":82,"column":69},"end":{"line":82,"column":81}},{"start":{"line":82,"column":84},"end":{"line":82,"column":112}}],"line":82},"11":{"loc":{"start":{"line":87,"column":44},"end":{"line":87,"column":95}},"type":"binary-expr","locations":[{"start":{"line":87,"column":44},"end":{"line":87,"column":57}},{"start":{"line":87,"column":61},"end":{"line":87,"column":95}}],"line":87},"12":{"loc":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},{"start":{},"end":{}}],"line":116},"13":{"loc":{"start":{"line":117,"column":28},"end":{"line":117,"column":65}},"type":"binary-expr","locations":[{"start":{"line":117,"column":28},"end":{"line":117,"column":47}},{"start":{"line":117,"column":51},"end":{"line":117,"column":65}}],"line":117},"14":{"loc":{"start":{"line":121,"column":35},"end":{"line":121,"column":86}},"type":"binary-expr","locations":[{"start":{"line":121,"column":35},"end":{"line":121,"column":48}},{"start":{"line":121,"column":52},"end":{"line":121,"column":86}}],"line":121},"15":{"loc":{"start":{"line":142,"column":8},"end":{"line":147,"column":9}},"type":"if","locations":[{"start":{"line":142,"column":8},"end":{"line":147,"column":9}},{"start":{},"end":{}}],"line":142}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\services\\backendService.ts": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\services\\backendService.ts","statementMap":{"0":{"start":{"line":8,"column":17},"end":{"line":8,"column":28}},"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":66}},"2":{"start":{"line":19,"column":8},"end":{"line":19,"column":23}},"3":{"start":{"line":19,"column":24},"end":{"line":19,"column":51}},"4":{"start":{"line":19,"column":52},"end":{"line":19,"column":73}},"5":{"start":{"line":19,"column":74},"end":{"line":19,"column":95}},"6":{"start":{"line":19,"column":96},"end":{"line":19,"column":123}},"7":{"start":{"line":23,"column":19},"end":{"line":23,"column":24}},"8":{"start":{"line":24,"column":148},"end":{"line":24,"column":150}},"9":{"start":{"line":26,"column":27},"end":{"line":35,"column":1}},"10":{"start":{"line":27,"column":4},"end":{"line":33,"column":7}},"11":{"start":{"line":28,"column":8},"end":{"line":32,"column":9}},"12":{"start":{"line":29,"column":12},"end":{"line":29,"column":31}},"13":{"start":{"line":31,"column":12},"end":{"line":31,"column":84}},"14":{"start":{"line":34,"column":4},"end":{"line":34,"column":21}},"15":{"start":{"line":38,"column":16},"end":{"line":38,"column":84}},"16":{"start":{"line":40,"column":22},"end":{"line":40,"column":61}},"17":{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},"18":{"start":{"line":43,"column":8},"end":{"line":43,"column":24}},"19":{"start":{"line":44,"column":8},"end":{"line":44,"column":109}},"20":{"start":{"line":47,"column":44},"end":{"line":53,"column":5}},"21":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"22":{"start":{"line":55,"column":8},"end":{"line":55,"column":70}},"23":{"start":{"line":58,"column":4},"end":{"line":131,"column":5}},"24":{"start":{"line":59,"column":25},"end":{"line":59,"column":66}},"25":{"start":{"line":60,"column":26},"end":{"line":60,"column":62}},"26":{"start":{"line":62,"column":8},"end":{"line":90,"column":9}},"27":{"start":{"line":63,"column":12},"end":{"line":67,"column":13}},"28":{"start":{"line":64,"column":16},"end":{"line":66,"column":19}},"29":{"start":{"line":65,"column":20},"end":{"line":65,"column":88}},"30":{"start":{"line":69,"column":12},"end":{"line":69,"column":32}},"31":{"start":{"line":70,"column":40},"end":{"line":70,"column":64}},"32":{"start":{"line":72,"column":12},"end":{"line":76,"column":13}},"33":{"start":{"line":73,"column":16},"end":{"line":73,"column":32}},"34":{"start":{"line":74,"column":16},"end":{"line":74,"column":37}},"35":{"start":{"line":75,"column":16},"end":{"line":75,"column":109}},"36":{"start":{"line":78,"column":30},"end":{"line":78,"column":73}},"37":{"start":{"line":80,"column":12},"end":{"line":89,"column":13}},"38":{"start":{"line":81,"column":16},"end":{"line":81,"column":46}},"39":{"start":{"line":82,"column":16},"end":{"line":82,"column":52}},"40":{"start":{"line":83,"column":16},"end":{"line":83,"column":66}},"41":{"start":{"line":85,"column":37},"end":{"line":85,"column":136}},"42":{"start":{"line":86,"column":16},"end":{"line":86,"column":55}},"43":{"start":{"line":87,"column":16},"end":{"line":87,"column":32}},"44":{"start":{"line":88,"column":16},"end":{"line":88,"column":35}},"45":{"start":{"line":92,"column":8},"end":{"line":92,"column":54}},"46":{"start":{"line":92,"column":37},"end":{"line":92,"column":54}},"47":{"start":{"line":94,"column":28},"end":{"line":94,"column":64}},"48":{"start":{"line":95,"column":23},"end":{"line":95,"column":78}},"49":{"start":{"line":96,"column":29},"end":{"line":96,"column":83}},"50":{"start":{"line":98,"column":8},"end":{"line":109,"column":9}},"51":{"start":{"line":99,"column":31},"end":{"line":99,"column":111}},"52":{"start":{"line":100,"column":12},"end":{"line":102,"column":13}},"53":{"start":{"line":101,"column":16},"end":{"line":101,"column":131}},"54":{"start":{"line":104,"column":12},"end":{"line":104,"column":99}},"55":{"start":{"line":104,"column":41},"end":{"line":104,"column":99}},"56":{"start":{"line":105,"column":12},"end":{"line":105,"column":122}},"57":{"start":{"line":105,"column":41},"end":{"line":105,"column":122}},"58":{"start":{"line":106,"column":12},"end":{"line":106,"column":97}},"59":{"start":{"line":106,"column":41},"end":{"line":106,"column":97}},"60":{"start":{"line":108,"column":12},"end":{"line":108,"column":99}},"61":{"start":{"line":110,"column":8},"end":{"line":110,"column":33}},"62":{"start":{"line":113,"column":8},"end":{"line":113,"column":55}},"63":{"start":{"line":113,"column":43},"end":{"line":113,"column":55}},"64":{"start":{"line":116,"column":8},"end":{"line":124,"column":9}},"65":{"start":{"line":117,"column":12},"end":{"line":117,"column":74}},"66":{"start":{"line":118,"column":15},"end":{"line":124,"column":9}},"67":{"start":{"line":119,"column":12},"end":{"line":119,"column":112}},"68":{"start":{"line":120,"column":15},"end":{"line":124,"column":9}},"69":{"start":{"line":121,"column":12},"end":{"line":121,"column":135}},"70":{"start":{"line":123,"column":12},"end":{"line":123,"column":109}},"71":{"start":{"line":126,"column":8},"end":{"line":126,"column":82}},"72":{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},"73":{"start":{"line":129,"column":13},"end":{"line":129,"column":34}},"74":{"start":{"line":134,"column":29},"end":{"line":134,"column":103}},"75":{"start":{"line":134,"column":62},"end":{"line":134,"column":103}},"76":{"start":{"line":135,"column":34},"end":{"line":135,"column":245}},"77":{"start":{"line":135,"column":112},"end":{"line":135,"column":245}},"78":{"start":{"line":136,"column":39},"end":{"line":136,"column":249}},"79":{"start":{"line":136,"column":119},"end":{"line":136,"column":249}},"80":{"start":{"line":137,"column":41},"end":{"line":137,"column":255}},"81":{"start":{"line":137,"column":122},"end":{"line":137,"column":255}},"82":{"start":{"line":138,"column":40},"end":{"line":138,"column":207}},"83":{"start":{"line":138,"column":94},"end":{"line":138,"column":207}},"84":{"start":{"line":139,"column":44},"end":{"line":143,"column":1}},"85":{"start":{"line":140,"column":21},"end":{"line":140,"column":194}},"86":{"start":{"line":141,"column":4},"end":{"line":141,"column":178}},"87":{"start":{"line":141,"column":65},"end":{"line":141,"column":178}},"88":{"start":{"line":142,"column":4},"end":{"line":142,"column":26}},"89":{"start":{"line":144,"column":30},"end":{"line":147,"column":1}},"90":{"start":{"line":145,"column":4},"end":{"line":145,"column":120}},"91":{"start":{"line":145,"column":21},"end":{"line":145,"column":120}},"92":{"start":{"line":146,"column":4},"end":{"line":146,"column":110}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":116},"end":{"line":20,"column":5}},"line":18},"1":{"name":"(anonymous_1)","decl":{"start":{"line":26,"column":27},"end":{"line":26,"column":28}},"loc":{"start":{"line":26,"column":64},"end":{"line":35,"column":1}},"line":26},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":24},"end":{"line":27,"column":25}},"loc":{"start":{"line":27,"column":32},"end":{"line":33,"column":5}},"line":27},"3":{"name":"fetchBackend","decl":{"start":{"line":37,"column":15},"end":{"line":37,"column":27}},"loc":{"start":{"line":37,"column":117},"end":{"line":132,"column":1}},"line":37},"4":{"name":"(anonymous_4)","decl":{"start":{"line":64,"column":35},"end":{"line":64,"column":36}},"loc":{"start":{"line":64,"column":56},"end":{"line":66,"column":17}},"line":64},"5":{"name":"(anonymous_5)","decl":{"start":{"line":134,"column":29},"end":{"line":134,"column":30}},"loc":{"start":{"line":134,"column":62},"end":{"line":134,"column":103}},"line":134},"6":{"name":"(anonymous_6)","decl":{"start":{"line":135,"column":34},"end":{"line":135,"column":35}},"loc":{"start":{"line":135,"column":112},"end":{"line":135,"column":245}},"line":135},"7":{"name":"(anonymous_7)","decl":{"start":{"line":136,"column":39},"end":{"line":136,"column":40}},"loc":{"start":{"line":136,"column":119},"end":{"line":136,"column":249}},"line":136},"8":{"name":"(anonymous_8)","decl":{"start":{"line":137,"column":41},"end":{"line":137,"column":42}},"loc":{"start":{"line":137,"column":122},"end":{"line":137,"column":255}},"line":137},"9":{"name":"(anonymous_9)","decl":{"start":{"line":138,"column":40},"end":{"line":138,"column":41}},"loc":{"start":{"line":138,"column":94},"end":{"line":138,"column":207}},"line":138},"10":{"name":"(anonymous_10)","decl":{"start":{"line":139,"column":44},"end":{"line":139,"column":45}},"loc":{"start":{"line":139,"column":118},"end":{"line":143,"column":1}},"line":139},"11":{"name":"(anonymous_11)","decl":{"start":{"line":144,"column":30},"end":{"line":144,"column":31}},"loc":{"start":{"line":144,"column":77},"end":{"line":147,"column":1}},"line":144}},"branchMap":{"0":{"loc":{"start":{"line":28,"column":8},"end":{"line":32,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":32,"column":9}},{"start":{"line":30,"column":15},"end":{"line":32,"column":9}}],"line":28},"1":{"loc":{"start":{"line":28,"column":12},"end":{"line":28,"column":27}},"type":"binary-expr","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":17}},{"start":{"line":28,"column":21},"end":{"line":28,"column":27}}],"line":28},"2":{"loc":{"start":{"line":37,"column":50},"end":{"line":37,"column":75}},"type":"default-arg","locations":[{"start":{"line":37,"column":73},"end":{"line":37,"column":75}}],"line":37},"3":{"loc":{"start":{"line":37,"column":77},"end":{"line":37,"column":102}},"type":"default-arg","locations":[{"start":{"line":37,"column":98},"end":{"line":37,"column":102}}],"line":37},"4":{"loc":{"start":{"line":38,"column":30},"end":{"line":38,"column":82}},"type":"cond-expr","locations":[{"start":{"line":38,"column":57},"end":{"line":38,"column":65}},{"start":{"line":38,"column":68},"end":{"line":38,"column":82}}],"line":38},"5":{"loc":{"start":{"line":40,"column":22},"end":{"line":40,"column":61}},"type":"cond-expr","locations":[{"start":{"line":40,"column":34},"end":{"line":40,"column":54}},{"start":{"line":40,"column":57},"end":{"line":40,"column":61}}],"line":40},"6":{"loc":{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},{"start":{},"end":{}}],"line":42},"7":{"loc":{"start":{"line":42,"column":8},"end":{"line":42,"column":45}},"type":"binary-expr","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":17}},{"start":{"line":42,"column":21},"end":{"line":42,"column":45}}],"line":42},"8":{"loc":{"start":{"line":52,"column":12},"end":{"line":52,"column":59}},"type":"binary-expr","locations":[{"start":{"line":52,"column":12},"end":{"line":52,"column":53}},{"start":{"line":52,"column":57},"end":{"line":52,"column":59}}],"line":52},"9":{"loc":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},{"start":{},"end":{}}],"line":54},"10":{"loc":{"start":{"line":54,"column":8},"end":{"line":54,"column":30}},"type":"binary-expr","locations":[{"start":{"line":54,"column":8},"end":{"line":54,"column":17}},{"start":{"line":54,"column":21},"end":{"line":54,"column":30}}],"line":54},"11":{"loc":{"start":{"line":62,"column":8},"end":{"line":90,"column":9}},"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":90,"column":9}},{"start":{},"end":{}}],"line":62},"12":{"loc":{"start":{"line":62,"column":12},"end":{"line":62,"column":48}},"type":"binary-expr","locations":[{"start":{"line":62,"column":12},"end":{"line":62,"column":35}},{"start":{"line":62,"column":39},"end":{"line":62,"column":48}}],"line":62},"13":{"loc":{"start":{"line":63,"column":12},"end":{"line":67,"column":13}},"type":"if","locations":[{"start":{"line":63,"column":12},"end":{"line":67,"column":13}},{"start":{},"end":{}}],"line":63},"14":{"loc":{"start":{"line":72,"column":12},"end":{"line":76,"column":13}},"type":"if","locations":[{"start":{"line":72,"column":12},"end":{"line":76,"column":13}},{"start":{},"end":{}}],"line":72},"15":{"loc":{"start":{"line":80,"column":12},"end":{"line":89,"column":13}},"type":"if","locations":[{"start":{"line":80,"column":12},"end":{"line":89,"column":13}},{"start":{"line":84,"column":19},"end":{"line":89,"column":13}}],"line":80},"16":{"loc":{"start":{"line":92,"column":8},"end":{"line":92,"column":54}},"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":92,"column":54}},{"start":{},"end":{}}],"line":92},"17":{"loc":{"start":{"line":95,"column":23},"end":{"line":95,"column":78}},"type":"binary-expr","locations":[{"start":{"line":95,"column":23},"end":{"line":95,"column":34}},{"start":{"line":95,"column":38},"end":{"line":95,"column":78}}],"line":95},"18":{"loc":{"start":{"line":96,"column":29},"end":{"line":96,"column":83}},"type":"cond-expr","locations":[{"start":{"line":96,"column":38},"end":{"line":96,"column":59}},{"start":{"line":96,"column":62},"end":{"line":96,"column":83}}],"line":96},"19":{"loc":{"start":{"line":98,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":109,"column":9}},{"start":{},"end":{}}],"line":98},"20":{"loc":{"start":{"line":100,"column":12},"end":{"line":102,"column":13}},"type":"if","locations":[{"start":{"line":100,"column":12},"end":{"line":102,"column":13}},{"start":{},"end":{}}],"line":100},"21":{"loc":{"start":{"line":100,"column":16},"end":{"line":100,"column":46}},"type":"binary-expr","locations":[{"start":{"line":100,"column":16},"end":{"line":100,"column":22}},{"start":{"line":100,"column":26},"end":{"line":100,"column":46}}],"line":100},"22":{"loc":{"start":{"line":101,"column":31},"end":{"line":101,"column":130}},"type":"cond-expr","locations":[{"start":{"line":101,"column":73},"end":{"line":101,"column":92}},{"start":{"line":101,"column":95},"end":{"line":101,"column":130}}],"line":101},"23":{"loc":{"start":{"line":104,"column":12},"end":{"line":104,"column":99}},"type":"if","locations":[{"start":{"line":104,"column":12},"end":{"line":104,"column":99}},{"start":{},"end":{}}],"line":104},"24":{"loc":{"start":{"line":105,"column":12},"end":{"line":105,"column":122}},"type":"if","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":122}},{"start":{},"end":{}}],"line":105},"25":{"loc":{"start":{"line":105,"column":56},"end":{"line":105,"column":121}},"type":"binary-expr","locations":[{"start":{"line":105,"column":56},"end":{"line":105,"column":76}},{"start":{"line":105,"column":80},"end":{"line":105,"column":121}}],"line":105},"26":{"loc":{"start":{"line":106,"column":12},"end":{"line":106,"column":97}},"type":"if","locations":[{"start":{"line":106,"column":12},"end":{"line":106,"column":97}},{"start":{},"end":{}}],"line":106},"27":{"loc":{"start":{"line":113,"column":8},"end":{"line":113,"column":55}},"type":"if","locations":[{"start":{"line":113,"column":8},"end":{"line":113,"column":55}},{"start":{},"end":{}}],"line":113},"28":{"loc":{"start":{"line":116,"column":8},"end":{"line":124,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":124,"column":9}},{"start":{"line":118,"column":15},"end":{"line":124,"column":9}}],"line":116},"29":{"loc":{"start":{"line":116,"column":12},"end":{"line":116,"column":65}},"type":"binary-expr","locations":[{"start":{"line":116,"column":12},"end":{"line":116,"column":34}},{"start":{"line":116,"column":38},"end":{"line":116,"column":65}}],"line":116},"30":{"loc":{"start":{"line":118,"column":15},"end":{"line":124,"column":9}},"type":"if","locations":[{"start":{"line":118,"column":15},"end":{"line":124,"column":9}},{"start":{"line":120,"column":15},"end":{"line":124,"column":9}}],"line":118},"31":{"loc":{"start":{"line":118,"column":19},"end":{"line":118,"column":140}},"type":"binary-expr","locations":[{"start":{"line":118,"column":19},"end":{"line":118,"column":41}},{"start":{"line":118,"column":46},"end":{"line":118,"column":94}},{"start":{"line":118,"column":98},"end":{"line":118,"column":139}}],"line":118},"32":{"loc":{"start":{"line":120,"column":15},"end":{"line":124,"column":9}},"type":"if","locations":[{"start":{"line":120,"column":15},"end":{"line":124,"column":9}},{"start":{"line":122,"column":15},"end":{"line":124,"column":9}}],"line":120},"33":{"loc":{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},{"start":{},"end":{}}],"line":128},"34":{"loc":{"start":{"line":128,"column":11},"end":{"line":128,"column":61}},"type":"binary-expr","locations":[{"start":{"line":128,"column":11},"end":{"line":128,"column":23}},{"start":{"line":128,"column":27},"end":{"line":128,"column":61}}],"line":128},"35":{"loc":{"start":{"line":141,"column":4},"end":{"line":141,"column":178}},"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":141,"column":178}},{"start":{},"end":{}}],"line":141},"36":{"loc":{"start":{"line":141,"column":8},"end":{"line":141,"column":63}},"type":"binary-expr","locations":[{"start":{"line":141,"column":8},"end":{"line":141,"column":25}},{"start":{"line":141,"column":29},"end":{"line":141,"column":63}}],"line":141},"37":{"loc":{"start":{"line":145,"column":4},"end":{"line":145,"column":120}},"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":120}},{"start":{},"end":{}}],"line":145}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"0":[0,0],"1":[0,0],"2":[0],"3":[0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\services\\clientIDService.ts": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\services\\clientIDService.ts","statementMap":{"0":{"start":{"line":5,"column":22},"end":{"line":5,"column":46}},"1":{"start":{"line":6,"column":37},"end":{"line":6,"column":41}},"2":{"start":{"line":8,"column":27},"end":{"line":30,"column":1}},"3":{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":27}},"5":{"start":{"line":13,"column":2},"end":{"line":29,"column":3}},"6":{"start":{"line":14,"column":19},"end":{"line":14,"column":60}},"7":{"start":{"line":15,"column":4},"end":{"line":21,"column":5}},"8":{"start":{"line":16,"column":6},"end":{"line":16,"column":37}},"9":{"start":{"line":17,"column":6},"end":{"line":17,"column":56}},"10":{"start":{"line":18,"column":6},"end":{"line":18,"column":58}},"11":{"start":{"line":20,"column":6},"end":{"line":20,"column":61}},"12":{"start":{"line":22,"column":4},"end":{"line":22,"column":31}},"13":{"start":{"line":23,"column":4},"end":{"line":23,"column":20}},"14":{"start":{"line":25,"column":4},"end":{"line":25,"column":54}},"15":{"start":{"line":28,"column":4},"end":{"line":28,"column":31}},"16":{"start":{"line":33,"column":29},"end":{"line":41,"column":1}},"17":{"start":{"line":34,"column":4},"end":{"line":34,"column":27}},"18":{"start":{"line":35,"column":4},"end":{"line":40,"column":5}},"19":{"start":{"line":36,"column":8},"end":{"line":36,"column":53}},"20":{"start":{"line":37,"column":8},"end":{"line":37,"column":42}},"21":{"start":{"line":39,"column":8},"end":{"line":39,"column":58}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":27},"end":{"line":8,"column":28}},"loc":{"start":{"line":8,"column":56},"end":{"line":30,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":33,"column":29},"end":{"line":33,"column":30}},"loc":{"start":{"line":33,"column":56},"end":{"line":41,"column":1}},"line":33}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},"type":"if","locations":[{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},{"start":{},"end":{}}],"line":9},"1":{"loc":{"start":{"line":15,"column":4},"end":{"line":21,"column":5}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":21,"column":5}},{"start":{"line":19,"column":11},"end":{"line":21,"column":5}}],"line":15}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"f":{"0":0,"1":0},"b":{"0":[0,0],"1":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\services\\foodService.ts": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\services\\foodService.ts","statementMap":{"0":{"start":{"line":7,"column":26},"end":{"line":17,"column":1}},"1":{"start":{"line":8,"column":24},"end":{"line":12,"column":3}},"2":{"start":{"line":13,"column":34},"end":{"line":13,"column":51}},"3":{"start":{"line":14,"column":2},"end":{"line":14,"column":29}},"4":{"start":{"line":15,"column":2},"end":{"line":15,"column":32}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":17}},"6":{"start":{"line":19,"column":24},"end":{"line":51,"column":1}},"7":{"start":{"line":24,"column":41},"end":{"line":24,"column":58}},"8":{"start":{"line":26,"column":22},"end":{"line":26,"column":41}},"9":{"start":{"line":28,"column":2},"end":{"line":33,"column":3}},"10":{"start":{"line":29,"column":33},"end":{"line":29,"column":64}},"11":{"start":{"line":30,"column":4},"end":{"line":32,"column":6}},"12":{"start":{"line":31,"column":6},"end":{"line":31,"column":60}},"13":{"start":{"line":36,"column":2},"end":{"line":45,"column":3}},"14":{"start":{"line":37,"column":6},"end":{"line":37,"column":65}},"15":{"start":{"line":37,"column":35},"end":{"line":37,"column":63}},"16":{"start":{"line":39,"column":27},"end":{"line":39,"column":53}},"17":{"start":{"line":40,"column":6},"end":{"line":44,"column":9}},"18":{"start":{"line":41,"column":24},"end":{"line":41,"column":71}},"19":{"start":{"line":42,"column":24},"end":{"line":42,"column":71}},"20":{"start":{"line":43,"column":10},"end":{"line":43,"column":73}},"21":{"start":{"line":47,"column":24},"end":{"line":47,"column":44}},"22":{"start":{"line":50,"column":2},"end":{"line":50,"column":56}},"23":{"start":{"line":53,"column":26},"end":{"line":62,"column":1}},"24":{"start":{"line":54,"column":27},"end":{"line":54,"column":44}},"25":{"start":{"line":55,"column":16},"end":{"line":55,"column":63}},"26":{"start":{"line":55,"column":39},"end":{"line":55,"column":62}},"27":{"start":{"line":56,"column":2},"end":{"line":58,"column":3}},"28":{"start":{"line":57,"column":4},"end":{"line":57,"column":38}},"29":{"start":{"line":59,"column":2},"end":{"line":59,"column":29}},"30":{"start":{"line":60,"column":2},"end":{"line":60,"column":25}},"31":{"start":{"line":61,"column":2},"end":{"line":61,"column":21}},"32":{"start":{"line":64,"column":26},"end":{"line":68,"column":1}},"33":{"start":{"line":65,"column":27},"end":{"line":65,"column":44}},"34":{"start":{"line":66,"column":24},"end":{"line":66,"column":60}},"35":{"start":{"line":66,"column":44},"end":{"line":66,"column":59}},"36":{"start":{"line":67,"column":2},"end":{"line":67,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":26},"end":{"line":7,"column":27}},"loc":{"start":{"line":7,"column":93},"end":{"line":17,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":24},"end":{"line":19,"column":25}},"loc":{"start":{"line":22,"column":48},"end":{"line":51,"column":1}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":47},"end":{"line":30,"column":48}},"loc":{"start":{"line":31,"column":6},"end":{"line":31,"column":60}},"line":31},"3":{"name":"(anonymous_3)","decl":{"start":{"line":37,"column":25},"end":{"line":37,"column":26}},"loc":{"start":{"line":37,"column":35},"end":{"line":37,"column":63}},"line":37},"4":{"name":"(anonymous_4)","decl":{"start":{"line":40,"column":25},"end":{"line":40,"column":26}},"loc":{"start":{"line":40,"column":35},"end":{"line":44,"column":7}},"line":40},"5":{"name":"(anonymous_5)","decl":{"start":{"line":53,"column":26},"end":{"line":53,"column":27}},"loc":{"start":{"line":53,"column":70},"end":{"line":62,"column":1}},"line":53},"6":{"name":"(anonymous_6)","decl":{"start":{"line":55,"column":32},"end":{"line":55,"column":33}},"loc":{"start":{"line":55,"column":39},"end":{"line":55,"column":62}},"line":55},"7":{"name":"(anonymous_7)","decl":{"start":{"line":64,"column":26},"end":{"line":64,"column":27}},"loc":{"start":{"line":64,"column":67},"end":{"line":68,"column":1}},"line":64},"8":{"name":"(anonymous_8)","decl":{"start":{"line":66,"column":37},"end":{"line":66,"column":38}},"loc":{"start":{"line":66,"column":44},"end":{"line":66,"column":59}},"line":66}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":51}},"type":"default-arg","locations":[{"start":{"line":21,"column":45},"end":{"line":21,"column":51}}],"line":21},"1":{"loc":{"start":{"line":28,"column":2},"end":{"line":33,"column":3}},"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":33,"column":3}},{"start":{},"end":{}}],"line":28},"2":{"loc":{"start":{"line":28,"column":6},"end":{"line":28,"column":44}},"type":"binary-expr","locations":[{"start":{"line":28,"column":6},"end":{"line":28,"column":16}},{"start":{"line":28,"column":20},"end":{"line":28,"column":44}}],"line":28},"3":{"loc":{"start":{"line":36,"column":2},"end":{"line":45,"column":3}},"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":45,"column":3}},{"start":{"line":38,"column":9},"end":{"line":45,"column":3}}],"line":36},"4":{"loc":{"start":{"line":41,"column":33},"end":{"line":41,"column":60}},"type":"binary-expr","locations":[{"start":{"line":41,"column":33},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":60}}],"line":41},"5":{"loc":{"start":{"line":42,"column":33},"end":{"line":42,"column":60}},"type":"binary-expr","locations":[{"start":{"line":42,"column":33},"end":{"line":42,"column":44}},{"start":{"line":42,"column":48},"end":{"line":42,"column":60}}],"line":42},"6":{"loc":{"start":{"line":43,"column":17},"end":{"line":43,"column":72}},"type":"cond-expr","locations":[{"start":{"line":43,"column":43},"end":{"line":43,"column":56}},{"start":{"line":43,"column":59},"end":{"line":43,"column":72}}],"line":43},"7":{"loc":{"start":{"line":56,"column":2},"end":{"line":58,"column":3}},"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":58,"column":3}},{"start":{},"end":{}}],"line":56}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"0":[0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\services\\storageService.ts": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\services\\storageService.ts","statementMap":{"0":{"start":{"line":7,"column":26},"end":{"line":7,"column":40}},"1":{"start":{"line":8,"column":18},"end":{"line":8,"column":25}},"2":{"start":{"line":9,"column":21},"end":{"line":9,"column":31}},"3":{"start":{"line":10,"column":25},"end":{"line":10,"column":38}},"4":{"start":{"line":11,"column":28},"end":{"line":11,"column":44}},"5":{"start":{"line":15,"column":32},"end":{"line":22,"column":1}},"6":{"start":{"line":16,"column":2},"end":{"line":21,"column":3}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":75}},"8":{"start":{"line":19,"column":4},"end":{"line":19,"column":56}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":16}},"10":{"start":{"line":24,"column":32},"end":{"line":33,"column":1}},"11":{"start":{"line":25,"column":2},"end":{"line":32,"column":3}},"12":{"start":{"line":26,"column":24},"end":{"line":26,"column":69}},"13":{"start":{"line":27,"column":4},"end":{"line":27,"column":54}},"14":{"start":{"line":29,"column":4},"end":{"line":29,"column":102}},"15":{"start":{"line":30,"column":4},"end":{"line":30,"column":53}},"16":{"start":{"line":31,"column":4},"end":{"line":31,"column":14}},"17":{"start":{"line":35,"column":25},"end":{"line":42,"column":1}},"18":{"start":{"line":36,"column":2},"end":{"line":41,"column":3}},"19":{"start":{"line":37,"column":4},"end":{"line":37,"column":65}},"20":{"start":{"line":39,"column":4},"end":{"line":39,"column":48}},"21":{"start":{"line":40,"column":4},"end":{"line":40,"column":16}},"22":{"start":{"line":44,"column":25},"end":{"line":61,"column":1}},"23":{"start":{"line":45,"column":2},"end":{"line":60,"column":3}},"24":{"start":{"line":46,"column":22},"end":{"line":46,"column":59}},"25":{"start":{"line":47,"column":29},"end":{"line":47,"column":67}},"26":{"start":{"line":48,"column":18},"end":{"line":48,"column":33}},"27":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"28":{"start":{"line":51,"column":6},"end":{"line":51,"column":40}},"29":{"start":{"line":54,"column":27},"end":{"line":54,"column":65}},"30":{"start":{"line":55,"column":4},"end":{"line":55,"column":44}},"31":{"start":{"line":57,"column":4},"end":{"line":57,"column":94}},"32":{"start":{"line":58,"column":4},"end":{"line":58,"column":45}},"33":{"start":{"line":59,"column":4},"end":{"line":59,"column":35}},"34":{"start":{"line":63,"column":28},"end":{"line":70,"column":1}},"35":{"start":{"line":64,"column":2},"end":{"line":69,"column":3}},"36":{"start":{"line":65,"column":4},"end":{"line":65,"column":71}},"37":{"start":{"line":67,"column":4},"end":{"line":67,"column":51}},"38":{"start":{"line":68,"column":4},"end":{"line":68,"column":16}},"39":{"start":{"line":72,"column":28},"end":{"line":99,"column":1}},"40":{"start":{"line":73,"column":36},"end":{"line":78,"column":3}},"41":{"start":{"line":80,"column":2},"end":{"line":98,"column":3}},"42":{"start":{"line":81,"column":25},"end":{"line":81,"column":65}},"43":{"start":{"line":82,"column":4},"end":{"line":82,"column":46}},"44":{"start":{"line":82,"column":23},"end":{"line":82,"column":46}},"45":{"start":{"line":84,"column":27},"end":{"line":84,"column":51}},"46":{"start":{"line":86,"column":4},"end":{"line":93,"column":6}},"47":{"start":{"line":95,"column":4},"end":{"line":95,"column":120}},"48":{"start":{"line":96,"column":4},"end":{"line":96,"column":48}},"49":{"start":{"line":97,"column":4},"end":{"line":97,"column":27}},"50":{"start":{"line":101,"column":28},"end":{"line":121,"column":1}},"51":{"start":{"line":102,"column":2},"end":{"line":120,"column":3}},"52":{"start":{"line":103,"column":24},"end":{"line":103,"column":48}},"53":{"start":{"line":104,"column":25},"end":{"line":104,"column":50}},"54":{"start":{"line":105,"column":34},"end":{"line":105,"column":90}},"55":{"start":{"line":107,"column":4},"end":{"line":107,"column":31}},"56":{"start":{"line":109,"column":44},"end":{"line":109,"column":46}},"57":{"start":{"line":110,"column":4},"end":{"line":110,"column":70}},"58":{"start":{"line":110,"column":23},"end":{"line":110,"column":70}},"59":{"start":{"line":111,"column":4},"end":{"line":111,"column":72}},"60":{"start":{"line":111,"column":24},"end":{"line":111,"column":72}},"61":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"62":{"start":{"line":114,"column":8},"end":{"line":114,"column":49}},"63":{"start":{"line":116,"column":4},"end":{"line":116,"column":72}},"64":{"start":{"line":118,"column":4},"end":{"line":118,"column":49}},"65":{"start":{"line":119,"column":4},"end":{"line":119,"column":16}},"66":{"start":{"line":123,"column":31},"end":{"line":130,"column":1}},"67":{"start":{"line":124,"column":4},"end":{"line":129,"column":5}},"68":{"start":{"line":125,"column":8},"end":{"line":125,"column":76}},"69":{"start":{"line":127,"column":8},"end":{"line":127,"column":59}},"70":{"start":{"line":128,"column":8},"end":{"line":128,"column":20}},"71":{"start":{"line":132,"column":31},"end":{"line":141,"column":1}},"72":{"start":{"line":133,"column":4},"end":{"line":140,"column":5}},"73":{"start":{"line":134,"column":26},"end":{"line":134,"column":70}},"74":{"start":{"line":135,"column":8},"end":{"line":135,"column":54}},"75":{"start":{"line":137,"column":8},"end":{"line":137,"column":105}},"76":{"start":{"line":138,"column":8},"end":{"line":138,"column":56}},"77":{"start":{"line":139,"column":8},"end":{"line":139,"column":18}},"78":{"start":{"line":143,"column":34},"end":{"line":150,"column":1}},"79":{"start":{"line":144,"column":4},"end":{"line":149,"column":5}},"80":{"start":{"line":145,"column":8},"end":{"line":145,"column":82}},"81":{"start":{"line":147,"column":8},"end":{"line":147,"column":62}},"82":{"start":{"line":148,"column":8},"end":{"line":148,"column":20}},"83":{"start":{"line":152,"column":34},"end":{"line":161,"column":1}},"84":{"start":{"line":153,"column":4},"end":{"line":160,"column":5}},"85":{"start":{"line":154,"column":29},"end":{"line":154,"column":76}},"86":{"start":{"line":155,"column":8},"end":{"line":155,"column":60}},"87":{"start":{"line":157,"column":8},"end":{"line":157,"column":108}},"88":{"start":{"line":158,"column":8},"end":{"line":158,"column":59}},"89":{"start":{"line":159,"column":8},"end":{"line":159,"column":18}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":15,"column":32},"end":{"line":15,"column":33}},"loc":{"start":{"line":15,"column":80},"end":{"line":22,"column":1}},"line":15},"1":{"name":"(anonymous_1)","decl":{"start":{"line":24,"column":32},"end":{"line":24,"column":33}},"loc":{"start":{"line":24,"column":67},"end":{"line":33,"column":1}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":35,"column":25},"end":{"line":35,"column":26}},"loc":{"start":{"line":35,"column":65},"end":{"line":42,"column":1}},"line":35},"3":{"name":"(anonymous_3)","decl":{"start":{"line":44,"column":25},"end":{"line":44,"column":26}},"loc":{"start":{"line":44,"column":114},"end":{"line":61,"column":1}},"line":44},"4":{"name":"(anonymous_4)","decl":{"start":{"line":63,"column":28},"end":{"line":63,"column":29}},"loc":{"start":{"line":63,"column":73},"end":{"line":70,"column":1}},"line":63},"5":{"name":"(anonymous_5)","decl":{"start":{"line":72,"column":28},"end":{"line":72,"column":29}},"loc":{"start":{"line":72,"column":59},"end":{"line":99,"column":1}},"line":72},"6":{"name":"(anonymous_6)","decl":{"start":{"line":101,"column":28},"end":{"line":101,"column":29}},"loc":{"start":{"line":101,"column":55},"end":{"line":121,"column":1}},"line":101},"7":{"name":"(anonymous_7)","decl":{"start":{"line":123,"column":31},"end":{"line":123,"column":32}},"loc":{"start":{"line":123,"column":56},"end":{"line":130,"column":1}},"line":123},"8":{"name":"(anonymous_8)","decl":{"start":{"line":132,"column":31},"end":{"line":132,"column":32}},"loc":{"start":{"line":132,"column":60},"end":{"line":141,"column":1}},"line":132},"9":{"name":"(anonymous_9)","decl":{"start":{"line":143,"column":34},"end":{"line":143,"column":35}},"loc":{"start":{"line":143,"column":85},"end":{"line":150,"column":1}},"line":143},"10":{"name":"(anonymous_10)","decl":{"start":{"line":152,"column":34},"end":{"line":152,"column":35}},"loc":{"start":{"line":152,"column":71},"end":{"line":161,"column":1}},"line":152}},"branchMap":{"0":{"loc":{"start":{"line":27,"column":11},"end":{"line":27,"column":53}},"type":"cond-expr","locations":[{"start":{"line":27,"column":25},"end":{"line":27,"column":48}},{"start":{"line":27,"column":51},"end":{"line":27,"column":53}}],"line":27},"1":{"loc":{"start":{"line":44,"column":32},"end":{"line":44,"column":50}},"type":"default-arg","locations":[{"start":{"line":44,"column":49},"end":{"line":44,"column":50}}],"line":44},"2":{"loc":{"start":{"line":47,"column":29},"end":{"line":47,"column":67}},"type":"cond-expr","locations":[{"start":{"line":47,"column":41},"end":{"line":47,"column":62}},{"start":{"line":47,"column":65},"end":{"line":47,"column":67}}],"line":47},"3":{"loc":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},{"start":{},"end":{}}],"line":50},"4":{"loc":{"start":{"line":82,"column":4},"end":{"line":82,"column":46}},"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":46}},{"start":{},"end":{}}],"line":82},"5":{"loc":{"start":{"line":91,"column":12},"end":{"line":91,"column":43}},"type":"binary-expr","locations":[{"start":{"line":91,"column":12},"end":{"line":91,"column":37}},{"start":{"line":91,"column":41},"end":{"line":91,"column":43}}],"line":91},"6":{"loc":{"start":{"line":110,"column":4},"end":{"line":110,"column":70}},"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":110,"column":70}},{"start":{},"end":{}}],"line":110},"7":{"loc":{"start":{"line":111,"column":4},"end":{"line":111,"column":72}},"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":72}},{"start":{},"end":{}}],"line":111},"8":{"loc":{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":115,"column":5}},{"start":{},"end":{}}],"line":113},"9":{"loc":{"start":{"line":135,"column":15},"end":{"line":135,"column":53}},"type":"cond-expr","locations":[{"start":{"line":135,"column":27},"end":{"line":135,"column":48}},{"start":{"line":135,"column":51},"end":{"line":135,"column":53}}],"line":135},"10":{"loc":{"start":{"line":155,"column":15},"end":{"line":155,"column":59}},"type":"cond-expr","locations":[{"start":{"line":155,"column":30},"end":{"line":155,"column":54}},{"start":{"line":155,"column":57},"end":{"line":155,"column":59}}],"line":155}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[0,0],"1":[0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\services\\tokenStorage.ts": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\services\\tokenStorage.ts","statementMap":{"0":{"start":{"line":8,"column":18},"end":{"line":8,"column":43}},"1":{"start":{"line":16,"column":19},"end":{"line":16,"column":52}},"2":{"start":{"line":18,"column":0},"end":{"line":23,"column":1}},"3":{"start":{"line":19,"column":2},"end":{"line":22,"column":4}},"4":{"start":{"line":30,"column":20},"end":{"line":30,"column":41}},"5":{"start":{"line":31,"column":2},"end":{"line":35,"column":3}},"6":{"start":{"line":32,"column":4},"end":{"line":32,"column":53}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":57}},"8":{"start":{"line":43,"column":33},"end":{"line":43,"column":37}},"9":{"start":{"line":44,"column":2},"end":{"line":48,"column":3}},"10":{"start":{"line":45,"column":4},"end":{"line":45,"column":54}},"11":{"start":{"line":47,"column":4},"end":{"line":47,"column":58}},"12":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"13":{"start":{"line":51,"column":4},"end":{"line":51,"column":16}},"14":{"start":{"line":54,"column":2},"end":{"line":61,"column":3}},"15":{"start":{"line":55,"column":4},"end":{"line":55,"column":33}},"16":{"start":{"line":57,"column":4},"end":{"line":57,"column":95}},"17":{"start":{"line":59,"column":4},"end":{"line":59,"column":24}},"18":{"start":{"line":60,"column":4},"end":{"line":60,"column":16}},"19":{"start":{"line":68,"column":2},"end":{"line":72,"column":3}},"20":{"start":{"line":69,"column":4},"end":{"line":69,"column":45}},"21":{"start":{"line":71,"column":4},"end":{"line":71,"column":49}}},"fnMap":{"0":{"name":"saveToken","decl":{"start":{"line":29,"column":22},"end":{"line":29,"column":31}},"loc":{"start":{"line":29,"column":61},"end":{"line":36,"column":1}},"line":29},"1":{"name":"getToken","decl":{"start":{"line":42,"column":22},"end":{"line":42,"column":30}},"loc":{"start":{"line":42,"column":56},"end":{"line":62,"column":1}},"line":42},"2":{"name":"deleteToken","decl":{"start":{"line":67,"column":22},"end":{"line":67,"column":33}},"loc":{"start":{"line":67,"column":51},"end":{"line":73,"column":1}},"line":67}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":0},"end":{"line":23,"column":1}},"type":"if","locations":[{"start":{"line":18,"column":0},"end":{"line":23,"column":1}},{"start":{},"end":{}}],"line":18},"1":{"loc":{"start":{"line":20,"column":33},"end":{"line":20,"column":88}},"type":"cond-expr","locations":[{"start":{"line":20,"column":46},"end":{"line":20,"column":55}},{"start":{"line":20,"column":58},"end":{"line":20,"column":88}}],"line":20},"2":{"loc":{"start":{"line":21,"column":13},"end":{"line":21,"column":74}},"type":"cond-expr","locations":[{"start":{"line":21,"column":26},"end":{"line":21,"column":49}},{"start":{"line":21,"column":52},"end":{"line":21,"column":74}}],"line":21},"3":{"loc":{"start":{"line":31,"column":2},"end":{"line":35,"column":3}},"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":35,"column":3}},{"start":{"line":33,"column":9},"end":{"line":35,"column":3}}],"line":31},"4":{"loc":{"start":{"line":44,"column":2},"end":{"line":48,"column":3}},"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":48,"column":3}},{"start":{"line":46,"column":9},"end":{"line":48,"column":3}}],"line":44},"5":{"loc":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},{"start":{},"end":{}}],"line":50},"6":{"loc":{"start":{"line":68,"column":2},"end":{"line":72,"column":3}},"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":72,"column":3}},{"start":{"line":70,"column":9},"end":{"line":72,"column":3}}],"line":68}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\dateUtils.ts": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\dateUtils.ts","statementMap":{"0":{"start":{"line":13,"column":29},"end":{"line":27,"column":1}},"1":{"start":{"line":14,"column":4},"end":{"line":26,"column":5}},"2":{"start":{"line":16,"column":8},"end":{"line":19,"column":51}},"3":{"start":{"line":16,"column":39},"end":{"line":16,"column":59}},"4":{"start":{"line":17,"column":13},"end":{"line":19,"column":51}},"5":{"start":{"line":17,"column":48},"end":{"line":17,"column":78}},"6":{"start":{"line":18,"column":13},"end":{"line":19,"column":51}},"7":{"start":{"line":18,"column":48},"end":{"line":18,"column":78}},"8":{"start":{"line":19,"column":13},"end":{"line":19,"column":51}},"9":{"start":{"line":21,"column":8},"end":{"line":21,"column":69}},"10":{"start":{"line":21,"column":31},"end":{"line":21,"column":69}},"11":{"start":{"line":22,"column":8},"end":{"line":22,"column":62}},"12":{"start":{"line":24,"column":8},"end":{"line":24,"column":77}},"13":{"start":{"line":25,"column":8},"end":{"line":25,"column":18}},"14":{"start":{"line":36,"column":39},"end":{"line":52,"column":1}},"15":{"start":{"line":37,"column":4},"end":{"line":51,"column":5}},"16":{"start":{"line":39,"column":8},"end":{"line":42,"column":51}},"17":{"start":{"line":39,"column":39},"end":{"line":39,"column":59}},"18":{"start":{"line":40,"column":13},"end":{"line":42,"column":51}},"19":{"start":{"line":40,"column":48},"end":{"line":40,"column":78}},"20":{"start":{"line":41,"column":13},"end":{"line":42,"column":51}},"21":{"start":{"line":41,"column":48},"end":{"line":41,"column":78}},"22":{"start":{"line":42,"column":13},"end":{"line":42,"column":51}},"23":{"start":{"line":44,"column":8},"end":{"line":44,"column":69}},"24":{"start":{"line":44,"column":31},"end":{"line":44,"column":69}},"25":{"start":{"line":46,"column":23},"end":{"line":46,"column":46}},"26":{"start":{"line":47,"column":8},"end":{"line":47,"column":60}},"27":{"start":{"line":49,"column":9},"end":{"line":49,"column":88}},"28":{"start":{"line":50,"column":9},"end":{"line":50,"column":31}},"29":{"start":{"line":58,"column":34},"end":{"line":60,"column":1}},"30":{"start":{"line":59,"column":2},"end":{"line":59,"column":59}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":29},"end":{"line":13,"column":30}},"loc":{"start":{"line":13,"column":76},"end":{"line":27,"column":1}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":36,"column":39},"end":{"line":36,"column":40}},"loc":{"start":{"line":36,"column":101},"end":{"line":52,"column":1}},"line":36},"2":{"name":"(anonymous_2)","decl":{"start":{"line":58,"column":34},"end":{"line":58,"column":35}},"loc":{"start":{"line":58,"column":48},"end":{"line":60,"column":1}},"line":58}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":8},"end":{"line":19,"column":51}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":19,"column":51}},{"start":{"line":17,"column":13},"end":{"line":19,"column":51}}],"line":16},"1":{"loc":{"start":{"line":17,"column":13},"end":{"line":19,"column":51}},"type":"if","locations":[{"start":{"line":17,"column":13},"end":{"line":19,"column":51}},{"start":{"line":18,"column":13},"end":{"line":19,"column":51}}],"line":17},"2":{"loc":{"start":{"line":18,"column":13},"end":{"line":19,"column":51}},"type":"if","locations":[{"start":{"line":18,"column":13},"end":{"line":19,"column":51}},{"start":{"line":19,"column":13},"end":{"line":19,"column":51}}],"line":18},"3":{"loc":{"start":{"line":21,"column":8},"end":{"line":21,"column":69}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":69}},{"start":{},"end":{}}],"line":21},"4":{"loc":{"start":{"line":39,"column":8},"end":{"line":42,"column":51}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":42,"column":51}},{"start":{"line":40,"column":13},"end":{"line":42,"column":51}}],"line":39},"5":{"loc":{"start":{"line":40,"column":13},"end":{"line":42,"column":51}},"type":"if","locations":[{"start":{"line":40,"column":13},"end":{"line":42,"column":51}},{"start":{"line":41,"column":13},"end":{"line":42,"column":51}}],"line":40},"6":{"loc":{"start":{"line":41,"column":13},"end":{"line":42,"column":51}},"type":"if","locations":[{"start":{"line":41,"column":13},"end":{"line":42,"column":51}},{"start":{"line":42,"column":13},"end":{"line":42,"column":51}}],"line":41},"7":{"loc":{"start":{"line":44,"column":8},"end":{"line":44,"column":69}},"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":69}},{"start":{},"end":{}}],"line":44}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\foodIconMatcher.ts": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\foodIconMatcher.ts","statementMap":{"0":{"start":{"line":6,"column":37},"end":{"line":10,"column":1}},"1":{"start":{"line":7,"column":4},"end":{"line":9,"column":16}},"2":{"start":{"line":12,"column":27},"end":{"line":18,"column":1}},"3":{"start":{"line":13,"column":27},"end":{"line":13,"column":61}},"4":{"start":{"line":14,"column":30},"end":{"line":14,"column":105}},"5":{"start":{"line":15,"column":4},"end":{"line":17,"column":92}},"6":{"start":{"line":17,"column":24},"end":{"line":17,"column":90}},"7":{"start":{"line":26,"column":28},"end":{"line":130,"column":1}},"8":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"9":{"start":{"line":28,"column":8},"end":{"line":28,"column":20}},"10":{"start":{"line":31,"column":36},"end":{"line":31,"column":74}},"11":{"start":{"line":32,"column":26},"end":{"line":32,"column":54}},"12":{"start":{"line":36,"column":78},"end":{"line":36,"column":82}},"13":{"start":{"line":38,"column":4},"end":{"line":110,"column":5}},"14":{"start":{"line":39,"column":27},"end":{"line":39,"column":28}},"15":{"start":{"line":40,"column":37},"end":{"line":40,"column":42}},"16":{"start":{"line":41,"column":27},"end":{"line":41,"column":80}},"17":{"start":{"line":42,"column":38},"end":{"line":42,"column":40}},"18":{"start":{"line":43,"column":47},"end":{"line":43,"column":61}},"19":{"start":{"line":45,"column":8},"end":{"line":62,"column":9}},"20":{"start":{"line":46,"column":42},"end":{"line":46,"column":129}},"21":{"start":{"line":48,"column":12},"end":{"line":58,"column":13}},"22":{"start":{"line":49,"column":16},"end":{"line":49,"column":54}},"23":{"start":{"line":51,"column":16},"end":{"line":57,"column":17}},"24":{"start":{"line":52,"column":51},"end":{"line":52,"column":126}},"25":{"start":{"line":53,"column":20},"end":{"line":56,"column":21}},"26":{"start":{"line":54,"column":24},"end":{"line":54,"column":63}},"27":{"start":{"line":55,"column":24},"end":{"line":55,"column":50}},"28":{"start":{"line":60,"column":12},"end":{"line":60,"column":170}},"29":{"start":{"line":61,"column":12},"end":{"line":61,"column":31}},"30":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"31":{"start":{"line":65,"column":12},"end":{"line":65,"column":21}},"32":{"start":{"line":72,"column":8},"end":{"line":91,"column":9}},"33":{"start":{"line":73,"column":38},"end":{"line":73,"column":71}},"34":{"start":{"line":74,"column":12},"end":{"line":74,"column":45}},"35":{"start":{"line":74,"column":36},"end":{"line":74,"column":45}},"36":{"start":{"line":76,"column":12},"end":{"line":80,"column":13}},"37":{"start":{"line":77,"column":16},"end":{"line":77,"column":59}},"38":{"start":{"line":78,"column":16},"end":{"line":78,"column":46}},"39":{"start":{"line":79,"column":16},"end":{"line":79,"column":22}},"40":{"start":{"line":82,"column":12},"end":{"line":85,"column":13}},"41":{"start":{"line":83,"column":16},"end":{"line":83,"column":85}},"42":{"start":{"line":84,"column":16},"end":{"line":84,"column":46}},"43":{"start":{"line":87,"column":12},"end":{"line":90,"column":13}},"44":{"start":{"line":87,"column":47},"end":{"line":87,"column":106}},"45":{"start":{"line":88,"column":16},"end":{"line":88,"column":58}},"46":{"start":{"line":89,"column":16},"end":{"line":89,"column":46}},"47":{"start":{"line":93,"column":8},"end":{"line":102,"column":9}},"48":{"start":{"line":94,"column":12},"end":{"line":101,"column":13}},"49":{"start":{"line":95,"column":33},"end":{"line":95,"column":107}},"50":{"start":{"line":95,"column":93},"end":{"line":95,"column":106}},"51":{"start":{"line":96,"column":16},"end":{"line":100,"column":17}},"52":{"start":{"line":96,"column":40},"end":{"line":96,"column":76}},"53":{"start":{"line":97,"column":20},"end":{"line":97,"column":62}},"54":{"start":{"line":98,"column":20},"end":{"line":98,"column":50}},"55":{"start":{"line":99,"column":20},"end":{"line":99,"column":26}},"56":{"start":{"line":104,"column":8},"end":{"line":109,"column":9}},"57":{"start":{"line":105,"column":29},"end":{"line":105,"column":53}},"58":{"start":{"line":106,"column":12},"end":{"line":108,"column":13}},"59":{"start":{"line":107,"column":16},"end":{"line":107,"column":85}},"60":{"start":{"line":112,"column":4},"end":{"line":115,"column":5}},"61":{"start":{"line":114,"column":8},"end":{"line":114,"column":30}},"62":{"start":{"line":117,"column":34},"end":{"line":117,"column":95}},"63":{"start":{"line":117,"column":66},"end":{"line":117,"column":94}},"64":{"start":{"line":118,"column":4},"end":{"line":125,"column":5}},"65":{"start":{"line":119,"column":31},"end":{"line":119,"column":95}},"66":{"start":{"line":121,"column":38},"end":{"line":121,"column":127}},"67":{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},"68":{"start":{"line":122,"column":86},"end":{"line":122,"column":144}},"69":{"start":{"line":123,"column":12},"end":{"line":123,"column":46}},"70":{"start":{"line":127,"column":34},"end":{"line":127,"column":95}},"71":{"start":{"line":127,"column":66},"end":{"line":127,"column":94}},"72":{"start":{"line":129,"column":4},"end":{"line":129,"column":69}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":37},"end":{"line":6,"column":38}},"loc":{"start":{"line":6,"column":63},"end":{"line":10,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":27},"end":{"line":12,"column":28}},"loc":{"start":{"line":12,"column":55},"end":{"line":18,"column":1}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":16},"end":{"line":17,"column":17}},"loc":{"start":{"line":17,"column":24},"end":{"line":17,"column":90}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":28},"end":{"line":26,"column":29}},"loc":{"start":{"line":26,"column":95},"end":{"line":130,"column":1}},"line":26},"4":{"name":"(anonymous_4)","decl":{"start":{"line":87,"column":35},"end":{"line":87,"column":36}},"loc":{"start":{"line":87,"column":47},"end":{"line":87,"column":106}},"line":87},"5":{"name":"(anonymous_5)","decl":{"start":{"line":95,"column":87},"end":{"line":95,"column":88}},"loc":{"start":{"line":95,"column":93},"end":{"line":95,"column":106}},"line":95},"6":{"name":"(anonymous_6)","decl":{"start":{"line":96,"column":34},"end":{"line":96,"column":35}},"loc":{"start":{"line":96,"column":40},"end":{"line":96,"column":76}},"line":96},"7":{"name":"(anonymous_7)","decl":{"start":{"line":117,"column":59},"end":{"line":117,"column":60}},"loc":{"start":{"line":117,"column":66},"end":{"line":117,"column":94}},"line":117},"8":{"name":"(anonymous_8)","decl":{"start":{"line":122,"column":79},"end":{"line":122,"column":80}},"loc":{"start":{"line":122,"column":86},"end":{"line":122,"column":144}},"line":122},"9":{"name":"(anonymous_9)","decl":{"start":{"line":127,"column":59},"end":{"line":127,"column":60}},"loc":{"start":{"line":127,"column":66},"end":{"line":127,"column":94}},"line":127}},"branchMap":{"0":{"loc":{"start":{"line":17,"column":24},"end":{"line":17,"column":90}},"type":"binary-expr","locations":[{"start":{"line":17,"column":24},"end":{"line":17,"column":39}},{"start":{"line":17,"column":43},"end":{"line":17,"column":90}}],"line":17},"1":{"loc":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},{"start":{},"end":{}}],"line":27},"2":{"loc":{"start":{"line":27,"column":8},"end":{"line":27,"column":43}},"type":"binary-expr","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":17}},{"start":{"line":27,"column":21},"end":{"line":27,"column":43}}],"line":27},"3":{"loc":{"start":{"line":48,"column":12},"end":{"line":58,"column":13}},"type":"if","locations":[{"start":{"line":48,"column":12},"end":{"line":58,"column":13}},{"start":{"line":50,"column":19},"end":{"line":58,"column":13}}],"line":48},"4":{"loc":{"start":{"line":48,"column":16},"end":{"line":48,"column":88}},"type":"binary-expr","locations":[{"start":{"line":48,"column":16},"end":{"line":48,"column":52}},{"start":{"line":48,"column":56},"end":{"line":48,"column":88}}],"line":48},"5":{"loc":{"start":{"line":51,"column":16},"end":{"line":57,"column":17}},"type":"if","locations":[{"start":{"line":51,"column":16},"end":{"line":57,"column":17}},{"start":{},"end":{}}],"line":51},"6":{"loc":{"start":{"line":51,"column":20},"end":{"line":51,"column":121}},"type":"binary-expr","locations":[{"start":{"line":51,"column":20},"end":{"line":51,"column":43}},{"start":{"line":51,"column":47},"end":{"line":51,"column":82}},{"start":{"line":51,"column":86},"end":{"line":51,"column":121}}],"line":51},"7":{"loc":{"start":{"line":53,"column":20},"end":{"line":56,"column":21}},"type":"if","locations":[{"start":{"line":53,"column":20},"end":{"line":56,"column":21}},{"start":{},"end":{}}],"line":53},"8":{"loc":{"start":{"line":53,"column":24},"end":{"line":53,"column":98}},"type":"binary-expr","locations":[{"start":{"line":53,"column":24},"end":{"line":53,"column":61}},{"start":{"line":53,"column":65},"end":{"line":53,"column":98}}],"line":53},"9":{"loc":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},{"start":{},"end":{}}],"line":64},"10":{"loc":{"start":{"line":64,"column":12},"end":{"line":64,"column":116}},"type":"binary-expr","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":38}},{"start":{"line":64,"column":42},"end":{"line":64,"column":77}},{"start":{"line":64,"column":81},"end":{"line":64,"column":116}}],"line":64},"11":{"loc":{"start":{"line":74,"column":12},"end":{"line":74,"column":45}},"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":45}},{"start":{},"end":{}}],"line":74},"12":{"loc":{"start":{"line":76,"column":12},"end":{"line":80,"column":13}},"type":"if","locations":[{"start":{"line":76,"column":12},"end":{"line":80,"column":13}},{"start":{},"end":{}}],"line":76},"13":{"loc":{"start":{"line":82,"column":12},"end":{"line":85,"column":13}},"type":"if","locations":[{"start":{"line":82,"column":12},"end":{"line":85,"column":13}},{"start":{},"end":{}}],"line":82},"14":{"loc":{"start":{"line":87,"column":12},"end":{"line":90,"column":13}},"type":"if","locations":[{"start":{"line":87,"column":12},"end":{"line":90,"column":13}},{"start":{},"end":{}}],"line":87},"15":{"loc":{"start":{"line":87,"column":47},"end":{"line":87,"column":106}},"type":"binary-expr","locations":[{"start":{"line":87,"column":47},"end":{"line":87,"column":66}},{"start":{"line":87,"column":70},"end":{"line":87,"column":106}}],"line":87},"16":{"loc":{"start":{"line":93,"column":8},"end":{"line":102,"column":9}},"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":102,"column":9}},{"start":{},"end":{}}],"line":93},"17":{"loc":{"start":{"line":93,"column":12},"end":{"line":93,"column":63}},"type":"binary-expr","locations":[{"start":{"line":93,"column":12},"end":{"line":93,"column":35}},{"start":{"line":93,"column":39},"end":{"line":93,"column":63}}],"line":93},"18":{"loc":{"start":{"line":96,"column":16},"end":{"line":100,"column":17}},"type":"if","locations":[{"start":{"line":96,"column":16},"end":{"line":100,"column":17}},{"start":{},"end":{}}],"line":96},"19":{"loc":{"start":{"line":104,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":104,"column":8},"end":{"line":109,"column":9}},{"start":{},"end":{}}],"line":104},"20":{"loc":{"start":{"line":105,"column":29},"end":{"line":105,"column":53}},"type":"binary-expr","locations":[{"start":{"line":105,"column":29},"end":{"line":105,"column":48}},{"start":{"line":105,"column":52},"end":{"line":105,"column":53}}],"line":105},"21":{"loc":{"start":{"line":106,"column":12},"end":{"line":108,"column":13}},"type":"if","locations":[{"start":{"line":106,"column":12},"end":{"line":108,"column":13}},{"start":{},"end":{}}],"line":106},"22":{"loc":{"start":{"line":106,"column":16},"end":{"line":106,"column":131}},"type":"binary-expr","locations":[{"start":{"line":106,"column":16},"end":{"line":106,"column":26}},{"start":{"line":106,"column":30},"end":{"line":106,"column":60}},{"start":{"line":106,"column":65},"end":{"line":106,"column":97}},{"start":{"line":106,"column":101},"end":{"line":106,"column":130}}],"line":106},"23":{"loc":{"start":{"line":112,"column":4},"end":{"line":115,"column":5}},"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":115,"column":5}},{"start":{},"end":{}}],"line":112},"24":{"loc":{"start":{"line":112,"column":8},"end":{"line":112,"column":40}},"type":"binary-expr","locations":[{"start":{"line":112,"column":8},"end":{"line":112,"column":17}},{"start":{"line":112,"column":21},"end":{"line":112,"column":40}}],"line":112},"25":{"loc":{"start":{"line":118,"column":4},"end":{"line":125,"column":5}},"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":125,"column":5}},{"start":{},"end":{}}],"line":118},"26":{"loc":{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},"type":"if","locations":[{"start":{"line":122,"column":8},"end":{"line":124,"column":9}},{"start":{},"end":{}}],"line":122},"27":{"loc":{"start":{"line":122,"column":12},"end":{"line":122,"column":145}},"type":"binary-expr","locations":[{"start":{"line":122,"column":12},"end":{"line":122,"column":48}},{"start":{"line":122,"column":52},"end":{"line":122,"column":145}}],"line":122},"28":{"loc":{"start":{"line":129,"column":11},"end":{"line":129,"column":68}},"type":"cond-expr","locations":[{"start":{"line":129,"column":35},"end":{"line":129,"column":61}},{"start":{"line":129,"column":64},"end":{"line":129,"column":68}}],"line":129}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\gradingUtils.ts": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\gradingUtils.ts","statementMap":{"0":{"start":{"line":13,"column":56},"end":{"line":19,"column":1}},"1":{"start":{"line":21,"column":31},"end":{"line":31,"column":1}},"2":{"start":{"line":23,"column":25},"end":{"line":23,"column":70}},"3":{"start":{"line":25,"column":4},"end":{"line":29,"column":22}},"4":{"start":{"line":25,"column":28},"end":{"line":25,"column":41}},"5":{"start":{"line":26,"column":9},"end":{"line":29,"column":22}},"6":{"start":{"line":26,"column":33},"end":{"line":26,"column":46}},"7":{"start":{"line":27,"column":9},"end":{"line":29,"column":22}},"8":{"start":{"line":27,"column":33},"end":{"line":27,"column":46}},"9":{"start":{"line":28,"column":9},"end":{"line":29,"column":22}},"10":{"start":{"line":28,"column":33},"end":{"line":28,"column":46}},"11":{"start":{"line":29,"column":9},"end":{"line":29,"column":22}},"12":{"start":{"line":30,"column":4},"end":{"line":30,"column":71}},"13":{"start":{"line":38,"column":38},"end":{"line":105,"column":1}},"14":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"15":{"start":{"line":40,"column":8},"end":{"line":40,"column":20}},"16":{"start":{"line":43,"column":46},"end":{"line":43,"column":50}},"17":{"start":{"line":44,"column":16},"end":{"line":44,"column":18}},"18":{"start":{"line":47,"column":4},"end":{"line":49,"column":62}},"19":{"start":{"line":47,"column":24},"end":{"line":47,"column":36}},"20":{"start":{"line":48,"column":9},"end":{"line":49,"column":62}},"21":{"start":{"line":48,"column":29},"end":{"line":48,"column":40}},"22":{"start":{"line":49,"column":9},"end":{"line":49,"column":62}},"23":{"start":{"line":49,"column":29},"end":{"line":49,"column":62}},"24":{"start":{"line":50,"column":4},"end":{"line":50,"column":36}},"25":{"start":{"line":50,"column":24},"end":{"line":50,"column":36}},"26":{"start":{"line":53,"column":4},"end":{"line":55,"column":56}},"27":{"start":{"line":53,"column":22},"end":{"line":53,"column":34}},"28":{"start":{"line":54,"column":9},"end":{"line":55,"column":56}},"29":{"start":{"line":54,"column":27},"end":{"line":54,"column":39}},"30":{"start":{"line":55,"column":9},"end":{"line":55,"column":56}},"31":{"start":{"line":55,"column":44},"end":{"line":55,"column":56}},"32":{"start":{"line":58,"column":28},"end":{"line":58,"column":35}},"33":{"start":{"line":59,"column":38},"end":{"line":59,"column":93}},"34":{"start":{"line":61,"column":4},"end":{"line":68,"column":5}},"35":{"start":{"line":62,"column":8},"end":{"line":62,"column":34}},"36":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"37":{"start":{"line":64,"column":12},"end":{"line":64,"column":24}},"38":{"start":{"line":66,"column":11},"end":{"line":68,"column":5}},"39":{"start":{"line":67,"column":8},"end":{"line":67,"column":19}},"40":{"start":{"line":69,"column":4},"end":{"line":69,"column":52}},"41":{"start":{"line":69,"column":40},"end":{"line":69,"column":52}},"42":{"start":{"line":70,"column":4},"end":{"line":70,"column":86}},"43":{"start":{"line":70,"column":75},"end":{"line":70,"column":86}},"44":{"start":{"line":74,"column":30},"end":{"line":74,"column":39}},"45":{"start":{"line":75,"column":40},"end":{"line":75,"column":97}},"46":{"start":{"line":77,"column":4},"end":{"line":82,"column":5}},"47":{"start":{"line":78,"column":8},"end":{"line":78,"column":36}},"48":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"49":{"start":{"line":80,"column":12},"end":{"line":80,"column":24}},"50":{"start":{"line":83,"column":4},"end":{"line":83,"column":54}},"51":{"start":{"line":83,"column":42},"end":{"line":83,"column":54}},"52":{"start":{"line":84,"column":4},"end":{"line":84,"column":89}},"53":{"start":{"line":84,"column":79},"end":{"line":84,"column":89}},"54":{"start":{"line":87,"column":32},"end":{"line":87,"column":43}},"55":{"start":{"line":88,"column":42},"end":{"line":88,"column":101}},"56":{"start":{"line":92,"column":23},"end":{"line":92,"column":24}},"57":{"start":{"line":93,"column":4},"end":{"line":93,"column":102}},"58":{"start":{"line":93,"column":84},"end":{"line":93,"column":102}},"59":{"start":{"line":94,"column":4},"end":{"line":94,"column":94}},"60":{"start":{"line":94,"column":76},"end":{"line":94,"column":94}},"61":{"start":{"line":95,"column":4},"end":{"line":95,"column":98}},"62":{"start":{"line":95,"column":80},"end":{"line":95,"column":98}},"63":{"start":{"line":96,"column":4},"end":{"line":97,"column":41}},"64":{"start":{"line":96,"column":27},"end":{"line":96,"column":39}},"65":{"start":{"line":97,"column":9},"end":{"line":97,"column":41}},"66":{"start":{"line":97,"column":31},"end":{"line":97,"column":41}},"67":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"68":{"start":{"line":101,"column":8},"end":{"line":101,"column":20}},"69":{"start":{"line":104,"column":4},"end":{"line":104,"column":41}},"70":{"start":{"line":114,"column":40},"end":{"line":180,"column":1}},"71":{"start":{"line":119,"column":28},"end":{"line":119,"column":56}},"72":{"start":{"line":120,"column":4},"end":{"line":120,"column":38}},"73":{"start":{"line":120,"column":26},"end":{"line":120,"column":38}},"74":{"start":{"line":121,"column":4},"end":{"line":121,"column":51}},"75":{"start":{"line":121,"column":28},"end":{"line":121,"column":51}},"76":{"start":{"line":123,"column":23},"end":{"line":123,"column":44}},"77":{"start":{"line":126,"column":22},"end":{"line":131,"column":5}},"78":{"start":{"line":133,"column":19},"end":{"line":133,"column":38}},"79":{"start":{"line":134,"column":29},"end":{"line":134,"column":51}},"80":{"start":{"line":135,"column":28},"end":{"line":135,"column":49}},"81":{"start":{"line":136,"column":26},"end":{"line":136,"column":45}},"82":{"start":{"line":137,"column":24},"end":{"line":137,"column":41}},"83":{"start":{"line":142,"column":37},"end":{"line":142,"column":82}},"84":{"start":{"line":143,"column":4},"end":{"line":144,"column":63}},"85":{"start":{"line":143,"column":39},"end":{"line":143,"column":58}},"86":{"start":{"line":144,"column":9},"end":{"line":144,"column":63}},"87":{"start":{"line":144,"column":44},"end":{"line":144,"column":63}},"88":{"start":{"line":147,"column":33},"end":{"line":147,"column":68}},"89":{"start":{"line":148,"column":4},"end":{"line":149,"column":58}},"90":{"start":{"line":148,"column":35},"end":{"line":148,"column":54}},"91":{"start":{"line":149,"column":9},"end":{"line":149,"column":58}},"92":{"start":{"line":149,"column":40},"end":{"line":149,"column":58}},"93":{"start":{"line":152,"column":34},"end":{"line":152,"column":73}},"94":{"start":{"line":153,"column":4},"end":{"line":154,"column":59}},"95":{"start":{"line":153,"column":36},"end":{"line":153,"column":55}},"96":{"start":{"line":154,"column":9},"end":{"line":154,"column":59}},"97":{"start":{"line":154,"column":41},"end":{"line":154,"column":59}},"98":{"start":{"line":157,"column":37},"end":{"line":157,"column":80}},"99":{"start":{"line":158,"column":4},"end":{"line":162,"column":5}},"100":{"start":{"line":159,"column":8},"end":{"line":159,"column":27}},"101":{"start":{"line":160,"column":11},"end":{"line":162,"column":5}},"102":{"start":{"line":161,"column":8},"end":{"line":161,"column":26}},"103":{"start":{"line":165,"column":4},"end":{"line":169,"column":5}},"104":{"start":{"line":166,"column":8},"end":{"line":166,"column":27}},"105":{"start":{"line":167,"column":11},"end":{"line":169,"column":5}},"106":{"start":{"line":168,"column":8},"end":{"line":168,"column":26}},"107":{"start":{"line":172,"column":4},"end":{"line":177,"column":5}},"108":{"start":{"line":176,"column":8},"end":{"line":176,"column":26}},"109":{"start":{"line":179,"column":4},"end":{"line":179,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":21,"column":31},"end":{"line":21,"column":32}},"loc":{"start":{"line":21,"column":67},"end":{"line":31,"column":1}},"line":21},"1":{"name":"(anonymous_1)","decl":{"start":{"line":38,"column":38},"end":{"line":38,"column":39}},"loc":{"start":{"line":38,"column":78},"end":{"line":105,"column":1}},"line":38},"2":{"name":"(anonymous_2)","decl":{"start":{"line":114,"column":40},"end":{"line":114,"column":41}},"loc":{"start":{"line":118,"column":29},"end":{"line":180,"column":1}},"line":118}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":4},"end":{"line":29,"column":22}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":29,"column":22}},{"start":{"line":26,"column":9},"end":{"line":29,"column":22}}],"line":25},"1":{"loc":{"start":{"line":26,"column":9},"end":{"line":29,"column":22}},"type":"if","locations":[{"start":{"line":26,"column":9},"end":{"line":29,"column":22}},{"start":{"line":27,"column":9},"end":{"line":29,"column":22}}],"line":26},"2":{"loc":{"start":{"line":27,"column":9},"end":{"line":29,"column":22}},"type":"if","locations":[{"start":{"line":27,"column":9},"end":{"line":29,"column":22}},{"start":{"line":28,"column":9},"end":{"line":29,"column":22}}],"line":27},"3":{"loc":{"start":{"line":28,"column":9},"end":{"line":29,"column":22}},"type":"if","locations":[{"start":{"line":28,"column":9},"end":{"line":29,"column":22}},{"start":{"line":29,"column":9},"end":{"line":29,"column":22}}],"line":28},"4":{"loc":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},{"start":{},"end":{}}],"line":39},"5":{"loc":{"start":{"line":39,"column":8},"end":{"line":39,"column":152}},"type":"binary-expr","locations":[{"start":{"line":39,"column":8},"end":{"line":39,"column":13}},{"start":{"line":39,"column":17},"end":{"line":39,"column":50}},{"start":{"line":39,"column":54},"end":{"line":39,"column":86}},{"start":{"line":39,"column":90},"end":{"line":39,"column":120}},{"start":{"line":39,"column":124},"end":{"line":39,"column":152}}],"line":39},"6":{"loc":{"start":{"line":47,"column":4},"end":{"line":49,"column":62}},"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":49,"column":62}},{"start":{"line":48,"column":9},"end":{"line":49,"column":62}}],"line":47},"7":{"loc":{"start":{"line":48,"column":9},"end":{"line":49,"column":62}},"type":"if","locations":[{"start":{"line":48,"column":9},"end":{"line":49,"column":62}},{"start":{"line":49,"column":9},"end":{"line":49,"column":62}}],"line":48},"8":{"loc":{"start":{"line":49,"column":9},"end":{"line":49,"column":62}},"type":"if","locations":[{"start":{"line":49,"column":9},"end":{"line":49,"column":62}},{"start":{},"end":{}}],"line":49},"9":{"loc":{"start":{"line":50,"column":4},"end":{"line":50,"column":36}},"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":36}},{"start":{},"end":{}}],"line":50},"10":{"loc":{"start":{"line":53,"column":4},"end":{"line":55,"column":56}},"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":55,"column":56}},{"start":{"line":54,"column":9},"end":{"line":55,"column":56}}],"line":53},"11":{"loc":{"start":{"line":54,"column":9},"end":{"line":55,"column":56}},"type":"if","locations":[{"start":{"line":54,"column":9},"end":{"line":55,"column":56}},{"start":{"line":55,"column":9},"end":{"line":55,"column":56}}],"line":54},"12":{"loc":{"start":{"line":55,"column":9},"end":{"line":55,"column":56}},"type":"if","locations":[{"start":{"line":55,"column":9},"end":{"line":55,"column":56}},{"start":{},"end":{}}],"line":55},"13":{"loc":{"start":{"line":55,"column":13},"end":{"line":55,"column":42}},"type":"binary-expr","locations":[{"start":{"line":55,"column":13},"end":{"line":55,"column":24}},{"start":{"line":55,"column":28},"end":{"line":55,"column":42}}],"line":55},"14":{"loc":{"start":{"line":59,"column":38},"end":{"line":59,"column":93}},"type":"cond-expr","locations":[{"start":{"line":59,"column":55},"end":{"line":59,"column":89}},{"start":{"line":59,"column":92},"end":{"line":59,"column":93}}],"line":59},"15":{"loc":{"start":{"line":61,"column":4},"end":{"line":68,"column":5}},"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":68,"column":5}},{"start":{"line":66,"column":11},"end":{"line":68,"column":5}}],"line":61},"16":{"loc":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},{"start":{},"end":{}}],"line":63},"17":{"loc":{"start":{"line":63,"column":12},"end":{"line":63,"column":47}},"type":"binary-expr","locations":[{"start":{"line":63,"column":12},"end":{"line":63,"column":31}},{"start":{"line":63,"column":35},"end":{"line":63,"column":47}}],"line":63},"18":{"loc":{"start":{"line":66,"column":11},"end":{"line":68,"column":5}},"type":"if","locations":[{"start":{"line":66,"column":11},"end":{"line":68,"column":5}},{"start":{},"end":{}}],"line":66},"19":{"loc":{"start":{"line":66,"column":15},"end":{"line":66,"column":72}},"type":"binary-expr","locations":[{"start":{"line":66,"column":15},"end":{"line":66,"column":22}},{"start":{"line":66,"column":26},"end":{"line":66,"column":56}},{"start":{"line":66,"column":60},"end":{"line":66,"column":72}}],"line":66},"20":{"loc":{"start":{"line":69,"column":4},"end":{"line":69,"column":52}},"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":52}},{"start":{},"end":{}}],"line":69},"21":{"loc":{"start":{"line":70,"column":4},"end":{"line":70,"column":86}},"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":86}},{"start":{},"end":{}}],"line":70},"22":{"loc":{"start":{"line":70,"column":8},"end":{"line":70,"column":73}},"type":"binary-expr","locations":[{"start":{"line":70,"column":8},"end":{"line":70,"column":38}},{"start":{"line":70,"column":42},"end":{"line":70,"column":73}}],"line":70},"23":{"loc":{"start":{"line":75,"column":40},"end":{"line":75,"column":97}},"type":"cond-expr","locations":[{"start":{"line":75,"column":57},"end":{"line":75,"column":93}},{"start":{"line":75,"column":96},"end":{"line":75,"column":97}}],"line":75},"24":{"loc":{"start":{"line":77,"column":4},"end":{"line":82,"column":5}},"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":82,"column":5}},{"start":{},"end":{}}],"line":77},"25":{"loc":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},{"start":{},"end":{}}],"line":79},"26":{"loc":{"start":{"line":79,"column":12},"end":{"line":79,"column":48}},"type":"binary-expr","locations":[{"start":{"line":79,"column":12},"end":{"line":79,"column":33}},{"start":{"line":79,"column":37},"end":{"line":79,"column":48}}],"line":79},"27":{"loc":{"start":{"line":83,"column":4},"end":{"line":83,"column":54}},"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":54}},{"start":{},"end":{}}],"line":83},"28":{"loc":{"start":{"line":84,"column":4},"end":{"line":84,"column":89}},"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":89}},{"start":{},"end":{}}],"line":84},"29":{"loc":{"start":{"line":84,"column":8},"end":{"line":84,"column":77}},"type":"binary-expr","locations":[{"start":{"line":84,"column":8},"end":{"line":84,"column":40}},{"start":{"line":84,"column":44},"end":{"line":84,"column":77}}],"line":84},"30":{"loc":{"start":{"line":88,"column":42},"end":{"line":88,"column":101}},"type":"cond-expr","locations":[{"start":{"line":88,"column":59},"end":{"line":88,"column":97}},{"start":{"line":88,"column":100},"end":{"line":88,"column":101}}],"line":88},"31":{"loc":{"start":{"line":93,"column":4},"end":{"line":93,"column":102}},"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":93,"column":102}},{"start":{},"end":{}}],"line":93},"32":{"loc":{"start":{"line":93,"column":8},"end":{"line":93,"column":82}},"type":"binary-expr","locations":[{"start":{"line":93,"column":8},"end":{"line":93,"column":43}},{"start":{"line":93,"column":47},"end":{"line":93,"column":82}}],"line":93},"33":{"loc":{"start":{"line":94,"column":4},"end":{"line":94,"column":94}},"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":94}},{"start":{},"end":{}}],"line":94},"34":{"loc":{"start":{"line":94,"column":8},"end":{"line":94,"column":74}},"type":"binary-expr","locations":[{"start":{"line":94,"column":8},"end":{"line":94,"column":39}},{"start":{"line":94,"column":43},"end":{"line":94,"column":74}}],"line":94},"35":{"loc":{"start":{"line":95,"column":4},"end":{"line":95,"column":98}},"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":98}},{"start":{},"end":{}}],"line":95},"36":{"loc":{"start":{"line":95,"column":8},"end":{"line":95,"column":78}},"type":"binary-expr","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":41}},{"start":{"line":95,"column":45},"end":{"line":95,"column":78}}],"line":95},"37":{"loc":{"start":{"line":96,"column":4},"end":{"line":97,"column":41}},"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":97,"column":41}},{"start":{"line":97,"column":9},"end":{"line":97,"column":41}}],"line":96},"38":{"loc":{"start":{"line":97,"column":9},"end":{"line":97,"column":41}},"type":"if","locations":[{"start":{"line":97,"column":9},"end":{"line":97,"column":41}},{"start":{},"end":{}}],"line":97},"39":{"loc":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},{"start":{},"end":{}}],"line":100},"40":{"loc":{"start":{"line":100,"column":8},"end":{"line":100,"column":63}},"type":"binary-expr","locations":[{"start":{"line":100,"column":8},"end":{"line":100,"column":19}},{"start":{"line":100,"column":23},"end":{"line":100,"column":31}},{"start":{"line":100,"column":35},"end":{"line":100,"column":45}},{"start":{"line":100,"column":49},"end":{"line":100,"column":63}}],"line":100},"41":{"loc":{"start":{"line":120,"column":4},"end":{"line":120,"column":38}},"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":38}},{"start":{},"end":{}}],"line":120},"42":{"loc":{"start":{"line":121,"column":4},"end":{"line":121,"column":51}},"type":"if","locations":[{"start":{"line":121,"column":4},"end":{"line":121,"column":51}},{"start":{},"end":{}}],"line":121},"43":{"loc":{"start":{"line":127,"column":30},"end":{"line":127,"column":57}},"type":"binary-expr","locations":[{"start":{"line":127,"column":30},"end":{"line":127,"column":49}},{"start":{"line":127,"column":53},"end":{"line":127,"column":57}}],"line":127},"44":{"loc":{"start":{"line":128,"column":29},"end":{"line":128,"column":54}},"type":"binary-expr","locations":[{"start":{"line":128,"column":29},"end":{"line":128,"column":47}},{"start":{"line":128,"column":51},"end":{"line":128,"column":54}}],"line":128},"45":{"loc":{"start":{"line":129,"column":27},"end":{"line":129,"column":50}},"type":"binary-expr","locations":[{"start":{"line":129,"column":27},"end":{"line":129,"column":43}},{"start":{"line":129,"column":47},"end":{"line":129,"column":50}}],"line":129},"46":{"loc":{"start":{"line":130,"column":25},"end":{"line":130,"column":45}},"type":"binary-expr","locations":[{"start":{"line":130,"column":25},"end":{"line":130,"column":39}},{"start":{"line":130,"column":43},"end":{"line":130,"column":45}}],"line":130},"47":{"loc":{"start":{"line":143,"column":4},"end":{"line":144,"column":63}},"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":144,"column":63}},{"start":{"line":144,"column":9},"end":{"line":144,"column":63}}],"line":143},"48":{"loc":{"start":{"line":144,"column":9},"end":{"line":144,"column":63}},"type":"if","locations":[{"start":{"line":144,"column":9},"end":{"line":144,"column":63}},{"start":{},"end":{}}],"line":144},"49":{"loc":{"start":{"line":148,"column":4},"end":{"line":149,"column":58}},"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":149,"column":58}},{"start":{"line":149,"column":9},"end":{"line":149,"column":58}}],"line":148},"50":{"loc":{"start":{"line":149,"column":9},"end":{"line":149,"column":58}},"type":"if","locations":[{"start":{"line":149,"column":9},"end":{"line":149,"column":58}},{"start":{},"end":{}}],"line":149},"51":{"loc":{"start":{"line":153,"column":4},"end":{"line":154,"column":59}},"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":154,"column":59}},{"start":{"line":154,"column":9},"end":{"line":154,"column":59}}],"line":153},"52":{"loc":{"start":{"line":154,"column":9},"end":{"line":154,"column":59}},"type":"if","locations":[{"start":{"line":154,"column":9},"end":{"line":154,"column":59}},{"start":{},"end":{}}],"line":154},"53":{"loc":{"start":{"line":158,"column":4},"end":{"line":162,"column":5}},"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":162,"column":5}},{"start":{"line":160,"column":11},"end":{"line":162,"column":5}}],"line":158},"54":{"loc":{"start":{"line":158,"column":8},"end":{"line":158,"column":70}},"type":"binary-expr","locations":[{"start":{"line":158,"column":8},"end":{"line":158,"column":37}},{"start":{"line":158,"column":41},"end":{"line":158,"column":70}}],"line":158},"55":{"loc":{"start":{"line":160,"column":11},"end":{"line":162,"column":5}},"type":"if","locations":[{"start":{"line":160,"column":11},"end":{"line":162,"column":5}},{"start":{},"end":{}}],"line":160},"56":{"loc":{"start":{"line":160,"column":15},"end":{"line":160,"column":77}},"type":"binary-expr","locations":[{"start":{"line":160,"column":15},"end":{"line":160,"column":44}},{"start":{"line":160,"column":48},"end":{"line":160,"column":77}}],"line":160},"57":{"loc":{"start":{"line":165,"column":4},"end":{"line":169,"column":5}},"type":"if","locations":[{"start":{"line":165,"column":4},"end":{"line":169,"column":5}},{"start":{"line":167,"column":11},"end":{"line":169,"column":5}}],"line":165},"58":{"loc":{"start":{"line":165,"column":8},"end":{"line":165,"column":71}},"type":"binary-expr","locations":[{"start":{"line":165,"column":8},"end":{"line":165,"column":38}},{"start":{"line":165,"column":42},"end":{"line":165,"column":71}}],"line":165},"59":{"loc":{"start":{"line":167,"column":11},"end":{"line":169,"column":5}},"type":"if","locations":[{"start":{"line":167,"column":11},"end":{"line":169,"column":5}},{"start":{},"end":{}}],"line":167},"60":{"loc":{"start":{"line":167,"column":15},"end":{"line":167,"column":77}},"type":"binary-expr","locations":[{"start":{"line":167,"column":15},"end":{"line":167,"column":45}},{"start":{"line":167,"column":49},"end":{"line":167,"column":77}}],"line":167},"61":{"loc":{"start":{"line":172,"column":4},"end":{"line":177,"column":5}},"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":177,"column":5}},{"start":{},"end":{}}],"line":172},"62":{"loc":{"start":{"line":172,"column":8},"end":{"line":174,"column":27}},"type":"binary-expr","locations":[{"start":{"line":172,"column":8},"end":{"line":172,"column":38}},{"start":{"line":173,"column":9},"end":{"line":173,"column":38}},{"start":{"line":173,"column":42},"end":{"line":173,"column":67}},{"start":{"line":173,"column":71},"end":{"line":173,"column":97}},{"start":{"line":174,"column":8},"end":{"line":174,"column":27}}],"line":172}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0,0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0,0,0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\iconUtils.ts": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\iconUtils.ts","statementMap":{"0":{"start":{"line":6,"column":24},"end":{"line":6,"column":56}},"1":{"start":{"line":7,"column":23},"end":{"line":7,"column":26}},"2":{"start":{"line":17,"column":30},"end":{"line":48,"column":1}},"3":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"4":{"start":{"line":19,"column":4},"end":{"line":19,"column":16}},"5":{"start":{"line":22,"column":25},"end":{"line":22,"column":57}},"6":{"start":{"line":23,"column":33},"end":{"line":23,"column":62}},"7":{"start":{"line":24,"column":19},"end":{"line":24,"column":64}},"8":{"start":{"line":26,"column":2},"end":{"line":30,"column":3}},"9":{"start":{"line":27,"column":23},"end":{"line":27,"column":53}},"10":{"start":{"line":29,"column":4},"end":{"line":29,"column":22}},"11":{"start":{"line":33,"column":25},"end":{"line":33,"column":63}},"12":{"start":{"line":35,"column":2},"end":{"line":43,"column":3}},"13":{"start":{"line":36,"column":17},"end":{"line":36,"column":51}},"14":{"start":{"line":37,"column":4},"end":{"line":41,"column":5}},"15":{"start":{"line":37,"column":17},"end":{"line":37,"column":18}},"16":{"start":{"line":38,"column":28},"end":{"line":38,"column":67}},"17":{"start":{"line":39,"column":28},"end":{"line":39,"column":58}},"18":{"start":{"line":40,"column":8},"end":{"line":40,"column":60}},"19":{"start":{"line":40,"column":24},"end":{"line":40,"column":60}},"20":{"start":{"line":44,"column":2},"end":{"line":44,"column":48}},"21":{"start":{"line":47,"column":2},"end":{"line":47,"column":24}},"22":{"start":{"line":50,"column":35},"end":{"line":53,"column":1}},"23":{"start":{"line":51,"column":2},"end":{"line":51,"column":26}},"24":{"start":{"line":52,"column":2},"end":{"line":52,"column":74}},"25":{"start":{"line":55,"column":37},"end":{"line":57,"column":1}},"26":{"start":{"line":56,"column":2},"end":{"line":56,"column":97}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":30},"end":{"line":17,"column":31}},"loc":{"start":{"line":17,"column":67},"end":{"line":48,"column":1}},"line":17},"1":{"name":"(anonymous_1)","decl":{"start":{"line":50,"column":35},"end":{"line":50,"column":36}},"loc":{"start":{"line":50,"column":47},"end":{"line":53,"column":1}},"line":50},"2":{"name":"(anonymous_2)","decl":{"start":{"line":55,"column":37},"end":{"line":55,"column":38}},"loc":{"start":{"line":55,"column":49},"end":{"line":57,"column":1}},"line":55}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},{"start":{},"end":{}}],"line":18},"1":{"loc":{"start":{"line":18,"column":6},"end":{"line":18,"column":41}},"type":"binary-expr","locations":[{"start":{"line":18,"column":6},"end":{"line":18,"column":15}},{"start":{"line":18,"column":19},"end":{"line":18,"column":41}}],"line":18},"2":{"loc":{"start":{"line":26,"column":2},"end":{"line":30,"column":3}},"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":30,"column":3}},{"start":{},"end":{}}],"line":26},"3":{"loc":{"start":{"line":35,"column":2},"end":{"line":43,"column":3}},"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":43,"column":3}},{"start":{},"end":{}}],"line":35},"4":{"loc":{"start":{"line":40,"column":8},"end":{"line":40,"column":60}},"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":60}},{"start":{},"end":{}}],"line":40}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\imageUtils.ts": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\imageUtils.ts","statementMap":{"0":{"start":{"line":8,"column":28},"end":{"line":8,"column":32}},"1":{"start":{"line":9,"column":34},"end":{"line":9,"column":37}},"2":{"start":{"line":11,"column":37},"end":{"line":39,"column":1}},"3":{"start":{"line":14,"column":4},"end":{"line":38,"column":5}},"4":{"start":{"line":15,"column":51},"end":{"line":15,"column":53}},"5":{"start":{"line":16,"column":26},"end":{"line":16,"column":31}},"6":{"start":{"line":17,"column":8},"end":{"line":25,"column":9}},"7":{"start":{"line":18,"column":12},"end":{"line":18,"column":31}},"8":{"start":{"line":19,"column":75},"end":{"line":19,"column":115}},"9":{"start":{"line":20,"column":12},"end":{"line":21,"column":60}},"10":{"start":{"line":20,"column":44},"end":{"line":20,"column":86}},"11":{"start":{"line":21,"column":17},"end":{"line":21,"column":60}},"12":{"start":{"line":22,"column":12},"end":{"line":22,"column":52}},"13":{"start":{"line":24,"column":12},"end":{"line":24,"column":24}},"14":{"start":{"line":26,"column":8},"end":{"line":34,"column":9}},"15":{"start":{"line":27,"column":62},"end":{"line":29,"column":13}},"16":{"start":{"line":30,"column":27},"end":{"line":30,"column":98}},"17":{"start":{"line":31,"column":12},"end":{"line":31,"column":26}},"18":{"start":{"line":33,"column":12},"end":{"line":33,"column":24}},"19":{"start":{"line":36,"column":8},"end":{"line":36,"column":107}},"20":{"start":{"line":37,"column":8},"end":{"line":37,"column":20}},"21":{"start":{"line":42,"column":4},"end":{"line":47,"column":5}},"22":{"start":{"line":43,"column":23},"end":{"line":43,"column":109}},"23":{"start":{"line":44,"column":8},"end":{"line":44,"column":22}},"24":{"start":{"line":46,"column":8},"end":{"line":46,"column":105}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":37},"end":{"line":11,"column":38}},"loc":{"start":{"line":13,"column":51},"end":{"line":39,"column":1}},"line":13},"1":{"name":"getBase64FromUri","decl":{"start":{"line":41,"column":22},"end":{"line":41,"column":38}},"loc":{"start":{"line":41,"column":69},"end":{"line":48,"column":1}},"line":41}},"branchMap":{"0":{"loc":{"start":{"line":17,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":25,"column":9}},{"start":{"line":23,"column":15},"end":{"line":25,"column":9}}],"line":17},"1":{"loc":{"start":{"line":17,"column":12},"end":{"line":17,"column":83}},"type":"binary-expr","locations":[{"start":{"line":17,"column":12},"end":{"line":17,"column":45}},{"start":{"line":17,"column":49},"end":{"line":17,"column":83}}],"line":17},"2":{"loc":{"start":{"line":20,"column":12},"end":{"line":21,"column":60}},"type":"if","locations":[{"start":{"line":20,"column":12},"end":{"line":21,"column":60}},{"start":{"line":21,"column":17},"end":{"line":21,"column":60}}],"line":20},"3":{"loc":{"start":{"line":26,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":34,"column":9}},{"start":{"line":32,"column":15},"end":{"line":34,"column":9}}],"line":26},"4":{"loc":{"start":{"line":46,"column":68},"end":{"line":46,"column":100}},"type":"binary-expr","locations":[{"start":{"line":46,"column":68},"end":{"line":46,"column":81}},{"start":{"line":46,"column":85},"end":{"line":46,"column":100}}],"line":46}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"f":{"0":0,"1":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\languageUtils.ts": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\languageUtils.ts","statementMap":{"0":{"start":{"line":5,"column":21},"end":{"line":5,"column":38}},"1":{"start":{"line":6,"column":23},"end":{"line":6,"column":40}},"2":{"start":{"line":8,"column":20},"end":{"line":8,"column":30}},"3":{"start":{"line":17,"column":38},"end":{"line":52,"column":1}},"4":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"5":{"start":{"line":19,"column":8},"end":{"line":19,"column":20}},"6":{"start":{"line":22,"column":22},"end":{"line":22,"column":23}},"7":{"start":{"line":23,"column":24},"end":{"line":23,"column":25}},"8":{"start":{"line":24,"column":21},"end":{"line":24,"column":22}},"9":{"start":{"line":25,"column":21},"end":{"line":25,"column":22}},"10":{"start":{"line":27,"column":4},"end":{"line":37,"column":5}},"11":{"start":{"line":28,"column":8},"end":{"line":36,"column":9}},"12":{"start":{"line":29,"column":12},"end":{"line":29,"column":26}},"13":{"start":{"line":30,"column":15},"end":{"line":36,"column":9}},"14":{"start":{"line":31,"column":12},"end":{"line":31,"column":28}},"15":{"start":{"line":32,"column":15},"end":{"line":36,"column":9}},"16":{"start":{"line":33,"column":12},"end":{"line":33,"column":25}},"17":{"start":{"line":35,"column":12},"end":{"line":35,"column":25}},"18":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"19":{"start":{"line":42,"column":8},"end":{"line":42,"column":20}},"20":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"21":{"start":{"line":45,"column":8},"end":{"line":45,"column":20}},"22":{"start":{"line":51,"column":4},"end":{"line":51,"column":16}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":17,"column":38},"end":{"line":17,"column":39}},"loc":{"start":{"line":17,"column":70},"end":{"line":52,"column":1}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},{"start":{},"end":{}}],"line":18},"1":{"loc":{"start":{"line":18,"column":8},"end":{"line":18,"column":35}},"type":"binary-expr","locations":[{"start":{"line":18,"column":8},"end":{"line":18,"column":13}},{"start":{"line":18,"column":17},"end":{"line":18,"column":35}}],"line":18},"2":{"loc":{"start":{"line":28,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":36,"column":9}},{"start":{"line":30,"column":15},"end":{"line":36,"column":9}}],"line":28},"3":{"loc":{"start":{"line":30,"column":15},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":15},"end":{"line":36,"column":9}},{"start":{"line":32,"column":15},"end":{"line":36,"column":9}}],"line":30},"4":{"loc":{"start":{"line":32,"column":15},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":32,"column":15},"end":{"line":36,"column":9}},{"start":{"line":34,"column":15},"end":{"line":36,"column":9}}],"line":32},"5":{"loc":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},{"start":{},"end":{}}],"line":41},"6":{"loc":{"start":{"line":41,"column":8},"end":{"line":41,"column":67}},"type":"binary-expr","locations":[{"start":{"line":41,"column":8},"end":{"line":41,"column":36}},{"start":{"line":41,"column":40},"end":{"line":41,"column":67}}],"line":41},"7":{"loc":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},{"start":{},"end":{}}],"line":44},"8":{"loc":{"start":{"line":44,"column":8},"end":{"line":44,"column":69}},"type":"binary-expr","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":38}},{"start":{"line":44,"column":42},"end":{"line":44,"column":69}}],"line":44}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"f":{"0":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\macros.ts": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\macros.ts","statementMap":{"0":{"start":{"line":10,"column":4},"end":{"line":10,"column":78}},"1":{"start":{"line":10,"column":56},"end":{"line":10,"column":78}},"2":{"start":{"line":11,"column":22},"end":{"line":11,"column":63}},"3":{"start":{"line":12,"column":4},"end":{"line":16,"column":5}},"4":{"start":{"line":13,"column":33},"end":{"line":13,"column":53}},"5":{"start":{"line":14,"column":20},"end":{"line":14,"column":39}},"6":{"start":{"line":15,"column":17},"end":{"line":15,"column":37}},"7":{"start":{"line":19,"column":20},"end":{"line":23,"column":1}},"8":{"start":{"line":20,"column":20},"end":{"line":20,"column":98}},"9":{"start":{"line":21,"column":4},"end":{"line":21,"column":32}},"10":{"start":{"line":22,"column":4},"end":{"line":22,"column":16}},"11":{"start":{"line":26,"column":4},"end":{"line":31,"column":5}},"12":{"start":{"line":27,"column":8},"end":{"line":27,"column":63}},"13":{"start":{"line":29,"column":8},"end":{"line":29,"column":57}},"14":{"start":{"line":30,"column":8},"end":{"line":30,"column":20}},"15":{"start":{"line":35,"column":4},"end":{"line":42,"column":5}},"16":{"start":{"line":36,"column":27},"end":{"line":36,"column":60}},"17":{"start":{"line":37,"column":25},"end":{"line":37,"column":49}},"18":{"start":{"line":38,"column":8},"end":{"line":38,"column":67}},"19":{"start":{"line":40,"column":8},"end":{"line":40,"column":57}},"20":{"start":{"line":41,"column":8},"end":{"line":41,"column":20}},"21":{"start":{"line":46,"column":4},"end":{"line":53,"column":5}},"22":{"start":{"line":47,"column":24},"end":{"line":47,"column":78}},"23":{"start":{"line":48,"column":8},"end":{"line":48,"column":88}},"24":{"start":{"line":48,"column":37},"end":{"line":48,"column":88}},"25":{"start":{"line":49,"column":8},"end":{"line":49,"column":23}},"26":{"start":{"line":51,"column":8},"end":{"line":51,"column":66}},"27":{"start":{"line":52,"column":8},"end":{"line":52,"column":20}},"28":{"start":{"line":57,"column":4},"end":{"line":64,"column":5}},"29":{"start":{"line":58,"column":24},"end":{"line":58,"column":60}},"30":{"start":{"line":59,"column":8},"end":{"line":59,"column":88}},"31":{"start":{"line":59,"column":37},"end":{"line":59,"column":88}},"32":{"start":{"line":60,"column":8},"end":{"line":60,"column":23}},"33":{"start":{"line":62,"column":8},"end":{"line":62,"column":66}},"34":{"start":{"line":63,"column":8},"end":{"line":63,"column":20}}},"fnMap":{"0":{"name":"determineMimeType","decl":{"start":{"line":9,"column":16},"end":{"line":9,"column":33}},"loc":{"start":{"line":9,"column":119},"end":{"line":17,"column":1}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":20},"end":{"line":19,"column":21}},"loc":{"start":{"line":19,"column":55},"end":{"line":23,"column":1}},"line":19},"2":{"name":"getMacrosFromText","decl":{"start":{"line":25,"column":22},"end":{"line":25,"column":39}},"loc":{"start":{"line":25,"column":108},"end":{"line":32,"column":1}},"line":25},"3":{"name":"getMacrosForImageFile","decl":{"start":{"line":34,"column":22},"end":{"line":34,"column":43}},"loc":{"start":{"line":34,"column":98},"end":{"line":43,"column":1}},"line":34},"4":{"name":"getMultipleFoodsFromImage","decl":{"start":{"line":45,"column":22},"end":{"line":45,"column":47}},"loc":{"start":{"line":45,"column":117},"end":{"line":54,"column":1}},"line":45},"5":{"name":"getMultipleFoodsFromText","decl":{"start":{"line":56,"column":22},"end":{"line":56,"column":46}},"loc":{"start":{"line":56,"column":91},"end":{"line":65,"column":1}},"line":56}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":78}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":78}},{"start":{},"end":{}}],"line":10},"1":{"loc":{"start":{"line":10,"column":8},"end":{"line":10,"column":54}},"type":"binary-expr","locations":[{"start":{"line":10,"column":8},"end":{"line":10,"column":22}},{"start":{"line":10,"column":26},"end":{"line":10,"column":54}}],"line":10},"2":{"loc":{"start":{"line":12,"column":4},"end":{"line":16,"column":5}},"type":"switch","locations":[{"start":{"line":13,"column":8},"end":{"line":13,"column":19}},{"start":{"line":13,"column":20},"end":{"line":13,"column":53}},{"start":{"line":14,"column":8},"end":{"line":14,"column":39}},{"start":{"line":15,"column":8},"end":{"line":15,"column":37}}],"line":12},"3":{"loc":{"start":{"line":20,"column":20},"end":{"line":20,"column":98}},"type":"cond-expr","locations":[{"start":{"line":20,"column":52},"end":{"line":20,"column":65}},{"start":{"line":20,"column":68},"end":{"line":20,"column":98}}],"line":20},"4":{"loc":{"start":{"line":48,"column":8},"end":{"line":48,"column":88}},"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":48,"column":88}},{"start":{},"end":{}}],"line":48},"5":{"loc":{"start":{"line":59,"column":8},"end":{"line":59,"column":88}},"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":59,"column":88}},{"start":{},"end":{}}],"line":59}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\searchUtils.ts": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\searchUtils.ts","statementMap":{"0":{"start":{"line":18,"column":36},"end":{"line":73,"column":1}},"1":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"2":{"start":{"line":20,"column":8},"end":{"line":20,"column":18}},"3":{"start":{"line":23,"column":33},"end":{"line":23,"column":64}},"4":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"5":{"start":{"line":25,"column":8},"end":{"line":25,"column":18}},"6":{"start":{"line":28,"column":26},"end":{"line":28,"column":43}},"7":{"start":{"line":29,"column":21},"end":{"line":29,"column":84}},"8":{"start":{"line":29,"column":60},"end":{"line":29,"column":82}},"9":{"start":{"line":32,"column":4},"end":{"line":40,"column":5}},"10":{"start":{"line":33,"column":24},"end":{"line":33,"column":61}},"11":{"start":{"line":34,"column":8},"end":{"line":39,"column":9}},"12":{"start":{"line":35,"column":25},"end":{"line":35,"column":45}},"13":{"start":{"line":36,"column":12},"end":{"line":38,"column":13}},"14":{"start":{"line":37,"column":16},"end":{"line":37,"column":40}},"15":{"start":{"line":43,"column":4},"end":{"line":57,"column":5}},"16":{"start":{"line":44,"column":27},"end":{"line":44,"column":80}},"17":{"start":{"line":47,"column":56},"end":{"line":47,"column":74}},"18":{"start":{"line":48,"column":8},"end":{"line":56,"column":9}},"19":{"start":{"line":49,"column":30},"end":{"line":49,"column":99}},"20":{"start":{"line":50,"column":35},"end":{"line":50,"column":76}},"21":{"start":{"line":52,"column":12},"end":{"line":55,"column":13}},"22":{"start":{"line":52,"column":33},"end":{"line":52,"column":81}},"23":{"start":{"line":53,"column":16},"end":{"line":53,"column":51}},"24":{"start":{"line":54,"column":16},"end":{"line":54,"column":22}},"25":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"26":{"start":{"line":60,"column":8},"end":{"line":60,"column":18}},"27":{"start":{"line":64,"column":33},"end":{"line":64,"column":35}},"28":{"start":{"line":65,"column":4},"end":{"line":70,"column":5}},"29":{"start":{"line":66,"column":25},"end":{"line":66,"column":50}},"30":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"31":{"start":{"line":68,"column":12},"end":{"line":68,"column":36}},"32":{"start":{"line":72,"column":4},"end":{"line":72,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":18,"column":36},"end":{"line":18,"column":37}},"loc":{"start":{"line":18,"column":86},"end":{"line":73,"column":1}},"line":18},"1":{"name":"(anonymous_1)","decl":{"start":{"line":29,"column":53},"end":{"line":29,"column":54}},"loc":{"start":{"line":29,"column":60},"end":{"line":29,"column":82}},"line":29},"2":{"name":"(anonymous_2)","decl":{"start":{"line":52,"column":26},"end":{"line":52,"column":27}},"loc":{"start":{"line":52,"column":33},"end":{"line":52,"column":81}},"line":52}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},{"start":{},"end":{}}],"line":19},"1":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":32}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":19}},{"start":{"line":19,"column":23},"end":{"line":19,"column":32}}],"line":19},"2":{"loc":{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":26,"column":5}},{"start":{},"end":{}}],"line":24},"3":{"loc":{"start":{"line":32,"column":4},"end":{"line":40,"column":5}},"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":40,"column":5}},{"start":{},"end":{}}],"line":32},"4":{"loc":{"start":{"line":36,"column":12},"end":{"line":38,"column":13}},"type":"if","locations":[{"start":{"line":36,"column":12},"end":{"line":38,"column":13}},{"start":{},"end":{}}],"line":36},"5":{"loc":{"start":{"line":50,"column":35},"end":{"line":50,"column":76}},"type":"cond-expr","locations":[{"start":{"line":50,"column":62},"end":{"line":50,"column":71}},{"start":{"line":50,"column":74},"end":{"line":50,"column":76}}],"line":50},"6":{"loc":{"start":{"line":52,"column":12},"end":{"line":55,"column":13}},"type":"if","locations":[{"start":{"line":52,"column":12},"end":{"line":55,"column":13}},{"start":{},"end":{}}],"line":52},"7":{"loc":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},{"start":{},"end":{}}],"line":59},"8":{"loc":{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":69,"column":9}},{"start":{},"end":{}}],"line":67},"9":{"loc":{"start":{"line":67,"column":12},"end":{"line":67,"column":51}},"type":"binary-expr","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":20}},{"start":{"line":67,"column":24},"end":{"line":67,"column":51}}],"line":67}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\units.ts": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\units.ts","statementMap":{"0":{"start":{"line":10,"column":4},"end":{"line":19,"column":5}},"1":{"start":{"line":11,"column":22},"end":{"line":11,"column":87}},"2":{"start":{"line":12,"column":8},"end":{"line":12,"column":21}},"3":{"start":{"line":14,"column":24},"end":{"line":16,"column":41}},"4":{"start":{"line":17,"column":8},"end":{"line":17,"column":58}},"5":{"start":{"line":18,"column":8},"end":{"line":18,"column":20}}},"fnMap":{"0":{"name":"getGramsFromNaturalLanguage","decl":{"start":{"line":6,"column":22},"end":{"line":6,"column":49}},"loc":{"start":{"line":9,"column":19},"end":{"line":20,"column":1}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":24},"end":{"line":16,"column":41}},"type":"cond-expr","locations":[{"start":{"line":15,"column":14},"end":{"line":15,"column":27}},{"start":{"line":16,"column":14},"end":{"line":16,"column":41}}],"line":14}},"s":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},"f":{"0":0},"b":{"0":[0,0]}}
,"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\validationUtils.ts": {"path":"C:\\Users\\Daniel\\Documents\\GitHub\\macros-counter\\MacroTracker\\src\\utils\\validationUtils.ts","statementMap":{"0":{"start":{"line":3,"column":34},"end":{"line":5,"column":3}},"1":{"start":{"line":4,"column":4},"end":{"line":4,"column":74}},"2":{"start":{"line":7,"column":28},"end":{"line":9,"column":3}},"3":{"start":{"line":8,"column":4},"end":{"line":8,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":34},"end":{"line":3,"column":35}},"loc":{"start":{"line":3,"column":62},"end":{"line":5,"column":3}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":28},"end":{"line":7,"column":29}},"loc":{"start":{"line":7,"column":56},"end":{"line":9,"column":3}},"line":7}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":11},"end":{"line":4,"column":73}},"type":"binary-expr","locations":[{"start":{"line":4,"column":11},"end":{"line":4,"column":44}},{"start":{"line":4,"column":48},"end":{"line":4,"column":73}}],"line":4}},"s":{"0":0,"1":0,"2":0,"3":0},"f":{"0":0,"1":0},"b":{"0":[0,0]}}
}

---------- END coverage-final.json ----------


---------- base.css ----------
body, html {
  margin:0; padding: 0;
  height: 100%;
}
body {
    font-family: Helvetica Neue, Helvetica, Arial;
    font-size: 14px;
    color:#333;
}
.small { font-size: 12px; }
*, *:after, *:before {
  -webkit-box-sizing:border-box;
     -moz-box-sizing:border-box;
          box-sizing:border-box;
  }
h1 { font-size: 20px; margin: 0;}
h2 { font-size: 14px; }
pre {
    font: 12px/1.4 Consolas, "Liberation Mono", Menlo, Courier, monospace;
    margin: 0;
    padding: 0;
    -moz-tab-size: 2;
    -o-tab-size:  2;
    tab-size: 2;
}
a { color:#0074D9; text-decoration:none; }
a:hover { text-decoration:underline; }
.strong { font-weight: bold; }
.space-top1 { padding: 10px 0 0 0; }
.pad2y { padding: 20px 0; }
.pad1y { padding: 10px 0; }
.pad2x { padding: 0 20px; }
.pad2 { padding: 20px; }
.pad1 { padding: 10px; }
.space-left2 { padding-left:55px; }
.space-right2 { padding-right:20px; }
.center { text-align:center; }
.clearfix { display:block; }
.clearfix:after {
  content:'';
  display:block;
  height:0;
  clear:both;
  visibility:hidden;
  }
.fl { float: left; }
@media only screen and (max-width:640px) {
  .col3 { width:100%; max-width:100%; }
  .hide-mobile { display:none!important; }
}

.quiet {
  color: #7f7f7f;
  color: rgba(0,0,0,0.5);
}
.quiet a { opacity: 0.7; }

.fraction {
  font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace;
  font-size: 10px;
  color: #555;
  background: #E8E8E8;
  padding: 4px 5px;
  border-radius: 3px;
  vertical-align: middle;
}

div.path a:link, div.path a:visited { color: #333; }
table.coverage {
  border-collapse: collapse;
  margin: 10px 0 0 0;
  padding: 0;
}

table.coverage td {
  margin: 0;
  padding: 0;
  vertical-align: top;
}
table.coverage td.line-count {
    text-align: right;
    padding: 0 5px 0 20px;
}
table.coverage td.line-coverage {
    text-align: right;
    padding-right: 10px;
    min-width:20px;
}

table.coverage td span.cline-any {
    display: inline-block;
    padding: 0 5px;
    width: 100%;
}
.missing-if-branch {
    display: inline-block;
    margin-right: 5px;
    border-radius: 3px;
    position: relative;
    padding: 0 4px;
    background: #333;
    color: yellow;
}

.skip-if-branch {
    display: none;
    margin-right: 10px;
    position: relative;
    padding: 0 4px;
    background: #ccc;
    color: white;
}
.missing-if-branch .typ, .skip-if-branch .typ {
    color: inherit !important;
}
.coverage-summary {
  border-collapse: collapse;
  width: 100%;
}
.coverage-summary tr { border-bottom: 1px solid #bbb; }
.keyline-all { border: 1px solid #ddd; }
.coverage-summary td, .coverage-summary th { padding: 10px; }
.coverage-summary tbody { border: 1px solid #bbb; }
.coverage-summary td { border-right: 1px solid #bbb; }
.coverage-summary td:last-child { border-right: none; }
.coverage-summary th {
  text-align: left;
  font-weight: normal;
  white-space: nowrap;
}
.coverage-summary th.file { border-right: none !important; }
.coverage-summary th.pct { }
.coverage-summary th.pic,
.coverage-summary th.abs,
.coverage-summary td.pct,
.coverage-summary td.abs { text-align: right; }
.coverage-summary td.file { white-space: nowrap;  }
.coverage-summary td.pic { min-width: 120px !important;  }
.coverage-summary tfoot td { }

.coverage-summary .sorter {
    height: 10px;
    width: 7px;
    display: inline-block;
    margin-left: 0.5em;
    background: url(sort-arrow-sprite.png) no-repeat scroll 0 0 transparent;
}
.coverage-summary .sorted .sorter {
    background-position: 0 -20px;
}
.coverage-summary .sorted-desc .sorter {
    background-position: 0 -10px;
}
.status-line {  height: 10px; }
/* yellow */
.cbranch-no { background: yellow !important; color: #111; }
/* dark red */
.red.solid, .status-line.low, .low .cover-fill { background:#C21F39 }
.low .chart { border:1px solid #C21F39 }
.highlighted,
.highlighted .cstat-no, .highlighted .fstat-no, .highlighted .cbranch-no{
  background: #C21F39 !important;
}
/* medium red */
.cstat-no, .fstat-no, .cbranch-no, .cbranch-no { background:#F6C6CE }
/* light red */
.low, .cline-no { background:#FCE1E5 }
/* light green */
.high, .cline-yes { background:rgb(230,245,208) }
/* medium green */
.cstat-yes { background:rgb(161,215,106) }
/* dark green */
.status-line.high, .high .cover-fill { background:rgb(77,146,33) }
.high .chart { border:1px solid rgb(77,146,33) }
/* dark yellow (gold) */
.status-line.medium, .medium .cover-fill { background: #f9cd0b; }
.medium .chart { border:1px solid #f9cd0b; }
/* light yellow */
.medium { background: #fff4c2; }

.cstat-skip { background: #ddd; color: #111; }
.fstat-skip { background: #ddd; color: #111 !important; }
.cbranch-skip { background: #ddd !important; color: #111; }

span.cline-neutral { background: #eaeaea; }

.coverage-summary td.empty {
    opacity: .5;
    padding-top: 4px;
    padding-bottom: 4px;
    line-height: 1;
    color: #888;
}

.cover-fill, .cover-empty {
  display:inline-block;
  height: 12px;
}
.chart {
  line-height: 0;
}
.cover-empty {
    background: white;
}
.cover-full {
    border-right: none !important;
}
pre.prettyprint {
    border: none !important;
    padding: 0 !important;
    margin: 0 !important;
}
.com { color: #999 !important; }
.ignore-none { color: #999; font-weight: normal; }

.wrapper {
  min-height: 100%;
  height: auto !important;
  height: 100%;
  margin: 0 auto -48px;
}
.footer, .push {
  height: 48px;
}

---------- END base.css ----------


---------- block-navigation.js ----------
/* eslint-disable */
var jumpToCode = (function init() {
    // Classes of code we would like to highlight in the file view
    var missingCoverageClasses = ['.cbranch-no', '.cstat-no', '.fstat-no'];

    // Elements to highlight in the file listing view
    var fileListingElements = ['td.pct.low'];

    // We don't want to select elements that are direct descendants of another match
    var notSelector = ':not(' + missingCoverageClasses.join('):not(') + ') > '; // becomes `:not(a):not(b) > `

    // Selecter that finds elements on the page to which we can jump
    var selector =
        fileListingElements.join(', ') +
        ', ' +
        notSelector +
        missingCoverageClasses.join(', ' + notSelector); // becomes `:not(a):not(b) > a, :not(a):not(b) > b`

    // The NodeList of matching elements
    var missingCoverageElements = document.querySelectorAll(selector);

    var currentIndex;

    function toggleClass(index) {
        missingCoverageElements
            .item(currentIndex)
            .classList.remove('highlighted');
        missingCoverageElements.item(index).classList.add('highlighted');
    }

    function makeCurrent(index) {
        toggleClass(index);
        currentIndex = index;
        missingCoverageElements.item(index).scrollIntoView({
            behavior: 'smooth',
            block: 'center',
            inline: 'center'
        });
    }

    function goToPrevious() {
        var nextIndex = 0;
        if (typeof currentIndex !== 'number' || currentIndex === 0) {
            nextIndex = missingCoverageElements.length - 1;
        } else if (missingCoverageElements.length > 1) {
            nextIndex = currentIndex - 1;
        }

        makeCurrent(nextIndex);
    }

    function goToNext() {
        var nextIndex = 0;

        if (
            typeof currentIndex === 'number' &&
            currentIndex < missingCoverageElements.length - 1
        ) {
            nextIndex = currentIndex + 1;
        }

        makeCurrent(nextIndex);
    }

    return function jump(event) {
        if (
            document.getElementById('fileSearch') === document.activeElement &&
            document.activeElement != null
        ) {
            // if we're currently focused on the search input, we don't want to navigate
            return;
        }

        switch (event.which) {
            case 78: // n
            case 74: // j
                goToNext();
                break;
            case 66: // b
            case 75: // k
            case 80: // p
                goToPrevious();
                break;
        }
    };
})();
window.addEventListener('keydown', jumpToCode);

---------- END block-navigation.js ----------


---------- AccountSettings.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/AccountSettings.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">components</a> AccountSettings.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/6</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/8</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/2</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/5</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/components/AccountSettings.tsx
import React from 'react';
import { View, ActivityIndicator } from 'react-native';
import { Text, makeStyles, Button, Icon, ListItem, useTheme } from '@rneui/themed';
import { t } from '../localization/i18n';
&nbsp;
interface AccountSettingsProps {
    userCoins: number | null;
    isLoadingCoins: boolean;
    isAddingCoins: boolean;
    onAddTestCoins: () =&gt; void;
}
&nbsp;
const AccountSettings: React.FC&lt;AccountSettingsProps&gt; = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span></span>
    userCoins,
    isLoadingCoins,
    isAddingCoins,
    onAddTestCoins,
}) =&gt; {
    const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
    const styles = <span class="cstat-no" title="statement not covered" >useStyles();</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    return (</span>
        &lt;View&gt;
            &lt;ListItem bottomDivider containerStyle={styles.listItem}&gt;
                &lt;Icon name="database" type="material-community" color={theme.colors.warning} /&gt;
                &lt;ListItem.Content&gt;
                    &lt;ListItem.Title style={styles.listItemTitle}&gt;{t('accountSettings.coinBalance')}&lt;/ListItem.Title&gt;
                &lt;/ListItem.Content&gt;
                {isLoadingCoins ? (
                    &lt;ActivityIndicator size="small" color={theme.colors.primary} /&gt;
                ) : (
                    &lt;Text style={styles.coinValue}&gt;{userCoins !== null ? userCoins : t('accountSettings.notApplicable')}&lt;/Text&gt;
                )}
            &lt;/ListItem&gt;
&nbsp;
            {/* This button and its warning are only available in development builds */}
            {__DEV__ &amp;&amp; (
                &lt;&gt;
                    &lt;Button
                        title={t('accountSettings.addTestCoins')}
                        onPress={onAddTestCoins}
                        buttonStyle={[styles.button, { backgroundColor: theme.colors.success, marginTop: 10 }]}
                        icon={&lt;Icon name="plus-circle-outline" type="material-community" color="white" size={20} style={{ marginRight: 8 }} /&gt;}
                        loading={isAddingCoins}
                        disabled={isAddingCoins || isLoadingCoins}
                    /&gt;
                    &lt;Text style={styles.testButtonWarning}&gt;
                        {t('accountSettings.testButtonWarning')}
                    &lt;/Text&gt;
                &lt;/&gt;
            )}
        &lt;/View&gt;
    );
};
&nbsp;
const useStyles = <span class="cstat-no" title="statement not covered" >makeStyles(<span class="fstat-no" title="function not covered" >(t</span>heme) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
    listItem: {
        backgroundColor: theme.colors.background,
        paddingVertical: 15,
    },
    listItemTitle: {
        color: theme.colors.text,
        fontWeight: '500',
        textAlign: 'left',
    },
    coinValue: {
        color: theme.colors.primary,
        fontWeight: 'bold',
        fontSize: 16,
    },
    button: {
        marginBottom: 10,
        borderRadius: 8,
    },
    testButtonWarning: {
        fontSize: 12,
        color: theme.colors.grey3,
        fontStyle: 'italic',
        textAlign: 'center',
        marginTop: 0,
        marginBottom: 15,
        marginHorizontal: 10,
    },
}));
&nbsp;
export default AccountSettings;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END AccountSettings.tsx.html ----------


---------- AddEntryModal.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/AddEntryModal/AddEntryModal.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> / <a href="index.html">components/AddEntryModal</a> AddEntryModal.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/298</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/224</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/53</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/204</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a>
<a name='L128'></a><a href='#L128'>128</a>
<a name='L129'></a><a href='#L129'>129</a>
<a name='L130'></a><a href='#L130'>130</a>
<a name='L131'></a><a href='#L131'>131</a>
<a name='L132'></a><a href='#L132'>132</a>
<a name='L133'></a><a href='#L133'>133</a>
<a name='L134'></a><a href='#L134'>134</a>
<a name='L135'></a><a href='#L135'>135</a>
<a name='L136'></a><a href='#L136'>136</a>
<a name='L137'></a><a href='#L137'>137</a>
<a name='L138'></a><a href='#L138'>138</a>
<a name='L139'></a><a href='#L139'>139</a>
<a name='L140'></a><a href='#L140'>140</a>
<a name='L141'></a><a href='#L141'>141</a>
<a name='L142'></a><a href='#L142'>142</a>
<a name='L143'></a><a href='#L143'>143</a>
<a name='L144'></a><a href='#L144'>144</a>
<a name='L145'></a><a href='#L145'>145</a>
<a name='L146'></a><a href='#L146'>146</a>
<a name='L147'></a><a href='#L147'>147</a>
<a name='L148'></a><a href='#L148'>148</a>
<a name='L149'></a><a href='#L149'>149</a>
<a name='L150'></a><a href='#L150'>150</a>
<a name='L151'></a><a href='#L151'>151</a>
<a name='L152'></a><a href='#L152'>152</a>
<a name='L153'></a><a href='#L153'>153</a>
<a name='L154'></a><a href='#L154'>154</a>
<a name='L155'></a><a href='#L155'>155</a>
<a name='L156'></a><a href='#L156'>156</a>
<a name='L157'></a><a href='#L157'>157</a>
<a name='L158'></a><a href='#L158'>158</a>
<a name='L159'></a><a href='#L159'>159</a>
<a name='L160'></a><a href='#L160'>160</a>
<a name='L161'></a><a href='#L161'>161</a>
<a name='L162'></a><a href='#L162'>162</a>
<a name='L163'></a><a href='#L163'>163</a>
<a name='L164'></a><a href='#L164'>164</a>
<a name='L165'></a><a href='#L165'>165</a>
<a name='L166'></a><a href='#L166'>166</a>
<a name='L167'></a><a href='#L167'>167</a>
<a name='L168'></a><a href='#L168'>168</a>
<a name='L169'></a><a href='#L169'>169</a>
<a name='L170'></a><a href='#L170'>170</a>
<a name='L171'></a><a href='#L171'>171</a>
<a name='L172'></a><a href='#L172'>172</a>
<a name='L173'></a><a href='#L173'>173</a>
<a name='L174'></a><a href='#L174'>174</a>
<a name='L175'></a><a href='#L175'>175</a>
<a name='L176'></a><a href='#L176'>176</a>
<a name='L177'></a><a href='#L177'>177</a>
<a name='L178'></a><a href='#L178'>178</a>
<a name='L179'></a><a href='#L179'>179</a>
<a name='L180'></a><a href='#L180'>180</a>
<a name='L181'></a><a href='#L181'>181</a>
<a name='L182'></a><a href='#L182'>182</a>
<a name='L183'></a><a href='#L183'>183</a>
<a name='L184'></a><a href='#L184'>184</a>
<a name='L185'></a><a href='#L185'>185</a>
<a name='L186'></a><a href='#L186'>186</a>
<a name='L187'></a><a href='#L187'>187</a>
<a name='L188'></a><a href='#L188'>188</a>
<a name='L189'></a><a href='#L189'>189</a>
<a name='L190'></a><a href='#L190'>190</a>
<a name='L191'></a><a href='#L191'>191</a>
<a name='L192'></a><a href='#L192'>192</a>
<a name='L193'></a><a href='#L193'>193</a>
<a name='L194'></a><a href='#L194'>194</a>
<a name='L195'></a><a href='#L195'>195</a>
<a name='L196'></a><a href='#L196'>196</a>
<a name='L197'></a><a href='#L197'>197</a>
<a name='L198'></a><a href='#L198'>198</a>
<a name='L199'></a><a href='#L199'>199</a>
<a name='L200'></a><a href='#L200'>200</a>
<a name='L201'></a><a href='#L201'>201</a>
<a name='L202'></a><a href='#L202'>202</a>
<a name='L203'></a><a href='#L203'>203</a>
<a name='L204'></a><a href='#L204'>204</a>
<a name='L205'></a><a href='#L205'>205</a>
<a name='L206'></a><a href='#L206'>206</a>
<a name='L207'></a><a href='#L207'>207</a>
<a name='L208'></a><a href='#L208'>208</a>
<a name='L209'></a><a href='#L209'>209</a>
<a name='L210'></a><a href='#L210'>210</a>
<a name='L211'></a><a href='#L211'>211</a>
<a name='L212'></a><a href='#L212'>212</a>
<a name='L213'></a><a href='#L213'>213</a>
<a name='L214'></a><a href='#L214'>214</a>
<a name='L215'></a><a href='#L215'>215</a>
<a name='L216'></a><a href='#L216'>216</a>
<a name='L217'></a><a href='#L217'>217</a>
<a name='L218'></a><a href='#L218'>218</a>
<a name='L219'></a><a href='#L219'>219</a>
<a name='L220'></a><a href='#L220'>220</a>
<a name='L221'></a><a href='#L221'>221</a>
<a name='L222'></a><a href='#L222'>222</a>
<a name='L223'></a><a href='#L223'>223</a>
<a name='L224'></a><a href='#L224'>224</a>
<a name='L225'></a><a href='#L225'>225</a>
<a name='L226'></a><a href='#L226'>226</a>
<a name='L227'></a><a href='#L227'>227</a>
<a name='L228'></a><a href='#L228'>228</a>
<a name='L229'></a><a href='#L229'>229</a>
<a name='L230'></a><a href='#L230'>230</a>
<a name='L231'></a><a href='#L231'>231</a>
<a name='L232'></a><a href='#L232'>232</a>
<a name='L233'></a><a href='#L233'>233</a>
<a name='L234'></a><a href='#L234'>234</a>
<a name='L235'></a><a href='#L235'>235</a>
<a name='L236'></a><a href='#L236'>236</a>
<a name='L237'></a><a href='#L237'>237</a>
<a name='L238'></a><a href='#L238'>238</a>
<a name='L239'></a><a href='#L239'>239</a>
<a name='L240'></a><a href='#L240'>240</a>
<a name='L241'></a><a href='#L241'>241</a>
<a name='L242'></a><a href='#L242'>242</a>
<a name='L243'></a><a href='#L243'>243</a>
<a name='L244'></a><a href='#L244'>244</a>
<a name='L245'></a><a href='#L245'>245</a>
<a name='L246'></a><a href='#L246'>246</a>
<a name='L247'></a><a href='#L247'>247</a>
<a name='L248'></a><a href='#L248'>248</a>
<a name='L249'></a><a href='#L249'>249</a>
<a name='L250'></a><a href='#L250'>250</a>
<a name='L251'></a><a href='#L251'>251</a>
<a name='L252'></a><a href='#L252'>252</a>
<a name='L253'></a><a href='#L253'>253</a>
<a name='L254'></a><a href='#L254'>254</a>
<a name='L255'></a><a href='#L255'>255</a>
<a name='L256'></a><a href='#L256'>256</a>
<a name='L257'></a><a href='#L257'>257</a>
<a name='L258'></a><a href='#L258'>258</a>
<a name='L259'></a><a href='#L259'>259</a>
<a name='L260'></a><a href='#L260'>260</a>
<a name='L261'></a><a href='#L261'>261</a>
<a name='L262'></a><a href='#L262'>262</a>
<a name='L263'></a><a href='#L263'>263</a>
<a name='L264'></a><a href='#L264'>264</a>
<a name='L265'></a><a href='#L265'>265</a>
<a name='L266'></a><a href='#L266'>266</a>
<a name='L267'></a><a href='#L267'>267</a>
<a name='L268'></a><a href='#L268'>268</a>
<a name='L269'></a><a href='#L269'>269</a>
<a name='L270'></a><a href='#L270'>270</a>
<a name='L271'></a><a href='#L271'>271</a>
<a name='L272'></a><a href='#L272'>272</a>
<a name='L273'></a><a href='#L273'>273</a>
<a name='L274'></a><a href='#L274'>274</a>
<a name='L275'></a><a href='#L275'>275</a>
<a name='L276'></a><a href='#L276'>276</a>
<a name='L277'></a><a href='#L277'>277</a>
<a name='L278'></a><a href='#L278'>278</a>
<a name='L279'></a><a href='#L279'>279</a>
<a name='L280'></a><a href='#L280'>280</a>
<a name='L281'></a><a href='#L281'>281</a>
<a name='L282'></a><a href='#L282'>282</a>
<a name='L283'></a><a href='#L283'>283</a>
<a name='L284'></a><a href='#L284'>284</a>
<a name='L285'></a><a href='#L285'>285</a>
<a name='L286'></a><a href='#L286'>286</a>
<a name='L287'></a><a href='#L287'>287</a>
<a name='L288'></a><a href='#L288'>288</a>
<a name='L289'></a><a href='#L289'>289</a>
<a name='L290'></a><a href='#L290'>290</a>
<a name='L291'></a><a href='#L291'>291</a>
<a name='L292'></a><a href='#L292'>292</a>
<a name='L293'></a><a href='#L293'>293</a>
<a name='L294'></a><a href='#L294'>294</a>
<a name='L295'></a><a href='#L295'>295</a>
<a name='L296'></a><a href='#L296'>296</a>
<a name='L297'></a><a href='#L297'>297</a>
<a name='L298'></a><a href='#L298'>298</a>
<a name='L299'></a><a href='#L299'>299</a>
<a name='L300'></a><a href='#L300'>300</a>
<a name='L301'></a><a href='#L301'>301</a>
<a name='L302'></a><a href='#L302'>302</a>
<a name='L303'></a><a href='#L303'>303</a>
<a name='L304'></a><a href='#L304'>304</a>
<a name='L305'></a><a href='#L305'>305</a>
<a name='L306'></a><a href='#L306'>306</a>
<a name='L307'></a><a href='#L307'>307</a>
<a name='L308'></a><a href='#L308'>308</a>
<a name='L309'></a><a href='#L309'>309</a>
<a name='L310'></a><a href='#L310'>310</a>
<a name='L311'></a><a href='#L311'>311</a>
<a name='L312'></a><a href='#L312'>312</a>
<a name='L313'></a><a href='#L313'>313</a>
<a name='L314'></a><a href='#L314'>314</a>
<a name='L315'></a><a href='#L315'>315</a>
<a name='L316'></a><a href='#L316'>316</a>
<a name='L317'></a><a href='#L317'>317</a>
<a name='L318'></a><a href='#L318'>318</a>
<a name='L319'></a><a href='#L319'>319</a>
<a name='L320'></a><a href='#L320'>320</a>
<a name='L321'></a><a href='#L321'>321</a>
<a name='L322'></a><a href='#L322'>322</a>
<a name='L323'></a><a href='#L323'>323</a>
<a name='L324'></a><a href='#L324'>324</a>
<a name='L325'></a><a href='#L325'>325</a>
<a name='L326'></a><a href='#L326'>326</a>
<a name='L327'></a><a href='#L327'>327</a>
<a name='L328'></a><a href='#L328'>328</a>
<a name='L329'></a><a href='#L329'>329</a>
<a name='L330'></a><a href='#L330'>330</a>
<a name='L331'></a><a href='#L331'>331</a>
<a name='L332'></a><a href='#L332'>332</a>
<a name='L333'></a><a href='#L333'>333</a>
<a name='L334'></a><a href='#L334'>334</a>
<a name='L335'></a><a href='#L335'>335</a>
<a name='L336'></a><a href='#L336'>336</a>
<a name='L337'></a><a href='#L337'>337</a>
<a name='L338'></a><a href='#L338'>338</a>
<a name='L339'></a><a href='#L339'>339</a>
<a name='L340'></a><a href='#L340'>340</a>
<a name='L341'></a><a href='#L341'>341</a>
<a name='L342'></a><a href='#L342'>342</a>
<a name='L343'></a><a href='#L343'>343</a>
<a name='L344'></a><a href='#L344'>344</a>
<a name='L345'></a><a href='#L345'>345</a>
<a name='L346'></a><a href='#L346'>346</a>
<a name='L347'></a><a href='#L347'>347</a>
<a name='L348'></a><a href='#L348'>348</a>
<a name='L349'></a><a href='#L349'>349</a>
<a name='L350'></a><a href='#L350'>350</a>
<a name='L351'></a><a href='#L351'>351</a>
<a name='L352'></a><a href='#L352'>352</a>
<a name='L353'></a><a href='#L353'>353</a>
<a name='L354'></a><a href='#L354'>354</a>
<a name='L355'></a><a href='#L355'>355</a>
<a name='L356'></a><a href='#L356'>356</a>
<a name='L357'></a><a href='#L357'>357</a>
<a name='L358'></a><a href='#L358'>358</a>
<a name='L359'></a><a href='#L359'>359</a>
<a name='L360'></a><a href='#L360'>360</a>
<a name='L361'></a><a href='#L361'>361</a>
<a name='L362'></a><a href='#L362'>362</a>
<a name='L363'></a><a href='#L363'>363</a>
<a name='L364'></a><a href='#L364'>364</a>
<a name='L365'></a><a href='#L365'>365</a>
<a name='L366'></a><a href='#L366'>366</a>
<a name='L367'></a><a href='#L367'>367</a>
<a name='L368'></a><a href='#L368'>368</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/components/AddEntryModal/AddEntryModal.tsx
import React, { useEffect, useState, useMemo, useCallback, useRef } from "react";
import { View, KeyboardAvoidingView, Platform, Dimensions, StyleSheet, Alert, Keyboard } from "react-native";
import { Overlay, makeStyles, useTheme, Button, Input } from "@rneui/themed";
import { Food } from "../../types/food";
import { isValidNumberInput } from "../../utils/validationUtils";
import { loadRecentFoods, saveRecentFoods, RecentServings, loadRecentServings, saveRecentServings } from "../../services/storageService";
import { getFoodIconUrl } from "../../utils/iconUtils";
import { getGramsFromNaturalLanguage } from "../../utils/units";
import Toast from "react-native-toast-message";
import * as ImagePicker from "expo-image-picker";
import { EstimatedFoodItem, getMultipleFoodsFromImage, getMultipleFoodsFromText, BackendError, determineMimeType } from "../../utils/macros";
import { compressImageIfNeeded, getBase64FromUri } from "../../utils/imageUtils";
import { v4 as uuidv4 } from "uuid";
import QuickAddList from "../QuickAddList";
import { t } from '../../localization/i18n';
import { calculateDailyEntryGrade, FoodGradeResult } from "../../utils/gradingUtils";
import { Settings } from '../../types/settings';
import ModalHeader from './ModalHeader';
import FoodSelectionList from './FoodSelectionList';
import AmountInputSection from './AmountInputSection';
&nbsp;
interface AddEntryModalProps {
  isVisible: boolean;
  toggleOverlay: () =&gt; void;
  handleAddEntry: (food: Food, grams: number) =&gt; void;
  handleAddMultipleEntries: (entries: { food: Food; grams: number }[]) =&gt; void;
  foods: Food[];
  isEditMode: boolean;
  initialGrams?: string;
  initialSelectedFoodForEdit?: Food | null;
  onAddNewFoodRequest: () =&gt; void;
  onCommitFoodToLibrary: (foodData: Omit&lt;Food, 'id' | 'createdAt'&gt; | Food, isUpdate: boolean) =&gt; Promise&lt;Food | null&gt;;
  dailyGoals: Settings['dailyGoals'];
}
&nbsp;
const KEYBOARD_VERTICAL_OFFSET = <span class="cstat-no" title="statement not covered" >Platform.OS === "ios" ? 80 : 0;</span>
const MAX_RECENT_FOODS = <span class="cstat-no" title="statement not covered" >15;</span>
const MAX_SERVINGS_PER_FOOD = <span class="cstat-no" title="statement not covered" >4;</span>
&nbsp;
type UnitMode = "grams" | "auto";
type ModalMode = "normal" | "quickAddSelect" | "quickAddText";
&nbsp;
const AddEntryModal: React.FC&lt;AddEntryModalProps&gt; = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span></span>
  isVisible, toggleOverlay, handleAddEntry: parentHandleAddEntry, handleAddMultipleEntries: parentHandleAddMultipleEntries,
  foods, isEditMode, initialGrams, initialSelectedFoodForEdit, onAddNewFoodRequest, onCommitFoodToLibrary, dailyGoals,
}) =&gt; {
  const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
  const styles = <span class="cstat-no" title="statement not covered" >useStyles();</span>
&nbsp;
  const [internalSelectedFood, setInternalSelectedFood] = <span class="cstat-no" title="statement not covered" >useState&lt;Food | null&gt;(null);</span>
  const [internalGrams, setInternalGrams] = <span class="cstat-no" title="statement not covered" >useState("");</span>
  const [internalSearch, setInternalSearch] = <span class="cstat-no" title="statement not covered" >useState("");</span>
  const [recentFoods, setRecentFoods] = <span class="cstat-no" title="statement not covered" >useState&lt;Food[]&gt;([]);</span>
  const [recentServings, setRecentServings] = <span class="cstat-no" title="statement not covered" >useState&lt;RecentServings&gt;({});</span>
  const [foodIcons, setFoodIcons] = <span class="cstat-no" title="statement not covered" >useState&lt;{ [foodName: string]: string | null; }&gt;({});</span>
  const [unitMode, setUnitMode] = <span class="cstat-no" title="statement not covered" >useState&lt;UnitMode&gt;("grams");</span>
  const [autoInput, setAutoInput] = <span class="cstat-no" title="statement not covered" >useState("");</span>
  const [isAiLoading, setIsAiLoading] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
&nbsp;
  const [modalMode, setModalMode] = <span class="cstat-no" title="statement not covered" >useState&lt;ModalMode&gt;("normal");</span>
  const [quickAddLoading, setQuickAddLoading] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
  const [quickAddItems, setQuickAddItems] = <span class="cstat-no" title="statement not covered" >useState&lt;EstimatedFoodItem[]&gt;([]);</span>
  const [selectedQuickAddIndices, setSelectedQuickAddIndices] = <span class="cstat-no" title="statement not covered" >useState&lt;Set&lt;number&gt;&gt;(new Set());</span>
  const [editingQuickAddItemIndex, setEditingQuickAddItemIndex] = <span class="cstat-no" title="statement not covered" >useState&lt;number | null&gt;(null);</span>
  const [editedFoodName, setEditedFoodName] = <span class="cstat-no" title="statement not covered" >useState&lt;string&gt;("");</span>
  const [editedGrams, setEditedGrams] = <span class="cstat-no" title="statement not covered" >useState&lt;string&gt;("");</span>
  const [selectedMultipleFoods, setSelectedMultipleFoods] = <span class="cstat-no" title="statement not covered" >useState&lt;Map&lt;string, { food: Food; grams: number }&gt;&gt;(new Map());</span>
  
  const [quickAddTextInput, setQuickAddTextInput] = <span class="cstat-no" title="statement not covered" >useState("");</span>
  const [isTextQuickAddLoading, setIsTextQuickAddLoading] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
&nbsp;
  const isActionDisabled = <span class="cstat-no" title="statement not covered" >isAiLoading || quickAddLoading;</span>
&nbsp;
  const resolveAndSetIcon = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >(f</span>oodName: string) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (!foodName || foodIcons[foodName] !== undefined) <span class="cstat-no" title="statement not covered" >return;</span></span>
    const icon = <span class="cstat-no" title="statement not covered" >getFoodIconUrl(foodName);</span>
<span class="cstat-no" title="statement not covered" >    setFoodIcons(<span class="fstat-no" title="function not covered" >pr</span>evIcons =&gt; (<span class="cstat-no" title="statement not covered" >{ ...prevIcons, [foodName]: icon })</span>);</span>
  }, [foodIcons]);
&nbsp;
  const foodGradeResult = <span class="cstat-no" title="statement not covered" >useMemo(<span class="fstat-no" title="function not covered" >()</span>: FoodGradeResult | null =&gt; {</span>
    const numericGramsValue = <span class="cstat-no" title="statement not covered" >parseFloat(internalGrams);</span>
<span class="cstat-no" title="statement not covered" >    if (internalSelectedFood &amp;&amp; isValidNumberInput(internalGrams) &amp;&amp; numericGramsValue &gt; 0 &amp;&amp; dailyGoals) {</span>
<span class="cstat-no" title="statement not covered" >        return calculateDailyEntryGrade(internalSelectedFood, numericGramsValue, dailyGoals);</span>
    }
<span class="cstat-no" title="statement not covered" >    return null;</span>
  }, [internalSelectedFood, internalGrams, dailyGoals]);
&nbsp;
<span class="cstat-no" title="statement not covered" >  useEffect(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
    const actuallyEditingDailyItem = <span class="cstat-no" title="statement not covered" >isEditMode &amp;&amp; initialSelectedFoodForEdit &amp;&amp; initialGrams !== undefined;</span>
    const isPreSelectedForAdd = <span class="cstat-no" title="statement not covered" >!isEditMode &amp;&amp; initialSelectedFoodForEdit;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    if (actuallyEditingDailyItem) {</span>
<span class="cstat-no" title="statement not covered" >        setModalMode("normal");</span>
<span class="cstat-no" title="statement not covered" >        setUnitMode("grams");</span>
<span class="cstat-no" title="statement not covered" >        setInternalSelectedFood(initialSelectedFoodForEdit);</span>
<span class="cstat-no" title="statement not covered" >        setInternalGrams(initialGrams);</span>
<span class="cstat-no" title="statement not covered" >        if (initialSelectedFoodForEdit?.name) <span class="cstat-no" title="statement not covered" >resolveAndSetIcon(initialSelectedFoodForEdit.name);</span></span>
    } else <span class="cstat-no" title="statement not covered" >if (isPreSelectedForAdd) {</span>
<span class="cstat-no" title="statement not covered" >        setModalMode("normal");</span>
<span class="cstat-no" title="statement not covered" >        setUnitMode("grams");</span>
<span class="cstat-no" title="statement not covered" >        setInternalSelectedFood(initialSelectedFoodForEdit);</span>
<span class="cstat-no" title="statement not covered" >        setInternalGrams(initialGrams || "");</span>
<span class="cstat-no" title="statement not covered" >        if (initialSelectedFoodForEdit?.name) <span class="cstat-no" title="statement not covered" >resolveAndSetIcon(initialSelectedFoodForEdit.name);</span></span>
    } 
    
    // Always load recents for non-edit scenarios.
<span class="cstat-no" title="statement not covered" >    if (!isEditMode) {</span>
<span class="cstat-no" title="statement not covered" >        loadRecentFoods().then(setRecentFoods);</span>
<span class="cstat-no" title="statement not covered" >        loadRecentServings().then(setRecentServings);</span>
    }
  }, []); 
&nbsp;
&nbsp;
<span class="cstat-no" title="statement not covered" >  useEffect(<span class="fstat-no" title="function not covered" >()</span> =&gt; { <span class="cstat-no" title="statement not covered" >recentFoods.forEach(<span class="fstat-no" title="function not covered" >fo</span>od =&gt; <span class="cstat-no" title="statement not covered" >resolveAndSetIcon(food.name))</span>; </span>}, [recentFoods, resolveAndSetIcon]);</span>
&nbsp;
  const addToRecentFoods = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync (food: Food) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (!food || !food.id) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >    setRecentFoods(<span class="fstat-no" title="function not covered" >pr</span>ev =&gt; {</span>
      const updated = <span class="cstat-no" title="statement not covered" >[food, ...prev.filter(<span class="fstat-no" title="function not covered" >f </span>=&gt; <span class="cstat-no" title="statement not covered" >f.id !== food.id)</span>].slice(0, MAX_RECENT_FOODS);</span>
<span class="cstat-no" title="statement not covered" >      saveRecentFoods(updated).catch(<span class="fstat-no" title="function not covered" >()</span> =&gt; {}); <span class="cstat-no" title="statement not covered" ></span>return updated;</span>
    });
  }, []);
&nbsp;
  const addMultipleToRecentServings = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync (entries: { foodId: string; grams: number }[]) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (!entries || entries.length === 0) <span class="cstat-no" title="statement not covered" >return;</span></span>
    
<span class="cstat-no" title="statement not covered" >    setRecentServings(<span class="fstat-no" title="function not covered" >pr</span>evServings =&gt; {</span>
        const newServings = <span class="cstat-no" title="statement not covered" >{ ...prevServings };</span>
<span class="cstat-no" title="statement not covered" >        entries.forEach(<span class="fstat-no" title="function not covered" >({</span> foodId, grams }) =&gt; {</span>
            const roundedGrams = <span class="cstat-no" title="statement not covered" >Math.round(grams);</span>
            const currentServingsForFood = <span class="cstat-no" title="statement not covered" >newServings[foodId] || [];</span>
            const updatedServingsForFood = <span class="cstat-no" title="statement not covered" >[roundedGrams, ...currentServingsForFood.filter(<span class="fstat-no" title="function not covered" >g </span>=&gt; <span class="cstat-no" title="statement not covered" >g !== roundedGrams)</span>];</span>
<span class="cstat-no" title="statement not covered" >            newServings[foodId] = [...new Set(updatedServingsForFood)].slice(0, MAX_SERVINGS_PER_FOOD);</span>
        });
<span class="cstat-no" title="statement not covered" >        saveRecentServings(newServings).catch(<span class="fstat-no" title="function not covered" >()</span> =&gt; {});</span>
<span class="cstat-no" title="statement not covered" >        return newServings;</span>
    });
  }, []);
&nbsp;
  const servingSizeSuggestions = <span class="cstat-no" title="statement not covered" >useMemo(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (!internalSelectedFood?.id) <span class="cstat-no" title="statement not covered" >return [];</span></span>
    
    const servingsForFood = <span class="cstat-no" title="statement not covered" >recentServings[internalSelectedFood.id] || [];</span>
<span class="cstat-no" title="statement not covered" >    if (servingsForFood.length === 0) <span class="cstat-no" title="statement not covered" >return [];</span></span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    return servingsForFood.map(<span class="fstat-no" title="function not covered" >(v</span>al, index) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
        label: index === 0 ? t('addEntryModal.lastUsedServing', { grams: val }) : `${val}g`,
        value: String(val)
    }));
  }, [internalSelectedFood, recentServings, t]);
&nbsp;
  const handleEstimateGrams = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    Keyboard.dismiss(); <span class="cstat-no" title="statement not covered" ></span>if (!internalSelectedFood || !autoInput.trim() || isAiLoading) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >    setIsAiLoading(true);</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
      const estimatedGrams = <span class="cstat-no" title="statement not covered" >await getGramsFromNaturalLanguage(internalSelectedFood.name, autoInput);</span>
      const roundedGrams = <span class="cstat-no" title="statement not covered" >String(Math.round(estimatedGrams));</span> <span class="cstat-no" title="statement not covered" >setInternalGrams(roundedGrams); <span class="cstat-no" title="statement not covered" ></span>setUnitMode("grams"); <span class="cstat-no" title="statement not covered" ></span>setAutoInput("");</span>
<span class="cstat-no" title="statement not covered" >      Toast.show({ type: "success", text1: t('addEntryModal.alertGramsEstimated'), text2: t('addEntryModal.alertGramsEstimatedMessage', {grams: roundedGrams, foodName: internalSelectedFood.name}), position: "bottom" });</span>
    } catch (error) { /* Handled by getGramsFromNaturalLanguage */ } finally { <span class="cstat-no" title="statement not covered" >setIsAiLoading(false); </span>}
  }, [internalSelectedFood, autoInput, isAiLoading, t]);
&nbsp;
  const handleAddOrUpdateSingleEntry = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    Keyboard.dismiss(); <span class="cstat-no" title="statement not covered" ></span>if (!internalSelectedFood?.id) <span class="cstat-no" title="statement not covered" >return Alert.alert(t('addEntryModal.alertFoodNotSelected'), t('addEntryModal.alertFoodNotSelectedMessage'));</span></span>
    const numericGramsValue = <span class="cstat-no" title="statement not covered" >parseFloat(internalGrams);</span>
<span class="cstat-no" title="statement not covered" >    if (!isValidNumberInput(internalGrams) || numericGramsValue &lt;= 0) <span class="cstat-no" title="statement not covered" >return Alert.alert(t('addEntryModal.alertInvalidAmount'), t('addEntryModal.alertInvalidAmountMessage'));</span></span>
<span class="cstat-no" title="statement not covered" >    if (isActionDisabled) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >    parentHandleAddEntry(internalSelectedFood, numericGramsValue);</span>
<span class="cstat-no" title="statement not covered" >    if (!isEditMode) {</span>
<span class="cstat-no" title="statement not covered" >        addToRecentFoods(internalSelectedFood);</span>
<span class="cstat-no" title="statement not covered" >        addMultipleToRecentServings([{ foodId: internalSelectedFood.id, grams: numericGramsValue }]);</span>
    }
  }, [internalSelectedFood, internalGrams, isActionDisabled, isEditMode, parentHandleAddEntry, addToRecentFoods, addMultipleToRecentServings, t]);
&nbsp;
  const handleToggleMultipleFoodSelection = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >(f</span>ood: Food, displayGrams: number) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (isEditMode || internalSelectedFood) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >    setSelectedMultipleFoods(<span class="fstat-no" title="function not covered" >pr</span>ev =&gt; { const newMap = <span class="cstat-no" title="statement not covered" >new Map(prev);</span> <span class="cstat-no" title="statement not covered" >newMap.has(food.id) ? newMap.delete(food.id) : newMap.set(food.id, { food, grams: displayGrams }); <span class="cstat-no" title="statement not covered" ></span>return newMap; </span>});</span>
  }, [isEditMode, internalSelectedFood]);
&nbsp;
  const handleConfirmAddMultipleSelected = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (isEditMode || internalSelectedFood || selectedMultipleFoods.size === 0 || isActionDisabled) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >    Keyboard.dismiss();</span>
    const entriesToAdd = <span class="cstat-no" title="statement not covered" >Array.from(selectedMultipleFoods.values());</span> <span class="cstat-no" title="statement not covered" >if (entriesToAdd.length === 0) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >    parentHandleAddMultipleEntries(entriesToAdd);</span>
<span class="cstat-no" title="statement not covered" >    entriesToAdd.forEach(<span class="fstat-no" title="function not covered" >en</span>try =&gt; <span class="cstat-no" title="statement not covered" >addToRecentFoods(entry.food))</span>;</span>
    const servingsToAdd = <span class="cstat-no" title="statement not covered" >entriesToAdd.map(<span class="fstat-no" title="function not covered" >e </span>=&gt; (<span class="cstat-no" title="statement not covered" >{ foodId: e.food.id, grams: e.grams })</span>);</span>
<span class="cstat-no" title="statement not covered" >    addMultipleToRecentServings(servingsToAdd);</span>
<span class="cstat-no" title="statement not covered" >    setSelectedMultipleFoods(new Map());</span>
  }, [isEditMode, internalSelectedFood, selectedMultipleFoods, isActionDisabled, parentHandleAddMultipleEntries, addToRecentFoods, addMultipleToRecentServings]);
&nbsp;
  const pickImageAndAnalyze = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync (source: "camera" | "gallery") =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (isEditMode) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >    setQuickAddItems([]); <span class="cstat-no" title="statement not covered" ></span>setSelectedQuickAddIndices(new Set()); <span class="cstat-no" title="statement not covered" ></span>setEditingQuickAddItemIndex(null);</span>
<span class="cstat-no" title="statement not covered" >    setModalMode("quickAddSelect"); <span class="cstat-no" title="statement not covered" ></span>setQuickAddLoading(true); <span class="cstat-no" title="statement not covered" ></span>setIsTextQuickAddLoading(false);</span>
    
    let permissionResult, pickerResult: ImagePicker.ImagePickerResult;
<span class="cstat-no" title="statement not covered" >    try {</span>
<span class="cstat-no" title="statement not covered" >      permissionResult = source === "camera" ? await ImagePicker.requestCameraPermissionsAsync() : await ImagePicker.requestMediaLibraryPermissionsAsync();</span>
<span class="cstat-no" title="statement not covered" >      if (!permissionResult.granted) <span class="cstat-no" title="statement not covered" >throw new Error("Permission denied");</span></span>
<span class="cstat-no" title="statement not covered" >      pickerResult = source === "camera" ? await ImagePicker.launchCameraAsync({ quality: 1 }) : await ImagePicker.launchImageLibraryAsync({ mediaTypes: ImagePicker.MediaTypeOptions.Images, quality: 1 });</span>
<span class="cstat-no" title="statement not covered" >      if (pickerResult.canceled) <span class="cstat-no" title="statement not covered" >throw new Error("User cancelled");</span></span>
&nbsp;
      const asset = <span class="cstat-no" title="statement not covered" >pickerResult.assets?.[0];</span> <span class="cstat-no" title="statement not covered" >if (!asset) <span class="cstat-no" title="statement not covered" >throw new Error(t('addEntryModal.alertQuickAddCouldNotSelect'));</span></span>
      const compressed = <span class="cstat-no" title="statement not covered" >await compressImageIfNeeded(asset);</span>
      const assetForAnalysis = <span class="cstat-no" title="statement not covered" >compressed ? { ...asset, uri: compressed.uri, mimeType: 'image/jpeg' } : asset;</span>
      const base64 = <span class="cstat-no" title="statement not covered" >await getBase64FromUri(assetForAnalysis.uri);</span>
      const mimeType = <span class="cstat-no" title="statement not covered" >determineMimeType(assetForAnalysis);</span>
      const results = <span class="cstat-no" title="statement not covered" >await getMultipleFoodsFromImage(base64, mimeType);</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >      if (results.length === 0) {</span>
<span class="cstat-no" title="statement not covered" >        Toast.show({type: 'info', text1: t('addEntryModal.noQuickAddResults'), position: 'bottom'});</span>
<span class="cstat-no" title="statement not covered" >        setModalMode("normal");</span>
      } else {
<span class="cstat-no" title="statement not covered" >        setQuickAddItems(results); <span class="cstat-no" title="statement not covered" ></span>setSelectedQuickAddIndices(new Set(results.map(<span class="fstat-no" title="function not covered" >(_</span>, i) =&gt; <span class="cstat-no" title="statement not covered" >i)</span>));</span>
<span class="cstat-no" title="statement not covered" >        results.forEach(<span class="fstat-no" title="function not covered" >it</span>em =&gt; <span class="cstat-no" title="statement not covered" >resolveAndSetIcon(item.foodName))</span>;</span>
      }
    } catch (error: any) {
<span class="cstat-no" title="statement not covered" >      if (error.message !== "User cancelled" &amp;&amp; error.message !== "Permission denied" &amp;&amp; !(error instanceof BackendError)) <span class="cstat-no" title="statement not covered" >Alert.alert(t('addEntryModal.alertQuickAddError'), error.message || t('addEntryModal.alertQuickAddErrorMessage'));</span></span>
<span class="cstat-no" title="statement not covered" >      setModalMode("normal");</span>
    } finally {
<span class="cstat-no" title="statement not covered" >      setQuickAddLoading(false);</span>
    }
  }, [isEditMode, resolveAndSetIcon, t]);
&nbsp;
  const handleQuickAddImage = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    Keyboard.dismiss(); <span class="cstat-no" title="statement not covered" ></span>if (isEditMode || isActionDisabled) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >    if (editingQuickAddItemIndex !== null) <span class="cstat-no" title="statement not covered" >return Alert.alert(t('addEntryModal.alertQuickAddFinishEditing'), t('addEntryModal.alertQuickAddFinishEditingSaveOrCancel'));</span></span>
<span class="cstat-no" title="statement not covered" >    Alert.alert(t('addEntryModal.alertQuickAddFromImageTitle'), t('addEntryModal.alertQuickAddFromImageMessage'), [</span>
        { text: t('addEntryModal.cancel'), style: "cancel" },
        { text: t('addEntryModal.camera'), onPress: <span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >pickImageAndAnalyze("camera") </span>},
        { text: t('addEntryModal.gallery'), onPress: <span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >pickImageAndAnalyze("gallery") </span>},
    ]);
  }, [isEditMode, editingQuickAddItemIndex, isActionDisabled, pickImageAndAnalyze, t]);
&nbsp;
  const handleQuickAddText = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    Keyboard.dismiss(); <span class="cstat-no" title="statement not covered" ></span>if (isEditMode || isActionDisabled) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >    setModalMode('quickAddText');</span>
<span class="cstat-no" title="statement not covered" >    setQuickAddItems([]); <span class="cstat-no" title="statement not covered" ></span>setSelectedQuickAddIndices(new Set()); <span class="cstat-no" title="statement not covered" ></span>setEditingQuickAddItemIndex(null);</span>
  }, [isEditMode, isActionDisabled]);
&nbsp;
  const handleAnalyzeText = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
    const textToAnalyze = <span class="cstat-no" title="statement not covered" >quickAddTextInput.trim();</span>
<span class="cstat-no" title="statement not covered" >    if (!textToAnalyze || quickAddLoading) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >    Keyboard.dismiss();</span>
<span class="cstat-no" title="statement not covered" >    setQuickAddLoading(true); <span class="cstat-no" title="statement not covered" ></span>setIsTextQuickAddLoading(true);</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
        const results = <span class="cstat-no" title="statement not covered" >await getMultipleFoodsFromText(textToAnalyze);</span>
<span class="cstat-no" title="statement not covered" >        if (results.length === 0) {</span>
<span class="cstat-no" title="statement not covered" >            Toast.show({ type: 'info', text1: t('addEntryModal.noQuickAddResults'), position: 'bottom' });</span>
        } else {
<span class="cstat-no" title="statement not covered" >            setQuickAddItems(results); <span class="cstat-no" title="statement not covered" ></span>setSelectedQuickAddIndices(new Set(results.map(<span class="fstat-no" title="function not covered" >(_</span>, i) =&gt; <span class="cstat-no" title="statement not covered" >i)</span>));</span>
<span class="cstat-no" title="statement not covered" >            results.forEach(<span class="fstat-no" title="function not covered" >it</span>em =&gt; { <span class="cstat-no" title="statement not covered" >if (item.foodName) { <span class="cstat-no" title="statement not covered" >resolveAndSetIcon(item.foodName); </span>} </span>});</span>
<span class="cstat-no" title="statement not covered" >            setModalMode("quickAddSelect");</span>
        }
    } catch (error) { /* Handled in util */ }
    finally { <span class="cstat-no" title="statement not covered" >setQuickAddLoading(false); <span class="cstat-no" title="statement not covered" ></span>setIsTextQuickAddLoading(false); </span>}
  };
&nbsp;
  const handleToggleQuickAddItem = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >(i</span>ndex: number) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (editingQuickAddItemIndex !== null || isActionDisabled) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >    setSelectedQuickAddIndices(<span class="fstat-no" title="function not covered" >pr</span>ev =&gt; { const newSet = <span class="cstat-no" title="statement not covered" >new Set(prev);</span> <span class="cstat-no" title="statement not covered" >newSet.has(index) ? newSet.delete(index) : newSet.add(index); <span class="cstat-no" title="statement not covered" ></span>return newSet; </span>});</span>
  }, [editingQuickAddItemIndex, isActionDisabled]);
&nbsp;
  const handleEditQuickAddItem = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >(i</span>ndex: number) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (editingQuickAddItemIndex !== null || isActionDisabled) <span class="cstat-no" title="statement not covered" >return;</span></span>
    const item = <span class="cstat-no" title="statement not covered" >quickAddItems[index];</span> <span class="cstat-no" title="statement not covered" >setEditingQuickAddItemIndex(index);</span>
<span class="cstat-no" title="statement not covered" >    setEditedFoodName(item.foodName); <span class="cstat-no" title="statement not covered" ></span>setEditedGrams(String(Math.round(item.estimatedWeightGrams)));</span>
  }, [editingQuickAddItemIndex, quickAddItems, isActionDisabled]);
&nbsp;
  const handleSaveQuickAddItemEdit = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (editingQuickAddItemIndex === null || isActionDisabled) <span class="cstat-no" title="statement not covered" >return;</span></span>
    const trimmedName = <span class="cstat-no" title="statement not covered" >editedFoodName.trim();</span> <span class="cstat-no" title="statement not covered" >if (!trimmedName) <span class="cstat-no" title="statement not covered" >return Alert.alert(t('addEntryModal.alertQuickAddInvalidName'), t('addEntryModal.alertQuickAddInvalidNameMessage'));</span></span>
    const numericGrams = <span class="cstat-no" title="statement not covered" >parseFloat(editedGrams);</span> <span class="cstat-no" title="statement not covered" >if (!isValidNumberInput(editedGrams) || numericGrams &lt;= 0) <span class="cstat-no" title="statement not covered" >return Alert.alert(t('addEntryModal.alertQuickAddInvalidGrams'), t('addEntryModal.alertQuickAddInvalidGramsMessage'));</span></span>
<span class="cstat-no" title="statement not covered" >    setQuickAddItems(<span class="fstat-no" title="function not covered" >pr</span>ev =&gt; <span class="cstat-no" title="statement not covered" >prev.map(<span class="fstat-no" title="function not covered" >(i</span>tem, i) =&gt; <span class="cstat-no" title="statement not covered" >i === editingQuickAddItemIndex ? { ...item, foodName: trimmedName, estimatedWeightGrams: Math.round(numericGrams) } : item)</span>)</span>;</span>
<span class="cstat-no" title="statement not covered" >    if (trimmedName) <span class="cstat-no" title="statement not covered" >resolveAndSetIcon(trimmedName);</span></span>
<span class="cstat-no" title="statement not covered" >    setEditingQuickAddItemIndex(null); <span class="cstat-no" title="statement not covered" ></span>setEditedFoodName(""); <span class="cstat-no" title="statement not covered" ></span>setEditedGrams(""); <span class="cstat-no" title="statement not covered" ></span>Keyboard.dismiss();</span>
  }, [editingQuickAddItemIndex, editedFoodName, editedGrams, isActionDisabled, resolveAndSetIcon, t]);
&nbsp;
  const handleCancelQuickAddItemEdit = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (isActionDisabled) <span class="cstat-no" title="statement not covered" >return; <span class="cstat-no" title="statement not covered" ></span></span>setEditingQuickAddItemIndex(null);</span>
<span class="cstat-no" title="statement not covered" >    setEditedFoodName(""); <span class="cstat-no" title="statement not covered" ></span>setEditedGrams(""); <span class="cstat-no" title="statement not covered" ></span>Keyboard.dismiss();</span>
  }, [isActionDisabled]);
&nbsp;
  const handleConfirmQuickAdd = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    Keyboard.dismiss(); <span class="cstat-no" title="statement not covered" ></span>if (isEditMode || isActionDisabled || editingQuickAddItemIndex !== null || selectedQuickAddIndices.size === 0) <span class="cstat-no" title="statement not covered" >return;</span></span>
    const entriesToAdd = <span class="cstat-no" title="statement not covered" >Array.from(selectedQuickAddIndices).map(<span class="fstat-no" title="function not covered" >in</span>dex =&gt; {</span>
        const item = <span class="cstat-no" title="statement not covered" >quickAddItems[index];</span>
        const existingFood = <span class="cstat-no" title="statement not covered" >foods.find(<span class="fstat-no" title="function not covered" >f </span>=&gt; <span class="cstat-no" title="statement not covered" >f.name.toLowerCase() === item.foodName.toLowerCase())</span>;</span>
        const foodToAdd: Food = <span class="cstat-no" title="statement not covered" >existingFood || { id: uuidv4(), name: item.foodName, calories: Math.round(item.calories_per_100g || 0), protein: Math.round(item.protein_per_100g || 0), carbs: Math.round(item.carbs_per_100g || 0), fat: Math.round(item.fat_per_100g || 0), createdAt: new Date().toISOString() };</span>
<span class="cstat-no" title="statement not covered" >        return { food: foodToAdd, grams: Math.max(1, Math.round(item.estimatedWeightGrams || 1)) };</span>
    });
<span class="cstat-no" title="statement not covered" >    if (entriesToAdd.length &gt; 0) {</span>
<span class="cstat-no" title="statement not covered" >        parentHandleAddMultipleEntries(entriesToAdd);</span>
        const servingsToAdd = <span class="cstat-no" title="statement not covered" >entriesToAdd.map(<span class="fstat-no" title="function not covered" >e </span>=&gt; (<span class="cstat-no" title="statement not covered" >{ foodId: e.food.id, grams: e.grams })</span>);</span>
<span class="cstat-no" title="statement not covered" >        addMultipleToRecentServings(servingsToAdd);</span>
    }
  }, [foods, quickAddItems, selectedQuickAddIndices, editingQuickAddItemIndex, parentHandleAddMultipleEntries, isEditMode, isActionDisabled, addMultipleToRecentServings]);
&nbsp;
  const handleQuickAddGramsChange = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >(t</span>ext: string) =&gt; <span class="cstat-no" title="statement not covered" >setEditedGrams(text.replace(/[^0-9]/g, "")),</span> []);</span>
&nbsp;
  const handleSaveQuickAddItemToLibrary = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync (item: EstimatedFoodItem, setSavingState: (isSaving: boolean) =&gt; void) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    setSavingState(true);</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
        const foodData: Omit&lt;Food, 'id' | 'createdAt'&gt; = <span class="cstat-no" title="statement not covered" >{ name: item.foodName, calories: Math.round(item.calories_per_100g), protein: Math.round(item.protein_per_100g), carbs: Math.round(item.carbs_per_100g), fat: Math.round(item.fat_per_100g) };</span>
        const existingFood = <span class="cstat-no" title="statement not covered" >foods.find(<span class="fstat-no" title="function not covered" >f </span>=&gt; <span class="cstat-no" title="statement not covered" >f.name.toLowerCase() === item.foodName.toLowerCase())</span>;</span>
<span class="cstat-no" title="statement not covered" >        if (existingFood) {</span>
<span class="cstat-no" title="statement not covered" >            Alert.alert(t('addEntryModal.alertOverwriteFoodTitle'), t('addEntryModal.alertOverwriteFoodMessage', { foodName: item.foodName }), [</span>
                { text: t('addEntryModal.cancel'), style: 'cancel', onPress: <span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >setSavingState(false) </span>},
                { text: t('addEntryModal.overwrite'), onPress: <span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {
                    const updatedFood = <span class="cstat-no" title="statement not covered" >await onCommitFoodToLibrary({ ...existingFood, ...foodData }, true);</span>
<span class="cstat-no" title="statement not covered" >                    if (updatedFood) { <span class="cstat-no" title="statement not covered" >Toast.show({ type: 'success', text1: t('addEntryModal.toastFoodUpdatedInLibrary', { foodName: updatedFood.name }), position: 'bottom' }); <span class="cstat-no" title="statement not covered" ></span>resolveAndSetIcon(updatedFood.name); </span>}</span>
<span class="cstat-no" title="statement not covered" >                    setSavingState(false);</span>
                }},
            ]);
        } else {
            const newFood = <span class="cstat-no" title="statement not covered" >await onCommitFoodToLibrary(foodData, false);</span>
<span class="cstat-no" title="statement not covered" >            if (newFood) { <span class="cstat-no" title="statement not covered" >Toast.show({ type: 'success', text1: t('addEntryModal.toastFoodSavedToLibrary', { foodName: newFood.name }), position: 'bottom' }); <span class="cstat-no" title="statement not covered" ></span>resolveAndSetIcon(newFood.name); </span>}</span>
<span class="cstat-no" title="statement not covered" >            setSavingState(false);</span>
        }
    } catch (error) { <span class="cstat-no" title="statement not covered" >Toast.show({ type: 'error', text1: t('addEntryModal.toastErrorSavingToLibrary'), position: 'bottom' }); <span class="cstat-no" title="statement not covered" ></span>setSavingState(false); </span>}
  }, [foods, onCommitFoodToLibrary, resolveAndSetIcon, t]);
&nbsp;
  const modalTitle = <span class="cstat-no" title="statement not covered" >modalMode === "quickAddSelect" ? (editingQuickAddItemIndex !== null ? t('addEntryModal.titleQuickAddEdit') : quickAddLoading ? t('addEntryModal.titleQuickAddAnalyzing') : t('addEntryModal.titleQuickAddSelect'))</span>
                    : modalMode === "quickAddText" ? t('addEntryModal.titleQuickAddFromText')
                    : isEditMode ? t('addEntryModal.titleEdit') : t('addEntryModal.titleAdd');
&nbsp;
  const isSingleAddButtonDisabled = <span class="cstat-no" title="statement not covered" >modalMode !== "normal" || !internalSelectedFood || !isValidNumberInput(internalGrams) || parseFloat(internalGrams) &lt;= 0 || isActionDisabled;</span>
  const isMultiAddButtonDisabled = <span class="cstat-no" title="statement not covered" >modalMode !== "normal" || selectedMultipleFoods.size === 0 || !!internalSelectedFood || isEditMode || isActionDisabled;</span>
  const isAiButtonDisabled = <span class="cstat-no" title="statement not covered" >modalMode !== "normal" || !internalSelectedFood || !autoInput.trim() || isActionDisabled || isAiLoading;</span>
  const isQuickAddConfirmDisabled = <span class="cstat-no" title="statement not covered" >isEditMode || modalMode !== "quickAddSelect" || selectedQuickAddIndices.size === 0 || editingQuickAddItemIndex !== null || isActionDisabled || quickAddLoading;</span>
  const isQuickAddImageButtonDisabled = <span class="cstat-no" title="statement not covered" >isEditMode || isActionDisabled || quickAddLoading;</span>
  const isQuickAddTextButtonDisabled = <span class="cstat-no" title="statement not covered" >isEditMode || isActionDisabled || quickAddLoading;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >  return (</span>
    &lt;Overlay isVisible={isVisible} onBackdropPress={!isActionDisabled ? toggleOverlay : undefined} animationType="slide" overlayStyle={styles.overlayContainer}&gt;
      &lt;KeyboardAvoidingView behavior={Platform.OS === "ios" ? "padding" : "height"} style={styles.keyboardAvoidingView} keyboardVerticalOffset={KEYBOARD_VERTICAL_OFFSET}&gt;
        &lt;View style={[styles.overlayStyle, { backgroundColor: theme.colors.background }]}&gt;
          &lt;ModalHeader title={modalTitle} isEditMode={isEditMode} modalMode={modalMode} quickAddLoading={quickAddLoading} textQuickAddLoading={isTextQuickAddLoading}
            selectedFood={internalSelectedFood} selectedMultipleFoodsSize={selectedMultipleFoods.size} selectedQuickAddIndicesSize={selectedQuickAddIndices.size}
            editingQuickAddItemIndex={editingQuickAddItemIndex} isActionDisabled={isActionDisabled} isSingleAddButtonDisabled={isSingleAddButtonDisabled}
            isMultiAddButtonDisabled={isMultiAddButtonDisabled} isQuickAddConfirmDisabled={isQuickAddConfirmDisabled} isQuickAddImageButtonDisabled={isQuickAddImageButtonDisabled}
            isQuickAddTextButtonDisabled={isQuickAddTextButtonDisabled} isAiLoading={isAiLoading} toggleOverlay={toggleOverlay} onAddOrUpdateSingleEntry={handleAddOrUpdateSingleEntry}
            onConfirmAddMultipleSelected={handleConfirmAddMultipleSelected} onConfirmQuickAdd={handleConfirmQuickAdd} onQuickAddImage={handleQuickAddImage} onQuickAddText={handleQuickAddText}
            onBackFromQuickAdd={<span class="fstat-no" title="function not covered" >()</span> =&gt; { <span class="cstat-no" title="statement not covered" >setModalMode("normal"); <span class="cstat-no" title="statement not covered" ></span>setQuickAddTextInput(""); </span>}}
          /&gt;
          {modalMode === 'normal' &amp;&amp; &lt;View style={styles.normalModeContentContainer}&gt;&lt;FoodSelectionList search={internalSearch} updateSearch={setInternalSearch} foods={foods} recentFoods={recentFoods} selectedFood={internalSelectedFood} handleSelectFood={setInternalSelectedFood} setGrams={setInternalGrams} setSelectedMultipleFoods={setSelectedMultipleFoods} selectedMultipleFoods={selectedMultipleFoods} handleToggleMultipleFoodSelection={handleToggleMultipleFoodSelection} foodIcons={foodIcons} onAddNewFoodRequest={onAddNewFoodRequest} isActionDisabled={isActionDisabled} isEditMode={isEditMode} recentServings={recentServings} modalMode={modalMode} /&gt;{internalSelectedFood &amp;&amp; &lt;AmountInputSection selectedFood={internalSelectedFood} grams={internalGrams} setGrams={setInternalGrams} unitMode={unitMode} setUnitMode={setUnitMode} autoInput={autoInput} setAutoInput={setAutoInput} handleEstimateGrams={handleEstimateGrams} isAiLoading={isAiLoading} isAiButtonDisabled={isAiButtonDisabled} isEditMode={isEditMode} servingSizeSuggestions={servingSizeSuggestions} isActionDisabled={isActionDisabled} foodGradeResult={foodGradeResult} /&gt;}&lt;/View&gt;}
          {modalMode === 'quickAddText' &amp;&amp; &lt;View style={styles.quickAddTextView}&gt;&lt;Input placeholder={t('addEntryModal.textQuickAdd.placeholder')} multiline numberOfLines={6} value={quickAddTextInput} onChangeText={setQuickAddTextInput} inputStyle={styles.quickAddTextArea} inputContainerStyle={styles.quickAddTextAreaContainer} containerStyle={{ paddingHorizontal: 0 }} autoFocus /&gt;&lt;Button title={t('addEntryModal.textQuickAdd.analyzeButton')} onPress={handleAnalyzeText} loading={isTextQuickAddLoading} disabled={isTextQuickAddLoading || !quickAddTextInput.trim()} icon={{ name: 'brain', type: 'material-community', color: theme.colors.white }} buttonStyle={styles.analyzeButton} /&gt;&lt;/View&gt;}
          {modalMode === 'quickAddSelect' &amp;&amp; &lt;QuickAddList items={quickAddItems} selectedIndices={selectedQuickAddIndices} editingIndex={editingQuickAddItemIndex} editedName={editedFoodName} editedGrams={editedGrams} onToggleItem={handleToggleQuickAddItem} onEditItem={handleEditQuickAddItem} onSaveEdit={handleSaveQuickAddItemEdit} onCancelEdit={handleCancelQuickAddItemEdit} onNameChange={setEditedFoodName} onGramsChange={handleQuickAddGramsChange} isLoading={quickAddLoading} foodIcons={foodIcons} style={styles.quickAddListStyle} onSaveItemToLibrary={handleSaveQuickAddItemToLibrary} foods={foods} /&gt;}
          &lt;View style={{ height: Platform.OS === 'ios' ? 20 : 40 }} /&gt;
        &lt;/View&gt;
      &lt;/KeyboardAvoidingView&gt;
    &lt;/Overlay&gt;
  );
};
&nbsp;
const useStyles = <span class="cstat-no" title="statement not covered" >makeStyles(<span class="fstat-no" title="function not covered" >(t</span>heme) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
    overlayContainer: { backgroundColor: "transparent", width: "90%", maxWidth: 500, padding: 0, borderRadius: 15, shadowColor: "#000", shadowOffset: { width: 0, height: 3 }, shadowOpacity: 0.2, shadowRadius: 5, elevation: 6, overflow: "hidden", maxHeight: "90%", },
    overlayStyle: { width: "100%", height: "100%", borderRadius: 15, padding: 15, paddingBottom: 0, backgroundColor: theme.colors.background, flex: 1 },
    keyboardAvoidingView: { width: "100%", height: "100%" },
    normalModeContentContainer: { flex: 1, justifyContent: 'flex-start' },
    quickAddListStyle: { flex: 1 },
    quickAddTextView: { flex: 1, justifyContent: 'flex-start', paddingTop: 10 },
    quickAddTextAreaContainer: { height: 150, padding: 8, borderWidth: 1, borderColor: theme.colors.divider, borderRadius: 8, },
    quickAddTextArea: { textAlignVertical: 'top', color: theme.colors.text, fontSize: 16, height: '100%' },
    analyzeButton: { marginTop: 15, borderRadius: 8, backgroundColor: theme.colors.primary },
}));
&nbsp;
export default AddEntryModal;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    
---------- END AddEntryModal.tsx.html ----------


---------- AmountInputSection.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/AddEntryModal/AmountInputSection.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> / <a href="index.html">components/AddEntryModal</a> AmountInputSection.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/25</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/41</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/10</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/22</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a>
<a name='L128'></a><a href='#L128'>128</a>
<a name='L129'></a><a href='#L129'>129</a>
<a name='L130'></a><a href='#L130'>130</a>
<a name='L131'></a><a href='#L131'>131</a>
<a name='L132'></a><a href='#L132'>132</a>
<a name='L133'></a><a href='#L133'>133</a>
<a name='L134'></a><a href='#L134'>134</a>
<a name='L135'></a><a href='#L135'>135</a>
<a name='L136'></a><a href='#L136'>136</a>
<a name='L137'></a><a href='#L137'>137</a>
<a name='L138'></a><a href='#L138'>138</a>
<a name='L139'></a><a href='#L139'>139</a>
<a name='L140'></a><a href='#L140'>140</a>
<a name='L141'></a><a href='#L141'>141</a>
<a name='L142'></a><a href='#L142'>142</a>
<a name='L143'></a><a href='#L143'>143</a>
<a name='L144'></a><a href='#L144'>144</a>
<a name='L145'></a><a href='#L145'>145</a>
<a name='L146'></a><a href='#L146'>146</a>
<a name='L147'></a><a href='#L147'>147</a>
<a name='L148'></a><a href='#L148'>148</a>
<a name='L149'></a><a href='#L149'>149</a>
<a name='L150'></a><a href='#L150'>150</a>
<a name='L151'></a><a href='#L151'>151</a>
<a name='L152'></a><a href='#L152'>152</a>
<a name='L153'></a><a href='#L153'>153</a>
<a name='L154'></a><a href='#L154'>154</a>
<a name='L155'></a><a href='#L155'>155</a>
<a name='L156'></a><a href='#L156'>156</a>
<a name='L157'></a><a href='#L157'>157</a>
<a name='L158'></a><a href='#L158'>158</a>
<a name='L159'></a><a href='#L159'>159</a>
<a name='L160'></a><a href='#L160'>160</a>
<a name='L161'></a><a href='#L161'>161</a>
<a name='L162'></a><a href='#L162'>162</a>
<a name='L163'></a><a href='#L163'>163</a>
<a name='L164'></a><a href='#L164'>164</a>
<a name='L165'></a><a href='#L165'>165</a>
<a name='L166'></a><a href='#L166'>166</a>
<a name='L167'></a><a href='#L167'>167</a>
<a name='L168'></a><a href='#L168'>168</a>
<a name='L169'></a><a href='#L169'>169</a>
<a name='L170'></a><a href='#L170'>170</a>
<a name='L171'></a><a href='#L171'>171</a>
<a name='L172'></a><a href='#L172'>172</a>
<a name='L173'></a><a href='#L173'>173</a>
<a name='L174'></a><a href='#L174'>174</a>
<a name='L175'></a><a href='#L175'>175</a>
<a name='L176'></a><a href='#L176'>176</a>
<a name='L177'></a><a href='#L177'>177</a>
<a name='L178'></a><a href='#L178'>178</a>
<a name='L179'></a><a href='#L179'>179</a>
<a name='L180'></a><a href='#L180'>180</a>
<a name='L181'></a><a href='#L181'>181</a>
<a name='L182'></a><a href='#L182'>182</a>
<a name='L183'></a><a href='#L183'>183</a>
<a name='L184'></a><a href='#L184'>184</a>
<a name='L185'></a><a href='#L185'>185</a>
<a name='L186'></a><a href='#L186'>186</a>
<a name='L187'></a><a href='#L187'>187</a>
<a name='L188'></a><a href='#L188'>188</a>
<a name='L189'></a><a href='#L189'>189</a>
<a name='L190'></a><a href='#L190'>190</a>
<a name='L191'></a><a href='#L191'>191</a>
<a name='L192'></a><a href='#L192'>192</a>
<a name='L193'></a><a href='#L193'>193</a>
<a name='L194'></a><a href='#L194'>194</a>
<a name='L195'></a><a href='#L195'>195</a>
<a name='L196'></a><a href='#L196'>196</a>
<a name='L197'></a><a href='#L197'>197</a>
<a name='L198'></a><a href='#L198'>198</a>
<a name='L199'></a><a href='#L199'>199</a>
<a name='L200'></a><a href='#L200'>200</a>
<a name='L201'></a><a href='#L201'>201</a>
<a name='L202'></a><a href='#L202'>202</a>
<a name='L203'></a><a href='#L203'>203</a>
<a name='L204'></a><a href='#L204'>204</a>
<a name='L205'></a><a href='#L205'>205</a>
<a name='L206'></a><a href='#L206'>206</a>
<a name='L207'></a><a href='#L207'>207</a>
<a name='L208'></a><a href='#L208'>208</a>
<a name='L209'></a><a href='#L209'>209</a>
<a name='L210'></a><a href='#L210'>210</a>
<a name='L211'></a><a href='#L211'>211</a>
<a name='L212'></a><a href='#L212'>212</a>
<a name='L213'></a><a href='#L213'>213</a>
<a name='L214'></a><a href='#L214'>214</a>
<a name='L215'></a><a href='#L215'>215</a>
<a name='L216'></a><a href='#L216'>216</a>
<a name='L217'></a><a href='#L217'>217</a>
<a name='L218'></a><a href='#L218'>218</a>
<a name='L219'></a><a href='#L219'>219</a>
<a name='L220'></a><a href='#L220'>220</a>
<a name='L221'></a><a href='#L221'>221</a>
<a name='L222'></a><a href='#L222'>222</a>
<a name='L223'></a><a href='#L223'>223</a>
<a name='L224'></a><a href='#L224'>224</a>
<a name='L225'></a><a href='#L225'>225</a>
<a name='L226'></a><a href='#L226'>226</a>
<a name='L227'></a><a href='#L227'>227</a>
<a name='L228'></a><a href='#L228'>228</a>
<a name='L229'></a><a href='#L229'>229</a>
<a name='L230'></a><a href='#L230'>230</a>
<a name='L231'></a><a href='#L231'>231</a>
<a name='L232'></a><a href='#L232'>232</a>
<a name='L233'></a><a href='#L233'>233</a>
<a name='L234'></a><a href='#L234'>234</a>
<a name='L235'></a><a href='#L235'>235</a>
<a name='L236'></a><a href='#L236'>236</a>
<a name='L237'></a><a href='#L237'>237</a>
<a name='L238'></a><a href='#L238'>238</a>
<a name='L239'></a><a href='#L239'>239</a>
<a name='L240'></a><a href='#L240'>240</a>
<a name='L241'></a><a href='#L241'>241</a>
<a name='L242'></a><a href='#L242'>242</a>
<a name='L243'></a><a href='#L243'>243</a>
<a name='L244'></a><a href='#L244'>244</a>
<a name='L245'></a><a href='#L245'>245</a>
<a name='L246'></a><a href='#L246'>246</a>
<a name='L247'></a><a href='#L247'>247</a>
<a name='L248'></a><a href='#L248'>248</a>
<a name='L249'></a><a href='#L249'>249</a>
<a name='L250'></a><a href='#L250'>250</a>
<a name='L251'></a><a href='#L251'>251</a>
<a name='L252'></a><a href='#L252'>252</a>
<a name='L253'></a><a href='#L253'>253</a>
<a name='L254'></a><a href='#L254'>254</a>
<a name='L255'></a><a href='#L255'>255</a>
<a name='L256'></a><a href='#L256'>256</a>
<a name='L257'></a><a href='#L257'>257</a>
<a name='L258'></a><a href='#L258'>258</a>
<a name='L259'></a><a href='#L259'>259</a>
<a name='L260'></a><a href='#L260'>260</a>
<a name='L261'></a><a href='#L261'>261</a>
<a name='L262'></a><a href='#L262'>262</a>
<a name='L263'></a><a href='#L263'>263</a>
<a name='L264'></a><a href='#L264'>264</a>
<a name='L265'></a><a href='#L265'>265</a>
<a name='L266'></a><a href='#L266'>266</a>
<a name='L267'></a><a href='#L267'>267</a>
<a name='L268'></a><a href='#L268'>268</a>
<a name='L269'></a><a href='#L269'>269</a>
<a name='L270'></a><a href='#L270'>270</a>
<a name='L271'></a><a href='#L271'>271</a>
<a name='L272'></a><a href='#L272'>272</a>
<a name='L273'></a><a href='#L273'>273</a>
<a name='L274'></a><a href='#L274'>274</a>
<a name='L275'></a><a href='#L275'>275</a>
<a name='L276'></a><a href='#L276'>276</a>
<a name='L277'></a><a href='#L277'>277</a>
<a name='L278'></a><a href='#L278'>278</a>
<a name='L279'></a><a href='#L279'>279</a>
<a name='L280'></a><a href='#L280'>280</a>
<a name='L281'></a><a href='#L281'>281</a>
<a name='L282'></a><a href='#L282'>282</a>
<a name='L283'></a><a href='#L283'>283</a>
<a name='L284'></a><a href='#L284'>284</a>
<a name='L285'></a><a href='#L285'>285</a>
<a name='L286'></a><a href='#L286'>286</a>
<a name='L287'></a><a href='#L287'>287</a>
<a name='L288'></a><a href='#L288'>288</a>
<a name='L289'></a><a href='#L289'>289</a>
<a name='L290'></a><a href='#L290'>290</a>
<a name='L291'></a><a href='#L291'>291</a>
<a name='L292'></a><a href='#L292'>292</a>
<a name='L293'></a><a href='#L293'>293</a>
<a name='L294'></a><a href='#L294'>294</a>
<a name='L295'></a><a href='#L295'>295</a>
<a name='L296'></a><a href='#L296'>296</a>
<a name='L297'></a><a href='#L297'>297</a>
<a name='L298'></a><a href='#L298'>298</a>
<a name='L299'></a><a href='#L299'>299</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/components/AddEntryModal/AmountInputSection.tsx
import React, { useRef, useEffect } from 'react';
import { View, ScrollView, TouchableOpacity, Keyboard } from 'react-native';
import { Text, Input, Icon, ButtonGroup, Button, useTheme, makeStyles } from '@rneui/themed';
import { Food } from '../../types/food';
import { FoodGradeResult } from '../../utils/gradingUtils';
import { isValidNumberInput } from '../../utils/validationUtils';
import { t } from '../../localization/i18n';
&nbsp;
type UnitMode = "grams" | "auto";
&nbsp;
interface AmountInputSectionProps {
    selectedFood: Food;
    grams: string;
    setGrams: (grams: string) =&gt; void;
    unitMode: UnitMode;
    setUnitMode: (mode: UnitMode) =&gt; void;
    autoInput: string;
    setAutoInput: (input: string) =&gt; void;
    handleEstimateGrams: () =&gt; void;
    isAiLoading: boolean;
    isAiButtonDisabled: boolean;
    isEditMode: boolean;
    servingSizeSuggestions: { label: string; value: string }[];
    isActionDisabled: boolean;
    foodGradeResult: FoodGradeResult | null;
}
&nbsp;
const AmountInputSection: React.FC&lt;AmountInputSectionProps&gt; = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span></span>
    selectedFood,
    grams,
    setGrams,
    unitMode,
    setUnitMode,
    autoInput,
    setAutoInput,
    handleEstimateGrams,
    isAiLoading,
    isAiButtonDisabled,
    isEditMode,
    servingSizeSuggestions,
    isActionDisabled,
    foodGradeResult,
}) =&gt; {
    const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
    const styles = <span class="cstat-no" title="statement not covered" >useStyles();</span>
    const gramsInputRef = <span class="cstat-no" title="statement not covered" >useRef&lt;any&gt;(null);</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    useEffect(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (isEditMode &amp;&amp; unitMode === "grams") {</span>
            const timer = <span class="cstat-no" title="statement not covered" >setTimeout(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >                gramsInputRef.current?.focus();</span>
            }, 150);
<span class="cstat-no" title="statement not covered" >            return <span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >clearTimeout(timer);</span></span>
        }
    }, [isEditMode, unitMode]);
&nbsp;
&nbsp;
    const handleGramsChange = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(t</span>ext: string) =&gt; {</span>
        const cleanedText = <span class="cstat-no" title="statement not covered" >text.replace(/[^0-9.]/g, "").replace(/(\..*?)\./g, "$1");</span>
<span class="cstat-no" title="statement not covered" >        setGrams(cleanedText);</span>
    };
&nbsp;
<span class="cstat-no" title="statement not covered" >    return (</span>
        &lt;View style={styles.amountSection}&gt;
            &lt;View style={styles.unitSelectorContainer}&gt;
                &lt;View style={styles.amountLabelContainer}&gt;
                    &lt;Text style={styles.inputLabel}&gt;{t('addEntryModal.amount')}&lt;/Text&gt;
                    {foodGradeResult &amp;&amp; (
                        &lt;Text style={[styles.gradePill, { backgroundColor: foodGradeResult.color }]}&gt;
                            {foodGradeResult.letter}
                        &lt;/Text&gt;
                    )}
                &lt;/View&gt;
                {!isEditMode &amp;&amp; (
                    &lt;ButtonGroup
                        buttons={[t('addEntryModal.grams'), t('addEntryModal.autoAi')]}
                        selectedIndex={unitMode === "grams" ? 0 : 1}
                        onPress={<span class="fstat-no" title="function not covered" >(i</span>ndex) =&gt; {
<span class="cstat-no" title="statement not covered" >                            if (!isActionDisabled) {</span>
<span class="cstat-no" title="statement not covered" >                                setUnitMode(index === 0 ? "grams" : "auto");</span>
<span class="cstat-no" title="statement not covered" >                                Keyboard.dismiss();</span>
                            }
                        }}
                        containerStyle={styles.buttonGroupContainer}
                        selectedButtonStyle={{ backgroundColor: theme.colors.primary }}
                        textStyle={styles.buttonGroupText}
                        selectedTextStyle={{ color: theme.colors.white }}
                        disabled={isActionDisabled ? [0, 1] : []}
                        disabledStyle={styles.disabledButtonGroup}
                        disabledTextStyle={{ color: theme.colors.grey3 }}
                    /&gt;
                )}
            &lt;/View&gt;
            {unitMode === "grams" &amp;&amp; (
                &lt;&gt;
                    {!isEditMode &amp;&amp; servingSizeSuggestions.length &gt; 0 &amp;&amp; (
                        &lt;View style={styles.servingSizeRow}&gt;
                            &lt;Text style={styles.servingSizeLabel}&gt;{t('addEntryModal.quickAddServing')}&lt;/Text&gt;
                            &lt;ScrollView horizontal showsHorizontalScrollIndicator={false} contentContainerStyle={styles.servingSizeContainer} keyboardShouldPersistTaps="handled"&gt;
                                {servingSizeSuggestions.map(<span class="fstat-no" title="function not covered" >(s</span>uggestion) =&gt; (
<span class="cstat-no" title="statement not covered" >                                    &lt;TouchableOpacity</span>
                                        key={suggestion.label}
                                        style={[styles.servingSizeButton, isActionDisabled &amp;&amp; styles.disabledOverlay]}
                                        onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; {
<span class="cstat-no" title="statement not covered" >                                            if (!isActionDisabled) {</span>
<span class="cstat-no" title="statement not covered" >                                                setGrams(suggestion.value);</span>
<span class="cstat-no" title="statement not covered" >                                                Keyboard.dismiss();</span>
                                            }
                                        }}
                                        disabled={isActionDisabled}
                                    &gt;
                                        &lt;Text style={styles.servingSizeButtonTitle}&gt;{suggestion.label}&lt;/Text&gt;
                                    &lt;/TouchableOpacity&gt;
                                ))}
                            &lt;/ScrollView&gt;
                        &lt;/View&gt;
                    )}
                    &lt;Input
                        ref={gramsInputRef}
                        placeholder={isEditMode ? t('addEntryModal.gramsPlaceholderEdit') : t('addEntryModal.gramsPlaceholder')}
                        keyboardType="numeric"
                        value={grams}
                        onChangeText={handleGramsChange}
                        inputStyle={styles.gramInputStyle}
                        inputContainerStyle={styles.gramInputContainerStyle}
                        errorMessage={!isValidNumberInput(grams) &amp;&amp; grams !== "" &amp;&amp; grams !== "." ? t('addEntryModal.gramsError') : ""}
                        errorStyle={{ color: theme.colors.error }}
                        rightIcon={&lt;Text style={styles.unitText}&gt;g&lt;/Text&gt;}
                        containerStyle={{ paddingHorizontal: 0 }}
                        key={`grams-input-${selectedFood.id}-${isEditMode}`}
                        disabled={isActionDisabled}
                        autoFocus={!isEditMode}
                        selectTextOnFocus={true}
                    /&gt;
                &lt;/&gt;
            )}
            {unitMode === "auto" &amp;&amp; !isEditMode &amp;&amp; (
                &lt;View style={styles.autoInputRow}&gt;
                    &lt;Input
                        placeholder={t('addEntryModal.autoPlaceholder')}
                        value={autoInput}
                        onChangeText={setAutoInput}
                        inputStyle={[styles.gramInputStyle, styles.autoInputField]}
                        inputContainerStyle={styles.gramInputContainerStyle}
                        containerStyle={styles.autoInputContainer}
                        multiline={false}
                        onSubmitEditing={handleEstimateGrams}
                        key={`auto-input-${selectedFood.id}`}
                        disabled={isActionDisabled}
                        autoFocus
                    /&gt;
                    &lt;Button
                        onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; { <span class="cstat-no" title="statement not covered" >Keyboard.dismiss(); <span class="cstat-no" title="statement not covered" ></span>handleEstimateGrams(); </span>}}
                        disabled={isAiButtonDisabled || isActionDisabled}
                        loading={isAiLoading}
                        buttonStyle={styles.aiButton}
                        icon={isAiLoading ? undefined : (
                            &lt;Icon name="calculator-variant" type="material-community" size={20} color={theme.colors.white} /&gt;
                        )}
                        title={isAiLoading ? "" : ""}
                    /&gt;
                &lt;/View&gt;
            )}
        &lt;/View&gt;
    );
};
&nbsp;
const useStyles = <span class="cstat-no" title="statement not covered" >makeStyles(<span class="fstat-no" title="function not covered" >(t</span>heme) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
    amountSection: {
        marginTop: 10,
        borderTopWidth: 1,
        borderTopColor: theme.colors.divider,
        paddingTop: 15,
        paddingHorizontal: 0,
    },
    unitSelectorContainer: {
        flexDirection: "row",
        alignItems: "center",
        justifyContent: "space-between",
        marginBottom: 15,
        paddingHorizontal: 5,
    },
    amountLabelContainer: {
        flexDirection: 'row',
        alignItems: 'center',
    },
    gradePill: {
        fontSize: 11,
        fontWeight: 'bold',
        color: theme.colors.white,
        paddingHorizontal: 5,
        paddingVertical: 1.5,
        borderRadius: 7,
        marginLeft: 8,
        minWidth: 18,
        textAlign: 'center',
        overflow: 'hidden',
    },
    inputLabel: {
        fontWeight: "600",
        color: theme.colors.secondary,
        fontSize: 14,
        marginRight: 0,
        textTransform: "uppercase",
        textAlign: 'left',
    },
    buttonGroupContainer: {
        flex: 0.7,
        maxWidth: 220,
        height: 35,
        borderRadius: 8,
        borderColor: theme.colors.primary,
        borderWidth: 1,
        backgroundColor: theme.colors.background,
    },
    buttonGroupText: {
        fontSize: 14,
        color: theme.colors.text,
    },
    disabledButtonGroup: {
        backgroundColor: theme.colors.grey5,
    },
    servingSizeRow: {
        flexDirection: "row",
        alignItems: "center",
        marginBottom: 12,
        paddingHorizontal: 5,
    },
    servingSizeLabel: {
        color: theme.colors.secondary,
        fontSize: 13,
        marginRight: 8,
        textAlign: 'left',
    },
    servingSizeContainer: {
        flexGrow: 0,
    },
    servingSizeButton: {
        backgroundColor: theme.colors.primaryLight,
        borderRadius: 15,
        marginRight: 8,
        paddingHorizontal: 12,
        paddingVertical: 5,
        justifyContent: "center",
        alignItems: "center",
        height: 30,
    },
    servingSizeButtonTitle: {
        color: theme.colors.primary,
        fontSize: 13,
        fontWeight: '500',
    },
    gramInputStyle: {
        color: theme.colors.text,
        fontSize: 16,
        paddingVertical: 8,
        height: 40,
        textAlign: 'left',
    },
    gramInputContainerStyle: {
        borderBottomColor: theme.colors.grey3,
        paddingHorizontal: 5,
    },
    unitText: {
        color: theme.colors.secondary,
        fontSize: 15,
        fontWeight: "500",
        paddingRight: 5,
    },
    autoInputRow: {
        flexDirection: "row",
        alignItems: "center",
        paddingHorizontal: 0,
    },
    autoInputContainer: {
        flex: 1,
        paddingHorizontal: 0,
        marginRight: 10,
    },
    autoInputField: {
        height: 40,
    },
    aiButton: {
        backgroundColor: theme.colors.secondary,
        borderRadius: 20,
        width: 40,
        height: 40,
        padding: 0,
        justifyContent: "center",
        alignItems: "center",
        minWidth: 40,
    },
    disabledOverlay: {
        opacity: 0.6,
    },
}));
&nbsp;
export default AmountInputSection;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    
---------- END AmountInputSection.tsx.html ----------


---------- FoodSelectionList.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/AddEntryModal/FoodSelectionList.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> / <a href="index.html">components/AddEntryModal</a> FoodSelectionList.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/100</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/91</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/25</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/91</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a>
<a name='L128'></a><a href='#L128'>128</a>
<a name='L129'></a><a href='#L129'>129</a>
<a name='L130'></a><a href='#L130'>130</a>
<a name='L131'></a><a href='#L131'>131</a>
<a name='L132'></a><a href='#L132'>132</a>
<a name='L133'></a><a href='#L133'>133</a>
<a name='L134'></a><a href='#L134'>134</a>
<a name='L135'></a><a href='#L135'>135</a>
<a name='L136'></a><a href='#L136'>136</a>
<a name='L137'></a><a href='#L137'>137</a>
<a name='L138'></a><a href='#L138'>138</a>
<a name='L139'></a><a href='#L139'>139</a>
<a name='L140'></a><a href='#L140'>140</a>
<a name='L141'></a><a href='#L141'>141</a>
<a name='L142'></a><a href='#L142'>142</a>
<a name='L143'></a><a href='#L143'>143</a>
<a name='L144'></a><a href='#L144'>144</a>
<a name='L145'></a><a href='#L145'>145</a>
<a name='L146'></a><a href='#L146'>146</a>
<a name='L147'></a><a href='#L147'>147</a>
<a name='L148'></a><a href='#L148'>148</a>
<a name='L149'></a><a href='#L149'>149</a>
<a name='L150'></a><a href='#L150'>150</a>
<a name='L151'></a><a href='#L151'>151</a>
<a name='L152'></a><a href='#L152'>152</a>
<a name='L153'></a><a href='#L153'>153</a>
<a name='L154'></a><a href='#L154'>154</a>
<a name='L155'></a><a href='#L155'>155</a>
<a name='L156'></a><a href='#L156'>156</a>
<a name='L157'></a><a href='#L157'>157</a>
<a name='L158'></a><a href='#L158'>158</a>
<a name='L159'></a><a href='#L159'>159</a>
<a name='L160'></a><a href='#L160'>160</a>
<a name='L161'></a><a href='#L161'>161</a>
<a name='L162'></a><a href='#L162'>162</a>
<a name='L163'></a><a href='#L163'>163</a>
<a name='L164'></a><a href='#L164'>164</a>
<a name='L165'></a><a href='#L165'>165</a>
<a name='L166'></a><a href='#L166'>166</a>
<a name='L167'></a><a href='#L167'>167</a>
<a name='L168'></a><a href='#L168'>168</a>
<a name='L169'></a><a href='#L169'>169</a>
<a name='L170'></a><a href='#L170'>170</a>
<a name='L171'></a><a href='#L171'>171</a>
<a name='L172'></a><a href='#L172'>172</a>
<a name='L173'></a><a href='#L173'>173</a>
<a name='L174'></a><a href='#L174'>174</a>
<a name='L175'></a><a href='#L175'>175</a>
<a name='L176'></a><a href='#L176'>176</a>
<a name='L177'></a><a href='#L177'>177</a>
<a name='L178'></a><a href='#L178'>178</a>
<a name='L179'></a><a href='#L179'>179</a>
<a name='L180'></a><a href='#L180'>180</a>
<a name='L181'></a><a href='#L181'>181</a>
<a name='L182'></a><a href='#L182'>182</a>
<a name='L183'></a><a href='#L183'>183</a>
<a name='L184'></a><a href='#L184'>184</a>
<a name='L185'></a><a href='#L185'>185</a>
<a name='L186'></a><a href='#L186'>186</a>
<a name='L187'></a><a href='#L187'>187</a>
<a name='L188'></a><a href='#L188'>188</a>
<a name='L189'></a><a href='#L189'>189</a>
<a name='L190'></a><a href='#L190'>190</a>
<a name='L191'></a><a href='#L191'>191</a>
<a name='L192'></a><a href='#L192'>192</a>
<a name='L193'></a><a href='#L193'>193</a>
<a name='L194'></a><a href='#L194'>194</a>
<a name='L195'></a><a href='#L195'>195</a>
<a name='L196'></a><a href='#L196'>196</a>
<a name='L197'></a><a href='#L197'>197</a>
<a name='L198'></a><a href='#L198'>198</a>
<a name='L199'></a><a href='#L199'>199</a>
<a name='L200'></a><a href='#L200'>200</a>
<a name='L201'></a><a href='#L201'>201</a>
<a name='L202'></a><a href='#L202'>202</a>
<a name='L203'></a><a href='#L203'>203</a>
<a name='L204'></a><a href='#L204'>204</a>
<a name='L205'></a><a href='#L205'>205</a>
<a name='L206'></a><a href='#L206'>206</a>
<a name='L207'></a><a href='#L207'>207</a>
<a name='L208'></a><a href='#L208'>208</a>
<a name='L209'></a><a href='#L209'>209</a>
<a name='L210'></a><a href='#L210'>210</a>
<a name='L211'></a><a href='#L211'>211</a>
<a name='L212'></a><a href='#L212'>212</a>
<a name='L213'></a><a href='#L213'>213</a>
<a name='L214'></a><a href='#L214'>214</a>
<a name='L215'></a><a href='#L215'>215</a>
<a name='L216'></a><a href='#L216'>216</a>
<a name='L217'></a><a href='#L217'>217</a>
<a name='L218'></a><a href='#L218'>218</a>
<a name='L219'></a><a href='#L219'>219</a>
<a name='L220'></a><a href='#L220'>220</a>
<a name='L221'></a><a href='#L221'>221</a>
<a name='L222'></a><a href='#L222'>222</a>
<a name='L223'></a><a href='#L223'>223</a>
<a name='L224'></a><a href='#L224'>224</a>
<a name='L225'></a><a href='#L225'>225</a>
<a name='L226'></a><a href='#L226'>226</a>
<a name='L227'></a><a href='#L227'>227</a>
<a name='L228'></a><a href='#L228'>228</a>
<a name='L229'></a><a href='#L229'>229</a>
<a name='L230'></a><a href='#L230'>230</a>
<a name='L231'></a><a href='#L231'>231</a>
<a name='L232'></a><a href='#L232'>232</a>
<a name='L233'></a><a href='#L233'>233</a>
<a name='L234'></a><a href='#L234'>234</a>
<a name='L235'></a><a href='#L235'>235</a>
<a name='L236'></a><a href='#L236'>236</a>
<a name='L237'></a><a href='#L237'>237</a>
<a name='L238'></a><a href='#L238'>238</a>
<a name='L239'></a><a href='#L239'>239</a>
<a name='L240'></a><a href='#L240'>240</a>
<a name='L241'></a><a href='#L241'>241</a>
<a name='L242'></a><a href='#L242'>242</a>
<a name='L243'></a><a href='#L243'>243</a>
<a name='L244'></a><a href='#L244'>244</a>
<a name='L245'></a><a href='#L245'>245</a>
<a name='L246'></a><a href='#L246'>246</a>
<a name='L247'></a><a href='#L247'>247</a>
<a name='L248'></a><a href='#L248'>248</a>
<a name='L249'></a><a href='#L249'>249</a>
<a name='L250'></a><a href='#L250'>250</a>
<a name='L251'></a><a href='#L251'>251</a>
<a name='L252'></a><a href='#L252'>252</a>
<a name='L253'></a><a href='#L253'>253</a>
<a name='L254'></a><a href='#L254'>254</a>
<a name='L255'></a><a href='#L255'>255</a>
<a name='L256'></a><a href='#L256'>256</a>
<a name='L257'></a><a href='#L257'>257</a>
<a name='L258'></a><a href='#L258'>258</a>
<a name='L259'></a><a href='#L259'>259</a>
<a name='L260'></a><a href='#L260'>260</a>
<a name='L261'></a><a href='#L261'>261</a>
<a name='L262'></a><a href='#L262'>262</a>
<a name='L263'></a><a href='#L263'>263</a>
<a name='L264'></a><a href='#L264'>264</a>
<a name='L265'></a><a href='#L265'>265</a>
<a name='L266'></a><a href='#L266'>266</a>
<a name='L267'></a><a href='#L267'>267</a>
<a name='L268'></a><a href='#L268'>268</a>
<a name='L269'></a><a href='#L269'>269</a>
<a name='L270'></a><a href='#L270'>270</a>
<a name='L271'></a><a href='#L271'>271</a>
<a name='L272'></a><a href='#L272'>272</a>
<a name='L273'></a><a href='#L273'>273</a>
<a name='L274'></a><a href='#L274'>274</a>
<a name='L275'></a><a href='#L275'>275</a>
<a name='L276'></a><a href='#L276'>276</a>
<a name='L277'></a><a href='#L277'>277</a>
<a name='L278'></a><a href='#L278'>278</a>
<a name='L279'></a><a href='#L279'>279</a>
<a name='L280'></a><a href='#L280'>280</a>
<a name='L281'></a><a href='#L281'>281</a>
<a name='L282'></a><a href='#L282'>282</a>
<a name='L283'></a><a href='#L283'>283</a>
<a name='L284'></a><a href='#L284'>284</a>
<a name='L285'></a><a href='#L285'>285</a>
<a name='L286'></a><a href='#L286'>286</a>
<a name='L287'></a><a href='#L287'>287</a>
<a name='L288'></a><a href='#L288'>288</a>
<a name='L289'></a><a href='#L289'>289</a>
<a name='L290'></a><a href='#L290'>290</a>
<a name='L291'></a><a href='#L291'>291</a>
<a name='L292'></a><a href='#L292'>292</a>
<a name='L293'></a><a href='#L293'>293</a>
<a name='L294'></a><a href='#L294'>294</a>
<a name='L295'></a><a href='#L295'>295</a>
<a name='L296'></a><a href='#L296'>296</a>
<a name='L297'></a><a href='#L297'>297</a>
<a name='L298'></a><a href='#L298'>298</a>
<a name='L299'></a><a href='#L299'>299</a>
<a name='L300'></a><a href='#L300'>300</a>
<a name='L301'></a><a href='#L301'>301</a>
<a name='L302'></a><a href='#L302'>302</a>
<a name='L303'></a><a href='#L303'>303</a>
<a name='L304'></a><a href='#L304'>304</a>
<a name='L305'></a><a href='#L305'>305</a>
<a name='L306'></a><a href='#L306'>306</a>
<a name='L307'></a><a href='#L307'>307</a>
<a name='L308'></a><a href='#L308'>308</a>
<a name='L309'></a><a href='#L309'>309</a>
<a name='L310'></a><a href='#L310'>310</a>
<a name='L311'></a><a href='#L311'>311</a>
<a name='L312'></a><a href='#L312'>312</a>
<a name='L313'></a><a href='#L313'>313</a>
<a name='L314'></a><a href='#L314'>314</a>
<a name='L315'></a><a href='#L315'>315</a>
<a name='L316'></a><a href='#L316'>316</a>
<a name='L317'></a><a href='#L317'>317</a>
<a name='L318'></a><a href='#L318'>318</a>
<a name='L319'></a><a href='#L319'>319</a>
<a name='L320'></a><a href='#L320'>320</a>
<a name='L321'></a><a href='#L321'>321</a>
<a name='L322'></a><a href='#L322'>322</a>
<a name='L323'></a><a href='#L323'>323</a>
<a name='L324'></a><a href='#L324'>324</a>
<a name='L325'></a><a href='#L325'>325</a>
<a name='L326'></a><a href='#L326'>326</a>
<a name='L327'></a><a href='#L327'>327</a>
<a name='L328'></a><a href='#L328'>328</a>
<a name='L329'></a><a href='#L329'>329</a>
<a name='L330'></a><a href='#L330'>330</a>
<a name='L331'></a><a href='#L331'>331</a>
<a name='L332'></a><a href='#L332'>332</a>
<a name='L333'></a><a href='#L333'>333</a>
<a name='L334'></a><a href='#L334'>334</a>
<a name='L335'></a><a href='#L335'>335</a>
<a name='L336'></a><a href='#L336'>336</a>
<a name='L337'></a><a href='#L337'>337</a>
<a name='L338'></a><a href='#L338'>338</a>
<a name='L339'></a><a href='#L339'>339</a>
<a name='L340'></a><a href='#L340'>340</a>
<a name='L341'></a><a href='#L341'>341</a>
<a name='L342'></a><a href='#L342'>342</a>
<a name='L343'></a><a href='#L343'>343</a>
<a name='L344'></a><a href='#L344'>344</a>
<a name='L345'></a><a href='#L345'>345</a>
<a name='L346'></a><a href='#L346'>346</a>
<a name='L347'></a><a href='#L347'>347</a>
<a name='L348'></a><a href='#L348'>348</a>
<a name='L349'></a><a href='#L349'>349</a>
<a name='L350'></a><a href='#L350'>350</a>
<a name='L351'></a><a href='#L351'>351</a>
<a name='L352'></a><a href='#L352'>352</a>
<a name='L353'></a><a href='#L353'>353</a>
<a name='L354'></a><a href='#L354'>354</a>
<a name='L355'></a><a href='#L355'>355</a>
<a name='L356'></a><a href='#L356'>356</a>
<a name='L357'></a><a href='#L357'>357</a>
<a name='L358'></a><a href='#L358'>358</a>
<a name='L359'></a><a href='#L359'>359</a>
<a name='L360'></a><a href='#L360'>360</a>
<a name='L361'></a><a href='#L361'>361</a>
<a name='L362'></a><a href='#L362'>362</a>
<a name='L363'></a><a href='#L363'>363</a>
<a name='L364'></a><a href='#L364'>364</a>
<a name='L365'></a><a href='#L365'>365</a>
<a name='L366'></a><a href='#L366'>366</a>
<a name='L367'></a><a href='#L367'>367</a>
<a name='L368'></a><a href='#L368'>368</a>
<a name='L369'></a><a href='#L369'>369</a>
<a name='L370'></a><a href='#L370'>370</a>
<a name='L371'></a><a href='#L371'>371</a>
<a name='L372'></a><a href='#L372'>372</a>
<a name='L373'></a><a href='#L373'>373</a>
<a name='L374'></a><a href='#L374'>374</a>
<a name='L375'></a><a href='#L375'>375</a>
<a name='L376'></a><a href='#L376'>376</a>
<a name='L377'></a><a href='#L377'>377</a>
<a name='L378'></a><a href='#L378'>378</a>
<a name='L379'></a><a href='#L379'>379</a>
<a name='L380'></a><a href='#L380'>380</a>
<a name='L381'></a><a href='#L381'>381</a>
<a name='L382'></a><a href='#L382'>382</a>
<a name='L383'></a><a href='#L383'>383</a>
<a name='L384'></a><a href='#L384'>384</a>
<a name='L385'></a><a href='#L385'>385</a>
<a name='L386'></a><a href='#L386'>386</a>
<a name='L387'></a><a href='#L387'>387</a>
<a name='L388'></a><a href='#L388'>388</a>
<a name='L389'></a><a href='#L389'>389</a>
<a name='L390'></a><a href='#L390'>390</a>
<a name='L391'></a><a href='#L391'>391</a>
<a name='L392'></a><a href='#L392'>392</a>
<a name='L393'></a><a href='#L393'>393</a>
<a name='L394'></a><a href='#L394'>394</a>
<a name='L395'></a><a href='#L395'>395</a>
<a name='L396'></a><a href='#L396'>396</a>
<a name='L397'></a><a href='#L397'>397</a>
<a name='L398'></a><a href='#L398'>398</a>
<a name='L399'></a><a href='#L399'>399</a>
<a name='L400'></a><a href='#L400'>400</a>
<a name='L401'></a><a href='#L401'>401</a>
<a name='L402'></a><a href='#L402'>402</a>
<a name='L403'></a><a href='#L403'>403</a>
<a name='L404'></a><a href='#L404'>404</a>
<a name='L405'></a><a href='#L405'>405</a>
<a name='L406'></a><a href='#L406'>406</a>
<a name='L407'></a><a href='#L407'>407</a>
<a name='L408'></a><a href='#L408'>408</a>
<a name='L409'></a><a href='#L409'>409</a>
<a name='L410'></a><a href='#L410'>410</a>
<a name='L411'></a><a href='#L411'>411</a>
<a name='L412'></a><a href='#L412'>412</a>
<a name='L413'></a><a href='#L413'>413</a>
<a name='L414'></a><a href='#L414'>414</a>
<a name='L415'></a><a href='#L415'>415</a>
<a name='L416'></a><a href='#L416'>416</a>
<a name='L417'></a><a href='#L417'>417</a>
<a name='L418'></a><a href='#L418'>418</a>
<a name='L419'></a><a href='#L419'>419</a>
<a name='L420'></a><a href='#L420'>420</a>
<a name='L421'></a><a href='#L421'>421</a>
<a name='L422'></a><a href='#L422'>422</a>
<a name='L423'></a><a href='#L423'>423</a>
<a name='L424'></a><a href='#L424'>424</a>
<a name='L425'></a><a href='#L425'>425</a>
<a name='L426'></a><a href='#L426'>426</a>
<a name='L427'></a><a href='#L427'>427</a>
<a name='L428'></a><a href='#L428'>428</a>
<a name='L429'></a><a href='#L429'>429</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/components/AddEntryModal/FoodSelectionList.tsx
import React, { useMemo, useCallback, useRef, useEffect } from 'react';
import { View, FlatList, TouchableOpacity, ActivityIndicator, Platform, Keyboard, StyleSheet, I18nManager } from 'react-native';
import { Text, ListItem, Icon, Button, SearchBar, CheckBox, useTheme, makeStyles } from '@rneui/themed';
import { Food } from '../../types/food';
import { RecentServings } from '../../services/storageService';
import { t } from '../../localization/i18n';
import { findFoodsByTagSearch } from '../../utils/searchUtils';
import { getFoodIconUrl } from '../../utils/iconUtils';
&nbsp;
const DEFAULT_GRAMS_FOR_MULTI_ADD = <span class="cstat-no" title="statement not covered" >100;</span>
&nbsp;
interface FoodSelectionListProps {
    search: string;
    updateSearch: (search: string) =&gt; void;
    foods: Food[]; // Full library
    recentFoods: Food[];
    selectedFood: Food | null;
    handleSelectFood: (food: Food | null) =&gt; void;
    setGrams: (grams: string) =&gt; void;
    setSelectedMultipleFoods: React.Dispatch&lt;React.SetStateAction&lt;Map&lt;string, { food: Food; grams: number }&gt;&gt;&gt;;
    selectedMultipleFoods: Map&lt;string, { food: Food; grams: number }&gt;;
    handleToggleMultipleFoodSelection: (food: Food, displayGrams: number) =&gt; void;
    foodIcons: { [foodName: string]: string | null }; // No 'undefined'
    onAddNewFoodRequest: () =&gt; void;
    isActionDisabled: boolean;
    isEditMode: boolean;
    recentServings: RecentServings;
    modalMode: "normal" | "quickAddSelect";
}
&nbsp;
type DisplayFoodItem = Food &amp; { isRecent?: boolean };
&nbsp;
const FoodSelectionList: React.FC&lt;FoodSelectionListProps&gt; = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span></span>
    search,
    updateSearch,
    foods,
    recentFoods,
    selectedFood, 
    handleSelectFood,
    setGrams,
    setSelectedMultipleFoods,
    selectedMultipleFoods,
    handleToggleMultipleFoodSelection,
    foodIcons,
    onAddNewFoodRequest,
    isActionDisabled,
    isEditMode,
    recentServings,
    modalMode,
}) =&gt; {
    const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
    const styles = <span class="cstat-no" title="statement not covered" >useStyles();</span>
    const flatListRef = <span class="cstat-no" title="statement not covered" >useRef&lt;FlatList&lt;DisplayFoodItem&gt;&gt;(null);</span>
&nbsp;
    const filteredFoodsForSearch = <span class="cstat-no" title="statement not covered" >useMemo(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
        const lowercasedSearchTerm = <span class="cstat-no" title="statement not covered" >search.toLowerCase().trim();</span>
<span class="cstat-no" title="statement not covered" >        if (!lowercasedSearchTerm) <span class="cstat-no" title="statement not covered" >return [];</span></span>
    
        // 1. Primary search: by name
        const nameMatchedFoods = <span class="cstat-no" title="statement not covered" >foods.filter(<span class="fstat-no" title="function not covered" >(f</span>ood) =&gt;</span>
<span class="cstat-no" title="statement not covered" >            food.name.toLowerCase().includes(lowercasedSearchTerm)</span>
        );
        const nameMatchIds = <span class="cstat-no" title="statement not covered" >new Set(nameMatchedFoods.map(<span class="fstat-no" title="function not covered" >f </span>=&gt; <span class="cstat-no" title="statement not covered" >f.id)</span>);</span>
    
        // 2. Secondary search: by tags, excluding items already found by name
        const tagMatchedFoods = <span class="cstat-no" title="statement not covered" >findFoodsByTagSearch(lowercasedSearchTerm, foods);</span>
        const tagMatchedFoodsOnly = <span class="cstat-no" title="statement not covered" >tagMatchedFoods.filter(<span class="fstat-no" title="function not covered" >f </span>=&gt; <span class="cstat-no" title="statement not covered" >!nameMatchIds.has(f.id))</span>;</span>
    
        // 3. Combine, with name matches first to ensure priority.
<span class="cstat-no" title="statement not covered" >        return [...nameMatchedFoods, ...tagMatchedFoodsOnly];</span>
    }, [foods, search]);
&nbsp;
    const listDisplayData = <span class="cstat-no" title="statement not covered" >useMemo(<span class="fstat-no" title="function not covered" >()</span>: DisplayFoodItem[] =&gt; {</span>
        // If a single food is selected, show only that item.
<span class="cstat-no" title="statement not covered" >        if (selectedFood) {</span>
            const isSelRecent = <span class="cstat-no" title="statement not covered" >recentFoods.some(<span class="fstat-no" title="function not covered" >rf</span> =&gt; <span class="cstat-no" title="statement not covered" >rf.id === selectedFood.id)</span>;</span>
<span class="cstat-no" title="statement not covered" >            return [{ ...selectedFood, isRecent: isSelRecent }];</span>
        }
&nbsp;
        // If there is an active search term, show search results.
<span class="cstat-no" title="statement not covered" >        if (search) {</span>
<span class="cstat-no" title="statement not covered" >            return filteredFoodsForSearch;</span>
        }
&nbsp;
        // Otherwise, show default list (recents + library).
        const tempCombinedList: DisplayFoodItem[] = <span class="cstat-no" title="statement not covered" >[];</span>
        const displayedIds = <span class="cstat-no" title="statement not covered" >new Set&lt;string&gt;();</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >        recentFoods.forEach(<span class="fstat-no" title="function not covered" >rf</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >            if (!displayedIds.has(rf.id)) {</span>
<span class="cstat-no" title="statement not covered" >                tempCombinedList.push({ ...rf, isRecent: true });</span>
<span class="cstat-no" title="statement not covered" >                displayedIds.add(rf.id);</span>
            }
        });
&nbsp;
        const otherLibraryFoods = <span class="cstat-no" title="statement not covered" >foods</span>
            .filter(<span class="fstat-no" title="function not covered" >fo</span>od =&gt; <span class="cstat-no" title="statement not covered" >!displayedIds.has(food.id))</span>
            .sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; <span class="cstat-no" title="statement not covered" >a.name.localeCompare(b.name))</span>
            .slice(0, 10);
&nbsp;
<span class="cstat-no" title="statement not covered" >        otherLibraryFoods.forEach(<span class="fstat-no" title="function not covered" >ol</span>f =&gt; {</span>
<span class="cstat-no" title="statement not covered" >            tempCombinedList.push({ ...olf, isRecent: false });</span>
        });
&nbsp;
<span class="cstat-no" title="statement not covered" >        return tempCombinedList;</span>
    }, [search, recentFoods, foods, filteredFoodsForSearch, selectedFood]);
&nbsp;
<span class="cstat-no" title="statement not covered" >    useEffect(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (selectedFood &amp;&amp; flatListRef.current &amp;&amp; listDisplayData.length &gt; 0 &amp;&amp; !search) {</span>
            const index = <span class="cstat-no" title="statement not covered" >listDisplayData.findIndex(<span class="fstat-no" title="function not covered" >it</span>em =&gt; <span class="cstat-no" title="statement not covered" >item.id === selectedFood.id)</span>;</span>
<span class="cstat-no" title="statement not covered" >            if (index !== -1) {</span>
<span class="cstat-no" title="statement not covered" >                setTimeout(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >                    flatListRef.current?.scrollToIndex({ index, animated: true, viewPosition: 0.3 }); </span>
                }, 150);
            }
        }
    }, [selectedFood, listDisplayData, search]);
&nbsp;
    const handleInternalSingleSelectFood = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >(i</span>tem: Food | null) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (selectedMultipleFoods.size &gt; 0 &amp;&amp; item !== null &amp;&amp; (!selectedFood || selectedFood.id !== item.id)) {</span>
<span class="cstat-no" title="statement not covered" >            Keyboard.dismiss();</span>
<span class="cstat-no" title="statement not covered" >            return; </span>
        }
<span class="cstat-no" title="statement not covered" >        Keyboard.dismiss();</span>
<span class="cstat-no" title="statement not covered" >        if (selectedFood &amp;&amp; item &amp;&amp; selectedFood.id === item.id) {</span>
<span class="cstat-no" title="statement not covered" >            handleSelectFood(null);</span>
<span class="cstat-no" title="statement not covered" >            setGrams(""); </span>
<span class="cstat-no" title="statement not covered" >            updateSearch(""); </span>
<span class="cstat-no" title="statement not covered" >            setSelectedMultipleFoods(new Map()); </span>
        } else <span class="cstat-no" title="statement not covered" >if (item === null) { </span>
<span class="cstat-no" title="statement not covered" >            handleSelectFood(null);</span>
<span class="cstat-no" title="statement not covered" >            setGrams("");</span>
        } else <span class="cstat-no" title="statement not covered" >if (item !== null) { </span>
<span class="cstat-no" title="statement not covered" >            handleSelectFood(item);</span>
<span class="cstat-no" title="statement not covered" >            updateSearch(""); </span>
<span class="cstat-no" title="statement not covered" >            setSelectedMultipleFoods(new Map()); </span>
<span class="cstat-no" title="statement not covered" >            if (!isEditMode) { </span>
                const lastPortion = <span class="cstat-no" title="statement not covered" >recentServings[item.id]?.[0];</span>
<span class="cstat-no" title="statement not covered" >                if (lastPortion) {</span>
<span class="cstat-no" title="statement not covered" >                    setGrams(String(lastPortion));</span>
                } else {
<span class="cstat-no" title="statement not covered" >                    setGrams(String(DEFAULT_GRAMS_FOR_MULTI_ADD)); </span>
                }
            }
        }
    }, [
        handleSelectFood, 
        updateSearch, 
        selectedFood, 
        setGrams, 
        recentServings, 
        setSelectedMultipleFoods, 
        isEditMode,
        selectedMultipleFoods.size 
    ]);
    
    const handleSearchChange = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(t</span>ext: string) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        updateSearch(text);</span>
<span class="cstat-no" title="statement not covered" >        if (selectedFood &amp;&amp; text.trim() !== "") { </span>
<span class="cstat-no" title="statement not covered" >            handleInternalSingleSelectFood(null);</span>
        }
    };
&nbsp;
    const renderFoodItem = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span> item }: { item: DisplayFoodItem }) =&gt; {</span>
        const foodItem = <span class="cstat-no" title="statement not covered" >item;</span>
        const isSingleSelectedViaState = <span class="cstat-no" title="statement not covered" >selectedFood?.id === foodItem.id;</span>
        const isMultiSelected = <span class="cstat-no" title="statement not covered" >selectedMultipleFoods.has(foodItem.id);</span>
        const iconIdentifier = <span class="cstat-no" title="statement not covered" >getFoodIconUrl(foodItem.name);</span>
        const displayGramsForMulti = <span class="cstat-no" title="statement not covered" >recentServings[foodItem.id]?.[0] || DEFAULT_GRAMS_FOR_MULTI_ADD;</span>
&nbsp;
        const canShowCheckbox = <span class="cstat-no" title="statement not covered" >modalMode === "normal" &amp;&amp; !isEditMode &amp;&amp; (selectedMultipleFoods.size &gt; 0 || !selectedFood);</span>
        const showSingleSelectCheckmark = <span class="cstat-no" title="statement not covered" >isSingleSelectedViaState &amp;&amp; selectedMultipleFoods.size === 0 &amp;&amp; !search;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >        return (</span>
            &lt;TouchableOpacity
                onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; {
<span class="cstat-no" title="statement not covered" >                    if (isActionDisabled) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >                    if (selectedMultipleFoods.size &gt; 0) {</span>
<span class="cstat-no" title="statement not covered" >                        handleToggleMultipleFoodSelection(foodItem, displayGramsForMulti);</span>
                    } else {
<span class="cstat-no" title="statement not covered" >                        handleInternalSingleSelectFood(foodItem);</span>
                    }
                }}
                disabled={isActionDisabled}
                style={[isActionDisabled &amp;&amp; styles.disabledOverlay]}
            &gt;
                &lt;ListItem
                    bottomDivider
                    containerStyle={[
                        styles.listItemContainer,
                        (showSingleSelectCheckmark || isMultiSelected) &amp;&amp; styles.selectedListItem,
                        isMultiSelected &amp;&amp; styles.multiSelectedListItemBorder,
                    ]}
                &gt;
                    {canShowCheckbox &amp;&amp; (
                        &lt;CheckBox
                            checked={isMultiSelected}
                            onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; { 
<span class="cstat-no" title="statement not covered" >                                if (isActionDisabled) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >                                handleToggleMultipleFoodSelection(foodItem, displayGramsForMulti);</span>
                            }}
                            containerStyle={styles.multiSelectCheckboxContainer}
                            size={22}
                            disabled={isActionDisabled}
                        /&gt;
                    )}
                    {iconIdentifier ? (
                        &lt;Text style={styles.foodIconEmoji}&gt;{iconIdentifier}&lt;/Text&gt;
                    ) : (
                        &lt;View style={styles.defaultIconContainer}&gt;
                            &lt;Icon name="help-outline" type="material" size={22} color={theme.colors.grey3} /&gt;
                        &lt;/View&gt;
                    )}
                    &lt;ListItem.Content&gt;
                        &lt;ListItem.Title style={styles.listItemTitle} numberOfLines={1} ellipsizeMode="tail"&gt;
                            {foodItem.name}
                        &lt;/ListItem.Title&gt;
                        {canShowCheckbox &amp;&amp; (
                            &lt;ListItem.Subtitle style={styles.listItemSubtitleSecondary}&gt;
                                {t('addEntryModal.grams')}: {displayGramsForMulti}g
                            &lt;/ListItem.Subtitle&gt;
                        )}
                        {foodItem.isRecent &amp;&amp; !search &amp;&amp; (!selectedFood || selectedFood.id !== foodItem.id) &amp;&amp; (
                             &lt;Text style={styles.recentBadge}&gt;{t('addEntryModal.recent')}&lt;/Text&gt;
                        )}
                    &lt;/ListItem.Content&gt;
                    {showSingleSelectCheckmark &amp;&amp; (&lt;Icon name="checkmark-circle" type="ionicon" color={theme.colors.primary} size={24} /&gt;)}
                &lt;/ListItem&gt;
            &lt;/TouchableOpacity&gt;
        );
    };
&nbsp;
    const renderEmptyOrNoResults = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (search &amp;&amp; filteredFoodsForSearch.length === 0) {</span>
<span class="cstat-no" title="statement not covered" >            return (</span>
                &lt;View style={styles.noResultsContainer}&gt;
                    &lt;Text style={styles.noFoodsText}&gt;
                        {t('addEntryModal.noResults', { searchTerm: search })}
                    &lt;/Text&gt;
                    &lt;Button
                        title={t('addEntryModal.addNewFoodButton')}
                        onPress={onAddNewFoodRequest}
                        type="outline"
                        buttonStyle={styles.addNewFoodButton}
                        titleStyle={styles.addNewFoodButtonTitle}
                        icon={&lt;Icon name="add-circle-outline" type="ionicon" size={20} color={theme.colors.primary} /&gt;}
                        disabled={isActionDisabled}
                    /&gt;
                &lt;/View&gt;
            );
        }
<span class="cstat-no" title="statement not covered" >        if (!search &amp;&amp; foods.length === 0 &amp;&amp; recentFoods.length === 0) { </span>
<span class="cstat-no" title="statement not covered" >             return (</span>
                 &lt;View style={styles.noResultsContainer}&gt;
                     &lt;Text style={styles.noFoodsText}&gt;
                         {t('addEntryModal.emptyLibraryMessage')}
                     &lt;/Text&gt;
                     &lt;Button
                         title={t('addEntryModal.addNewFoodButton')}
                         onPress={onAddNewFoodRequest}
                         type="outline"
                         buttonStyle={styles.addNewFoodButton}
                         titleStyle={styles.addNewFoodButtonTitle}
                         icon={&lt;Icon name="add-circle-outline" type="ionicon" size={20} color={theme.colors.primary} /&gt;}
                         disabled={isActionDisabled}
                     /&gt;
                 &lt;/View&gt;
             );
        }
<span class="cstat-no" title="statement not covered" >        return null;</span>
    };
&nbsp;
<span class="cstat-no" title="statement not covered" >    return (</span>
        &lt;View&gt;
            &lt;SearchBar
                placeholder={t('addEntryModal.searchPlaceholder')}
                onChangeText={handleSearchChange}
                value={search}
                platform={Platform.OS === "ios" ? "ios" : "android"}
                containerStyle={styles.searchBarContainer}
                inputContainerStyle={styles.searchBarInputContainer}
                inputStyle={styles.searchInputStyle}
                onCancel={<span class="fstat-no" title="function not covered" >()</span> =&gt; { <span class="cstat-no" title="statement not covered" >updateSearch(""); <span class="cstat-no" title="statement not covered" ></span>Keyboard.dismiss();}</span>}
                showCancel={Platform.OS === "ios"}
                onClear={<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >updateSearch("")}</span>
                disabled={isActionDisabled || modalMode !== "normal"}
            /&gt;
            &lt;FlatList
                ref={flatListRef}
                data={listDisplayData}
                renderItem={renderFoodItem}
                keyExtractor={<span class="fstat-no" title="function not covered" >(i</span>tem) =&gt; <span class="cstat-no" title="statement not covered" >`food-sel-${item.id}`}</span>
                ListEmptyComponent={renderEmptyOrNoResults}
                extraData={{ selectedFoodId: selectedFood?.id, selectedMultipleFoodsSize: selectedMultipleFoods.size, search, listLength: listDisplayData.length, recentServings }}
                keyboardShouldPersistTaps="handled"
                initialNumToRender={15}
                maxToRenderPerBatch={10}
                windowSize={21} 
                removeClippedSubviews={Platform.OS === 'android'}
                style={styles.flatListContainer}
                contentContainerStyle={styles.flatListContentContainer}
                getItemLayout={<span class="fstat-no" title="function not covered" >(d</span>ata, index) =&gt; (
<span class="cstat-no" title="statement not covered" >                    { length: 65, offset: 65 * index, index } </span>
                )}
            /&gt;
        &lt;/View&gt;
    );
};
&nbsp;
const useStyles = <span class="cstat-no" title="statement not covered" >makeStyles(<span class="fstat-no" title="function not covered" >(t</span>heme) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
    searchBarContainer: {
        backgroundColor: "transparent",
        borderBottomColor: "transparent",
        borderTopColor: "transparent",
        paddingHorizontal: 0,
        marginBottom: 10,
    },
    searchBarInputContainer: {
        borderRadius: 25,
        backgroundColor: theme.colors.searchBg || theme.colors.grey5,
        height: 40,
    },
    searchInputStyle: {
        color: theme.colors.text,
        fontSize: 15,
        textAlign: I18nManager.isRTL ? 'right' : 'left',
    },
    flatListContainer: {
        maxHeight: "90%", 
        minHeight: 150,
    },
    flatListContentContainer: {
        paddingBottom: 10,
    },
    foodIconEmoji: {
        fontSize: 26,
        width: 35,
        height: 35,
        textAlign: 'center',
        textAlignVertical: 'center',
        marginRight: 10,
    },
    defaultIconContainer: {
        width: 35,
        height: 35,
        marginRight: 10,
        borderRadius: 17.5,
        backgroundColor: theme.colors.grey5,
        alignItems: "center",
        justifyContent: "center",
    },
    listItemContainer: {
        backgroundColor: "transparent",
        paddingVertical: 8,
        paddingHorizontal: 5,
        borderBottomColor: theme.colors.divider,
        minHeight: 65,
    },
    selectedListItem: { 
        backgroundColor: theme.colors.grey5, 
        borderRadius: 8,
    },
    multiSelectedListItemBorder: { 
        borderLeftWidth: 3, 
        borderLeftColor: theme.colors.success, 
    },
    multiSelectCheckboxContainer: { 
        padding: 10, 
        marginRight: 0, 
        marginLeft: -10, 
        backgroundColor: 'transparent',
        borderWidth: 0,
    },
    listItemTitle: {
        color: theme.colors.text,
        fontSize: 16,
        fontWeight: "500",
        textAlign: 'left',
        flexShrink: 1,
    },
    listItemSubtitleSecondary: {
        color: theme.colors.secondary,
        fontSize: 12,
        textAlign: 'left',
        marginTop: 2,
    },
    recentBadge: {
        position: 'absolute',
        top: -2,
        right: 0,
        fontSize: 10,
        color: theme.colors.primary,
        backgroundColor: theme.colors.grey5,
        paddingHorizontal: 4,
        paddingVertical: 1,
        borderRadius: 4,
        fontWeight: 'bold',
        textTransform: 'uppercase'
    },
    disabledOverlay: {
        opacity: 0.6,
    },
    noResultsContainer: {
        alignItems: 'center',
        paddingVertical: 20,
        paddingHorizontal: 10,
        minHeight: 150, 
        justifyContent: 'center',
    },
    noFoodsText: {
        color: theme.colors.grey2,
        fontStyle: "italic",
        textAlign: "center",
        marginBottom: 15,
    },
    addNewFoodButton: {
        marginTop: 10,
        borderColor: theme.colors.primary,
        paddingHorizontal: 20,
        borderRadius: 20,
    },
    addNewFoodButtonTitle: {
        color: theme.colors.primary,
        fontWeight: '600',
    },
}));
&nbsp;
export default FoodSelectionList;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    
---------- END FoodSelectionList.tsx.html ----------


---------- index.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/AddEntryModal</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> components/AddEntryModal</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/437</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/403</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/92</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/327</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <div class="pad1">
<table class="coverage-summary">
<thead>
<tr>
   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
</tr>
</thead>
<tbody><tr>
	<td class="file low" data-value="AddEntryModal.tsx"><a href="AddEntryModal.tsx.html">AddEntryModal.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="298" class="abs low">0/298</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="224" class="abs low">0/224</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="53" class="abs low">0/53</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="204" class="abs low">0/204</td>
	</tr>

<tr>
	<td class="file low" data-value="AmountInputSection.tsx"><a href="AmountInputSection.tsx.html">AmountInputSection.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="25" class="abs low">0/25</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="41" class="abs low">0/41</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="10" class="abs low">0/10</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="22" class="abs low">0/22</td>
	</tr>

<tr>
	<td class="file low" data-value="FoodSelectionList.tsx"><a href="FoodSelectionList.tsx.html">FoodSelectionList.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="100" class="abs low">0/100</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="91" class="abs low">0/91</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="25" class="abs low">0/25</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="91" class="abs low">0/91</td>
	</tr>

<tr>
	<td class="file low" data-value="ModalHeader.tsx"><a href="ModalHeader.tsx.html">ModalHeader.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="14" class="abs low">0/14</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="47" class="abs low">0/47</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="4" class="abs low">0/4</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="10" class="abs low">0/10</td>
	</tr>

</tbody>
</table>
</div>
                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    
---------- END index.html ----------


---------- ModalHeader.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/AddEntryModal/ModalHeader.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> / <a href="index.html">components/AddEntryModal</a> ModalHeader.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/14</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/47</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/4</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/10</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/components/AddEntryModal/ModalHeader.tsx
import React from 'react';
import { View, TouchableOpacity, ActivityIndicator, StyleSheet, Keyboard } from 'react-native';
import { Text, Icon, Button, useTheme, makeStyles } from '@rneui/themed';
import { Food } from '../../types/food';
import { t } from '../../localization/i18n';
&nbsp;
type ModalMode = 'normal' | 'quickAddSelect' | 'quickAddText';
&nbsp;
interface ModalHeaderProps {
    title: string;
    isEditMode: boolean;
    modalMode: ModalMode;
    quickAddLoading: boolean;
    textQuickAddLoading: boolean;
    selectedFood: Food | null;
    selectedMultipleFoodsSize: number;
    selectedQuickAddIndicesSize: number;
    editingQuickAddItemIndex: number | null;
    isActionDisabled: boolean;
    isSingleAddButtonDisabled: boolean;
    isMultiAddButtonDisabled: boolean;
    isQuickAddConfirmDisabled: boolean;
    isQuickAddImageButtonDisabled: boolean;
    isQuickAddTextButtonDisabled: boolean;
    isAiLoading: boolean;
    toggleOverlay: () =&gt; void;
    onAddOrUpdateSingleEntry: () =&gt; void;
    onConfirmAddMultipleSelected: () =&gt; void;
    onConfirmQuickAdd: () =&gt; void;
    onQuickAddImage: () =&gt; void;
    onQuickAddText: () =&gt; void;
    onBackFromQuickAdd: () =&gt; void;
}
&nbsp;
const ModalHeader: React.FC&lt;ModalHeaderProps&gt; = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span></span>
    title, isEditMode, modalMode, quickAddLoading, textQuickAddLoading, selectedFood, selectedMultipleFoodsSize,
    selectedQuickAddIndicesSize, editingQuickAddItemIndex, isActionDisabled, isSingleAddButtonDisabled,
    isMultiAddButtonDisabled, isQuickAddConfirmDisabled, isQuickAddImageButtonDisabled, isQuickAddTextButtonDisabled,
    isAiLoading, toggleOverlay, onAddOrUpdateSingleEntry, onConfirmAddMultipleSelected,
    onConfirmQuickAdd, onQuickAddImage, onQuickAddText, onBackFromQuickAdd,
}) =&gt; {
    const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
    const styles = <span class="cstat-no" title="statement not covered" >useStyles();</span>
&nbsp;
    const handleClose = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        Keyboard.dismiss();</span>
<span class="cstat-no" title="statement not covered" >        toggleOverlay();</span>
    };
&nbsp;
    const isBackButtonVisible = <span class="cstat-no" title="statement not covered" >(modalMode === 'quickAddSelect' || modalMode === 'quickAddText') &amp;&amp; editingQuickAddItemIndex === null;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    return (</span>
        &lt;View style={styles.header}&gt;
            {isBackButtonVisible ? (
                &lt;Button
                    type="clear"
                    onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; { <span class="cstat-no" title="statement not covered" >if (isActionDisabled) <span class="cstat-no" title="statement not covered" >return; <span class="cstat-no" title="statement not covered" ></span></span>Keyboard.dismiss(); <span class="cstat-no" title="statement not covered" ></span>onBackFromQuickAdd(); </span>}}
                    icon={&lt;Icon name="arrow-back" type="ionicon" size={24} color={isActionDisabled ? theme.colors.grey3 : theme.colors.primary} /&gt;}
                    containerStyle={styles.closeIconContainer}
                    disabled={isActionDisabled}
                /&gt;
            ) : (
                &lt;TouchableOpacity onPress={handleClose} style={styles.closeIconContainer} disabled={isActionDisabled} hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}&gt;
                    &lt;Icon name="close" type="material" size={28} color={isActionDisabled ? theme.colors.grey3 : theme.colors.text} /&gt;
                &lt;/TouchableOpacity&gt;
            )}
&nbsp;
            &lt;Text h4 h4Style={[styles.overlayTitle, isEditMode &amp;&amp; modalMode === 'normal' &amp;&amp; styles.editModeTitle]} numberOfLines={1} ellipsizeMode="tail"&gt;
                {title}
            &lt;/Text&gt;
&nbsp;
            &lt;View style={styles.headerActionsContainer}&gt;
                {modalMode === 'normal' &amp;&amp; (
                    &lt;&gt;
                        {!isEditMode &amp;&amp; !selectedFood &amp;&amp; (
                            &lt;View style={styles.quickAddIconsContainer}&gt;
                                &lt;TouchableOpacity onPress={onQuickAddText} disabled={isQuickAddTextButtonDisabled} style={styles.headerIcon}&gt;
                                    {quickAddLoading &amp;&amp; textQuickAddLoading ? (
                                        &lt;ActivityIndicator size="small" color={theme.colors.primary} /&gt;
                                    ) : (
                                        &lt;Icon name="text-box-search-outline" type="material-community" size={26} color={isQuickAddTextButtonDisabled ? theme.colors.grey3 : theme.colors.primary} /&gt;
                                    )}
                                &lt;/TouchableOpacity&gt;
                                &lt;TouchableOpacity onPress={onQuickAddImage} disabled={isQuickAddImageButtonDisabled} style={styles.headerIcon}&gt;
                                    {quickAddLoading &amp;&amp; !textQuickAddLoading ? (
                                        &lt;ActivityIndicator size="small" color={theme.colors.primary} /&gt;
                                    ) : (
                                        &lt;Icon name="camera-burst" type="material-community" size={26} color={isQuickAddImageButtonDisabled ? theme.colors.grey3 : theme.colors.primary} /&gt;
                                    )}
                                &lt;/TouchableOpacity&gt;
                            &lt;/View&gt;
                        )}
                        {isEditMode ? (
                            &lt;Button title={t('addEntryModal.buttonUpdate')} onPress={onAddOrUpdateSingleEntry} disabled={isSingleAddButtonDisabled} buttonStyle={[styles.actionButton, styles.updateButton]} titleStyle={styles.buttonTitle} loading={isAiLoading &amp;&amp; !!selectedFood} /&gt;
                        ) : selectedFood ? (
                            &lt;Button title={t('addEntryModal.buttonAdd')} onPress={onAddOrUpdateSingleEntry} disabled={isSingleAddButtonDisabled} buttonStyle={styles.actionButton} titleStyle={styles.buttonTitle} loading={isAiLoading} /&gt;
                        ) : (
                            &lt;Button title={t('addEntryModal.buttonAddSelected', { count: selectedMultipleFoodsSize })} onPress={onConfirmAddMultipleSelected} disabled={isMultiAddButtonDisabled} buttonStyle={[styles.actionButton, { backgroundColor: theme.colors.success }]} titleStyle={styles.buttonTitle} /&gt;
                        )}
                    &lt;/&gt;
                )}
                {modalMode === 'quickAddSelect' &amp;&amp; editingQuickAddItemIndex === null &amp;&amp; (
                    &lt;Button title={quickAddLoading ? t('addEntryModal.buttonLoading') : t('addEntryModal.buttonAddSelected', { count: selectedQuickAddIndicesSize })} onPress={onConfirmQuickAdd} disabled={isQuickAddConfirmDisabled} buttonStyle={[styles.actionButton, { backgroundColor: theme.colors.success }]} titleStyle={styles.buttonTitle} loading={quickAddLoading} /&gt;
                )}
                {modalMode === 'quickAddText' &amp;&amp; &lt;View style={styles.placeholderActionView} /&gt;}
                {modalMode === 'quickAddSelect' &amp;&amp; editingQuickAddItemIndex !== null &amp;&amp; &lt;View style={styles.placeholderActionView} /&gt;}
            &lt;/View&gt;
        &lt;/View&gt;
    );
};
&nbsp;
const useStyles = <span class="cstat-no" title="statement not covered" >makeStyles(<span class="fstat-no" title="function not covered" >(t</span>heme) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
    header: { flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: 15, paddingHorizontal: 0 },
    closeIconContainer: { padding: 5, minWidth: 40, alignItems: 'flex-start' },
    overlayTitle: { color: theme.colors.text, fontWeight: 'bold', fontSize: 20, textAlign: 'center', flex: 1, marginHorizontal: 5 },
    editModeTitle: { color: theme.colors.warning },
    headerActionsContainer: { flexDirection: 'row', alignItems: 'center', minWidth: 80, justifyContent: 'flex-end' },
    quickAddIconsContainer: { flexDirection: 'row-reverse', alignItems: 'center' },
    headerIcon: { paddingHorizontal: 6, marginHorizontal: 2 },
    actionButton: { borderRadius: 20, paddingHorizontal: 12, paddingVertical: 8, minWidth: 70, marginLeft: 5, backgroundColor: theme.colors.primary },
    updateButton: { backgroundColor: theme.colors.warning },
    buttonTitle: { color: theme.colors.white, fontWeight: '600', fontSize: 14 },
    placeholderActionView: { width: 70, marginLeft: 5 },
}));
&nbsp;
export default ModalHeader;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    
---------- END ModalHeader.tsx.html ----------


---------- AddFoodModal.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/AddFoodModal.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">components</a> AddFoodModal.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/112</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/74</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/11</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/88</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a>
<a name='L128'></a><a href='#L128'>128</a>
<a name='L129'></a><a href='#L129'>129</a>
<a name='L130'></a><a href='#L130'>130</a>
<a name='L131'></a><a href='#L131'>131</a>
<a name='L132'></a><a href='#L132'>132</a>
<a name='L133'></a><a href='#L133'>133</a>
<a name='L134'></a><a href='#L134'>134</a>
<a name='L135'></a><a href='#L135'>135</a>
<a name='L136'></a><a href='#L136'>136</a>
<a name='L137'></a><a href='#L137'>137</a>
<a name='L138'></a><a href='#L138'>138</a>
<a name='L139'></a><a href='#L139'>139</a>
<a name='L140'></a><a href='#L140'>140</a>
<a name='L141'></a><a href='#L141'>141</a>
<a name='L142'></a><a href='#L142'>142</a>
<a name='L143'></a><a href='#L143'>143</a>
<a name='L144'></a><a href='#L144'>144</a>
<a name='L145'></a><a href='#L145'>145</a>
<a name='L146'></a><a href='#L146'>146</a>
<a name='L147'></a><a href='#L147'>147</a>
<a name='L148'></a><a href='#L148'>148</a>
<a name='L149'></a><a href='#L149'>149</a>
<a name='L150'></a><a href='#L150'>150</a>
<a name='L151'></a><a href='#L151'>151</a>
<a name='L152'></a><a href='#L152'>152</a>
<a name='L153'></a><a href='#L153'>153</a>
<a name='L154'></a><a href='#L154'>154</a>
<a name='L155'></a><a href='#L155'>155</a>
<a name='L156'></a><a href='#L156'>156</a>
<a name='L157'></a><a href='#L157'>157</a>
<a name='L158'></a><a href='#L158'>158</a>
<a name='L159'></a><a href='#L159'>159</a>
<a name='L160'></a><a href='#L160'>160</a>
<a name='L161'></a><a href='#L161'>161</a>
<a name='L162'></a><a href='#L162'>162</a>
<a name='L163'></a><a href='#L163'>163</a>
<a name='L164'></a><a href='#L164'>164</a>
<a name='L165'></a><a href='#L165'>165</a>
<a name='L166'></a><a href='#L166'>166</a>
<a name='L167'></a><a href='#L167'>167</a>
<a name='L168'></a><a href='#L168'>168</a>
<a name='L169'></a><a href='#L169'>169</a>
<a name='L170'></a><a href='#L170'>170</a>
<a name='L171'></a><a href='#L171'>171</a>
<a name='L172'></a><a href='#L172'>172</a>
<a name='L173'></a><a href='#L173'>173</a>
<a name='L174'></a><a href='#L174'>174</a>
<a name='L175'></a><a href='#L175'>175</a>
<a name='L176'></a><a href='#L176'>176</a>
<a name='L177'></a><a href='#L177'>177</a>
<a name='L178'></a><a href='#L178'>178</a>
<a name='L179'></a><a href='#L179'>179</a>
<a name='L180'></a><a href='#L180'>180</a>
<a name='L181'></a><a href='#L181'>181</a>
<a name='L182'></a><a href='#L182'>182</a>
<a name='L183'></a><a href='#L183'>183</a>
<a name='L184'></a><a href='#L184'>184</a>
<a name='L185'></a><a href='#L185'>185</a>
<a name='L186'></a><a href='#L186'>186</a>
<a name='L187'></a><a href='#L187'>187</a>
<a name='L188'></a><a href='#L188'>188</a>
<a name='L189'></a><a href='#L189'>189</a>
<a name='L190'></a><a href='#L190'>190</a>
<a name='L191'></a><a href='#L191'>191</a>
<a name='L192'></a><a href='#L192'>192</a>
<a name='L193'></a><a href='#L193'>193</a>
<a name='L194'></a><a href='#L194'>194</a>
<a name='L195'></a><a href='#L195'>195</a>
<a name='L196'></a><a href='#L196'>196</a>
<a name='L197'></a><a href='#L197'>197</a>
<a name='L198'></a><a href='#L198'>198</a>
<a name='L199'></a><a href='#L199'>199</a>
<a name='L200'></a><a href='#L200'>200</a>
<a name='L201'></a><a href='#L201'>201</a>
<a name='L202'></a><a href='#L202'>202</a>
<a name='L203'></a><a href='#L203'>203</a>
<a name='L204'></a><a href='#L204'>204</a>
<a name='L205'></a><a href='#L205'>205</a>
<a name='L206'></a><a href='#L206'>206</a>
<a name='L207'></a><a href='#L207'>207</a>
<a name='L208'></a><a href='#L208'>208</a>
<a name='L209'></a><a href='#L209'>209</a>
<a name='L210'></a><a href='#L210'>210</a>
<a name='L211'></a><a href='#L211'>211</a>
<a name='L212'></a><a href='#L212'>212</a>
<a name='L213'></a><a href='#L213'>213</a>
<a name='L214'></a><a href='#L214'>214</a>
<a name='L215'></a><a href='#L215'>215</a>
<a name='L216'></a><a href='#L216'>216</a>
<a name='L217'></a><a href='#L217'>217</a>
<a name='L218'></a><a href='#L218'>218</a>
<a name='L219'></a><a href='#L219'>219</a>
<a name='L220'></a><a href='#L220'>220</a>
<a name='L221'></a><a href='#L221'>221</a>
<a name='L222'></a><a href='#L222'>222</a>
<a name='L223'></a><a href='#L223'>223</a>
<a name='L224'></a><a href='#L224'>224</a>
<a name='L225'></a><a href='#L225'>225</a>
<a name='L226'></a><a href='#L226'>226</a>
<a name='L227'></a><a href='#L227'>227</a>
<a name='L228'></a><a href='#L228'>228</a>
<a name='L229'></a><a href='#L229'>229</a>
<a name='L230'></a><a href='#L230'>230</a>
<a name='L231'></a><a href='#L231'>231</a>
<a name='L232'></a><a href='#L232'>232</a>
<a name='L233'></a><a href='#L233'>233</a>
<a name='L234'></a><a href='#L234'>234</a>
<a name='L235'></a><a href='#L235'>235</a>
<a name='L236'></a><a href='#L236'>236</a>
<a name='L237'></a><a href='#L237'>237</a>
<a name='L238'></a><a href='#L238'>238</a>
<a name='L239'></a><a href='#L239'>239</a>
<a name='L240'></a><a href='#L240'>240</a>
<a name='L241'></a><a href='#L241'>241</a>
<a name='L242'></a><a href='#L242'>242</a>
<a name='L243'></a><a href='#L243'>243</a>
<a name='L244'></a><a href='#L244'>244</a>
<a name='L245'></a><a href='#L245'>245</a>
<a name='L246'></a><a href='#L246'>246</a>
<a name='L247'></a><a href='#L247'>247</a>
<a name='L248'></a><a href='#L248'>248</a>
<a name='L249'></a><a href='#L249'>249</a>
<a name='L250'></a><a href='#L250'>250</a>
<a name='L251'></a><a href='#L251'>251</a>
<a name='L252'></a><a href='#L252'>252</a>
<a name='L253'></a><a href='#L253'>253</a>
<a name='L254'></a><a href='#L254'>254</a>
<a name='L255'></a><a href='#L255'>255</a>
<a name='L256'></a><a href='#L256'>256</a>
<a name='L257'></a><a href='#L257'>257</a>
<a name='L258'></a><a href='#L258'>258</a>
<a name='L259'></a><a href='#L259'>259</a>
<a name='L260'></a><a href='#L260'>260</a>
<a name='L261'></a><a href='#L261'>261</a>
<a name='L262'></a><a href='#L262'>262</a>
<a name='L263'></a><a href='#L263'>263</a>
<a name='L264'></a><a href='#L264'>264</a>
<a name='L265'></a><a href='#L265'>265</a>
<a name='L266'></a><a href='#L266'>266</a>
<a name='L267'></a><a href='#L267'>267</a>
<a name='L268'></a><a href='#L268'>268</a>
<a name='L269'></a><a href='#L269'>269</a>
<a name='L270'></a><a href='#L270'>270</a>
<a name='L271'></a><a href='#L271'>271</a>
<a name='L272'></a><a href='#L272'>272</a>
<a name='L273'></a><a href='#L273'>273</a>
<a name='L274'></a><a href='#L274'>274</a>
<a name='L275'></a><a href='#L275'>275</a>
<a name='L276'></a><a href='#L276'>276</a>
<a name='L277'></a><a href='#L277'>277</a>
<a name='L278'></a><a href='#L278'>278</a>
<a name='L279'></a><a href='#L279'>279</a>
<a name='L280'></a><a href='#L280'>280</a>
<a name='L281'></a><a href='#L281'>281</a>
<a name='L282'></a><a href='#L282'>282</a>
<a name='L283'></a><a href='#L283'>283</a>
<a name='L284'></a><a href='#L284'>284</a>
<a name='L285'></a><a href='#L285'>285</a>
<a name='L286'></a><a href='#L286'>286</a>
<a name='L287'></a><a href='#L287'>287</a>
<a name='L288'></a><a href='#L288'>288</a>
<a name='L289'></a><a href='#L289'>289</a>
<a name='L290'></a><a href='#L290'>290</a>
<a name='L291'></a><a href='#L291'>291</a>
<a name='L292'></a><a href='#L292'>292</a>
<a name='L293'></a><a href='#L293'>293</a>
<a name='L294'></a><a href='#L294'>294</a>
<a name='L295'></a><a href='#L295'>295</a>
<a name='L296'></a><a href='#L296'>296</a>
<a name='L297'></a><a href='#L297'>297</a>
<a name='L298'></a><a href='#L298'>298</a>
<a name='L299'></a><a href='#L299'>299</a>
<a name='L300'></a><a href='#L300'>300</a>
<a name='L301'></a><a href='#L301'>301</a>
<a name='L302'></a><a href='#L302'>302</a>
<a name='L303'></a><a href='#L303'>303</a>
<a name='L304'></a><a href='#L304'>304</a>
<a name='L305'></a><a href='#L305'>305</a>
<a name='L306'></a><a href='#L306'>306</a>
<a name='L307'></a><a href='#L307'>307</a>
<a name='L308'></a><a href='#L308'>308</a>
<a name='L309'></a><a href='#L309'>309</a>
<a name='L310'></a><a href='#L310'>310</a>
<a name='L311'></a><a href='#L311'>311</a>
<a name='L312'></a><a href='#L312'>312</a>
<a name='L313'></a><a href='#L313'>313</a>
<a name='L314'></a><a href='#L314'>314</a>
<a name='L315'></a><a href='#L315'>315</a>
<a name='L316'></a><a href='#L316'>316</a>
<a name='L317'></a><a href='#L317'>317</a>
<a name='L318'></a><a href='#L318'>318</a>
<a name='L319'></a><a href='#L319'>319</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/components/AddFoodModal.tsx
import React, { useState, useEffect, useCallback } from "react";
import {
    View,
    KeyboardAvoidingView,
    Platform,
    ActivityIndicator,
    Alert,
    ScrollView,
    StyleSheet,
} from "react-native";
import {
    Button,
    Input,
    Text,
    Overlay,
    makeStyles,
    useTheme,
    Icon,
    ButtonGroup,
} from "@rneui/themed";
import { Food } from "../types/food";
import { MaterialCommunityIcons } from "@expo/vector-icons";
import Toast from "react-native-toast-message";
import {
    getMacrosFromText,
    getMacrosForImageFile,
} from "../utils/macros";
import * as ImagePicker from "expo-image-picker";
import { ImagePickerResult } from 'expo-image-picker';
import { compressImageIfNeeded } from '../utils/imageUtils';
import FoodFormFields from "./FoodFormFields";
import { t } from '../localization/i18n';
&nbsp;
// Use a specific type for the form data
type FoodFormData = Omit&lt;Food, "id" | "createdAt"&gt;;
type InputMode = 'manual' | 'ai';
&nbsp;
interface AddFoodModalProps {
    isVisible: boolean;
    toggleOverlay: () =&gt; void;
    newFood: FoodFormData;
    editFood: Food | null;
    errors: { [key: string]: string };
    handleInputChange: (
        key: keyof FoodFormData,
        value: string,
        isEdit: boolean
    ) =&gt; void;
    handleCreateFood: () =&gt; Promise&lt;void&gt;;
    handleUpdateFood: () =&gt; Promise&lt;void&gt;;
    validateFood: (food: FoodFormData | Food) =&gt; { [key: string]: string } | null;
    setErrors: React.Dispatch&lt;React.SetStateAction&lt;{ [key: string]: string }&gt;&gt;;
}
&nbsp;
const KEYBOARD_VERTICAL_OFFSET = <span class="cstat-no" title="statement not covered" >Platform.OS === "ios" ? 60 : 0;</span>
&nbsp;
const AddFoodModal: React.FC&lt;AddFoodModalProps&gt; = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span></span>
    isVisible,
    toggleOverlay,
    newFood,
    editFood,
    errors,
    handleInputChange,
    handleCreateFood,
    handleUpdateFood,
    validateFood,
    setErrors,
}) =&gt; {
    const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
    const styles = <span class="cstat-no" title="statement not covered" >useStyles();</span>
    const [loading, setLoading] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
    const [inputMode, setInputMode] = <span class="cstat-no" title="statement not covered" >useState&lt;InputMode&gt;('manual');</span>
    const [ingredients, setIngredients] = <span class="cstat-no" title="statement not covered" >useState("");</span>
    const [aiTextLoading, setAiTextLoading] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
    const [aiImageLoading, setAiImageLoading] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    useEffect(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (isVisible) {</span>
<span class="cstat-no" title="statement not covered" >            setErrors({});</span>
<span class="cstat-no" title="statement not covered" >            setIngredients("");</span>
<span class="cstat-no" title="statement not covered" >            setAiTextLoading(false);</span>
<span class="cstat-no" title="statement not covered" >            setAiImageLoading(false);</span>
<span class="cstat-no" title="statement not covered" >            setLoading(false);</span>
<span class="cstat-no" title="statement not covered" >            setInputMode(editFood ? 'manual' : 'manual');</span>
        }
    }, [isVisible, editFood, setErrors]);
&nbsp;
    const getCurrentFoodData = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span>: Partial&lt;FoodFormData&gt; | Partial&lt;Food&gt; =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        return editFood ? editFood : newFood;</span>
    };
&nbsp;
    const handleCreateOrUpdate = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
        const isUpdate = <span class="cstat-no" title="statement not covered" >!!editFood;</span>
        const currentData = <span class="cstat-no" title="statement not covered" >isUpdate ? editFood : newFood;</span>
        
        const dataToValidate: Food | FoodFormData = <span class="cstat-no" title="statement not covered" >{</span>
            ...currentData,
            name: (currentData.name ?? "").trim(),
        };
&nbsp;
        const validationErrors = <span class="cstat-no" title="statement not covered" >validateFood(dataToValidate);</span>
<span class="cstat-no" title="statement not covered" >        if (validationErrors) {</span>
<span class="cstat-no" title="statement not covered" >            setErrors(validationErrors);</span>
<span class="cstat-no" title="statement not covered" >            Toast.show({ type: "error", text1: t('foodListScreen.fixErrors'), position: 'bottom' });</span>
<span class="cstat-no" title="statement not covered" >            return;</span>
        }
<span class="cstat-no" title="statement not covered" >        setErrors({}); <span class="cstat-no" title="statement not covered" ></span>setLoading(true);</span>
<span class="cstat-no" title="statement not covered" >        try {</span>
<span class="cstat-no" title="statement not covered" >            if (isUpdate) {</span>
<span class="cstat-no" title="statement not covered" >                await handleUpdateFood();</span>
<span class="cstat-no" title="statement not covered" >                Toast.show({ type: "success", text1: t('foodListScreen.foodUpdated', { foodName: dataToValidate.name }), position: 'bottom' });</span>
            } else {
<span class="cstat-no" title="statement not covered" >                await handleCreateFood();</span>
<span class="cstat-no" title="statement not covered" >                Toast.show({ type: "success", text1: t('foodListScreen.foodAdded', { foodName: dataToValidate.name }), position: 'bottom' });</span>
            }
<span class="cstat-no" title="statement not covered" >            toggleOverlay();</span>
        } catch (error: any) {
<span class="cstat-no" title="statement not covered" >            Alert.alert(t('foodListScreen.errorLoad'), error.message || t(isUpdate ? 'foodListScreen.errorUpdateMessage' : 'foodListScreen.errorCreateMessage'));</span>
        } finally { <span class="cstat-no" title="statement not covered" >setLoading(false); </span>}
    };
&nbsp;
    const handleAnalyzeText = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
        const foodName = <span class="cstat-no" title="statement not covered" >(getCurrentFoodData().name ?? "").trim();</span>
        const textToAnalyze = <span class="cstat-no" title="statement not covered" >ingredients.trim();</span>
<span class="cstat-no" title="statement not covered" >        if (!foodName &amp;&amp; !textToAnalyze) {</span>
<span class="cstat-no" title="statement not covered" >            Alert.alert(t('addFoodModal.alertInputNeeded'), t('addFoodModal.alertInputNeededMessage'));</span>
<span class="cstat-no" title="statement not covered" >            return;</span>
        }
    
<span class="cstat-no" title="statement not covered" >        setAiTextLoading(true);</span>
<span class="cstat-no" title="statement not covered" >        try {</span>
            const macros = <span class="cstat-no" title="statement not covered" >await getMacrosFromText(foodName, textToAnalyze);</span>
            const isUpdate = <span class="cstat-no" title="statement not covered" >!!editFood;</span>
    
<span class="cstat-no" title="statement not covered" >            if (macros.foodName) {</span>
<span class="cstat-no" title="statement not covered" >                handleInputChange("name", macros.foodName, isUpdate);</span>
            }
<span class="cstat-no" title="statement not covered" >            handleInputChange("calories", String(Math.round(macros.calories)), isUpdate);</span>
<span class="cstat-no" title="statement not covered" >            handleInputChange("protein", String(Math.round(macros.protein)), isUpdate);</span>
<span class="cstat-no" title="statement not covered" >            handleInputChange("carbs", String(Math.round(macros.carbs)), isUpdate);</span>
<span class="cstat-no" title="statement not covered" >            handleInputChange("fat", String(Math.round(macros.fat)), isUpdate);</span>
            
<span class="cstat-no" title="statement not covered" >            setInputMode("manual");</span>
    
<span class="cstat-no" title="statement not covered" >            Toast.show({</span>
                type: 'info',
                text1: foodName ? t('addFoodModal.macrosEstimatedText') : t('addFoodModal.foodIdentified'),
                text2: foodName ? undefined : t('addFoodModal.foodIdentifiedMessage', { foodName: macros.foodName }),
                position: 'bottom'
            });
        } catch (error) {
<span class="cstat-no" title="statement not covered" >            console.error("AI Macro fetch error (text - modal):", error);</span>
        } finally {
<span class="cstat-no" title="statement not covered" >            setAiTextLoading(false);</span>
        }
    };
&nbsp;
    const handleGetImageAndAnalyze = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (aiImageLoading || aiTextLoading || loading) <span class="cstat-no" title="statement not covered" >return;</span></span>
        const processImage = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (pickerResult: ImagePickerResult) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >            if (pickerResult.canceled) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >            if (pickerResult.assets &amp;&amp; pickerResult.assets.length &gt; 0) {</span>
                const originalAsset = <span class="cstat-no" title="statement not covered" >pickerResult.assets[0];</span> <span class="cstat-no" title="statement not covered" >setAiImageLoading(true);</span>
<span class="cstat-no" title="statement not covered" >                try {</span>
                     const compressedResult = <span class="cstat-no" title="statement not covered" >await compressImageIfNeeded(originalAsset);</span>
                     const assetForAnalysis = <span class="cstat-no" title="statement not covered" >compressedResult ? { ...originalAsset, uri: compressedResult.uri, width: compressedResult.width, height: compressedResult.height, mimeType: 'image/jpeg' } : originalAsset;</span>
                     const result = <span class="cstat-no" title="statement not covered" >await getMacrosForImageFile(assetForAnalysis);</span>
                     const isUpdate = <span class="cstat-no" title="statement not covered" >!!editFood;</span>
<span class="cstat-no" title="statement not covered" >                     handleInputChange("name", result.foodName, isUpdate); <span class="cstat-no" title="statement not covered" ></span>handleInputChange("calories", String(Math.round(result.calories)), isUpdate);</span>
<span class="cstat-no" title="statement not covered" >                     handleInputChange("protein", String(Math.round(result.protein)), isUpdate);</span>
<span class="cstat-no" title="statement not covered" >                     handleInputChange("carbs", String(Math.round(result.carbs)), isUpdate);</span>
<span class="cstat-no" title="statement not covered" >                     handleInputChange("fat", String(Math.round(result.fat)), isUpdate);</span>
<span class="cstat-no" title="statement not covered" >                     setInputMode("manual");</span>
<span class="cstat-no" title="statement not covered" >                     setIngredients("");</span>
<span class="cstat-no" title="statement not covered" >                     Toast.show({ type: 'success', text1: t('addFoodModal.foodIdentified'), text2: t('addFoodModal.foodIdentifiedMessage', { foodName: result.foodName }), position: 'bottom', });</span>
                } catch (analysisError) { <span class="cstat-no" title="statement not covered" >console.error("Error during image analysis (modal):", analysisError); </span>}
                finally { <span class="cstat-no" title="statement not covered" >setAiImageLoading(false); </span>}
            } else { <span class="cstat-no" title="statement not covered" >Alert.alert(t('addFoodModal.errorGetImage'), t('addEntryModal.alertQuickAddCouldNotSelect')); <span class="cstat-no" title="statement not covered" ></span>setAiImageLoading(false); </span>}
        };
<span class="cstat-no" title="statement not covered" >        Alert.alert(t('addFoodModal.errorGetImage'), t('addFoodModal.errorGetImageMessage'),</span>
            [ { text: t('addEntryModal.cancel'), style: "cancel" },
              { text: t('addEntryModal.camera'), onPress: <span class="fstat-no" title="function not covered" >as</span>ync () =&gt; { <span class="cstat-no" title="statement not covered" >try { const perm = <span class="cstat-no" title="statement not covered" >await ImagePicker.requestCameraPermissionsAsync();</span> <span class="cstat-no" title="statement not covered" >if (!perm.granted) { <span class="cstat-no" title="statement not covered" >Alert.alert(t('addFoodModal.errorPermission'), t('addFoodModal.errorCameraPermission')); <span class="cstat-no" title="statement not covered" ></span>return; </span>} </span>const res = <span class="cstat-no" title="statement not covered" >await ImagePicker.launchCameraAsync({ quality: 1, exif: false });</span> <span class="cstat-no" title="statement not covered" >await processImage(res); </span>} catch (e) { <span class="cstat-no" title="statement not covered" >console.error(e); <span class="cstat-no" title="statement not covered" ></span>Alert.alert(t('addFoodModal.errorCamera')); </span>} </span>} },
              { text: t('addEntryModal.gallery'), onPress: <span class="fstat-no" title="function not covered" >as</span>ync () =&gt; { <span class="cstat-no" title="statement not covered" >try { const perm = <span class="cstat-no" title="statement not covered" >await ImagePicker.requestMediaLibraryPermissionsAsync();</span> <span class="cstat-no" title="statement not covered" >if (!perm.granted) { <span class="cstat-no" title="statement not covered" >Alert.alert(t('addFoodModal.errorPermission'), t('addEntryModal.alertQuickAddGalleryPermission')); <span class="cstat-no" title="statement not covered" ></span>return; </span>} </span>const res = <span class="cstat-no" title="statement not covered" >await ImagePicker.launchImageLibraryAsync({ mediaTypes: ImagePicker.MediaTypeOptions.Images, quality: 1 });</span> <span class="cstat-no" title="statement not covered" >await processImage(res); </span>} catch (e) { <span class="cstat-no" title="statement not covered" >console.error(e); <span class="cstat-no" title="statement not covered" ></span>Alert.alert(t('addFoodModal.errorGallery')); </span>} </span>} }, ],
            { cancelable: true }
        );
    };
&nbsp;
    const isAnyLoading = <span class="cstat-no" title="statement not covered" >loading || aiTextLoading || aiImageLoading;</span>
    const combinedOverlayStyle = <span class="cstat-no" title="statement not covered" >StyleSheet.flatten([ styles.overlayStyle, { backgroundColor: theme.colors.background } ]);</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    return (</span>
        &lt;Overlay isVisible={isVisible} onBackdropPress={!isAnyLoading ? toggleOverlay : undefined} animationType="fade" overlayStyle={styles.overlayContainer} &gt;
            &lt;KeyboardAvoidingView behavior={Platform.OS === "ios" ? "padding" : "height"} style={styles.keyboardAvoidingView} keyboardVerticalOffset={KEYBOARD_VERTICAL_OFFSET} &gt;
                &lt;View style={combinedOverlayStyle}&gt;
                    &lt;View style={styles.header}&gt;
                        &lt;Text h4 style={styles.overlayTitle}&gt; {editFood ? t('addFoodModal.titleEdit') : t('addFoodModal.titleAdd')} &lt;/Text&gt;
                        &lt;Button title={editFood ? t('addFoodModal.buttonUpdate') : t('addFoodModal.buttonAdd')} onPress={handleCreateOrUpdate}
                                buttonStyle={[ styles.button, { backgroundColor: editFood ? theme.colors.warning : theme.colors.primary } ]}
                                titleStyle={styles.buttonTitle} loading={loading} disabled={isAnyLoading} containerStyle={styles.buttonContainer} /&gt;
                        &lt;Icon name="close" type="material" size={28} color={theme.colors.text} onPress={!isAnyLoading ? toggleOverlay : undefined}
                              containerStyle={styles.closeIcon} disabled={isAnyLoading} disabledStyle={{ backgroundColor: 'transparent' }} /&gt;
                    &lt;/View&gt;
                    &lt;ScrollView keyboardShouldPersistTaps="handled" contentContainerStyle={styles.scrollContentContainer}&gt;
                        {!editFood &amp;&amp; (
                            &lt;ButtonGroup
                                buttons={[t('addFoodModal.manualInput'), t('addFoodModal.aiAssist')]}
                                selectedIndex={inputMode === 'manual' ? 0 : 1}
                                onPress={<span class="fstat-no" title="function not covered" >(i</span>ndex) =&gt; {
<span class="cstat-no" title="statement not covered" >                                    if (isAnyLoading) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >                                    setInputMode(index === 0 ? 'manual' : 'ai');</span>
                                }}
                                containerStyle={styles.inputModeButtonGroup}
                                selectedButtonStyle={{ backgroundColor: theme.colors.card }}
                                textStyle={{ color: theme.colors.grey4 }}
                                selectedTextStyle={{ color: theme.colors.text }}
                                disabled={isAnyLoading}
                                disabledStyle={{ backgroundColor: theme.colors.grey4 }}
                            /&gt;
                        )}
&nbsp;
                        {/* START: MODIFICATION FOR CONSISTENT HEIGHT */}
                        &lt;View style={styles.contentContainer}&gt;
                            {inputMode === 'manual' ? (
                                &lt;View&gt;
                                    &lt;FoodFormFields
                                        values={getCurrentFoodData()}
                                        errors={errors}
                                        onInputChange={handleInputChange}
                                        isEditing={!!editFood}
                                        disabled={isAnyLoading}
                                    /&gt;
                                &lt;/View&gt;
                            ) : (
                                &lt;View style={styles.aiContainer}&gt;
                                    &lt;Input
                                        label={t('addFoodModal.ingredientsLabel')}
                                        labelStyle={styles.inputLabel}
                                        value={ingredients}
                                        onChangeText={setIngredients}
                                        multiline={true}
                                        numberOfLines={4}
                                        inputContainerStyle={[styles.inputContainerStyle, styles.multilineInputContainer]}
                                        inputStyle={[styles.inputStyle, styles.multilineInput]}
                                        placeholder={t('addFoodModal.ingredientsPlaceholder')}
                                        placeholderTextColor={theme.colors.grey3}
                                        disabled={isAnyLoading}
                                    /&gt;
                                    &lt;Button
                                        title={t('addFoodModal.analyzeTextButton')}
                                        onPress={handleAnalyzeText}
                                        buttonStyle={[styles.aiButton, { backgroundColor: theme.colors.grey0 }]}
                                        titleStyle={styles.aiButtonTitle}
                                        loading={aiTextLoading}
                                        disabled={isAnyLoading}
                                        icon={&lt;Icon name="text-box-search-outline" type="material-community" size={20} color="white" style={{ marginRight: 8 }} /&gt;}
                                    /&gt;
                                    &lt;Text style={styles.orDividerText}&gt;{t('addFoodModal.orDivider')}&lt;/Text&gt;
                                    &lt;Button
                                        title={t('addFoodModal.analyzeImageButton')}
                                        onPress={handleGetImageAndAnalyze}
                                        buttonStyle={[styles.aiButton, { backgroundColor: theme.colors.grey0 }]}
                                        titleStyle={styles.aiButtonTitle}
                                        loading={aiImageLoading}
                                        disabled={isAnyLoading}
                                        icon={&lt;Icon name="camera-enhance-outline" type="material-community" size={20} color="white" style={{ marginRight: 8 }} /&gt;}
                                    /&gt;
                                &lt;/View&gt;
                            )}
                        &lt;/View&gt;
                        {/* END: MODIFICATION */}
                    &lt;/ScrollView&gt;
                &lt;/View&gt;
            &lt;/KeyboardAvoidingView&gt;
        &lt;/Overlay&gt;
    );
};
&nbsp;
const useStyles = <span class="cstat-no" title="statement not covered" >makeStyles(<span class="fstat-no" title="function not covered" >(t</span>heme) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
    overlayContainer: { backgroundColor: 'transparent', width: '90%', maxWidth: 500, padding: 0, borderRadius: 15, shadowColor: "#000", shadowOffset: { width: 0, height: 2, }, shadowOpacity: 0.25, shadowRadius: 3.84, elevation: 5, overflow: 'hidden', },
    overlayStyle: { width: '100%', borderRadius: 15, padding: 20, paddingBottom: 0, maxHeight: '97%', backgroundColor: theme.colors.background },
    keyboardAvoidingView: { width: "100%", maxHeight: '100%' },
    scrollContentContainer: { paddingBottom: 20 },
    header: { flexDirection: "row", justifyContent: "space-between", alignItems: "center", marginBottom: 15, paddingBottom: 10, borderBottomWidth: 1, borderBottomColor: theme.colors.divider, },
    overlayTitle: { color: theme.colors.text, fontWeight: "bold", fontSize: 20, flexShrink: 1, marginRight: 10, textAlign: 'left' },
    closeIcon: { padding: 5, marginLeft: 10, },
    inputLabel: { color: theme.colors.text, fontWeight: '500', marginBottom: 5, fontSize: 14, textAlign: 'left' },
    inputContainerStyle: { borderBottomWidth: 1, borderBottomColor: theme.colors.grey4, marginBottom: 5, paddingBottom: 2, },
    inputStyle: { color: theme.colors.text, marginLeft: 10, fontSize: 16, textAlign: 'left' },
    multilineInputContainer: { borderWidth: 1, borderColor: theme.colors.grey4, borderRadius: 8, paddingVertical: 8, paddingHorizontal: 10, marginBottom: 10, borderBottomWidth: 1, borderBottomColor: theme.colors.grey4, minHeight: 100, },
    multilineInput: { marginLeft: 0, textAlignVertical: 'top', fontSize: 16, color: theme.colors.text, textAlign: 'left' },
    buttonContainer: { },
    button: { borderRadius: 8, paddingHorizontal: 15, paddingVertical: 10, },
    buttonTitle: { color: theme.colors.white, fontWeight: "600", fontSize: 15 },
    aiButton: { paddingVertical: 12, borderRadius: 8, },
    aiButtonTitle: { fontWeight: "600", fontSize: 15, textAlign: 'center', },
    inputModeButtonGroup: {
        marginBottom: 20,
        borderRadius: 8,
        backgroundColor: theme.colors.background
    },
    aiContainer: {
        paddingTop: 10,
    },
    orDividerText: {
        textAlign: 'center',
        marginVertical: 15,
        color: theme.colors.grey1,
        fontWeight: 'bold',
    },
    // START: ADDED STYLE FOR CONSISTENT HEIGHT
    contentContainer: {
        minHeight: 500,
        justifyContent: 'flex-start',
    },
    // END: ADDED STYLE
}));
&nbsp;
export default AddFoodModal;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END AddFoodModal.tsx.html ----------


---------- ConfirmationModal.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/ConfirmationModal.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">components</a> ConfirmationModal.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/7</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/6</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/1</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/7</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/components/ConfirmationModal.tsx
// components/ConfirmationModal.tsx
import React from 'react';
import { View, StyleSheet } from 'react-native';
import { Overlay, Button, Input, Text, useTheme } from '@rneui/themed';
import { t } from '../localization/i18n';
&nbsp;
interface ConfirmationModalProps {
  isVisible: boolean;
  onCancel: () =&gt; void;
  onConfirm: () =&gt; void;
  confirmationText: string;
  setConfirmationText: (text: string) =&gt; void;
  title?: string;
  message?: string;
  inputPlaceholder?: string;
}
&nbsp;
const ConfirmationModal: React.FC&lt;ConfirmationModalProps&gt; = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span></span>
  isVisible,
  onCancel,
  onConfirm,
  confirmationText,
  setConfirmationText,
  title,
  message,
  inputPlaceholder
}) =&gt; {
  const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
&nbsp;
  const modalTitle = <span class="cstat-no" title="statement not covered" >title || t('confirmationModal.defaultTitle');</span>
  const modalMessage = <span class="cstat-no" title="statement not covered" >message || t('confirmationModal.defaultMessage');</span>
  const modalPlaceholder = <span class="cstat-no" title="statement not covered" >inputPlaceholder || t('confirmationModal.enterTextPlaceholder');</span>
&nbsp;
&nbsp;
<span class="cstat-no" title="statement not covered" >  return (</span>
    &lt;Overlay
      isVisible={isVisible}
      onBackdropPress={onCancel}
      overlayStyle={[styles.overlay, { backgroundColor: theme.colors.card }]}
      backdropStyle={styles.backdrop}
    &gt;
      &lt;View style={styles.container}&gt;
        &lt;Text style={[styles.title, {color: theme.colors.text}]}&gt;{modalTitle}&lt;/Text&gt;
        &lt;Text style={[styles.message, {color: theme.colors.text}]}&gt;{modalMessage}&lt;/Text&gt;
        &lt;Input
          placeholder={modalPlaceholder}
          placeholderTextColor={theme.colors.grey3} // Adjusted for better visibility
          value={confirmationText}
          onChangeText={setConfirmationText}
          containerStyle={styles.inputContainer}
          inputStyle={{ color: theme.colors.text, textAlign: 'left' }}
          inputContainerStyle={{borderBottomColor: theme.colors.text}}
        /&gt;
        &lt;View style={styles.buttonContainer}&gt;
          &lt;Button title={t('confirmationModal.cancel')} onPress={onCancel} type="outline" buttonStyle={styles.button} /&gt;
          &lt;Button
            title={t('confirmationModal.confirm')}
            onPress={onConfirm}
            color="error"
            buttonStyle={styles.button}
            disabled={confirmationText === ""}
          /&gt;
        &lt;/View&gt;
      &lt;/View&gt;
    &lt;/Overlay&gt;
  );
};
&nbsp;
const styles = <span class="cstat-no" title="statement not covered" >StyleSheet.create({</span>
    overlay: {
        borderRadius: 10,
        width: '80%',
        padding: 0,
    },
  container: {
    padding: 20,
    borderRadius: 10,
  },
  title: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 10,
    textAlign: 'center',
  },
  message: {
    marginBottom: 15,
    textAlign: 'center'
  },
  inputContainer: {
    marginBottom: 20,
  },
  buttonContainer: {
    flexDirection: 'row',
    justifyContent: 'space-around',
  },
  button: {
    width: 100,
    padding: 10,
  },
  backdrop: {
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
  },
});
&nbsp;
export default ConfirmationModal;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END ConfirmationModal.tsx.html ----------


---------- DailyEntryListItem.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/DailyEntryListItem.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">components</a> DailyEntryListItem.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/44</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/28</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/13</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/35</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a>
<a name='L128'></a><a href='#L128'>128</a>
<a name='L129'></a><a href='#L129'>129</a>
<a name='L130'></a><a href='#L130'>130</a>
<a name='L131'></a><a href='#L131'>131</a>
<a name='L132'></a><a href='#L132'>132</a>
<a name='L133'></a><a href='#L133'>133</a>
<a name='L134'></a><a href='#L134'>134</a>
<a name='L135'></a><a href='#L135'>135</a>
<a name='L136'></a><a href='#L136'>136</a>
<a name='L137'></a><a href='#L137'>137</a>
<a name='L138'></a><a href='#L138'>138</a>
<a name='L139'></a><a href='#L139'>139</a>
<a name='L140'></a><a href='#L140'>140</a>
<a name='L141'></a><a href='#L141'>141</a>
<a name='L142'></a><a href='#L142'>142</a>
<a name='L143'></a><a href='#L143'>143</a>
<a name='L144'></a><a href='#L144'>144</a>
<a name='L145'></a><a href='#L145'>145</a>
<a name='L146'></a><a href='#L146'>146</a>
<a name='L147'></a><a href='#L147'>147</a>
<a name='L148'></a><a href='#L148'>148</a>
<a name='L149'></a><a href='#L149'>149</a>
<a name='L150'></a><a href='#L150'>150</a>
<a name='L151'></a><a href='#L151'>151</a>
<a name='L152'></a><a href='#L152'>152</a>
<a name='L153'></a><a href='#L153'>153</a>
<a name='L154'></a><a href='#L154'>154</a>
<a name='L155'></a><a href='#L155'>155</a>
<a name='L156'></a><a href='#L156'>156</a>
<a name='L157'></a><a href='#L157'>157</a>
<a name='L158'></a><a href='#L158'>158</a>
<a name='L159'></a><a href='#L159'>159</a>
<a name='L160'></a><a href='#L160'>160</a>
<a name='L161'></a><a href='#L161'>161</a>
<a name='L162'></a><a href='#L162'>162</a>
<a name='L163'></a><a href='#L163'>163</a>
<a name='L164'></a><a href='#L164'>164</a>
<a name='L165'></a><a href='#L165'>165</a>
<a name='L166'></a><a href='#L166'>166</a>
<a name='L167'></a><a href='#L167'>167</a>
<a name='L168'></a><a href='#L168'>168</a>
<a name='L169'></a><a href='#L169'>169</a>
<a name='L170'></a><a href='#L170'>170</a>
<a name='L171'></a><a href='#L171'>171</a>
<a name='L172'></a><a href='#L172'>172</a>
<a name='L173'></a><a href='#L173'>173</a>
<a name='L174'></a><a href='#L174'>174</a>
<a name='L175'></a><a href='#L175'>175</a>
<a name='L176'></a><a href='#L176'>176</a>
<a name='L177'></a><a href='#L177'>177</a>
<a name='L178'></a><a href='#L178'>178</a>
<a name='L179'></a><a href='#L179'>179</a>
<a name='L180'></a><a href='#L180'>180</a>
<a name='L181'></a><a href='#L181'>181</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/components/DailyEntryListItem.tsx
import React, { useState, useEffect, useCallback, memo, useMemo } from 'react';
import { View, StyleSheet } from 'react-native';
import { ListItem, Button, Icon as RNEIcon, useTheme, makeStyles, Text } from '@rneui/themed';
import { DailyEntryItem } from '../types/dailyEntry';
import { t } from '../localization/i18n';
import { calculateDailyEntryGrade, FoodGradeResult } from '../utils/gradingUtils';
import { Settings } from '../types/settings';
import { getFoodIconUrl } from '../utils/iconUtils';
&nbsp;
&nbsp;
interface DailyEntryListItemProps {
    item: DailyEntryItem;
    reversedIndex: number;
    foodIcons: { [foodName: string]: string | null };
    setFoodIcons: React.Dispatch&lt;React.SetStateAction&lt;{ [foodName: string]: string | null }&gt;&gt;;
    onEdit: (item: DailyEntryItem, reversedIndex: number) =&gt; void;
    onRemove: (reversedIndex: number) =&gt; void;
    isSaving: boolean;
    dailyGoals: Settings['dailyGoals'];
}
&nbsp;
const DailyEntryListItem = <span class="cstat-no" title="statement not covered" >memo&lt;DailyEntryListItemProps&gt;(<span class="fstat-no" title="function not covered" >({</span></span>
    item,
    reversedIndex,
    foodIcons,
    setFoodIcons,
    onEdit,
    onRemove,
    isSaving,
    dailyGoals,
}) =&gt; {
    const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
    const styles = <span class="cstat-no" title="statement not covered" >useStyles();</span>
&nbsp;
    const iconIdentifier = <span class="cstat-no" title="statement not covered" >useMemo(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (item?.food?.name) {</span>
<span class="cstat-no" title="statement not covered" >            if (foodIcons[item.food.name] !== undefined) {</span>
<span class="cstat-no" title="statement not covered" >                return foodIcons[item.food.name];</span>
            }
<span class="cstat-no" title="statement not covered" >            return getFoodIconUrl(item.food.name); </span>// No locale needed
        }
<span class="cstat-no" title="statement not covered" >        return null;</span>
    }, [item.food?.name, foodIcons]);
&nbsp;
<span class="cstat-no" title="statement not covered" >    useEffect(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (item?.food?.name &amp;&amp; iconIdentifier !== undefined &amp;&amp; foodIcons[item.food.name] === undefined) {</span>
<span class="cstat-no" title="statement not covered" >            setFoodIcons(<span class="fstat-no" title="function not covered" >pr</span>ev =&gt; (<span class="cstat-no" title="statement not covered" >{ ...prev, [item.food.name]: iconIdentifier })</span>);</span>
        }
    }, [item.food?.name, iconIdentifier, foodIcons, setFoodIcons]);
&nbsp;
&nbsp;
    const gradeResult: FoodGradeResult | null = <span class="cstat-no" title="statement not covered" >useMemo(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (!item || !item.food || !dailyGoals) <span class="cstat-no" title="statement not covered" >return null;</span></span>
<span class="cstat-no" title="statement not covered" >        return calculateDailyEntryGrade(item.food, item.grams, dailyGoals);</span>
    }, [item, dailyGoals]);
&nbsp;
&nbsp;
    const renderListItemIcon = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (!item?.food) {</span>
<span class="cstat-no" title="statement not covered" >             return (</span>
                 &lt;View style={[styles.foodIcon, styles.iconPlaceholder]}&gt;
                     &lt;RNEIcon name="help-circle-outline" type="ionicon" size={20} color={theme.colors.grey3} /&gt;
                 &lt;/View&gt;
             );
        }
<span class="cstat-no" title="statement not covered" >        if (iconIdentifier) {</span>
<span class="cstat-no" title="statement not covered" >            return &lt;Text style={styles.foodIconEmoji}&gt;{iconIdentifier}&lt;/Text&gt;;</span>
        } else {
<span class="cstat-no" title="statement not covered" >            return (</span>
                &lt;View style={[styles.foodIcon, styles.iconPlaceholder]}&gt;
                    &lt;RNEIcon name="fast-food-outline" type="ionicon" size={20} color={theme.colors.grey3} /&gt;
                &lt;/View&gt;
            );
        }
    };
&nbsp;
<span class="cstat-no" title="statement not covered" >     if (!item || !item.food) {</span>
<span class="cstat-no" title="statement not covered" >         return (</span>
             &lt;ListItem containerStyle={styles.listItemContainer}&gt;
                 &lt;ListItem.Content&gt;
                      &lt;ListItem.Title style={[{color: theme.colors.error}, styles.textLeft]}&gt;{t('dailyEntryScreen.invalidEntryData')}&lt;/ListItem.Title&gt;
                 &lt;/ListItem.Content&gt;
             &lt;/ListItem&gt;
         );
     }
&nbsp;
    const handleEditPress = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span> =&gt; { <span class="cstat-no" title="statement not covered" >if (!isSaving) <span class="cstat-no" title="statement not covered" >onEdit(item, reversedIndex); </span></span>};</span>
    const handleDeletePress = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span> =&gt; { <span class="cstat-no" title="statement not covered" >if (!isSaving) <span class="cstat-no" title="statement not covered" >onRemove(reversedIndex); </span></span>};</span>
&nbsp;
    const calculatedCalories = <span class="cstat-no" title="statement not covered" >Math.round((item.food.calories / 100) * item.grams);</span>
    const calculatedProtein = <span class="cstat-no" title="statement not covered" >Math.round((item.food.protein / 100) * item.grams);</span>
    const calculatedCarbs = <span class="cstat-no" title="statement not covered" >Math.round((item.food.carbs / 100) * item.grams);</span>
    const calculatedFat = <span class="cstat-no" title="statement not covered" >Math.round((item.food.fat / 100) * item.grams);</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    return (</span>
        &lt;ListItem.Swipeable
            bottomDivider
            leftContent={<span class="fstat-no" title="function not covered" >(r</span>eset) =&gt; (
<span class="cstat-no" title="statement not covered" >                &lt;Button</span>
                    title={t('dailyEntryScreen.edit')}
                    onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; { <span class="cstat-no" title="statement not covered" >handleEditPress(); <span class="cstat-no" title="statement not covered" ></span>reset(); </span>}}
                    icon={{ name: "edit", color: theme.colors.white }}
                    buttonStyle={styles.swipeButtonEdit}
                    titleStyle={styles.swipeButtonTitle}
                    disabled={isSaving}
                /&gt;
            )}
            rightContent={<span class="fstat-no" title="function not covered" >(r</span>eset) =&gt; (
<span class="cstat-no" title="statement not covered" >                &lt;Button</span>
                    title={t('dailyEntryScreen.delete')}
                    onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; { <span class="cstat-no" title="statement not covered" >handleDeletePress(); <span class="cstat-no" title="statement not covered" ></span>reset(); </span>}}
                    icon={{ name: "delete", color: theme.colors.white }}
                    buttonStyle={styles.swipeButtonDelete}
                    titleStyle={styles.swipeButtonTitle}
                    disabled={isSaving}
                /&gt;
            )}
            containerStyle={styles.listItemContainer}
        &gt;
            {renderListItemIcon()}
            &lt;ListItem.Content&gt;
                &lt;View style={styles.titleContainer}&gt;
                    {gradeResult &amp;&amp; (
                        &lt;Text style={[styles.gradePill, { backgroundColor: gradeResult.color }]}&gt;
                            {gradeResult.letter}
                        &lt;/Text&gt;
                    )}
                    &lt;ListItem.Title style={styles.listItemTitle}&gt;
                        {item.food.name}
                    &lt;/ListItem.Title&gt;
                &lt;/View&gt;
                &lt;ListItem.Subtitle style={styles.listItemSubtitle}&gt;
                    {`${item.grams}g • Cal: ${calculatedCalories} P: ${calculatedProtein} C: ${calculatedCarbs} F: ${calculatedFat}`}
                &lt;/ListItem.Subtitle&gt;
            &lt;/ListItem.Content&gt;
            &lt;ListItem.Chevron color={theme.colors.grey3} /&gt;
        &lt;/ListItem.Swipeable&gt;
    );
});
&nbsp;
const useStyles = <span class="cstat-no" title="statement not covered" >makeStyles(<span class="fstat-no" title="function not covered" >(t</span>heme) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
    foodIcon: { width: 40, height: 40, marginRight: 15, borderRadius: 8, alignItems: 'center', justifyContent: 'center', },
    foodIconEmoji: {
        fontSize: 28,
        width: 40,
        height: 40,
        marginRight: 15,
        textAlign: 'center',
        textAlignVertical: 'center',
    },
    iconPlaceholder: { backgroundColor: theme.colors.grey5, },
    listItemContainer: { backgroundColor: theme.colors.background, paddingVertical: 12, paddingHorizontal: 15, borderBottomColor: theme.colors.divider, },
    titleContainer: { flexDirection: 'row', alignItems: 'center', marginBottom: 3, },
    gradePill: {
        fontSize: 12,
        fontWeight: 'bold',
        color: theme.colors.white,
        paddingHorizontal: 6,
        paddingVertical: 2,
        borderRadius: 8,
        marginRight: 8,
        minWidth: 20,
        textAlign: 'center',
        overflow: 'hidden',
    },
    listItemTitle: {
        color: theme.colors.text,
        fontWeight: "600",
        fontSize: 16,
        flexShrink: 1,
        textAlign: 'left',
    },
    listItemSubtitle: { color: theme.colors.secondary, fontSize: 14, textAlign: 'left', },
    swipeButtonEdit: { minHeight: "100%", backgroundColor: theme.colors.warning, justifyContent: 'center', alignItems: 'center', },
    swipeButtonDelete: { minHeight: "100%", backgroundColor: theme.colors.error, justifyContent: 'center', alignItems: 'center', },
    swipeButtonTitle: { color: theme.colors.white, fontWeight: 'bold', fontSize: 15, },
    textLeft: { textAlign: 'left'},
}));
&nbsp;
export default DailyEntryListItem;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END DailyEntryListItem.tsx.html ----------


---------- DailyGoalsInput.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/DailyGoalsInput.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">components</a> DailyGoalsInput.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/15</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/7</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/5</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/14</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/components/DailyGoalsInput.tsx
// components/DailyGoalsInput.tsx
import React from "react";
import { Input, Text } from "@rneui/themed";
import { MacroType } from "../types/settings";
import { useTheme, makeStyles } from "@rneui/themed"; // Import makeStyles
import { t } from '../localization/i18n';
&nbsp;
interface DailyGoalsInputProps {
    dailyGoals: { [key in MacroType]: number };
    onGoalChange: (goalType: MacroType, value: string) =&gt; void;
}
&nbsp;
const DailyGoalsInput: React.FC&lt;DailyGoalsInputProps&gt; = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span></span>
  dailyGoals,
  onGoalChange,
}) =&gt; {
  const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
  const styles = <span class="cstat-no" title="statement not covered" >useStyles();</span> // Use styles
&nbsp;
  const getLabel = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(m</span>acro: MacroType) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    switch(macro) {</span>
        case 'calories': <span class="cstat-no" title="statement not covered" >return t('dailyGoalsInput.caloriesGoal');</span>
        case 'protein': <span class="cstat-no" title="statement not covered" >return t('dailyGoalsInput.proteinGoal');</span>
        case 'carbs': <span class="cstat-no" title="statement not covered" >return t('dailyGoalsInput.carbsGoal');</span>
        case 'fat': <span class="cstat-no" title="statement not covered" >return t('dailyGoalsInput.fatGoal');</span>
        default: <span class="cstat-no" title="statement not covered" >return macro;</span>
    }
  }
&nbsp;
<span class="cstat-no" title="statement not covered" >  return (</span>
    &lt;&gt;
      {(["calories", "protein", "carbs", "fat"] as MacroType[]).map(<span class="fstat-no" title="function not covered" >(m</span>acro) =&gt; (
<span class="cstat-no" title="statement not covered" >        &lt;Input</span>
          key={macro}
          label={&lt;Text style={[styles.labelStyle, { color: theme.colors.text }]}&gt;{getLabel(macro)}&lt;/Text&gt;}
          keyboardType="numeric"
          value={dailyGoals?.[macro]?.toString() || ""}
          onChangeText={<span class="fstat-no" title="function not covered" >(v</span>alue) =&gt; <span class="cstat-no" title="statement not covered" >onGoalChange(macro, value)}</span>
          style={[styles.inputStyle, { color: theme.colors.text }]} // Apply inputStyle
          inputContainerStyle={{ borderBottomColor: theme.colors.text }}
        /&gt;
      ))}
    &lt;/&gt;
  );
};
&nbsp;
// Add useStyles
const useStyles = <span class="cstat-no" title="statement not covered" >makeStyles(<span class="fstat-no" title="function not covered" >(t</span>heme) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
    labelStyle: {
        color: theme.colors.text,
        fontWeight: 'normal', // RNEUI default is bold, make it normal if needed
        textAlign: 'left',
    },
    inputStyle: {
        textAlign: 'left',
    },
}));
&nbsp;
export default DailyGoalsInput;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END DailyGoalsInput.tsx.html ----------


---------- DailyProgress.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/DailyProgress.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">components</a> DailyProgress.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/14</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/6</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/4</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/12</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/components/DailyProgress.tsx
import React from 'react';
import { View } from 'react-native';
import { Text, useTheme, makeStyles } from '@rneui/themed';
import { t } from '../localization/i18n';
&nbsp;
interface DailyProgressProps {
  calories: number;
  protein: number;
  carbs: number;
  fat: number;
  goals: {
    calories?: number;
    protein?: number;
    carbs?: number;
    fat?: number;
  };
}
&nbsp;
const DailyProgress: React.FC&lt;DailyProgressProps&gt; = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span></span>
  calories,
  protein,
  carbs,
  fat,
  goals,
}) =&gt; {
  const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
  const styles = <span class="cstat-no" title="statement not covered" >useStyles();</span>
&nbsp;
  const calculateProgress = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(c</span>urrent: number, goal?: number) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (!goal || goal &lt;= 0) <span class="cstat-no" title="statement not covered" >return 0;</span></span>
<span class="cstat-no" title="statement not covered" >    return Math.min(current / goal, 1);</span>
  };
&nbsp;
  const renderProgressBar = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(l</span>abelKey: 'calories' | 'protein' | 'carbs' | 'fat', current: number, goal: number | undefined, color: string) =&gt; {</span>
      const progress = <span class="cstat-no" title="statement not covered" >calculateProgress(current, goal);</span>
      const labelText = <span class="cstat-no" title="statement not covered" >t(`dailyProgress.${labelKey}`);</span>
<span class="cstat-no" title="statement not covered" >      return (</span>
          &lt;View style={styles.macroContainer} key={labelKey}&gt;
              &lt;View style={styles.labelContainer}&gt;
                    &lt;Text style={[styles.macroLabel, {color: theme.colors.text}]}&gt;{labelText}:&lt;/Text&gt;
                    &lt;Text style={[styles.macroValue, {color: theme.colors.text}]}&gt;
                        {`${Math.round(current)} / ${goal || 0}`}
                    &lt;/Text&gt;
              &lt;/View&gt;
              &lt;View testID="progress-bar-container" style={styles.progressBarContainer}&gt;
                  &lt;View style={[styles.progressBar, { width: `${progress * 100}%`, backgroundColor: color }]} /&gt;
              &lt;/View&gt;
          &lt;/View&gt;
      )
  }
&nbsp;
<span class="cstat-no" title="statement not covered" >  return (</span>
    &lt;View style={styles.container}&gt;
        {renderProgressBar('calories', calories, goals.calories, theme.colors.primary)}
        {renderProgressBar('protein', protein, goals.protein, theme.colors.success)}
        {renderProgressBar('carbs', carbs, goals.carbs, theme.colors.warning)}
        {renderProgressBar('fat', fat, goals.fat, theme.colors.error)}
    &lt;/View&gt;
  );
};
&nbsp;
const useStyles = <span class="cstat-no" title="statement not covered" >makeStyles(<span class="fstat-no" title="function not covered" >(t</span>heme) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
  container: {
    marginBottom: 20,
    padding: 10,
    borderRadius: 8,
  },
  macroContainer: {
    marginBottom: 10,
  },
  labelContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 5,
  },
  macroLabel: {
    fontWeight: 'bold',
    textAlign: 'left',
  },
  macroValue: {
    textAlign: 'right',
  },
  progressBarContainer: {
      backgroundColor: theme.colors.grey5,
      borderRadius: 5,
      height: 10
  },
  progressBar: {
    height: 10,
    borderRadius: 5,
  },
}));
&nbsp;
export default DailyProgress;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END DailyProgress.tsx.html ----------


---------- DataManagementButtons.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/DataManagementButtons.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">components</a> DataManagementButtons.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/70</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/34</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/6</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/58</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a>
<a name='L128'></a><a href='#L128'>128</a>
<a name='L129'></a><a href='#L129'>129</a>
<a name='L130'></a><a href='#L130'>130</a>
<a name='L131'></a><a href='#L131'>131</a>
<a name='L132'></a><a href='#L132'>132</a>
<a name='L133'></a><a href='#L133'>133</a>
<a name='L134'></a><a href='#L134'>134</a>
<a name='L135'></a><a href='#L135'>135</a>
<a name='L136'></a><a href='#L136'>136</a>
<a name='L137'></a><a href='#L137'>137</a>
<a name='L138'></a><a href='#L138'>138</a>
<a name='L139'></a><a href='#L139'>139</a>
<a name='L140'></a><a href='#L140'>140</a>
<a name='L141'></a><a href='#L141'>141</a>
<a name='L142'></a><a href='#L142'>142</a>
<a name='L143'></a><a href='#L143'>143</a>
<a name='L144'></a><a href='#L144'>144</a>
<a name='L145'></a><a href='#L145'>145</a>
<a name='L146'></a><a href='#L146'>146</a>
<a name='L147'></a><a href='#L147'>147</a>
<a name='L148'></a><a href='#L148'>148</a>
<a name='L149'></a><a href='#L149'>149</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/components/DataManagementButtons.tsx
// src/components/DataManagementButtons.tsx
import React, { useState } from "react";
import { Alert, Platform } from "react-native";
import { Button, Icon } from "@rneui/themed";
import * as DocumentPicker from "expo-document-picker";
import * as FileSystem from "expo-file-system";
import * as Sharing from 'expo-sharing';
import { formatDateISO } from "../utils/dateUtils";
import {
  clearAllData,
  loadDailyEntries,
  saveDailyEntries,
  loadFoods,
  saveFoods,
  loadSettings,
  saveSettings
} from "../services/storageService";
import ConfirmationModal from "./ConfirmationModal";
import { DailyEntry } from "../types/dailyEntry";
import { Food } from "../types/food";
import { Settings } from "../types/settings";
import { useTheme } from "@rneui/themed";
import { t } from '../localization/i18n';
&nbsp;
interface DataManagementButtonsProps {
  onDataOperation: () =&gt; void;
}
&nbsp;
const DataManagementButtons: React.FC&lt;DataManagementButtonsProps&gt; = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span></span>
    onDataOperation
}) =&gt; {
  const [isConfirmationVisible, setIsConfirmationVisible] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
  const [confirmationText, setConfirmationText] = <span class="cstat-no" title="statement not covered" >useState("");</span>
  const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
&nbsp;
  const handleExportData = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
      const dailyEntries = <span class="cstat-no" title="statement not covered" >await loadDailyEntries();</span>
      const { items: foodItems } = <span class="cstat-no" title="statement not covered" >await loadFoods();</span> // Correctly destructure to get the array of food items
      const settings = <span class="cstat-no" title="statement not covered" >await loadSettings();</span>
      
      const exportData = <span class="cstat-no" title="statement not covered" >{ dailyEntries, foods: foodItems, settings };</span> // Use the foodItems array
      
      const exportDataString = <span class="cstat-no" title="statement not covered" >JSON.stringify(exportData, null, 2);</span>
      const formattedDate = <span class="cstat-no" title="statement not covered" >formatDateISO(new Date());</span>
      const fileName = <span class="cstat-no" title="statement not covered" >`macro_data_${formattedDate}.json`;</span>
      const fileUri = <span class="cstat-no" title="statement not covered" >FileSystem.documentDirectory + fileName;</span>
<span class="cstat-no" title="statement not covered" >      await FileSystem.writeAsStringAsync(fileUri, exportDataString, { encoding: FileSystem.EncodingType.UTF8, });</span>
<span class="cstat-no" title="statement not covered" >      if (!(await Sharing.isAvailableAsync())) {</span>
<span class="cstat-no" title="statement not covered" >        Alert.alert(t('dataManagement.exportError'), t('dataManagement.exportErrorNoSharing'));</span>
<span class="cstat-no" title="statement not covered" >        return;</span>
      }
<span class="cstat-no" title="statement not covered" >      await Sharing.shareAsync(fileUri, { mimeType: 'application/json', dialogTitle: t('dataManagement.exportData'), UTI: 'public.json' });</span>
    } catch (error: any) {
<span class="cstat-no" title="statement not covered" >      console.error("Export Error:", error);</span>
<span class="cstat-no" title="statement not covered" >      Alert.alert(t('dataManagement.exportFailed'), error.message || t('dataManagement.exportFailedMessage'));</span>
    }
  };
&nbsp;
  const handleImportData = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
      const result = <span class="cstat-no" title="statement not covered" >await DocumentPicker.getDocumentAsync({ type: ["application/json", "public.json"], copyToCacheDirectory: true });</span>
<span class="cstat-no" title="statement not covered" >      if (result.canceled) { <span class="cstat-no" title="statement not covered" >console.log(t('dataManagement.importCancelled')); <span class="cstat-no" title="statement not covered" ></span>return; </span>}</span>
<span class="cstat-no" title="statement not covered" >      if (result.assets &amp;&amp; result.assets.length &gt; 0) {</span>
        const file = <span class="cstat-no" title="statement not covered" >result.assets[0];</span>
<span class="cstat-no" title="statement not covered" >        if (!file.name?.toLowerCase().endsWith(".json")) { <span class="cstat-no" title="statement not covered" >Alert.alert(t('dataManagement.importInvalidFileType'), t('dataManagement.importInvalidFileTypeMessage')); <span class="cstat-no" title="statement not covered" ></span>return; </span>}</span>
<span class="cstat-no" title="statement not covered" >        if (file.size &amp;&amp; file.size &gt; 10 * 1024 * 1024) { <span class="cstat-no" title="statement not covered" >Alert.alert(t('dataManagement.importFileTooLarge'), t('dataManagement.importFileTooLargeMessage')); <span class="cstat-no" title="statement not covered" ></span>return; </span>}</span>
        const fileContent = <span class="cstat-no" title="statement not covered" >await FileSystem.readAsStringAsync(file.uri, { encoding: FileSystem.EncodingType.UTF8, });</span>
<span class="cstat-no" title="statement not covered" >        try {</span>
          const importedData = <span class="cstat-no" title="statement not covered" >JSON.parse(fileContent);</span>
<span class="cstat-no" title="statement not covered" >          if ( typeof importedData !== 'object' || importedData === null || !importedData.hasOwnProperty("dailyEntries") || !Array.isArray(importedData.dailyEntries) || !importedData.hasOwnProperty("foods") || !Array.isArray(importedData.foods) || !importedData.hasOwnProperty("settings") || typeof importedData.settings !== 'object' ) {</span>
<span class="cstat-no" title="statement not covered" >            Alert.alert(t('dataManagement.importFailed'), t('dataManagement.importFailedInvalidStructure')); <span class="cstat-no" title="statement not covered" ></span>return;</span>
          }
<span class="cstat-no" title="statement not covered" >          await saveDailyEntries(importedData.dailyEntries as DailyEntry[]);</span>
<span class="cstat-no" title="statement not covered" >          await saveFoods(importedData.foods as Food[]);</span>
<span class="cstat-no" title="statement not covered" >          await saveSettings(importedData.settings as Settings);</span>
<span class="cstat-no" title="statement not covered" >          Alert.alert(t('dataManagement.importSuccessful'), t('dataManagement.importSuccessfulMessage'));</span>
<span class="cstat-no" title="statement not covered" >          onDataOperation();</span>
        } catch (parseError) {
<span class="cstat-no" title="statement not covered" >          console.error("JSON Parse Error during import:", parseError);</span>
<span class="cstat-no" title="statement not covered" >          Alert.alert(t('dataManagement.importFailed'), t('dataManagement.importFailedParseError')); <span class="cstat-no" title="statement not covered" ></span>return;</span>
        }
      } else {
<span class="cstat-no" title="statement not covered" >        Alert.alert(t('dataManagement.importFailed'), t('dataManagement.importFailedAccessError'));</span>
      }
    } catch (error: any) {
<span class="cstat-no" title="statement not covered" >      console.error("Import Error:", error);</span>
<span class="cstat-no" title="statement not covered" >      if (error.code === 'NO_PERMISSIONS') { <span class="cstat-no" title="statement not covered" >Alert.alert(t('dataManagement.importFailed'), t('dataManagement.importFailedPermissionError')); </span>}</span>
      else { <span class="cstat-no" title="statement not covered" >Alert.alert(t('dataManagement.importFailed'), error.message || t('dataManagement.importFailedUnknownError')); </span>}
    }
  };
&nbsp;
  const handleClearData = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span> =&gt; { <span class="cstat-no" title="statement not covered" >setIsConfirmationVisible(true); </span>};</span>
&nbsp;
  const confirmClearData = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (confirmationText.trim().toUpperCase() === "CLEAR DATA") {</span>
<span class="cstat-no" title="statement not covered" >      try {</span>
<span class="cstat-no" title="statement not covered" >        await clearAllData();</span>
<span class="cstat-no" title="statement not covered" >        Alert.alert(t('dataManagement.clearDataSuccess'), t('dataManagement.clearDataSuccessMessage'));</span>
<span class="cstat-no" title="statement not covered" >        onDataOperation();</span>
      } catch (error: any) {
<span class="cstat-no" title="statement not covered" >        console.error("Clear Data Error:", error);</span>
<span class="cstat-no" title="statement not covered" >        Alert.alert(t('dataManagement.clearDataFailed'), error.message || t('dataManagement.clearDataFailedMessage'));</span>
      } finally {
<span class="cstat-no" title="statement not covered" >        setConfirmationText(""); <span class="cstat-no" title="statement not covered" ></span>setIsConfirmationVisible(false);</span>
      }
    } else {
<span class="cstat-no" title="statement not covered" >      Alert.alert(t('dataManagement.clearConfirmationFailed'), t('dataManagement.clearConfirmationFailedMessage'));</span>
    }
  };
&nbsp;
<span class="cstat-no" title="statement not covered" >  return (</span>
    &lt;&gt;
      &lt;Button
        title={t('dataManagement.exportData')}
        onPress={handleExportData}
        buttonStyle={{ marginBottom: 10, backgroundColor: theme.colors.primary }}
        icon={&lt;Icon name="export" type="material-community" color="white" size={20} style={{ marginRight: 8 }} /&gt;}
      /&gt;
      &lt;Button
        title={t('dataManagement.importData')}
        onPress={handleImportData}
        buttonStyle={{ marginBottom: 10, backgroundColor: theme.colors.primary }}
        icon={&lt;Icon name="import" type="material-community" color="white" size={20} style={{ marginRight: 8 }} /&gt;}
      /&gt;
      &lt;Button
        title={t('dataManagement.clearAllData')}
        onPress={handleClearData}
        color="error"
        buttonStyle={{ marginBottom: 10 }}
        icon={&lt;Icon name="trash-can-outline" type="material-community" color="white" size={20} style={{ marginRight: 8 }} /&gt;}
      /&gt;
      &lt;ConfirmationModal
        isVisible={isConfirmationVisible}
        onCancel={<span class="fstat-no" title="function not covered" >()</span> =&gt; { <span class="cstat-no" title="statement not covered" >setIsConfirmationVisible(false); <span class="cstat-no" title="statement not covered" ></span>setConfirmationText(""); </span>}}
        onConfirm={confirmClearData}
        confirmationText={confirmationText}
        setConfirmationText={setConfirmationText}
        title={t('dataManagement.confirmClearTitle')}
        message={t('dataManagement.confirmClearMessage')}
        inputPlaceholder={t('dataManagement.confirmClearInputPlaceholder')}
      /&gt;
    &lt;/&gt;
  );
};
&nbsp;
export default DataManagementButtons;
&nbsp;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END DataManagementButtons.tsx.html ----------


---------- DateNavigator.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/DateNavigator.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">components</a> DateNavigator.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/16</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/6</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/4</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/15</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/components/DateNavigator.tsx
import React from 'react';
import { View, TouchableOpacity, StyleSheet } from 'react-native';
import { Button, Text, Icon as RNEIcon, useTheme, makeStyles } from '@rneui/themed';
import { parseISO, isValid } from 'date-fns';
import { formatDateReadableAsync } from '../utils/dateUtils'; // Import async version
import { t } from '../localization/i18n';
import i18n from '../localization/i18n';
&nbsp;
interface DateNavigatorProps {
    selectedDate: string;
    onPreviousDay: () =&gt; void;
    onNextDay: () =&gt; void;
    onShowDatePicker: () =&gt; void;
    isSaving: boolean;
    isLoadingData: boolean;
}
&nbsp;
const DateNavigator: React.FC&lt;DateNavigatorProps&gt; = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span></span>
    selectedDate,
    onPreviousDay,
    onNextDay,
    onShowDatePicker,
    isSaving,
    isLoadingData,
}) =&gt; {
    const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
    const styles = <span class="cstat-no" title="statement not covered" >useStyles();</span>
    const [displayDate, setDisplayDate] = <span class="cstat-no" title="statement not covered" >React.useState(t('dateNavigator.invalidDate'));</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    React.useEffect(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
        const updateDisplayDate = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
            const parsedDate = <span class="cstat-no" title="statement not covered" >parseISO(selectedDate);</span>
<span class="cstat-no" title="statement not covered" >            if (isValid(parsedDate)) {</span>
                const formatted = <span class="cstat-no" title="statement not covered" >await formatDateReadableAsync(parsedDate);</span>
<span class="cstat-no" title="statement not covered" >                setDisplayDate(formatted);</span>
            } else {
<span class="cstat-no" title="statement not covered" >                setDisplayDate(t('dateNavigator.invalidDate'));</span>
            }
        };
<span class="cstat-no" title="statement not covered" >        updateDisplayDate();</span>
    }, [selectedDate, i18n.locale]); // Re-run when selectedDate or locale changes
&nbsp;
    const isDisabled = <span class="cstat-no" title="statement not covered" >isSaving || isLoadingData;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    return (</span>
        &lt;View style={styles.dateNavigation}&gt;
            &lt;Button
                type="clear"
                onPress={onPreviousDay}
                icon={&lt;RNEIcon name="chevron-back-outline" type="ionicon" color={theme.colors.primary} size={28} /&gt;}
                buttonStyle={styles.navButton}
                disabled={isDisabled}
                disabledStyle={styles.disabledButton}
            /&gt;
            &lt;TouchableOpacity onPress={onShowDatePicker} disabled={isDisabled}&gt;
                &lt;Text h4 h4Style={[styles.dateText, isDisabled &amp;&amp; styles.disabledText]}&gt;
                    {displayDate}
                &lt;/Text&gt;
            &lt;/TouchableOpacity&gt;
            &lt;Button
                type="clear"
                onPress={onNextDay}
                icon={&lt;RNEIcon name="chevron-forward-outline" type="ionicon" color={theme.colors.primary} size={28} /&gt;}
                buttonStyle={styles.navButton}
                disabled={isDisabled}
                disabledStyle={styles.disabledButton}
            /&gt;
        &lt;/View&gt;
    );
};
&nbsp;
const useStyles = <span class="cstat-no" title="statement not covered" >makeStyles(<span class="fstat-no" title="function not covered" >(t</span>heme) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
    dateNavigation: {
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'space-between',
        paddingVertical: 10,
        paddingHorizontal: 10,
        backgroundColor: theme.colors.background,
    },
    navButton: {
        paddingHorizontal: 8,
    },
    dateText: {
        fontSize: 18,
        fontWeight: 'bold',
        color: theme.colors.text,
        textAlign: 'center',
        paddingVertical: 5,
    },
    disabledButton: {
        opacity: 0.5,
    },
    disabledText: {
        color: theme.colors.grey3,
    },
}));
&nbsp;
export default DateNavigator;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END DateNavigator.tsx.html ----------


---------- index.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/Entry</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> components/Entry</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/28</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/46</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/11</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/25</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <div class="pad1">
<table class="coverage-summary">
<thead>
<tr>
   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
</tr>
</thead>
<tbody><tr>
	<td class="file low" data-value="QuickAddItem.tsx"><a href="QuickAddItem.tsx.html">QuickAddItem.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="28" class="abs low">0/28</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="46" class="abs low">0/46</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="11" class="abs low">0/11</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="25" class="abs low">0/25</td>
	</tr>

</tbody>
</table>
</div>
                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    
---------- END index.html ----------


---------- QuickAddItem.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/Entry/QuickAddItem.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../../prettify.css" />
    <link rel="stylesheet" href="../../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../../index.html">All files</a> / <a href="index.html">components/Entry</a> QuickAddItem.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/28</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/46</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/11</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/25</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a>
<a name='L128'></a><a href='#L128'>128</a>
<a name='L129'></a><a href='#L129'>129</a>
<a name='L130'></a><a href='#L130'>130</a>
<a name='L131'></a><a href='#L131'>131</a>
<a name='L132'></a><a href='#L132'>132</a>
<a name='L133'></a><a href='#L133'>133</a>
<a name='L134'></a><a href='#L134'>134</a>
<a name='L135'></a><a href='#L135'>135</a>
<a name='L136'></a><a href='#L136'>136</a>
<a name='L137'></a><a href='#L137'>137</a>
<a name='L138'></a><a href='#L138'>138</a>
<a name='L139'></a><a href='#L139'>139</a>
<a name='L140'></a><a href='#L140'>140</a>
<a name='L141'></a><a href='#L141'>141</a>
<a name='L142'></a><a href='#L142'>142</a>
<a name='L143'></a><a href='#L143'>143</a>
<a name='L144'></a><a href='#L144'>144</a>
<a name='L145'></a><a href='#L145'>145</a>
<a name='L146'></a><a href='#L146'>146</a>
<a name='L147'></a><a href='#L147'>147</a>
<a name='L148'></a><a href='#L148'>148</a>
<a name='L149'></a><a href='#L149'>149</a>
<a name='L150'></a><a href='#L150'>150</a>
<a name='L151'></a><a href='#L151'>151</a>
<a name='L152'></a><a href='#L152'>152</a>
<a name='L153'></a><a href='#L153'>153</a>
<a name='L154'></a><a href='#L154'>154</a>
<a name='L155'></a><a href='#L155'>155</a>
<a name='L156'></a><a href='#L156'>156</a>
<a name='L157'></a><a href='#L157'>157</a>
<a name='L158'></a><a href='#L158'>158</a>
<a name='L159'></a><a href='#L159'>159</a>
<a name='L160'></a><a href='#L160'>160</a>
<a name='L161'></a><a href='#L161'>161</a>
<a name='L162'></a><a href='#L162'>162</a>
<a name='L163'></a><a href='#L163'>163</a>
<a name='L164'></a><a href='#L164'>164</a>
<a name='L165'></a><a href='#L165'>165</a>
<a name='L166'></a><a href='#L166'>166</a>
<a name='L167'></a><a href='#L167'>167</a>
<a name='L168'></a><a href='#L168'>168</a>
<a name='L169'></a><a href='#L169'>169</a>
<a name='L170'></a><a href='#L170'>170</a>
<a name='L171'></a><a href='#L171'>171</a>
<a name='L172'></a><a href='#L172'>172</a>
<a name='L173'></a><a href='#L173'>173</a>
<a name='L174'></a><a href='#L174'>174</a>
<a name='L175'></a><a href='#L175'>175</a>
<a name='L176'></a><a href='#L176'>176</a>
<a name='L177'></a><a href='#L177'>177</a>
<a name='L178'></a><a href='#L178'>178</a>
<a name='L179'></a><a href='#L179'>179</a>
<a name='L180'></a><a href='#L180'>180</a>
<a name='L181'></a><a href='#L181'>181</a>
<a name='L182'></a><a href='#L182'>182</a>
<a name='L183'></a><a href='#L183'>183</a>
<a name='L184'></a><a href='#L184'>184</a>
<a name='L185'></a><a href='#L185'>185</a>
<a name='L186'></a><a href='#L186'>186</a>
<a name='L187'></a><a href='#L187'>187</a>
<a name='L188'></a><a href='#L188'>188</a>
<a name='L189'></a><a href='#L189'>189</a>
<a name='L190'></a><a href='#L190'>190</a>
<a name='L191'></a><a href='#L191'>191</a>
<a name='L192'></a><a href='#L192'>192</a>
<a name='L193'></a><a href='#L193'>193</a>
<a name='L194'></a><a href='#L194'>194</a>
<a name='L195'></a><a href='#L195'>195</a>
<a name='L196'></a><a href='#L196'>196</a>
<a name='L197'></a><a href='#L197'>197</a>
<a name='L198'></a><a href='#L198'>198</a>
<a name='L199'></a><a href='#L199'>199</a>
<a name='L200'></a><a href='#L200'>200</a>
<a name='L201'></a><a href='#L201'>201</a>
<a name='L202'></a><a href='#L202'>202</a>
<a name='L203'></a><a href='#L203'>203</a>
<a name='L204'></a><a href='#L204'>204</a>
<a name='L205'></a><a href='#L205'>205</a>
<a name='L206'></a><a href='#L206'>206</a>
<a name='L207'></a><a href='#L207'>207</a>
<a name='L208'></a><a href='#L208'>208</a>
<a name='L209'></a><a href='#L209'>209</a>
<a name='L210'></a><a href='#L210'>210</a>
<a name='L211'></a><a href='#L211'>211</a>
<a name='L212'></a><a href='#L212'>212</a>
<a name='L213'></a><a href='#L213'>213</a>
<a name='L214'></a><a href='#L214'>214</a>
<a name='L215'></a><a href='#L215'>215</a>
<a name='L216'></a><a href='#L216'>216</a>
<a name='L217'></a><a href='#L217'>217</a>
<a name='L218'></a><a href='#L218'>218</a>
<a name='L219'></a><a href='#L219'>219</a>
<a name='L220'></a><a href='#L220'>220</a>
<a name='L221'></a><a href='#L221'>221</a>
<a name='L222'></a><a href='#L222'>222</a>
<a name='L223'></a><a href='#L223'>223</a>
<a name='L224'></a><a href='#L224'>224</a>
<a name='L225'></a><a href='#L225'>225</a>
<a name='L226'></a><a href='#L226'>226</a>
<a name='L227'></a><a href='#L227'>227</a>
<a name='L228'></a><a href='#L228'>228</a>
<a name='L229'></a><a href='#L229'>229</a>
<a name='L230'></a><a href='#L230'>230</a>
<a name='L231'></a><a href='#L231'>231</a>
<a name='L232'></a><a href='#L232'>232</a>
<a name='L233'></a><a href='#L233'>233</a>
<a name='L234'></a><a href='#L234'>234</a>
<a name='L235'></a><a href='#L235'>235</a>
<a name='L236'></a><a href='#L236'>236</a>
<a name='L237'></a><a href='#L237'>237</a>
<a name='L238'></a><a href='#L238'>238</a>
<a name='L239'></a><a href='#L239'>239</a>
<a name='L240'></a><a href='#L240'>240</a>
<a name='L241'></a><a href='#L241'>241</a>
<a name='L242'></a><a href='#L242'>242</a>
<a name='L243'></a><a href='#L243'>243</a>
<a name='L244'></a><a href='#L244'>244</a>
<a name='L245'></a><a href='#L245'>245</a>
<a name='L246'></a><a href='#L246'>246</a>
<a name='L247'></a><a href='#L247'>247</a>
<a name='L248'></a><a href='#L248'>248</a>
<a name='L249'></a><a href='#L249'>249</a>
<a name='L250'></a><a href='#L250'>250</a>
<a name='L251'></a><a href='#L251'>251</a>
<a name='L252'></a><a href='#L252'>252</a>
<a name='L253'></a><a href='#L253'>253</a>
<a name='L254'></a><a href='#L254'>254</a>
<a name='L255'></a><a href='#L255'>255</a>
<a name='L256'></a><a href='#L256'>256</a>
<a name='L257'></a><a href='#L257'>257</a>
<a name='L258'></a><a href='#L258'>258</a>
<a name='L259'></a><a href='#L259'>259</a>
<a name='L260'></a><a href='#L260'>260</a>
<a name='L261'></a><a href='#L261'>261</a>
<a name='L262'></a><a href='#L262'>262</a>
<a name='L263'></a><a href='#L263'>263</a>
<a name='L264'></a><a href='#L264'>264</a>
<a name='L265'></a><a href='#L265'>265</a>
<a name='L266'></a><a href='#L266'>266</a>
<a name='L267'></a><a href='#L267'>267</a>
<a name='L268'></a><a href='#L268'>268</a>
<a name='L269'></a><a href='#L269'>269</a>
<a name='L270'></a><a href='#L270'>270</a>
<a name='L271'></a><a href='#L271'>271</a>
<a name='L272'></a><a href='#L272'>272</a>
<a name='L273'></a><a href='#L273'>273</a>
<a name='L274'></a><a href='#L274'>274</a>
<a name='L275'></a><a href='#L275'>275</a>
<a name='L276'></a><a href='#L276'>276</a>
<a name='L277'></a><a href='#L277'>277</a>
<a name='L278'></a><a href='#L278'>278</a>
<a name='L279'></a><a href='#L279'>279</a>
<a name='L280'></a><a href='#L280'>280</a>
<a name='L281'></a><a href='#L281'>281</a>
<a name='L282'></a><a href='#L282'>282</a>
<a name='L283'></a><a href='#L283'>283</a>
<a name='L284'></a><a href='#L284'>284</a>
<a name='L285'></a><a href='#L285'>285</a>
<a name='L286'></a><a href='#L286'>286</a>
<a name='L287'></a><a href='#L287'>287</a>
<a name='L288'></a><a href='#L288'>288</a>
<a name='L289'></a><a href='#L289'>289</a>
<a name='L290'></a><a href='#L290'>290</a>
<a name='L291'></a><a href='#L291'>291</a>
<a name='L292'></a><a href='#L292'>292</a>
<a name='L293'></a><a href='#L293'>293</a>
<a name='L294'></a><a href='#L294'>294</a>
<a name='L295'></a><a href='#L295'>295</a>
<a name='L296'></a><a href='#L296'>296</a>
<a name='L297'></a><a href='#L297'>297</a>
<a name='L298'></a><a href='#L298'>298</a>
<a name='L299'></a><a href='#L299'>299</a>
<a name='L300'></a><a href='#L300'>300</a>
<a name='L301'></a><a href='#L301'>301</a>
<a name='L302'></a><a href='#L302'>302</a>
<a name='L303'></a><a href='#L303'>303</a>
<a name='L304'></a><a href='#L304'>304</a>
<a name='L305'></a><a href='#L305'>305</a>
<a name='L306'></a><a href='#L306'>306</a>
<a name='L307'></a><a href='#L307'>307</a>
<a name='L308'></a><a href='#L308'>308</a>
<a name='L309'></a><a href='#L309'>309</a>
<a name='L310'></a><a href='#L310'>310</a>
<a name='L311'></a><a href='#L311'>311</a>
<a name='L312'></a><a href='#L312'>312</a>
<a name='L313'></a><a href='#L313'>313</a>
<a name='L314'></a><a href='#L314'>314</a>
<a name='L315'></a><a href='#L315'>315</a>
<a name='L316'></a><a href='#L316'>316</a>
<a name='L317'></a><a href='#L317'>317</a>
<a name='L318'></a><a href='#L318'>318</a>
<a name='L319'></a><a href='#L319'>319</a>
<a name='L320'></a><a href='#L320'>320</a>
<a name='L321'></a><a href='#L321'>321</a>
<a name='L322'></a><a href='#L322'>322</a>
<a name='L323'></a><a href='#L323'>323</a>
<a name='L324'></a><a href='#L324'>324</a>
<a name='L325'></a><a href='#L325'>325</a>
<a name='L326'></a><a href='#L326'>326</a>
<a name='L327'></a><a href='#L327'>327</a>
<a name='L328'></a><a href='#L328'>328</a>
<a name='L329'></a><a href='#L329'>329</a>
<a name='L330'></a><a href='#L330'>330</a>
<a name='L331'></a><a href='#L331'>331</a>
<a name='L332'></a><a href='#L332'>332</a>
<a name='L333'></a><a href='#L333'>333</a>
<a name='L334'></a><a href='#L334'>334</a>
<a name='L335'></a><a href='#L335'>335</a>
<a name='L336'></a><a href='#L336'>336</a>
<a name='L337'></a><a href='#L337'>337</a>
<a name='L338'></a><a href='#L338'>338</a>
<a name='L339'></a><a href='#L339'>339</a>
<a name='L340'></a><a href='#L340'>340</a>
<a name='L341'></a><a href='#L341'>341</a>
<a name='L342'></a><a href='#L342'>342</a>
<a name='L343'></a><a href='#L343'>343</a>
<a name='L344'></a><a href='#L344'>344</a>
<a name='L345'></a><a href='#L345'>345</a>
<a name='L346'></a><a href='#L346'>346</a>
<a name='L347'></a><a href='#L347'>347</a>
<a name='L348'></a><a href='#L348'>348</a>
<a name='L349'></a><a href='#L349'>349</a>
<a name='L350'></a><a href='#L350'>350</a>
<a name='L351'></a><a href='#L351'>351</a>
<a name='L352'></a><a href='#L352'>352</a>
<a name='L353'></a><a href='#L353'>353</a>
<a name='L354'></a><a href='#L354'>354</a>
<a name='L355'></a><a href='#L355'>355</a>
<a name='L356'></a><a href='#L356'>356</a>
<a name='L357'></a><a href='#L357'>357</a>
<a name='L358'></a><a href='#L358'>358</a>
<a name='L359'></a><a href='#L359'>359</a>
<a name='L360'></a><a href='#L360'>360</a>
<a name='L361'></a><a href='#L361'>361</a>
<a name='L362'></a><a href='#L362'>362</a>
<a name='L363'></a><a href='#L363'>363</a>
<a name='L364'></a><a href='#L364'>364</a>
<a name='L365'></a><a href='#L365'>365</a>
<a name='L366'></a><a href='#L366'>366</a>
<a name='L367'></a><a href='#L367'>367</a>
<a name='L368'></a><a href='#L368'>368</a>
<a name='L369'></a><a href='#L369'>369</a>
<a name='L370'></a><a href='#L370'>370</a>
<a name='L371'></a><a href='#L371'>371</a>
<a name='L372'></a><a href='#L372'>372</a>
<a name='L373'></a><a href='#L373'>373</a>
<a name='L374'></a><a href='#L374'>374</a>
<a name='L375'></a><a href='#L375'>375</a>
<a name='L376'></a><a href='#L376'>376</a>
<a name='L377'></a><a href='#L377'>377</a>
<a name='L378'></a><a href='#L378'>378</a>
<a name='L379'></a><a href='#L379'>379</a>
<a name='L380'></a><a href='#L380'>380</a>
<a name='L381'></a><a href='#L381'>381</a>
<a name='L382'></a><a href='#L382'>382</a>
<a name='L383'></a><a href='#L383'>383</a>
<a name='L384'></a><a href='#L384'>384</a>
<a name='L385'></a><a href='#L385'>385</a>
<a name='L386'></a><a href='#L386'>386</a>
<a name='L387'></a><a href='#L387'>387</a>
<a name='L388'></a><a href='#L388'>388</a>
<a name='L389'></a><a href='#L389'>389</a>
<a name='L390'></a><a href='#L390'>390</a>
<a name='L391'></a><a href='#L391'>391</a>
<a name='L392'></a><a href='#L392'>392</a>
<a name='L393'></a><a href='#L393'>393</a>
<a name='L394'></a><a href='#L394'>394</a>
<a name='L395'></a><a href='#L395'>395</a>
<a name='L396'></a><a href='#L396'>396</a>
<a name='L397'></a><a href='#L397'>397</a>
<a name='L398'></a><a href='#L398'>398</a>
<a name='L399'></a><a href='#L399'>399</a>
<a name='L400'></a><a href='#L400'>400</a>
<a name='L401'></a><a href='#L401'>401</a>
<a name='L402'></a><a href='#L402'>402</a>
<a name='L403'></a><a href='#L403'>403</a>
<a name='L404'></a><a href='#L404'>404</a>
<a name='L405'></a><a href='#L405'>405</a>
<a name='L406'></a><a href='#L406'>406</a>
<a name='L407'></a><a href='#L407'>407</a>
<a name='L408'></a><a href='#L408'>408</a>
<a name='L409'></a><a href='#L409'>409</a>
<a name='L410'></a><a href='#L410'>410</a>
<a name='L411'></a><a href='#L411'>411</a>
<a name='L412'></a><a href='#L412'>412</a>
<a name='L413'></a><a href='#L413'>413</a>
<a name='L414'></a><a href='#L414'>414</a>
<a name='L415'></a><a href='#L415'>415</a>
<a name='L416'></a><a href='#L416'>416</a>
<a name='L417'></a><a href='#L417'>417</a>
<a name='L418'></a><a href='#L418'>418</a>
<a name='L419'></a><a href='#L419'>419</a>
<a name='L420'></a><a href='#L420'>420</a>
<a name='L421'></a><a href='#L421'>421</a>
<a name='L422'></a><a href='#L422'>422</a>
<a name='L423'></a><a href='#L423'>423</a>
<a name='L424'></a><a href='#L424'>424</a>
<a name='L425'></a><a href='#L425'>425</a>
<a name='L426'></a><a href='#L426'>426</a>
<a name='L427'></a><a href='#L427'>427</a>
<a name='L428'></a><a href='#L428'>428</a>
<a name='L429'></a><a href='#L429'>429</a>
<a name='L430'></a><a href='#L430'>430</a>
<a name='L431'></a><a href='#L431'>431</a>
<a name='L432'></a><a href='#L432'>432</a>
<a name='L433'></a><a href='#L433'>433</a>
<a name='L434'></a><a href='#L434'>434</a>
<a name='L435'></a><a href='#L435'>435</a>
<a name='L436'></a><a href='#L436'>436</a>
<a name='L437'></a><a href='#L437'>437</a>
<a name='L438'></a><a href='#L438'>438</a>
<a name='L439'></a><a href='#L439'>439</a>
<a name='L440'></a><a href='#L440'>440</a>
<a name='L441'></a><a href='#L441'>441</a>
<a name='L442'></a><a href='#L442'>442</a>
<a name='L443'></a><a href='#L443'>443</a>
<a name='L444'></a><a href='#L444'>444</a>
<a name='L445'></a><a href='#L445'>445</a>
<a name='L446'></a><a href='#L446'>446</a>
<a name='L447'></a><a href='#L447'>447</a>
<a name='L448'></a><a href='#L448'>448</a>
<a name='L449'></a><a href='#L449'>449</a>
<a name='L450'></a><a href='#L450'>450</a>
<a name='L451'></a><a href='#L451'>451</a>
<a name='L452'></a><a href='#L452'>452</a>
<a name='L453'></a><a href='#L453'>453</a>
<a name='L454'></a><a href='#L454'>454</a>
<a name='L455'></a><a href='#L455'>455</a>
<a name='L456'></a><a href='#L456'>456</a>
<a name='L457'></a><a href='#L457'>457</a>
<a name='L458'></a><a href='#L458'>458</a>
<a name='L459'></a><a href='#L459'>459</a>
<a name='L460'></a><a href='#L460'>460</a>
<a name='L461'></a><a href='#L461'>461</a>
<a name='L462'></a><a href='#L462'>462</a>
<a name='L463'></a><a href='#L463'>463</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/components/Entry/QuickAddItem.tsx
import React, { useMemo, useState } from "react";
import {
  View,
  TouchableOpacity,
  Pressable,
  ActivityIndicator,
} from "react-native";
import {
  ListItem,
  CheckBox,
  Input,
  Icon,
  Text,
  useTheme,
  makeStyles,
} from "@rneui/themed";
import { EstimatedFoodItem } from "../../types/macros";
import { Food } from "../../types/food";
import { isValidNumberInput } from "../../utils/validationUtils";
import { t } from "../../localization/i18n";
// import i18n from "../../localization/i18n"; // No longer needed here
import {
  calculateBaseFoodGrade,
  FoodGradeResult,
} from "../../utils/gradingUtils";
import { getFoodIconUrl } from "../../utils/iconUtils";
&nbsp;
&nbsp;
interface QuickAddItemProps {
  item: EstimatedFoodItem;
  index: number;
  isSelected: boolean;
  isEditingThisItem: boolean;
  isAnyItemEditing: boolean;
  isLoading?: boolean;
  foodIcons: { [foodName: string]: string | null };
  editedName: string;
  editedGrams: string;
  onToggleItem: (index: number) =&gt; void;
  onEditItem: (index: number) =&gt; void;
  onSaveEdit: () =&gt; void;
  onCancelEdit: () =&gt; void;
  onNameChange: (name: string) =&gt; void;
  onGramsChange: (grams: string) =&gt; void;
  onSaveToLibrary: (
    item: EstimatedFoodItem,
    setSavingState: (isSaving: boolean) =&gt; void
  ) =&gt; Promise&lt;void&gt;;
  foods: Food[];
}
&nbsp;
const QuickAddItem: React.FC&lt;QuickAddItemProps&gt; = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span></span>
  item,
  index,
  isSelected,
  isEditingThisItem,
  isAnyItemEditing,
  isLoading,
  foodIcons,
  editedName,
  editedGrams,
  onToggleItem,
  onEditItem,
  onSaveEdit,
  onCancelEdit,
  onNameChange,
  onGramsChange,
  onSaveToLibrary,
  foods,
}) =&gt; {
  const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
  const styles = <span class="cstat-no" title="statement not covered" >useStyles();</span>
  const [isSavingToLibrary, setIsSavingToLibrary] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
&nbsp;
  const estimatedCalories = <span class="cstat-no" title="statement not covered" >Math.round(</span>
    (item.calories_per_100g / 100) * item.estimatedWeightGrams
  );
&nbsp;
  const tempFoodForGrading: Food = <span class="cstat-no" title="statement not covered" >useMemo(</span>
<span class="fstat-no" title="function not covered" >    ()</span> =&gt; (<span class="cstat-no" title="statement not covered" >{</span>
      id: `temp-qa-${index}-${item.foodName}`,
      name: item.foodName,
      calories: item.calories_per_100g,
      protein: item.protein_per_100g,
      carbs: item.carbs_per_100g,
      fat: item.fat_per_100g,
      createdAt: new Date().toISOString(), // Added to satisfy the Food type
    }),
    [
      item.foodName,
      item.calories_per_100g,
      item.protein_per_100g,
      item.carbs_per_100g,
      item.fat_per_100g,
      index,
    ]
  );
&nbsp;
  const gradeResult: FoodGradeResult | null = <span class="cstat-no" title="statement not covered" >useMemo(</span>
<span class="fstat-no" title="function not covered" >    ()</span> =&gt; <span class="cstat-no" title="statement not covered" >calculateBaseFoodGrade(tempFoodForGrading),</span>
    [tempFoodForGrading]
  );
&nbsp;
  const isInLibrary = <span class="cstat-no" title="statement not covered" >useMemo(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    return foods.some(<span class="fstat-no" title="function not covered" >fo</span>od =&gt; <span class="cstat-no" title="statement not covered" >food.name.toLowerCase() === item.foodName.toLowerCase())</span>;</span>
  }, [foods, item.foodName]);
&nbsp;
  const handleSaveToLibraryPress = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (isSavingToLibrary || isAnyItemEditing || isLoading) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >    await onSaveToLibrary(item, setIsSavingToLibrary);</span>
  };
&nbsp;
  const renderFoodIcon = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(f</span>oodName: string) =&gt; {</span>
    // Check foodIcons state first, then call getFoodIconUrl (which handles its own caching and lang detection)
    const iconIdentifier = <span class="cstat-no" title="statement not covered" >foodIcons[foodName] ?? getFoodIconUrl(foodName);</span>
<span class="cstat-no" title="statement not covered" >    if (iconIdentifier) {</span>
<span class="cstat-no" title="statement not covered" >      return &lt;Text style={styles.foodIconEmoji}&gt;{iconIdentifier}&lt;/Text&gt;;</span>
    }
<span class="cstat-no" title="statement not covered" >    return (</span>
      &lt;View style={[styles.foodIconContainer, styles.iconPlaceholder]}&gt;
        &lt;Icon
          name="help-outline"
          type="material"
          size={22}
          color={theme.colors.grey3}
        /&gt;
      &lt;/View&gt;
    );
  };
&nbsp;
  const canPerformActions =
<span class="cstat-no" title="statement not covered" >    !isAnyItemEditing &amp;&amp; !isLoading &amp;&amp; !isSavingToLibrary;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >  return (</span>
    &lt;Pressable
      onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >!isEditingThisItem &amp;&amp; onToggleItem(index)}</span>
      disabled={
        (isAnyItemEditing &amp;&amp; !isEditingThisItem) ||
        isLoading ||
        isSavingToLibrary
      }
    &gt;
      &lt;ListItem
        bottomDivider
        containerStyle={[
          styles.quickAddItemContainer,
          isEditingThisItem &amp;&amp; styles.quickAddItemEditing,
          isSelected &amp;&amp; !isEditingThisItem &amp;&amp; styles.quickAddItemSelected,
          ((isAnyItemEditing &amp;&amp; !isEditingThisItem) ||
            isLoading ||
            isSavingToLibrary) &amp;&amp;
            styles.disabledItem,
        ]}
      &gt;
        {isEditingThisItem ? (
          &lt;View style={styles.quickAddEditView}&gt;
            &lt;View style={styles.editIconAndNameRow}&gt;
              {renderFoodIcon(item.foodName)}
              {gradeResult &amp;&amp; (
                &lt;Text
                  style={[
                    styles.gradePill,
                    {
                      backgroundColor: gradeResult.color,
                      marginLeft: 0,
                      marginRight: 8,
                    },
                  ]}
                &gt;
                  {gradeResult.letter}
                &lt;/Text&gt;
              )}
              &lt;Input
                value={editedName}
                onChangeText={onNameChange}
                placeholder={t("quickAddList.foodNamePlaceholder")}
                inputContainerStyle={styles.quickEditInputContainer}
                inputStyle={styles.quickEditInput}
                containerStyle={styles.quickEditNameContainer}
                autoFocus
                selectTextOnFocus
              /&gt;
            &lt;/View&gt;
            &lt;View style={styles.quickEditGramsRow}&gt;
              &lt;Input
                value={editedGrams}
                onChangeText={onGramsChange}
                placeholder={t("quickAddList.gramsPlaceholder")}
                keyboardType="numeric"
                inputContainerStyle={styles.quickEditInputContainer}
                inputStyle={styles.quickEditInput}
                containerStyle={styles.quickEditGramsContainer}
                rightIcon={&lt;Text style={styles.quickEditUnitText}&gt;g&lt;/Text&gt;}
                errorMessage={
                  !isValidNumberInput(editedGrams) &amp;&amp; editedGrams !== ""
                    ? t("quickAddList.errorInvalidGrams")
                    : ""
                }
                errorStyle={styles.inputError}
              /&gt;
              &lt;TouchableOpacity
                onPress={onSaveEdit}
                style={styles.quickEditActionButton}
              &gt;
                &lt;Icon
                  name="checkmark-circle"
                  type="ionicon"
                  color={theme.colors.success}
                  size={28}
                /&gt;
              &lt;/TouchableOpacity&gt;
              &lt;TouchableOpacity
                onPress={onCancelEdit}
                style={styles.quickEditActionButton}
              &gt;
                &lt;Icon
                  name="close-circle"
                  type="ionicon"
                  color={theme.colors.error}
                  size={28}
                /&gt;
              &lt;/TouchableOpacity&gt;
            &lt;/View&gt;
          &lt;/View&gt;
        ) : (
          &lt;&gt;
            &lt;CheckBox
              checked={isSelected}
              onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >onToggleItem(index)}</span>
              containerStyle={styles.quickAddCheckbox}
              checkedColor={theme.colors.primary}
              disabled={!canPerformActions}
              size={22}
            /&gt;
            {renderFoodIcon(item.foodName)}
            &lt;ListItem.Content&gt;
              &lt;View style={styles.titleAndGradeContainer}&gt;
                {gradeResult &amp;&amp; (
                  &lt;Text
                    style={[
                      styles.gradePill,
                      { backgroundColor: gradeResult.color },
                    ]}
                  &gt;
                    {gradeResult.letter}
                  &lt;/Text&gt;
                )}
                &lt;ListItem.Title
                  style={styles.quickAddItemTitle}
                  numberOfLines={1}
                  ellipsizeMode="tail"
                &gt;
                  {item.foodName}
                &lt;/ListItem.Title&gt;
              &lt;/View&gt;
              &lt;ListItem.Subtitle style={styles.quickAddItemSubtitle}&gt;
                {`Est: ${Math.round(
                  item.estimatedWeightGrams
                )}g • ~${estimatedCalories} kcal`}
              &lt;/ListItem.Subtitle&gt;
            &lt;/ListItem.Content&gt;
            &lt;View style={styles.actionButtonsContainer}&gt;
              {isSavingToLibrary ? (
                &lt;ActivityIndicator
                  size="small"
                  color={theme.colors.primary}
                  style={styles.actionIconPadding}
                /&gt;
              ) : (
                &lt;TouchableOpacity
                  onPress={handleSaveToLibraryPress}
                  disabled={!canPerformActions}
                  style={styles.actionIconPadding}
                &gt;
                  &lt;Icon
                    name={isInLibrary ? "bookmark" : "bookmark-plus-outline"}
                    type="material-community"
                    size={22}
                    color={
                      canPerformActions
                        ? theme.colors.primary
                        : theme.colors.grey3
                    }
                  /&gt;
                &lt;/TouchableOpacity&gt;
              )}
              &lt;TouchableOpacity
                onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >onEditItem(index)}</span>
                disabled={!canPerformActions}
                style={styles.actionIconPadding}
              &gt;
                &lt;Icon
                  name="edit"
                  type="material"
                  size={22}
                  color={
                    canPerformActions ? theme.colors.secondary : theme.colors.grey3
                  }
                /&gt;
              &lt;/TouchableOpacity&gt;
            &lt;/View&gt;
          &lt;/&gt;
        )}
      &lt;/ListItem&gt;
    &lt;/Pressable&gt;
  );
};
&nbsp;
const useStyles = <span class="cstat-no" title="statement not covered" >makeStyles(<span class="fstat-no" title="function not covered" >(t</span>heme) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
  quickAddItemContainer: {
    paddingVertical: 8,
    paddingHorizontal: 8,
    backgroundColor: theme.colors.background,
    borderBottomColor: theme.colors.divider,
    flexDirection: "row",
    alignItems: "center",
    minHeight: 65,
  },
  quickAddItemSelected: {
    backgroundColor: theme.colors.successLight,
    borderLeftWidth: 4,
    borderLeftColor: theme.colors.success,
  },
  quickAddItemEditing: {
    backgroundColor: theme.colors.background,
    paddingVertical: 12,
    paddingHorizontal: 10,
    borderWidth: 1.5,
    borderColor: theme.colors.primary,
    borderRadius: 8,
    marginVertical: 6,
    marginHorizontal: 2,
    shadowColor: theme.colors.black,
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.15,
    shadowRadius: 2.5,
    elevation: 4,
  },
  disabledItem: {
    opacity: 0.6,
  },
  quickAddCheckbox: {
    padding: 0,
    margin: 0,
    marginRight: 10,
    marginLeft: 0,
    backgroundColor: "transparent",
    borderWidth: 0,
  },
  foodIconContainer: {
    width: 38,
    height: 38,
    marginRight: 10,
    borderRadius: 6,
    alignItems: "center",
    justifyContent: "center",
    overflow: "hidden",
  },
  foodIconEmoji: {
    fontSize: 26,
    width: 38,
    height: 38,
    marginRight: 10,
    textAlign: 'center',
    textAlignVertical: 'center',
  },
  iconPlaceholder: {
    backgroundColor: theme.colors.grey5,
  },
  titleAndGradeContainer: {
    flexDirection: "row",
    alignItems: "center",
    marginBottom: 2,
  },
  gradePill: {
    fontSize: 11,
    fontWeight: "bold",
    color: theme.colors.white,
    paddingHorizontal: 5,
    paddingVertical: 1,
    borderRadius: 6,
    marginRight: 6,
    minWidth: 18,
    textAlign: "center",
    overflow: "hidden",
  },
  quickAddItemTitle: {
    fontWeight: "600",
    color: theme.colors.text,
    fontSize: 15,
    textAlign: "left",
    flexShrink: 1,
  },
  quickAddItemSubtitle: {
    color: theme.colors.secondary,
    fontSize: 12.5,
    textAlign: "left",
  },
  actionButtonsContainer: {
    flexDirection: "row",
    alignItems: "center",
    marginLeft: 8,
  },
  actionIconPadding: {
    paddingVertical: 8,
    paddingHorizontal: 6,
  },
  quickAddEditView: {
    flex: 1,
  },
  editIconAndNameRow: {
    flexDirection: "row",
    alignItems: "center",
    marginBottom: 8,
  },
  quickEditInputContainer: {
    borderBottomWidth: 1,
    borderBottomColor: theme.colors.primary,
    height: 38,
    paddingHorizontal: 0,
  },
  quickEditInput: {
    fontSize: 15,
    color: theme.colors.text,
    paddingVertical: 0,
    textAlign: "left",
  },
  quickEditNameContainer: {
    flex: 1,
    paddingHorizontal: 0,
  },
  quickEditGramsRow: {
    flexDirection: "row",
    alignItems: "center",
    marginTop: 5,
  },
  quickEditGramsContainer: {
    flex: 1,
    paddingHorizontal: 0,
    marginRight: 10,
  },
  quickEditUnitText: {
    color: theme.colors.grey2,
    fontSize: 14,
    fontWeight: "500",
    paddingRight: 5,
  },
  quickEditActionButton: {
    paddingHorizontal: 8,
    paddingVertical: 5,
  },
  inputError: {
    color: theme.colors.error,
    fontSize: 11,
    marginVertical: 0,
    marginLeft: 2,
    height: 14,
    textAlign: "left",
  },
}));
&nbsp;
export default QuickAddItem;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../../sorter.js"></script>
        <script src="../../block-navigation.js"></script>
    </body>
</html>
    
---------- END QuickAddItem.tsx.html ----------


---------- FoodFormFields.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/FoodFormFields.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">components</a> FoodFormFields.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/27</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/28</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/9</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/23</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/components/FoodFormFields.tsx
import React from 'react';
import { Input, makeStyles, useTheme, Text } from '@rneui/themed'; // Add Text
import { MaterialCommunityIcons } from '@expo/vector-icons';
import { Food } from '../types/food';
import { t } from '../localization/i18n';
&nbsp;
// The form deals with data that doesn't include id or createdAt
type FoodFormData = Omit&lt;Food, 'id' | 'createdAt'&gt;;
type FoodFormValues = Partial&lt;FoodFormData&gt;;
&nbsp;
interface FoodFormFieldsProps {
    values: FoodFormValues;
    errors: { [key: string]: string };
    onInputChange: (key: keyof FoodFormData, value: string, isEdit: boolean) =&gt; void;
    isEditing: boolean;
    disabled: boolean;
}
&nbsp;
const FoodFormFields: React.FC&lt;FoodFormFieldsProps&gt; = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span></span>
    values,
    errors,
    onInputChange,
    isEditing,
    disabled,
}) =&gt; {
    const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
    const styles = <span class="cstat-no" title="statement not covered" >useStyles();</span>
&nbsp;
    const getValue = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(k</span>ey: keyof FoodFormData): string =&gt; {</span>
         const val = <span class="cstat-no" title="statement not covered" >values[key];</span>
<span class="cstat-no" title="statement not covered" >         if (typeof val === 'number') {</span>
<span class="cstat-no" title="statement not covered" >              if (val === 0 &amp;&amp; !isEditing) <span class="cstat-no" title="statement not covered" >return "";</span></span>
<span class="cstat-no" title="statement not covered" >              return String(val);</span>
         }
<span class="cstat-no" title="statement not covered" >         return String(val ?? "");</span>
    };
&nbsp;
    const getErrorText = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(f</span>ieldKey: keyof FoodFormData) =&gt; {</span>
        const errorKey = <span class="cstat-no" title="statement not covered" >errors[fieldKey];</span>
<span class="cstat-no" title="statement not covered" >        if (!errorKey) <span class="cstat-no" title="statement not covered" >return "";</span></span>
        // Assuming error keys in en.json map to field names + specific error type
        // e.g., foodFormFields.errorNameRequired, foodFormFields.errorNonNegative
        // This might need adjustment based on how specific your error keys are.
<span class="cstat-no" title="statement not covered" >        if (fieldKey === 'name' &amp;&amp; errorKey === 'Name is required') <span class="cstat-no" title="statement not covered" >return t('foodFormFields.errorNameRequired');</span></span>
<span class="cstat-no" title="statement not covered" >        if (['calories', 'protein', 'carbs', 'fat'].includes(fieldKey) &amp;&amp; errorKey === 'Must be a non-negative number') {</span>
<span class="cstat-no" title="statement not covered" >            return t('foodFormFields.errorNonNegative');</span>
        }
<span class="cstat-no" title="statement not covered" >        return errorKey; </span>// Fallback to the raw error key if no specific translation found
    };
&nbsp;
<span class="cstat-no" title="statement not covered" >    return (</span>
        &lt;&gt;
            &lt;Input
                label={&lt;Text style={styles.labelStyle}&gt;{t('foodFormFields.foodName')}&lt;/Text&gt;}
                value={getValue("name")}
                onChangeText={<span class="fstat-no" title="function not covered" >(t</span>ext) =&gt; <span class="cstat-no" title="statement not covered" >onInputChange("name", text, isEditing)}</span>
                errorMessage={getErrorText("name")}
                errorStyle={styles.errorStyle}
                inputContainerStyle={styles.inputContainerStyle}
                inputStyle={styles.inputStyle}
                leftIcon={&lt;MaterialCommunityIcons name="food-apple" size={24} color={errors.name ? theme.colors.error : theme.colors.grey3} /&gt;}
                disabled={disabled}
                autoCapitalize="words"
            /&gt;
            &lt;Input
                label={&lt;Text style={styles.labelStyle}&gt;{t('foodFormFields.calories')}&lt;/Text&gt;}
                keyboardType="numeric" value={getValue("calories")}
                onChangeText={<span class="fstat-no" title="function not covered" >(t</span>ext) =&gt; <span class="cstat-no" title="statement not covered" >onInputChange("calories", text, isEditing)}</span>
                errorMessage={getErrorText("calories")}
                errorStyle={styles.errorStyle}
                inputContainerStyle={styles.inputContainerStyle}
                inputStyle={styles.inputStyle}
                leftIcon={&lt;MaterialCommunityIcons name="fire" size={24} color={errors.calories ? theme.colors.error : theme.colors.grey3} /&gt;}
                disabled={disabled}
            /&gt;
            &lt;Input
                label={&lt;Text style={styles.labelStyle}&gt;{t('foodFormFields.protein')}&lt;/Text&gt;}
                keyboardType="numeric" value={getValue("protein")}
                onChangeText={<span class="fstat-no" title="function not covered" >(t</span>ext) =&gt; <span class="cstat-no" title="statement not covered" >onInputChange("protein", text, isEditing)}</span>
                errorMessage={getErrorText("protein")}
                errorStyle={styles.errorStyle}
                inputContainerStyle={styles.inputContainerStyle}
                inputStyle={styles.inputStyle}
                leftIcon={&lt;MaterialCommunityIcons name="food-drumstick" size={24} color={errors.protein ? theme.colors.error : theme.colors.grey3} /&gt;}
                disabled={disabled}
            /&gt;
            &lt;Input
                label={&lt;Text style={styles.labelStyle}&gt;{t('foodFormFields.carbs')}&lt;/Text&gt;}
                keyboardType="numeric" value={getValue("carbs")}
                onChangeText={<span class="fstat-no" title="function not covered" >(t</span>ext) =&gt; <span class="cstat-no" title="statement not covered" >onInputChange("carbs", text, isEditing)}</span>
                errorMessage={getErrorText("carbs")}
                errorStyle={styles.errorStyle}
                inputContainerStyle={styles.inputContainerStyle}
                inputStyle={styles.inputStyle}
                leftIcon={&lt;MaterialCommunityIcons name="bread-slice" size={24} color={errors.carbs ? theme.colors.error : theme.colors.grey3} /&gt;}
                disabled={disabled}
            /&gt;
            &lt;Input
                label={&lt;Text style={styles.labelStyle}&gt;{t('foodFormFields.fat')}&lt;/Text&gt;}
                keyboardType="numeric" value={getValue("fat")}
                onChangeText={<span class="fstat-no" title="function not covered" >(t</span>ext) =&gt; <span class="cstat-no" title="statement not covered" >onInputChange("fat", text, isEditing)}</span>
                errorMessage={getErrorText("fat")}
                errorStyle={styles.errorStyle}
                inputContainerStyle={styles.inputContainerStyle}
                inputStyle={styles.inputStyle}
                leftIcon={&lt;MaterialCommunityIcons name="oil" size={24} color={errors.fat ? theme.colors.error : theme.colors.grey3} /&gt;}
                disabled={disabled}
            /&gt;
        &lt;/&gt;
    );
};
&nbsp;
const useStyles = <span class="cstat-no" title="statement not covered" >makeStyles(<span class="fstat-no" title="function not covered" >(t</span>heme) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
    labelStyle: { color: theme.colors.text, fontWeight: '500', marginBottom: 2, fontSize: 14, textAlign: 'left' },
    inputContainerStyle: { borderBottomWidth: 1, borderBottomColor: theme.colors.grey4, marginBottom: 5, paddingBottom: 2, },
    inputStyle: { color: theme.colors.text, marginLeft: 10, fontSize: 16, textAlign: 'left' },
    errorStyle: { color: theme.colors.error, textAlign: 'left' }
}));
&nbsp;
export default FoodFormFields;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END FoodFormFields.tsx.html ----------


---------- FoodItem.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/FoodItem.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">components</a> FoodItem.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/27</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/11</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/12</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/21</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/components/FoodItem.tsx
import React, { forwardRef, memo, useMemo, useEffect } from "react";
import { View, TouchableOpacity } from "react-native";
import { ListItem, Icon as RNEIcon, useTheme, Button, makeStyles, Text } from "@rneui/themed";
import { Food } from "../types/food";
import { t } from '../localization/i18n';
import { calculateBaseFoodGrade, FoodGradeResult } from "../utils/gradingUtils";
import { getFoodIconUrl } from "../utils/iconUtils";
&nbsp;
interface FoodItemProps {
  food: Food;
  onEdit: (food: Food) =&gt; void;
  onDelete: (foodId: string) =&gt; void;
  onQuickAdd: (food: Food) =&gt; void;
  onShare: (food: Food) =&gt; void;
  foodIconUrl: string | null; 
  setFoodIconForName: (name: string, icon: string | null) =&gt; void;
}
&nbsp;
const FoodItem = <span class="cstat-no" title="statement not covered" >memo(forwardRef&lt;any, FoodItemProps&gt;(</span>
<span class="fstat-no" title="function not covered" >  ({</span> food, onEdit, onDelete, onQuickAdd, onShare, foodIconUrl, setFoodIconForName }, ref) =&gt; {
    const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
    const styles = <span class="cstat-no" title="statement not covered" >useStyles();</span>
&nbsp;
    const iconIdentifier = <span class="cstat-no" title="statement not covered" >useMemo(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (foodIconUrl !== undefined) <span class="cstat-no" title="statement not covered" >return foodIconUrl; </span></span>
<span class="cstat-no" title="statement not covered" >        return getFoodIconUrl(food.name);</span>
    }, [food.name, foodIconUrl]);
&nbsp;
<span class="cstat-no" title="statement not covered" >    useEffect(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (food.name &amp;&amp; iconIdentifier !== undefined &amp;&amp; foodIconUrl === undefined) {</span>
<span class="cstat-no" title="statement not covered" >            setFoodIconForName(food.name, iconIdentifier);</span>
        }
    }, [food.name, iconIdentifier, foodIconUrl, setFoodIconForName]);
&nbsp;
    const gradeResult: FoodGradeResult | null = <span class="cstat-no" title="statement not covered" >useMemo(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        return calculateBaseFoodGrade(food);</span>
    }, [food]);
&nbsp;
    const renderIcon = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (iconIdentifier) {</span>
<span class="cstat-no" title="statement not covered" >            return &lt;Text style={styles.foodIconEmoji}&gt;{iconIdentifier}&lt;/Text&gt;;</span>
        } else {
<span class="cstat-no" title="statement not covered" >            return (</span>
                &lt;View style={styles.foodIconPlaceholderView}&gt;
                    &lt;RNEIcon name="help-outline" type="material" size={22} color={theme.colors.grey3} /&gt;
                &lt;/View&gt;
            );
        }
    };
&nbsp;
<span class="cstat-no" title="statement not covered" >    return (</span>
      &lt;ListItem.Swipeable
        ref={ref}
        bottomDivider
        leftContent={<span class="fstat-no" title="function not covered" >(r</span>eset) =&gt; (
<span class="cstat-no" title="statement not covered" >          &lt;Button title={t('foodListScreen.edit')} onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; { <span class="cstat-no" title="statement not covered" >onEdit(food); <span class="cstat-no" title="statement not covered" ></span>reset(); </span>}} icon={{ name: "edit", color: theme.colors.white }} buttonStyle={styles.swipeButtonEdit} titleStyle={styles.swipeButtonTitle} /&gt;</span>
        )}
        rightContent={<span class="fstat-no" title="function not covered" >(r</span>eset) =&gt; (
<span class="cstat-no" title="statement not covered" >          &lt;Button title={t('foodListScreen.delete')} onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; { <span class="cstat-no" title="statement not covered" >onDelete(food.id); <span class="cstat-no" title="statement not covered" ></span>reset(); </span>}} icon={{ name: "delete", color: theme.colors.white }} buttonStyle={styles.swipeButtonDelete} titleStyle={styles.swipeButtonTitle} /&gt;</span>
        )}
        containerStyle={styles.listItemContainer}
      &gt;
        {renderIcon()}
        &lt;ListItem.Content&gt;
          &lt;View style={styles.titleContainer}&gt;
            {gradeResult &amp;&amp; (
                &lt;Text style={[styles.gradePill, { backgroundColor: gradeResult.color }]}&gt;
                    {gradeResult.letter}
                &lt;/Text&gt;
            )}
            &lt;ListItem.Title style={styles.title} numberOfLines={2} ellipsizeMode="tail"&gt;
                {food.name}
            &lt;/ListItem.Title&gt;
          &lt;/View&gt;
          &lt;ListItem.Subtitle style={styles.subtitle}&gt;
            {`100g: Cal: ${Math.round(food.calories)} P: ${Math.round(food.protein)} C: ${Math.round(food.carbs)} F: ${Math.round(food.fat)}`}
          &lt;/ListItem.Subtitle&gt;
        &lt;/ListItem.Content&gt;
        &lt;TouchableOpacity onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >onShare(food)}</span> style={styles.actionButton} hitSlop={{ top: 10, bottom: 10, left: 5, right: 5 }}&gt;
            &lt;RNEIcon name="share-variant-outline" type="material-community" color={theme.colors.primary} size={24} /&gt;
        &lt;/TouchableOpacity&gt;
        &lt;TouchableOpacity onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >onQuickAdd(food)}</span> style={styles.actionButton} hitSlop={{ top: 10, bottom: 10, left: 5, right: 5 }}&gt;
            &lt;RNEIcon name="add-circle-outline" type="ionicon" color={theme.colors.primary} size={26} /&gt;
        &lt;/TouchableOpacity&gt;
      &lt;/ListItem.Swipeable&gt;
    );
  }
));
&nbsp;
const useStyles = <span class="cstat-no" title="statement not covered" >makeStyles(<span class="fstat-no" title="function not covered" >(t</span>heme) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
    listItemContainer: { backgroundColor: theme.colors.background, paddingVertical: 12, paddingHorizontal: 15, borderBottomColor: theme.colors.divider, },
    titleContainer: { flexDirection: 'row', alignItems: 'center', marginBottom: 3, },
    gradePill: {
        fontSize: 12, fontWeight: 'bold', color: theme.colors.white, 
        paddingHorizontal: 6, paddingVertical: 2, borderRadius: 8,
        marginRight: 8, minWidth: 20, textAlign: 'center', overflow: 'hidden', 
    },
    title: { color: theme.colors.text, fontWeight: "600", fontSize: 16, flexShrink: 1, textAlign: 'left', }, 
    subtitle: { color: theme.colors.secondary, fontSize: 13, marginTop: 2, textAlign: 'left', },
    swipeButtonEdit: { minHeight: "100%", backgroundColor: theme.colors.warning, justifyContent: 'center', alignItems: 'center', },
    swipeButtonDelete: { minHeight: "100%", backgroundColor: theme.colors.error, justifyContent: 'center', alignItems: 'center', },
    swipeButtonTitle: { color: theme.colors.white, fontWeight: 'bold', fontSize: 15, },
    foodIconEmoji: {
        fontSize: 28, width: 40, height: 40,
        marginRight: 15, textAlign: 'center', textAlignVertical: 'center',
    },
    foodIconPlaceholderView: {
        width: 40, height: 40, marginRight: 15, borderRadius: 8, 
        alignItems: 'center', justifyContent: 'center', backgroundColor: theme.colors.grey5,
    },
    actionButton: { 
        paddingHorizontal: 8, justifyContent: 'center',
        alignItems: 'center', marginLeft: 0,
    },
}));
&nbsp;
export default FoodItem;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END FoodItem.tsx.html ----------


---------- index.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> components</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/398</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/237</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/83</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/336</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <div class="pad1">
<table class="coverage-summary">
<thead>
<tr>
   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
</tr>
</thead>
<tbody><tr>
	<td class="file low" data-value="AccountSettings.tsx"><a href="AccountSettings.tsx.html">AccountSettings.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="6" class="abs low">0/6</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="8" class="abs low">0/8</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="2" class="abs low">0/2</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="5" class="abs low">0/5</td>
	</tr>

<tr>
	<td class="file low" data-value="AddFoodModal.tsx"><a href="AddFoodModal.tsx.html">AddFoodModal.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="112" class="abs low">0/112</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="74" class="abs low">0/74</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="11" class="abs low">0/11</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="88" class="abs low">0/88</td>
	</tr>

<tr>
	<td class="file low" data-value="ConfirmationModal.tsx"><a href="ConfirmationModal.tsx.html">ConfirmationModal.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="7" class="abs low">0/7</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="6" class="abs low">0/6</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="1" class="abs low">0/1</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="7" class="abs low">0/7</td>
	</tr>

<tr>
	<td class="file low" data-value="DailyEntryListItem.tsx"><a href="DailyEntryListItem.tsx.html">DailyEntryListItem.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="44" class="abs low">0/44</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="28" class="abs low">0/28</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="13" class="abs low">0/13</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="35" class="abs low">0/35</td>
	</tr>

<tr>
	<td class="file low" data-value="DailyGoalsInput.tsx"><a href="DailyGoalsInput.tsx.html">DailyGoalsInput.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="15" class="abs low">0/15</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="7" class="abs low">0/7</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="5" class="abs low">0/5</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="14" class="abs low">0/14</td>
	</tr>

<tr>
	<td class="file low" data-value="DailyProgress.tsx"><a href="DailyProgress.tsx.html">DailyProgress.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="14" class="abs low">0/14</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="6" class="abs low">0/6</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="4" class="abs low">0/4</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="12" class="abs low">0/12</td>
	</tr>

<tr>
	<td class="file low" data-value="DataManagementButtons.tsx"><a href="DataManagementButtons.tsx.html">DataManagementButtons.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="70" class="abs low">0/70</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="34" class="abs low">0/34</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="6" class="abs low">0/6</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="58" class="abs low">0/58</td>
	</tr>

<tr>
	<td class="file low" data-value="DateNavigator.tsx"><a href="DateNavigator.tsx.html">DateNavigator.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="16" class="abs low">0/16</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="6" class="abs low">0/6</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="4" class="abs low">0/4</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="15" class="abs low">0/15</td>
	</tr>

<tr>
	<td class="file low" data-value="FoodFormFields.tsx"><a href="FoodFormFields.tsx.html">FoodFormFields.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="27" class="abs low">0/27</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="28" class="abs low">0/28</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="9" class="abs low">0/9</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="23" class="abs low">0/23</td>
	</tr>

<tr>
	<td class="file low" data-value="FoodItem.tsx"><a href="FoodItem.tsx.html">FoodItem.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="27" class="abs low">0/27</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="11" class="abs low">0/11</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="12" class="abs low">0/12</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="21" class="abs low">0/21</td>
	</tr>

<tr>
	<td class="file low" data-value="QuickAddList.tsx"><a href="QuickAddList.tsx.html">QuickAddList.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="14" class="abs low">0/14</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="14" class="abs low">0/14</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="4" class="abs low">0/4</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="13" class="abs low">0/13</td>
	</tr>

<tr>
	<td class="file low" data-value="StatisticsChart.tsx"><a href="StatisticsChart.tsx.html">StatisticsChart.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="42" class="abs low">0/42</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="13" class="abs low">0/13</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="10" class="abs low">0/10</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="41" class="abs low">0/41</td>
	</tr>

<tr>
	<td class="file low" data-value="ThemeSwitch.tsx"><a href="ThemeSwitch.tsx.html">ThemeSwitch.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="4" class="abs low">0/4</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="2" class="abs low">0/2</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="2" class="abs low">0/2</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="4" class="abs low">0/4</td>
	</tr>

</tbody>
</table>
</div>
                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END index.html ----------


---------- QuickAddList.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/QuickAddList.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">components</a> QuickAddList.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/14</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/14</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/4</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/13</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a>
<a name='L128'></a><a href='#L128'>128</a>
<a name='L129'></a><a href='#L129'>129</a>
<a name='L130'></a><a href='#L130'>130</a>
<a name='L131'></a><a href='#L131'>131</a>
<a name='L132'></a><a href='#L132'>132</a>
<a name='L133'></a><a href='#L133'>133</a>
<a name='L134'></a><a href='#L134'>134</a>
<a name='L135'></a><a href='#L135'>135</a>
<a name='L136'></a><a href='#L136'>136</a>
<a name='L137'></a><a href='#L137'>137</a>
<a name='L138'></a><a href='#L138'>138</a>
<a name='L139'></a><a href='#L139'>139</a>
<a name='L140'></a><a href='#L140'>140</a>
<a name='L141'></a><a href='#L141'>141</a>
<a name='L142'></a><a href='#L142'>142</a>
<a name='L143'></a><a href='#L143'>143</a>
<a name='L144'></a><a href='#L144'>144</a>
<a name='L145'></a><a href='#L145'>145</a>
<a name='L146'></a><a href='#L146'>146</a>
<a name='L147'></a><a href='#L147'>147</a>
<a name='L148'></a><a href='#L148'>148</a>
<a name='L149'></a><a href='#L149'>149</a>
<a name='L150'></a><a href='#L150'>150</a>
<a name='L151'></a><a href='#L151'>151</a>
<a name='L152'></a><a href='#L152'>152</a>
<a name='L153'></a><a href='#L153'>153</a>
<a name='L154'></a><a href='#L154'>154</a>
<a name='L155'></a><a href='#L155'>155</a>
<a name='L156'></a><a href='#L156'>156</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/components/QuickAddList.tsx
import React from 'react';
import {
    View,
    FlatList,
    ActivityIndicator,
} from 'react-native';
import {
    Icon,
    Text,
    useTheme,
    makeStyles,
} from '@rneui/themed';
import { EstimatedFoodItem } from '../types/macros';
import { Food } from '../types/food'; // Import Food type
import { t } from '../localization/i18n';
import QuickAddItem from './Entry/QuickAddItem';
&nbsp;
interface QuickAddListProps {
    items: EstimatedFoodItem[];
    selectedIndices: Set&lt;number&gt;;
    editingIndex: number | null;
    editedName: string;
    editedGrams: string;
    onToggleItem: (index: number) =&gt; void;
    onEditItem: (index: number) =&gt; void;
    onSaveEdit: () =&gt; void;
    onCancelEdit: () =&gt; void;
    onNameChange: (name: string) =&gt; void;
    onGramsChange: (grams: string) =&gt; void;
    style?: object;
    isLoading?: boolean;
    foodIcons: { [foodName: string]: string | null | undefined };
    onSaveItemToLibrary: (item: EstimatedFoodItem, setSavingState: (isSaving: boolean) =&gt; void) =&gt; Promise&lt;void&gt;;
    foods: Food[]; // Add foods prop
}
&nbsp;
const QuickAddList: React.FC&lt;QuickAddListProps&gt; = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span></span>
    items,
    selectedIndices,
    editingIndex,
    editedName,
    editedGrams,
    onToggleItem,
    onEditItem,
    onSaveEdit,
    onCancelEdit,
    onNameChange,
    onGramsChange,
    style,
    isLoading,
    foodIcons,
    onSaveItemToLibrary,
    foods, // Destructure foods
}) =&gt; {
    const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
    const styles = <span class="cstat-no" title="statement not covered" >useStyles();</span>
&nbsp;
    const renderItem = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span> item, index }: { item: EstimatedFoodItem; index: number }) =&gt; {</span>
        const isSelected = <span class="cstat-no" title="statement not covered" >selectedIndices.has(index);</span>
        const isEditingThisItem = <span class="cstat-no" title="statement not covered" >editingIndex === index;</span>
        const isAnyItemEditing = <span class="cstat-no" title="statement not covered" >editingIndex !== null;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >        return (</span>
            &lt;QuickAddItem
                item={item}
                index={index}
                isSelected={isSelected}
                isEditingThisItem={isEditingThisItem}
                isAnyItemEditing={isAnyItemEditing}
                isLoading={isLoading}
                foodIcons={foodIcons}
                editedName={isEditingThisItem ? editedName : ''}
                editedGrams={isEditingThisItem ? editedGrams : ''}
                onToggleItem={onToggleItem}
                onEditItem={onEditItem}
                onSaveEdit={onSaveEdit}
                onCancelEdit={onCancelEdit}
                onNameChange={onNameChange}
                onGramsChange={onGramsChange}
                onSaveToLibrary={onSaveItemToLibrary}
                foods={foods} // Pass foods to QuickAddItem
            /&gt;
        );
    };
&nbsp;
<span class="cstat-no" title="statement not covered" >    if (isLoading &amp;&amp; items.length === 0) {</span>
<span class="cstat-no" title="statement not covered" >         return (</span>
             &lt;View style={styles.centeredContent}&gt;
                 &lt;ActivityIndicator size="large" color={theme.colors.primary} /&gt;
                 &lt;Text style={styles.loadingText}&gt;{t('quickAddList.analyzing')}&lt;/Text&gt;
             &lt;/View&gt;
         );
    }
&nbsp;
<span class="cstat-no" title="statement not covered" >    return (</span>
        &lt;FlatList
            data={items}
            keyExtractor={<span class="fstat-no" title="function not covered" >(i</span>tem, index) =&gt; <span class="cstat-no" title="statement not covered" >`quickadd-${index}-${item.foodName}-${item.estimatedWeightGrams}`}</span>
            renderItem={renderItem}
            ListEmptyComponent={
                !isLoading ? (
                    &lt;View style={styles.emptyListContainer}&gt;
                        &lt;Icon name="image-search-outline" type="material-community" size={48} color={theme.colors.grey3} /&gt;
                        &lt;Text style={styles.emptyListText}&gt;{t('quickAddList.emptyMessage')}&lt;/Text&gt;
                        &lt;Text style={styles.emptyListSubText}&gt;{t('quickAddList.emptyHint')}&lt;/Text&gt;
                    &lt;/View&gt;
                ) : null
            }
            style={[styles.listDefaults, style]}
            extraData={{ selectedIndices, editingIndex, foodIcons, isLoading, editedName, editedGrams, foodsLength: foods.length }}
            keyboardShouldPersistTaps="handled"
            contentContainerStyle={items.length === 0 &amp;&amp; !isLoading ? styles.listContentContainerEmpty : {paddingBottom: 10}}
        /&gt;
    );
};
&nbsp;
const useStyles = <span class="cstat-no" title="statement not covered" >makeStyles(<span class="fstat-no" title="function not covered" >(t</span>heme) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
    listDefaults: {},
    listContentContainerEmpty: { flexGrow: 1, justifyContent: 'center', },
    emptyListContainer: {
        alignItems: "center",
        justifyContent: 'center',
        paddingVertical: 40,
        paddingHorizontal: 20,
        flexGrow: 1,
    },
    emptyListText: {
        color: theme.colors.grey2,
        fontSize: 16,
        textAlign: "center",
        marginTop: 15,
        fontWeight: '500',
    },
    emptyListSubText: {
        fontSize: 14,
        color: theme.colors.grey3,
        textAlign: "center",
        marginTop: 8,
    },
    centeredContent: {
        flex: 1,
        alignItems: 'center',
        justifyContent: 'center',
        padding: 20,
        minHeight: 200,
    },
    loadingText: {
        marginTop: 12,
        color: theme.colors.text,
        fontSize: 16,
        fontWeight: "500",
    },
}));
&nbsp;
export default QuickAddList;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END QuickAddList.tsx.html ----------


---------- StatisticsChart.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/StatisticsChart.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">components</a> StatisticsChart.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/42</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/13</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/10</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/41</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a>
<a name='L128'></a><a href='#L128'>128</a>
<a name='L129'></a><a href='#L129'>129</a>
<a name='L130'></a><a href='#L130'>130</a>
<a name='L131'></a><a href='#L131'>131</a>
<a name='L132'></a><a href='#L132'>132</a>
<a name='L133'></a><a href='#L133'>133</a>
<a name='L134'></a><a href='#L134'>134</a>
<a name='L135'></a><a href='#L135'>135</a>
<a name='L136'></a><a href='#L136'>136</a>
<a name='L137'></a><a href='#L137'>137</a>
<a name='L138'></a><a href='#L138'>138</a>
<a name='L139'></a><a href='#L139'>139</a>
<a name='L140'></a><a href='#L140'>140</a>
<a name='L141'></a><a href='#L141'>141</a>
<a name='L142'></a><a href='#L142'>142</a>
<a name='L143'></a><a href='#L143'>143</a>
<a name='L144'></a><a href='#L144'>144</a>
<a name='L145'></a><a href='#L145'>145</a>
<a name='L146'></a><a href='#L146'>146</a>
<a name='L147'></a><a href='#L147'>147</a>
<a name='L148'></a><a href='#L148'>148</a>
<a name='L149'></a><a href='#L149'>149</a>
<a name='L150'></a><a href='#L150'>150</a>
<a name='L151'></a><a href='#L151'>151</a>
<a name='L152'></a><a href='#L152'>152</a>
<a name='L153'></a><a href='#L153'>153</a>
<a name='L154'></a><a href='#L154'>154</a>
<a name='L155'></a><a href='#L155'>155</a>
<a name='L156'></a><a href='#L156'>156</a>
<a name='L157'></a><a href='#L157'>157</a>
<a name='L158'></a><a href='#L158'>158</a>
<a name='L159'></a><a href='#L159'>159</a>
<a name='L160'></a><a href='#L160'>160</a>
<a name='L161'></a><a href='#L161'>161</a>
<a name='L162'></a><a href='#L162'>162</a>
<a name='L163'></a><a href='#L163'>163</a>
<a name='L164'></a><a href='#L164'>164</a>
<a name='L165'></a><a href='#L165'>165</a>
<a name='L166'></a><a href='#L166'>166</a>
<a name='L167'></a><a href='#L167'>167</a>
<a name='L168'></a><a href='#L168'>168</a>
<a name='L169'></a><a href='#L169'>169</a>
<a name='L170'></a><a href='#L170'>170</a>
<a name='L171'></a><a href='#L171'>171</a>
<a name='L172'></a><a href='#L172'>172</a>
<a name='L173'></a><a href='#L173'>173</a>
<a name='L174'></a><a href='#L174'>174</a>
<a name='L175'></a><a href='#L175'>175</a>
<a name='L176'></a><a href='#L176'>176</a>
<a name='L177'></a><a href='#L177'>177</a>
<a name='L178'></a><a href='#L178'>178</a>
<a name='L179'></a><a href='#L179'>179</a>
<a name='L180'></a><a href='#L180'>180</a>
<a name='L181'></a><a href='#L181'>181</a>
<a name='L182'></a><a href='#L182'>182</a>
<a name='L183'></a><a href='#L183'>183</a>
<a name='L184'></a><a href='#L184'>184</a>
<a name='L185'></a><a href='#L185'>185</a>
<a name='L186'></a><a href='#L186'>186</a>
<a name='L187'></a><a href='#L187'>187</a>
<a name='L188'></a><a href='#L188'>188</a>
<a name='L189'></a><a href='#L189'>189</a>
<a name='L190'></a><a href='#L190'>190</a>
<a name='L191'></a><a href='#L191'>191</a>
<a name='L192'></a><a href='#L192'>192</a>
<a name='L193'></a><a href='#L193'>193</a>
<a name='L194'></a><a href='#L194'>194</a>
<a name='L195'></a><a href='#L195'>195</a>
<a name='L196'></a><a href='#L196'>196</a>
<a name='L197'></a><a href='#L197'>197</a>
<a name='L198'></a><a href='#L198'>198</a>
<a name='L199'></a><a href='#L199'>199</a>
<a name='L200'></a><a href='#L200'>200</a>
<a name='L201'></a><a href='#L201'>201</a>
<a name='L202'></a><a href='#L202'>202</a>
<a name='L203'></a><a href='#L203'>203</a>
<a name='L204'></a><a href='#L204'>204</a>
<a name='L205'></a><a href='#L205'>205</a>
<a name='L206'></a><a href='#L206'>206</a>
<a name='L207'></a><a href='#L207'>207</a>
<a name='L208'></a><a href='#L208'>208</a>
<a name='L209'></a><a href='#L209'>209</a>
<a name='L210'></a><a href='#L210'>210</a>
<a name='L211'></a><a href='#L211'>211</a>
<a name='L212'></a><a href='#L212'>212</a>
<a name='L213'></a><a href='#L213'>213</a>
<a name='L214'></a><a href='#L214'>214</a>
<a name='L215'></a><a href='#L215'>215</a>
<a name='L216'></a><a href='#L216'>216</a>
<a name='L217'></a><a href='#L217'>217</a>
<a name='L218'></a><a href='#L218'>218</a>
<a name='L219'></a><a href='#L219'>219</a>
<a name='L220'></a><a href='#L220'>220</a>
<a name='L221'></a><a href='#L221'>221</a>
<a name='L222'></a><a href='#L222'>222</a>
<a name='L223'></a><a href='#L223'>223</a>
<a name='L224'></a><a href='#L224'>224</a>
<a name='L225'></a><a href='#L225'>225</a>
<a name='L226'></a><a href='#L226'>226</a>
<a name='L227'></a><a href='#L227'>227</a>
<a name='L228'></a><a href='#L228'>228</a>
<a name='L229'></a><a href='#L229'>229</a>
<a name='L230'></a><a href='#L230'>230</a>
<a name='L231'></a><a href='#L231'>231</a>
<a name='L232'></a><a href='#L232'>232</a>
<a name='L233'></a><a href='#L233'>233</a>
<a name='L234'></a><a href='#L234'>234</a>
<a name='L235'></a><a href='#L235'>235</a>
<a name='L236'></a><a href='#L236'>236</a>
<a name='L237'></a><a href='#L237'>237</a>
<a name='L238'></a><a href='#L238'>238</a>
<a name='L239'></a><a href='#L239'>239</a>
<a name='L240'></a><a href='#L240'>240</a>
<a name='L241'></a><a href='#L241'>241</a>
<a name='L242'></a><a href='#L242'>242</a>
<a name='L243'></a><a href='#L243'>243</a>
<a name='L244'></a><a href='#L244'>244</a>
<a name='L245'></a><a href='#L245'>245</a>
<a name='L246'></a><a href='#L246'>246</a>
<a name='L247'></a><a href='#L247'>247</a>
<a name='L248'></a><a href='#L248'>248</a>
<a name='L249'></a><a href='#L249'>249</a>
<a name='L250'></a><a href='#L250'>250</a>
<a name='L251'></a><a href='#L251'>251</a>
<a name='L252'></a><a href='#L252'>252</a>
<a name='L253'></a><a href='#L253'>253</a>
<a name='L254'></a><a href='#L254'>254</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/components/StatisticsChart.tsx
import React from "react";
import { View, StyleSheet, Platform } from "react-native";
import { WebView } from "react-native-webview";
import { Statistics, MacroType, macros as macroKeys } from "../types/settings";
import { useTheme } from "@rneui/themed";
import { t } from '../localization/i18n';
import i18n from '../localization/i18n'; // Import i18n for locale
import * as Localization from 'expo-localization'; // Import Localization
&nbsp;
// Declare uPlot as a global variable for TypeScript, as it's loaded via CDN in the WebView
declare const uPlot: any;
&nbsp;
// Local interface for uPlot Series configuration to help TypeScript
interface uPlotSeriesConfig {
  stroke?: string;
  width?: number;
  label?: string;
  points?: { show?: boolean; size?: number; fill?: string; stroke?: string; };
  dash?: number[];
  fill?: string;
  // Add other series properties if you use them
}
&nbsp;
interface StatisticsChartProps {
  statistics: Statistics;
}
&nbsp;
const StatisticsChart: React.FC&lt;StatisticsChartProps&gt; = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span> statistics }) =&gt; {</span>
  const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
&nbsp;
  const getChartTitle = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(m</span>acro: MacroType): string =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    switch(macro) {</span>
        case 'calories': <span class="cstat-no" title="statement not covered" >return t('dailyProgress.calories');</span>
        case 'protein': <span class="cstat-no" title="statement not covered" >return t('dailyProgress.protein');</span>
        case 'carbs': <span class="cstat-no" title="statement not covered" >return t('dailyProgress.carbs');</span>
        case 'fat': <span class="cstat-no" title="statement not covered" >return t('dailyProgress.fat');</span>
        default:
            const exhaustiveCheck: never = <span class="cstat-no" title="statement not covered" >macro;</span>
<span class="cstat-no" title="statement not covered" >            return exhaustiveCheck;</span>
    }
  };
&nbsp;
  const chartHeightInHTML = <span class="cstat-no" title="statement not covered" >250;</span>
  const chartVerticalMarginInHTML = <span class="cstat-no" title="statement not covered" >20;</span>
  const totalEstimatedWebViewHeight = <span class="cstat-no" title="statement not covered" >macroKeys.length * (chartHeightInHTML + chartVerticalMarginInHTML) + 40;</span> // Extra padding for safety
&nbsp;
  const generateChartHTML = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
    const chartData = <span class="cstat-no" title="statement not covered" >(macroKeys as readonly MacroType[]).reduce(<span class="fstat-no" title="function not covered" >(a</span>cc, macro) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >      acc[macro] = statistics[macro].map(<span class="fstat-no" title="function not covered" >(s</span>eries) =&gt;</span>
<span class="cstat-no" title="statement not covered" >        series.map(<span class="fstat-no" title="function not covered" >(i</span>tem) =&gt; (<span class="cstat-no" title="statement not covered" >{ x: item.x / 1000, y: item.y })</span>) </span>// Ensure x is in seconds
      );
<span class="cstat-no" title="statement not covered" >      return acc;</span>
    }, {} as { [key in MacroType]: { x: number; y: number }[][] });
&nbsp;
    const textColor = <span class="cstat-no" title="statement not covered" >theme.colors.text;</span>
    const gridColor = <span class="cstat-no" title="statement not covered" >theme.colors.grey5;</span>
    const fontFamily = <span class="cstat-no" title="statement not covered" >Platform.OS === 'ios' ? "System" : "sans-serif";</span>
&nbsp;
    const lineColors = <span class="cstat-no" title="statement not covered" >{</span>
      calories: theme.colors.primary, protein: theme.colors.success,
      carbs: theme.colors.warning, fat: theme.colors.error,
    };
&nbsp;
<span class="cstat-no" title="statement not covered" >    return `</span>
        &lt;!DOCTYPE html&gt;
        &lt;html&gt;
        &lt;head&gt;
            &lt;meta charset="utf-8"&gt;
            &lt;meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"&gt;
            &lt;title&gt;Macro Charts&lt;/title&gt;
            &lt;style&gt;
                body { font-family: ${fontFamily}; margin: 0; padding: 0; background-color: ${theme.colors.background}; color: ${textColor}; overflow-x: hidden; }
                .chart-container { width: 95%; height: ${chartHeightInHTML}px; margin: ${chartVerticalMarginInHTML / 2}px auto; }
                .no-data-message { display: flex; align-items: center; justify-content: center; height: 100%; text-align: center; color: ${textColor}; font-size: 14px; }
                .u-legend .u-series &gt; td { min-width: 50px; } /* Ensure legend items have some width */
            &lt;/style&gt;
            &lt;link rel="stylesheet" href="https://unpkg.com/uplot@1.6.27/dist/uPlot.min.css"&gt;
            &lt;script src="https://unpkg.com/uplot@1.6.27/dist/uPlot.iife.min.js"&gt;&lt;/script&gt;
        &lt;/head&gt;
        &lt;body&gt;
            ${(macroKeys as readonly MacroType[]).map(<span class="fstat-no" title="function not covered" >(m</span>acro) =&gt; {
                const currentMacroData = <span class="cstat-no" title="statement not covered" >chartData[macro];</span>
                const chartTitle = <span class="cstat-no" title="statement not covered" >getChartTitle(macro);</span>
                const isCalories = <span class="cstat-no" title="statement not covered" >macro === "calories";</span>
                
                const movingAverageLabel = <span class="cstat-no" title="statement not covered" >t('statisticsChart.movingAverage');</span>
                const goalLabel = <span class="cstat-no" title="statement not covered" >t('statisticsChart.goal');</span>
&nbsp;
                const intakeSeries: uPlotSeriesConfig = <span class="cstat-no" title="statement not covered" >{</span>
                    stroke: lineColors[macro],
                    width: 2.5,
                    label: movingAverageLabel,
                    points: { show: false },
                    fill: `${lineColors[macro]}2A`,
                };
                
                const goalSeries: uPlotSeriesConfig = <span class="cstat-no" title="statement not covered" >{</span>
                    stroke: "#e74c3c",
                    width: 1.5,
                    dash: [10, 5],
                    label: goalLabel,
                    points: { show: false }
                };
&nbsp;
                const seriesConfig: uPlotSeriesConfig[] = <span class="cstat-no" title="statement not covered" >[</span>
                    {}, // X-axis
                    intakeSeries
                ];
&nbsp;
<span class="cstat-no" title="statement not covered" >                if (isCalories) {</span>
<span class="cstat-no" title="statement not covered" >                    seriesConfig.push(goalSeries);</span>
                }
&nbsp;
&nbsp;
<span class="cstat-no" title="statement not covered" >                return `</span>
                &lt;div id="${macro}-chart" class="chart-container"&gt;
                    &lt;div class="no-data-message"&gt;${t("statisticsChart.noData", { chartTitle: chartTitle })}&lt;/div&gt;
                &lt;/div&gt;
                &lt;script&gt;
                    (function() {
                        const chartElement = document.getElementById('${macro}-chart');
                        try {
                            const dataForChart = ${JSON.stringify(currentMacroData)};
                            let canRender = false;
&nbsp;
                            let xValues = [];
                            let yValuesMovingAvg = [];
                            let yValuesGoal = [];
                            
                            // data structure: [ [daily_intake], [moving_avg], [goal]? ]
                            if (dataForChart &amp;&amp; dataForChart.length &gt;= 2 &amp;&amp; dataForChart[0] &amp;&amp; dataForChart[1] &amp;&amp; Array.isArray(dataForChart[0]) &amp;&amp; dataForChart[0].length &gt;= 1) {
                                // xValues from daily data to get all date points
                                xValues = dataForChart[0].map(d =&gt; d.x);
                                // yValues from moving average data
                                yValuesMovingAvg = dataForChart[1].map(d =&gt; d.y);
                                canRender = true; 
                                
                                if (${isCalories} &amp;&amp; dataForChart.length &gt; 2 &amp;&amp; dataForChart[2] &amp;&amp; Array.isArray(dataForChart[2])) {
                                    const tempGoalMap = new Map(dataForChart[2].map(p =&gt; [p.x, p.y]));
                                    yValuesGoal = xValues.map(x =&gt; tempGoalMap.get(x) === undefined ? null : tempGoalMap.get(x));
                                }
                            }
&nbsp;
                            if (canRender) {
                                chartElement.innerHTML = ''; // Clear "no data" message
                                const uPlotInstanceData = ${isCalories} 
                                    ? [xValues, yValuesMovingAvg, yValuesGoal] 
                                    : [xValues, yValuesMovingAvg];
                                
                                const opts = {
                                    title: "${chartTitle}",
                                    width: chartElement.offsetWidth,
                                    height: ${chartHeightInHTML},
                                    tzDate: ts =&gt; uPlot.tzDate(new Date(ts * 1000), '${Localization.getCalendars()?.[0]?.timeZone || 'UTC'}'),
                                    scales: { x: { time: true }, y: { range: (self, min, max) =&gt; [0, Math.max(10, max * 1.25)] } },
                                    axes: [
                                        { stroke: "${textColor}", font: "12px ${fontFamily}", grid: { stroke: "${gridColor}", width: 1 }, ticks: { stroke: "${gridColor}", width: 1 } },
                                        { stroke: "${textColor}", font: "12px ${fontFamily}", grid: { stroke: "${gridColor}", width: 1 }, ticks: { stroke: "${gridColor}", width: 1 }, values: (self, ticks) =&gt; ticks.map(rawValue =&gt; Math.round(rawValue)) }
                                    ],
                                    series: ${JSON.stringify(seriesConfig)},
                                    legend: { show: false },
                                    cursor: { drag: { setScale: false }, focus: { prox: 30 }, points: { size: 6, fill: (self, i) =&gt; self.series[i]._stroke, stroke: (self, i) =&gt; self.series[i]._stroke } }
                                };
                                new uPlot(opts, uPlotInstanceData, chartElement);
                            }
                        } catch (e) {
                            console.error('--- ERROR in uPlot script for ${macro} ---', e.message, e.stack);
                            chartElement.innerHTML = '&lt;div class="no-data-message" style="color:red;"&gt;Chart Error: ' + e.message + '&lt;/div&gt;';
                        }
                    })();
                &lt;/script&gt;
            `;}).join("")}
        &lt;/body&gt;
        &lt;/html&gt;
        `;
  };
&nbsp;
<span class="cstat-no" title="statement not covered" >  return (</span>
    &lt;View style={[styles.webViewContainer, { height: totalEstimatedWebViewHeight }]}&gt;
      &lt;WebView
        originWhitelist={["*"]}
        source={{ html: generateChartHTML(), baseUrl: Platform.OS === 'android' ? 'file:///android_asset/' : '' }} // baseUrl for Android
        style={styles.webView}
        scalesPageToFit={Platform.OS === 'android'}
        scrollEnabled={false}
        javaScriptEnabled={true}
        domStorageEnabled={true}
        onError={<span class="fstat-no" title="function not covered" >(s</span>yntheticEvent) =&gt; {
          const {nativeEvent} = <span class="cstat-no" title="statement not covered" >syntheticEvent;</span>
<span class="cstat-no" title="statement not covered" >          console.warn('WebView error: ', nativeEvent);</span>
        }}
        onHttpError={<span class="fstat-no" title="function not covered" >(s</span>yntheticEvent) =&gt; { // Useful for 404s on resources like uPlot CSS/JS if CDN fails
            const {nativeEvent} = <span class="cstat-no" title="statement not covered" >syntheticEvent;</span>
<span class="cstat-no" title="statement not covered" >            console.warn('WebView HTTP error: ', nativeEvent.url, nativeEvent.statusCode, nativeEvent.description);</span>
        }}
        // Log messages from WebView's console.log to React Native console
        onMessage={<span class="fstat-no" title="function not covered" >(e</span>vent) =&gt; {
<span class="cstat-no" title="statement not covered" >            console.log("WebView Message:", event.nativeEvent.data);</span>
        }}
        // Inject JavaScript to bridge console.log, console.error, etc.
        // Note: This basic bridge might not capture all nuances or complex objects perfectly.
        injectedJavaScript={`
            (function() {
                const originalConsoleLog = console.log;
                const originalConsoleError = console.error;
                const originalConsoleWarn = console.warn;
                const originalConsoleInfo = console.info;
                const originalConsoleDebug = console.debug;
&nbsp;
                const rnBridgePost = (type, args) =&gt; {
                    const message = args.map(arg =&gt; {
                        if (typeof arg === 'object' || typeof arg === 'function') {
                            try {
                                return JSON.stringify(arg);
                            } catch (e) {
                                return '[Unserializable Object]';
                            }
                        }
                        return String(arg);
                    }).join(' ');
                    window.ReactNativeWebView.postMessage(JSON.stringify({ type: 'CONSOLE', level: type, message: message }));
                };
&nbsp;
                console.log = function() { originalConsoleLog.apply(console, arguments); rnBridgePost('LOG', Array.from(arguments)); };
                console.error = function() { originalConsoleError.apply(console, arguments); rnBridgePost('ERROR', Array.from(arguments)); };
                console.warn = function() { originalConsoleWarn.apply(console, arguments); rnBridgePost('WARN', Array.from(arguments)); };
                console.info = function() { originalConsoleInfo.apply(console, arguments); rnBridgePost('INFO', Array.from(arguments)); };
                console.debug = function() { originalConsoleDebug.apply(console, arguments); rnBridgePost('DEBUG', Array.from(arguments)); };
                window.onerror = function(message, source, lineno, colno, error) {
                    rnBridgePost('GLOBAL_ERROR', [message, 'at', source + ':' + lineno + ':' + colno, error ? error.stack : '']);
                    return false; // Let default handler run.
                };
            })();
            true; // note: this is required, or you'll sometimes get silent failures
        `}
        key={`stat-chart-${theme.mode}-${i18n.locale}-${JSON.stringify(statistics).length}`}
      /&gt;
    &lt;/View&gt;
  );
};
&nbsp;
const styles = <span class="cstat-no" title="statement not covered" >StyleSheet.create({</span>
  webViewContainer: {
    width: "100%",
    marginTop: 10,
  },
  webView: {
    flex: 1,
    backgroundColor: 'transparent',
  },
});
&nbsp;
export default StatisticsChart;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END StatisticsChart.tsx.html ----------


---------- ThemeSwitch.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for components/ThemeSwitch.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">components</a> ThemeSwitch.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/4</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/2</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/2</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/4</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/components/ThemeSwitch.tsx
// components/ThemeSwitch.tsx
import React from "react";
import { ListItem, Switch, useTheme } from "@rneui/themed";
import { t } from '../localization/i18n';
&nbsp;
interface ThemeSwitchProps {
  currentTheme: 'light' | 'dark' | 'system';
  onToggle: (theme: 'light' | 'dark' | 'system') =&gt; void;
}
&nbsp;
const ThemeSwitch: React.FC&lt;ThemeSwitchProps&gt; = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span> currentTheme, onToggle }) =&gt; {</span>
  const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >  return (</span>
    &lt;ListItem
      bottomDivider
      containerStyle={{ backgroundColor: theme.colors.background }}
    &gt;
      &lt;ListItem.Content&gt;
        &lt;ListItem.Title style={{ color: theme.colors.text, textAlign: 'left' }}&gt;
          {t('themeSwitch.darkMode')}
        &lt;/ListItem.Title&gt;
      &lt;/ListItem.Content&gt;
      &lt;Switch
        value={currentTheme === 'dark'}
        onValueChange={<span class="fstat-no" title="function not covered" >(n</span>ewValue) =&gt; {
<span class="cstat-no" title="statement not covered" >          onToggle(newValue ? 'dark' : 'light');</span>
        }}
      /&gt;
    &lt;/ListItem&gt;
  );
};
&nbsp;
export default ThemeSwitch;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END ThemeSwitch.tsx.html ----------


---------- AuthContext.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for context/AuthContext.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">context</a> AuthContext.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/33</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/2</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/8</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/33</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/context/AuthContext.tsx
import React, { createContext, useState, useContext, useEffect, useCallback } from 'react';
import { loadSettings, saveSettings } from '../services/storageService';
import * as authService from '../services/authService';
import { Settings, LanguageCode } from '../types/settings';
import { Token } from '../types/token';
&nbsp;
export interface AuthState {
  authenticated: boolean;
  token: string | null;
}
&nbsp;
export interface AuthContextType {
  authState: AuthState;
  settings: Settings;
  isLoading: boolean;
  login: (tokenData: Token) =&gt; Promise&lt;void&gt;;
  logout: () =&gt; Promise&lt;void&gt;;
  changeTheme: (theme: 'light' | 'dark' | 'system') =&gt; void;
  changeLocale: (locale: LanguageCode) =&gt; void;
}
&nbsp;
export const AuthContext = <span class="cstat-no" title="statement not covered" >createContext&lt;Partial&lt;AuthContextType&gt;&gt;({});</span>
&nbsp;
export function <span class="fstat-no" title="function not covered" >useAuth(</span>) {
<span class="cstat-no" title="statement not covered" >  return useContext(AuthContext);</span>
}
&nbsp;
export const AuthProvider: React.FC&lt;{children: React.ReactNode}&gt; = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span> children }) =&gt; {</span>
  const [authState, setAuthState] = <span class="cstat-no" title="statement not covered" >useState&lt;AuthState&gt;({ authenticated: false, token: null });</span>
  const [settings, setSettings] = <span class="cstat-no" title="statement not covered" >useState&lt;Settings&gt;({</span>
    theme: 'system',
    language: 'system',
    dailyGoals: { calories: 2000, protein: 150, carbs: 200, fat: 70 },
  });
  const [isLoading, setIsLoading] = <span class="cstat-no" title="statement not covered" >useState(true);</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >  useEffect(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
    const loadAuthData = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >      try {</span>
        const tokenData = <span class="cstat-no" title="statement not covered" >await authService.getAuthToken();</span>
        const loadedSettings = <span class="cstat-no" title="statement not covered" >await loadSettings();</span>
<span class="cstat-no" title="statement not covered" >        setSettings(loadedSettings);</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >        if (tokenData?.access_token) {</span>
<span class="cstat-no" title="statement not covered" >          setAuthState({ authenticated: true, token: tokenData.access_token });</span>
        }
      } catch (e) {
<span class="cstat-no" title="statement not covered" >        console.error("Failed to load auth data", e);</span>
      } finally {
<span class="cstat-no" title="statement not covered" >        setIsLoading(false);</span>
      }
    };
&nbsp;
<span class="cstat-no" title="statement not covered" >    loadAuthData();</span>
  }, []);
&nbsp;
  const login = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (tokenData: Token) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    await authService.setAuthToken(tokenData);</span>
<span class="cstat-no" title="statement not covered" >    setAuthState({ authenticated: true, token: tokenData.access_token });</span>
  };
&nbsp;
  const logout = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    await authService.logoutUser(); </span>// This clears tokens and calls backend
<span class="cstat-no" title="statement not covered" >    setAuthState({ authenticated: false, token: null });</span>
  };
&nbsp;
  const changeTheme = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync (theme: 'light' | 'dark' | 'system') =&gt; {</span>
    const newSettings = <span class="cstat-no" title="statement not covered" >{ ...settings, theme };</span>
<span class="cstat-no" title="statement not covered" >    setSettings(newSettings);</span>
<span class="cstat-no" title="statement not covered" >    await saveSettings(newSettings);</span>
  }, [settings]);
&nbsp;
  const changeLocale = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync (locale: LanguageCode) =&gt; {</span>
    const newSettings = <span class="cstat-no" title="statement not covered" >{ ...settings, language: locale };</span>
<span class="cstat-no" title="statement not covered" >    setSettings(newSettings);</span>
<span class="cstat-no" title="statement not covered" >    await saveSettings(newSettings);</span>
  }, [settings]);
&nbsp;
  const value: AuthContextType = <span class="cstat-no" title="statement not covered" >{</span>
    authState,
    settings,
    isLoading,
    login,
    logout,
    changeTheme,
    changeLocale,
  };
&nbsp;
<span class="cstat-no" title="statement not covered" >  return &lt;AuthContext.Provider value={value}&gt;{children}&lt;/AuthContext.Provider&gt;;</span>
};</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END AuthContext.tsx.html ----------


---------- index.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for context</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> context</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/33</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/2</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/8</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/33</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <div class="pad1">
<table class="coverage-summary">
<thead>
<tr>
   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
</tr>
</thead>
<tbody><tr>
	<td class="file low" data-value="AuthContext.tsx"><a href="AuthContext.tsx.html">AuthContext.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="33" class="abs low">0/33</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="2" class="abs low">0/2</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="8" class="abs low">0/8</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="33" class="abs low">0/33</td>
	</tr>

</tbody>
</table>
</div>
                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END index.html ----------


---------- favicon.png ----------
(Image file - content not included)
---------- END favicon.png ----------


---------- index.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for All files</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="prettify.css" />
    <link rel="stylesheet" href="base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1>All files</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/2550</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/1681</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/467</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/2171</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <div class="pad1">
<table class="coverage-summary">
<thead>
<tr>
   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
</tr>
</thead>
<tbody><tr>
	<td class="file low" data-value="components"><a href="components/index.html">components</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="398" class="abs low">0/398</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="237" class="abs low">0/237</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="83" class="abs low">0/83</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="336" class="abs low">0/336</td>
	</tr>

<tr>
	<td class="file low" data-value="components/AddEntryModal"><a href="components/AddEntryModal/index.html">components/AddEntryModal</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="437" class="abs low">0/437</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="403" class="abs low">0/403</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="92" class="abs low">0/92</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="327" class="abs low">0/327</td>
	</tr>

<tr>
	<td class="file low" data-value="components/Entry"><a href="components/Entry/index.html">components/Entry</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="28" class="abs low">0/28</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="46" class="abs low">0/46</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="11" class="abs low">0/11</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="25" class="abs low">0/25</td>
	</tr>

<tr>
	<td class="file low" data-value="context"><a href="context/index.html">context</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="33" class="abs low">0/33</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="2" class="abs low">0/2</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="8" class="abs low">0/8</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="33" class="abs low">0/33</td>
	</tr>

<tr>
	<td class="file low" data-value="localization"><a href="localization/index.html">localization</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="21" class="abs low">0/21</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="14" class="abs low">0/14</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="3" class="abs low">0/3</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="21" class="abs low">0/21</td>
	</tr>

<tr>
	<td class="file low" data-value="screens"><a href="screens/index.html">screens</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="934" class="abs low">0/934</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="530" class="abs low">0/530</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="188" class="abs low">0/188</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="803" class="abs low">0/803</td>
	</tr>

<tr>
	<td class="file low" data-value="services"><a href="services/index.html">services</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="332" class="abs low">0/332</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="160" class="abs low">0/160</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="48" class="abs low">0/48</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="310" class="abs low">0/310</td>
	</tr>

<tr>
	<td class="file low" data-value="utils"><a href="utils/index.html">utils</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="367" class="abs low">0/367</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="289" class="abs low">0/289</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="34" class="abs low">0/34</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="316" class="abs low">0/316</td>
	</tr>

</tbody>
</table>
</div>
                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="sorter.js"></script>
        <script src="block-navigation.js"></script>
    </body>
</html>
    
---------- END index.html ----------


---------- i18n.ts.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for localization/i18n.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">localization</a> i18n.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/21</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/14</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/3</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/21</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/localization/i18n.ts
import * as Localization from 'expo-localization';
import { I18n } from 'i18n-js';
import en from './languages/en.json';
import ru from './languages/ru.json';
import he from './languages/he.json';
import { Platform, I18nManager } from 'react-native';
// Import specific date-fns locales statically
import { enUS, ru as ruLocale, he as heLocale } from 'date-fns/locale';
&nbsp;
const translations = <span class="cstat-no" title="statement not covered" >{</span>
  en,
  ru,
  he,
};
&nbsp;
const i18n = <span class="cstat-no" title="statement not covered" >new I18n(translations);</span>
&nbsp;
// --- Helper Type Generation for Translation Keys ---
&nbsp;
// Helper type to recursively generate dot-notation paths including intermediate paths
type Paths&lt;T&gt; = T extends object ? {
    [K in keyof T]: K extends string ? 
        T[K] extends any[] ? `${K}` : // If it's an array, the key itself is a valid path to the array
        `${K}` | `${K}.${Paths&lt;T[K]&gt;}` 
        : never;
}[keyof T] : never;
&nbsp;
// Flattens the union type generated by Paths (removes trailing dots)
type FlattenPath&lt;T extends string&gt; =
    T extends `${infer Head}.${infer Tail}` ?
        Tail extends '' ? Head : `${Head}.${FlattenPath&lt;Tail&gt;}` :
    T;
&nbsp;
// Final type representing all valid translation keys
export type TranslationKey = FlattenPath&lt;Paths&lt;typeof en&gt;&gt;;
&nbsp;
// --- End Helper Type Generation ---
&nbsp;
&nbsp;
// Set initial locale and handle RTL
export const setLocale = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(l</span>ocale: string) =&gt; {</span>
  const languageTag = <span class="cstat-no" title="statement not covered" >locale.split('-')[0];</span>
<span class="cstat-no" title="statement not covered" >  i18n.locale = languageTag;</span>
<span class="cstat-no" title="statement not covered" >  i18n.defaultLocale = 'en';</span>
&nbsp;
  const isRTL = <span class="cstat-no" title="statement not covered" >languageTag === 'he';</span>
<span class="cstat-no" title="statement not covered" >  if (Platform.OS !== 'web' &amp;&amp; I18nManager.isRTL !== isRTL) {</span>
<span class="cstat-no" title="statement not covered" >    I18nManager.forceRTL(isRTL);</span>
<span class="cstat-no" title="statement not covered" >    console.log(`RTL forced to: ${isRTL} for locale: ${languageTag}. App restart/reload may be needed for full layout update.`);</span>
  } else <span class="cstat-no" title="statement not covered" >if (Platform.OS === 'web') {</span>
<span class="cstat-no" title="statement not covered" >      document.documentElement.dir = isRTL ? 'rtl' : 'ltr';</span>
  }
};
&nbsp;
const deviceLocale = <span class="cstat-no" title="statement not covered" >Localization.getLocales()?.[0]?.languageTag || 'en-US';</span>
<span class="cstat-no" title="statement not covered" >setLocale(deviceLocale);</span>
&nbsp;
// Updated t function with generic type for better type safety with `returnObjects: true`
export function <span class="fstat-no" title="function not covered" >t&lt;</span>TResult = string&gt;(scope: TranslationKey, options?: any): TResult {
<span class="cstat-no" title="statement not covered" >  return i18n.t(scope as string, { ...options, locale: i18n.locale }) as TResult;</span>
}
&nbsp;
// Function to get date-fns locale (unchanged)
export const getDateFnLocale = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
  const currentLocale = <span class="cstat-no" title="statement not covered" >i18n.locale.split('-')[0];</span>
<span class="cstat-no" title="statement not covered" >  switch (currentLocale) {</span>
    case 'ru':
<span class="cstat-no" title="statement not covered" >      return ruLocale;</span>
    case 'he':
<span class="cstat-no" title="statement not covered" >      return heLocale;</span>
    case 'en':
    default:
<span class="cstat-no" title="statement not covered" >      return enUS;</span>
  }
};
&nbsp;
export default i18n;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END i18n.ts.html ----------


---------- index.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for localization</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> localization</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/21</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/14</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/3</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/21</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <div class="pad1">
<table class="coverage-summary">
<thead>
<tr>
   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
</tr>
</thead>
<tbody><tr>
	<td class="file low" data-value="i18n.ts"><a href="i18n.ts.html">i18n.ts</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="21" class="abs low">0/21</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="14" class="abs low">0/14</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="3" class="abs low">0/3</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="21" class="abs low">0/21</td>
	</tr>

</tbody>
</table>
</div>
                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END index.html ----------


---------- prettify.css ----------
.pln{color:#000}@media screen{.str{color:#080}.kwd{color:#008}.com{color:#800}.typ{color:#606}.lit{color:#066}.pun,.opn,.clo{color:#660}.tag{color:#008}.atn{color:#606}.atv{color:#080}.dec,.var{color:#606}.fun{color:red}}@media print,projection{.str{color:#060}.kwd{color:#006;font-weight:bold}.com{color:#600;font-style:italic}.typ{color:#404;font-weight:bold}.lit{color:#044}.pun,.opn,.clo{color:#440}.tag{color:#006;font-weight:bold}.atn{color:#404}.atv{color:#060}}pre.prettyprint{padding:2px;border:1px solid #888}ol.linenums{margin-top:0;margin-bottom:0}li.L0,li.L1,li.L2,li.L3,li.L5,li.L6,li.L7,li.L8{list-style-type:none}li.L1,li.L3,li.L5,li.L7,li.L9{background:#eee}

---------- END prettify.css ----------


---------- prettify.js ----------
/* eslint-disable */
window.PR_SHOULD_USE_CONTINUATION=true;(function(){var h=["break,continue,do,else,for,if,return,while"];var u=[h,"auto,case,char,const,default,double,enum,extern,float,goto,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"];var p=[u,"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof"];var l=[p,"alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,dynamic_cast,explicit,export,friend,inline,late_check,mutable,namespace,nullptr,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where"];var x=[p,"abstract,boolean,byte,extends,final,finally,implements,import,instanceof,null,native,package,strictfp,super,synchronized,throws,transient"];var R=[x,"as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,interface,internal,into,is,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var"];var r="all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,true,try,unless,until,when,while,yes";var w=[p,"debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN"];var s="caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END";var I=[h,"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None"];var f=[h,"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END"];var H=[h,"case,done,elif,esac,eval,fi,function,in,local,set,then,until"];var A=[l,R,w,s+I,f,H];var e=/^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)/;var C="str";var z="kwd";var j="com";var O="typ";var G="lit";var L="pun";var F="pln";var m="tag";var E="dec";var J="src";var P="atn";var n="atv";var N="nocode";var M="(?:^^\\.?|[+-]|\\!|\\!=|\\!==|\\#|\\%|\\%=|&|&&|&&=|&=|\\(|\\*|\\*=|\\+=|\\,|\\-=|\\->|\\/|\\/=|:|::|\\;|<|<<|<<=|<=|=|==|===|>|>=|>>|>>=|>>>|>>>=|\\?|\\@|\\[|\\^|\\^=|\\^\\^|\\^\\^=|\\{|\\||\\|=|\\|\\||\\|\\|=|\\~|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\s*";function k(Z){var ad=0;var S=false;var ac=false;for(var V=0,U=Z.length;V<U;++V){var ae=Z[V];if(ae.ignoreCase){ac=true}else{if(/[a-z]/i.test(ae.source.replace(/\\u[0-9a-f]{4}|\\x[0-9a-f]{2}|\\[^ux]/gi,""))){S=true;ac=false;break}}}var Y={b:8,t:9,n:10,v:11,f:12,r:13};function ab(ah){var ag=ah.charCodeAt(0);if(ag!==92){return ag}var af=ah.charAt(1);ag=Y[af];if(ag){return ag}else{if("0"<=af&&af<="7"){return parseInt(ah.substring(1),8)}else{if(af==="u"||af==="x"){return parseInt(ah.substring(2),16)}else{return ah.charCodeAt(1)}}}}function T(af){if(af<32){return(af<16?"\\x0":"\\x")+af.toString(16)}var ag=String.fromCharCode(af);if(ag==="\\"||ag==="-"||ag==="["||ag==="]"){ag="\\"+ag}return ag}function X(am){var aq=am.substring(1,am.length-1).match(new RegExp("\\\\u[0-9A-Fa-f]{4}|\\\\x[0-9A-Fa-f]{2}|\\\\[0-3][0-7]{0,2}|\\\\[0-7]{1,2}|\\\\[\\s\\S]|-|[^-\\\\]","g"));var ak=[];var af=[];var ao=aq[0]==="^";for(var ar=ao?1:0,aj=aq.length;ar<aj;++ar){var ah=aq[ar];if(/\\[bdsw]/i.test(ah)){ak.push(ah)}else{var ag=ab(ah);var al;if(ar+2<aj&&"-"===aq[ar+1]){al=ab(aq[ar+2]);ar+=2}else{al=ag}af.push([ag,al]);if(!(al<65||ag>122)){if(!(al<65||ag>90)){af.push([Math.max(65,ag)|32,Math.min(al,90)|32])}if(!(al<97||ag>122)){af.push([Math.max(97,ag)&~32,Math.min(al,122)&~32])}}}}af.sort(function(av,au){return(av[0]-au[0])||(au[1]-av[1])});var ai=[];var ap=[NaN,NaN];for(var ar=0;ar<af.length;++ar){var at=af[ar];if(at[0]<=ap[1]+1){ap[1]=Math.max(ap[1],at[1])}else{ai.push(ap=at)}}var an=["["];if(ao){an.push("^")}an.push.apply(an,ak);for(var ar=0;ar<ai.length;++ar){var at=ai[ar];an.push(T(at[0]));if(at[1]>at[0]){if(at[1]+1>at[0]){an.push("-")}an.push(T(at[1]))}}an.push("]");return an.join("")}function W(al){var aj=al.source.match(new RegExp("(?:\\[(?:[^\\x5C\\x5D]|\\\\[\\s\\S])*\\]|\\\\u[A-Fa-f0-9]{4}|\\\\x[A-Fa-f0-9]{2}|\\\\[0-9]+|\\\\[^ux0-9]|\\(\\?[:!=]|[\\(\\)\\^]|[^\\x5B\\x5C\\(\\)\\^]+)","g"));var ah=aj.length;var an=[];for(var ak=0,am=0;ak<ah;++ak){var ag=aj[ak];if(ag==="("){++am}else{if("\\"===ag.charAt(0)){var af=+ag.substring(1);if(af&&af<=am){an[af]=-1}}}}for(var ak=1;ak<an.length;++ak){if(-1===an[ak]){an[ak]=++ad}}for(var ak=0,am=0;ak<ah;++ak){var ag=aj[ak];if(ag==="("){++am;if(an[am]===undefined){aj[ak]="(?:"}}else{if("\\"===ag.charAt(0)){var af=+ag.substring(1);if(af&&af<=am){aj[ak]="\\"+an[am]}}}}for(var ak=0,am=0;ak<ah;++ak){if("^"===aj[ak]&&"^"!==aj[ak+1]){aj[ak]=""}}if(al.ignoreCase&&S){for(var ak=0;ak<ah;++ak){var ag=aj[ak];var ai=ag.charAt(0);if(ag.length>=2&&ai==="["){aj[ak]=X(ag)}else{if(ai!=="\\"){aj[ak]=ag.replace(/[a-zA-Z]/g,function(ao){var ap=ao.charCodeAt(0);return"["+String.fromCharCode(ap&~32,ap|32)+"]"})}}}}return aj.join("")}var aa=[];for(var V=0,U=Z.length;V<U;++V){var ae=Z[V];if(ae.global||ae.multiline){throw new Error(""+ae)}aa.push("(?:"+W(ae)+")")}return new RegExp(aa.join("|"),ac?"gi":"g")}function a(V){var U=/(?:^|\s)nocode(?:\s|$)/;var X=[];var T=0;var Z=[];var W=0;var S;if(V.currentStyle){S=V.currentStyle.whiteSpace}else{if(window.getComputedStyle){S=document.defaultView.getComputedStyle(V,null).getPropertyValue("white-space")}}var Y=S&&"pre"===S.substring(0,3);function aa(ab){switch(ab.nodeType){case 1:if(U.test(ab.className)){return}for(var ae=ab.firstChild;ae;ae=ae.nextSibling){aa(ae)}var ad=ab.nodeName;if("BR"===ad||"LI"===ad){X[W]="\n";Z[W<<1]=T++;Z[(W++<<1)|1]=ab}break;case 3:case 4:var ac=ab.nodeValue;if(ac.length){if(!Y){ac=ac.replace(/[ \t\r\n]+/g," ")}else{ac=ac.replace(/\r\n?/g,"\n")}X[W]=ac;Z[W<<1]=T;T+=ac.length;Z[(W++<<1)|1]=ab}break}}aa(V);return{sourceCode:X.join("").replace(/\n$/,""),spans:Z}}function B(S,U,W,T){if(!U){return}var V={sourceCode:U,basePos:S};W(V);T.push.apply(T,V.decorations)}var v=/\S/;function o(S){var V=undefined;for(var U=S.firstChild;U;U=U.nextSibling){var T=U.nodeType;V=(T===1)?(V?S:U):(T===3)?(v.test(U.nodeValue)?S:V):V}return V===S?undefined:V}function g(U,T){var S={};var V;(function(){var ad=U.concat(T);var ah=[];var ag={};for(var ab=0,Z=ad.length;ab<Z;++ab){var Y=ad[ab];var ac=Y[3];if(ac){for(var ae=ac.length;--ae>=0;){S[ac.charAt(ae)]=Y}}var af=Y[1];var aa=""+af;if(!ag.hasOwnProperty(aa)){ah.push(af);ag[aa]=null}}ah.push(/[\0-\uffff]/);V=k(ah)})();var X=T.length;var W=function(ah){var Z=ah.sourceCode,Y=ah.basePos;var ad=[Y,F];var af=0;var an=Z.match(V)||[];var aj={};for(var ae=0,aq=an.length;ae<aq;++ae){var ag=an[ae];var ap=aj[ag];var ai=void 0;var am;if(typeof ap==="string"){am=false}else{var aa=S[ag.charAt(0)];if(aa){ai=ag.match(aa[1]);ap=aa[0]}else{for(var ao=0;ao<X;++ao){aa=T[ao];ai=ag.match(aa[1]);if(ai){ap=aa[0];break}}if(!ai){ap=F}}am=ap.length>=5&&"lang-"===ap.substring(0,5);if(am&&!(ai&&typeof ai[1]==="string")){am=false;ap=J}if(!am){aj[ag]=ap}}var ab=af;af+=ag.length;if(!am){ad.push(Y+ab,ap)}else{var al=ai[1];var ak=ag.indexOf(al);var ac=ak+al.length;if(ai[2]){ac=ag.length-ai[2].length;ak=ac-al.length}var ar=ap.substring(5);B(Y+ab,ag.substring(0,ak),W,ad);B(Y+ab+ak,al,q(ar,al),ad);B(Y+ab+ac,ag.substring(ac),W,ad)}}ah.decorations=ad};return W}function i(T){var W=[],S=[];if(T.tripleQuotedStrings){W.push([C,/^(?:\'\'\'(?:[^\'\\]|\\[\s\S]|\'{1,2}(?=[^\']))*(?:\'\'\'|$)|\"\"\"(?:[^\"\\]|\\[\s\S]|\"{1,2}(?=[^\"]))*(?:\"\"\"|$)|\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$))/,null,"'\""])}else{if(T.multiLineStrings){W.push([C,/^(?:\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$)|\`(?:[^\\\`]|\\[\s\S])*(?:\`|$))/,null,"'\"`"])}else{W.push([C,/^(?:\'(?:[^\\\'\r\n]|\\.)*(?:\'|$)|\"(?:[^\\\"\r\n]|\\.)*(?:\"|$))/,null,"\"'"])}}if(T.verbatimStrings){S.push([C,/^@\"(?:[^\"]|\"\")*(?:\"|$)/,null])}var Y=T.hashComments;if(Y){if(T.cStyleComments){if(Y>1){W.push([j,/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,"#"])}else{W.push([j,/^#(?:(?:define|elif|else|endif|error|ifdef|include|ifndef|line|pragma|undef|warning)\b|[^\r\n]*)/,null,"#"])}S.push([C,/^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h|[a-z]\w*)>/,null])}else{W.push([j,/^#[^\r\n]*/,null,"#"])}}if(T.cStyleComments){S.push([j,/^\/\/[^\r\n]*/,null]);S.push([j,/^\/\*[\s\S]*?(?:\*\/|$)/,null])}if(T.regexLiterals){var X=("/(?=[^/*])(?:[^/\\x5B\\x5C]|\\x5C[\\s\\S]|\\x5B(?:[^\\x5C\\x5D]|\\x5C[\\s\\S])*(?:\\x5D|$))+/");S.push(["lang-regex",new RegExp("^"+M+"("+X+")")])}var V=T.types;if(V){S.push([O,V])}var U=(""+T.keywords).replace(/^ | $/g,"");if(U.length){S.push([z,new RegExp("^(?:"+U.replace(/[\s,]+/g,"|")+")\\b"),null])}W.push([F,/^\s+/,null," \r\n\t\xA0"]);S.push([G,/^@[a-z_$][a-z_$@0-9]*/i,null],[O,/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\w+_t\b)/,null],[F,/^[a-z_$][a-z_$@0-9]*/i,null],[G,new RegExp("^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*","i"),null,"0123456789"],[F,/^\\[\s\S]?/,null],[L,/^.[^\s\w\.$@\'\"\`\/\#\\]*/,null]);return g(W,S)}var K=i({keywords:A,hashComments:true,cStyleComments:true,multiLineStrings:true,regexLiterals:true});function Q(V,ag){var U=/(?:^|\s)nocode(?:\s|$)/;var ab=/\r\n?|\n/;var ac=V.ownerDocument;var S;if(V.currentStyle){S=V.currentStyle.whiteSpace}else{if(window.getComputedStyle){S=ac.defaultView.getComputedStyle(V,null).getPropertyValue("white-space")}}var Z=S&&"pre"===S.substring(0,3);var af=ac.createElement("LI");while(V.firstChild){af.appendChild(V.firstChild)}var W=[af];function ae(al){switch(al.nodeType){case 1:if(U.test(al.className)){break}if("BR"===al.nodeName){ad(al);if(al.parentNode){al.parentNode.removeChild(al)}}else{for(var an=al.firstChild;an;an=an.nextSibling){ae(an)}}break;case 3:case 4:if(Z){var am=al.nodeValue;var aj=am.match(ab);if(aj){var ai=am.substring(0,aj.index);al.nodeValue=ai;var ah=am.substring(aj.index+aj[0].length);if(ah){var ak=al.parentNode;ak.insertBefore(ac.createTextNode(ah),al.nextSibling)}ad(al);if(!ai){al.parentNode.removeChild(al)}}}break}}function ad(ak){while(!ak.nextSibling){ak=ak.parentNode;if(!ak){return}}function ai(al,ar){var aq=ar?al.cloneNode(false):al;var ao=al.parentNode;if(ao){var ap=ai(ao,1);var an=al.nextSibling;ap.appendChild(aq);for(var am=an;am;am=an){an=am.nextSibling;ap.appendChild(am)}}return aq}var ah=ai(ak.nextSibling,0);for(var aj;(aj=ah.parentNode)&&aj.nodeType===1;){ah=aj}W.push(ah)}for(var Y=0;Y<W.length;++Y){ae(W[Y])}if(ag===(ag|0)){W[0].setAttribute("value",ag)}var aa=ac.createElement("OL");aa.className="linenums";var X=Math.max(0,((ag-1))|0)||0;for(var Y=0,T=W.length;Y<T;++Y){af=W[Y];af.className="L"+((Y+X)%10);if(!af.firstChild){af.appendChild(ac.createTextNode("\xA0"))}aa.appendChild(af)}V.appendChild(aa)}function D(ac){var aj=/\bMSIE\b/.test(navigator.userAgent);var am=/\n/g;var al=ac.sourceCode;var an=al.length;var V=0;var aa=ac.spans;var T=aa.length;var ah=0;var X=ac.decorations;var Y=X.length;var Z=0;X[Y]=an;var ar,aq;for(aq=ar=0;aq<Y;){if(X[aq]!==X[aq+2]){X[ar++]=X[aq++];X[ar++]=X[aq++]}else{aq+=2}}Y=ar;for(aq=ar=0;aq<Y;){var at=X[aq];var ab=X[aq+1];var W=aq+2;while(W+2<=Y&&X[W+1]===ab){W+=2}X[ar++]=at;X[ar++]=ab;aq=W}Y=X.length=ar;var ae=null;while(ah<T){var af=aa[ah];var S=aa[ah+2]||an;var ag=X[Z];var ap=X[Z+2]||an;var W=Math.min(S,ap);var ak=aa[ah+1];var U;if(ak.nodeType!==1&&(U=al.substring(V,W))){if(aj){U=U.replace(am,"\r")}ak.nodeValue=U;var ai=ak.ownerDocument;var ao=ai.createElement("SPAN");ao.className=X[Z+1];var ad=ak.parentNode;ad.replaceChild(ao,ak);ao.appendChild(ak);if(V<S){aa[ah+1]=ak=ai.createTextNode(al.substring(W,S));ad.insertBefore(ak,ao.nextSibling)}}V=W;if(V>=S){ah+=2}if(V>=ap){Z+=2}}}var t={};function c(U,V){for(var S=V.length;--S>=0;){var T=V[S];if(!t.hasOwnProperty(T)){t[T]=U}else{if(window.console){console.warn("cannot override language handler %s",T)}}}}function q(T,S){if(!(T&&t.hasOwnProperty(T))){T=/^\s*</.test(S)?"default-markup":"default-code"}return t[T]}c(K,["default-code"]);c(g([],[[F,/^[^<?]+/],[E,/^<!\w[^>]*(?:>|$)/],[j,/^<\!--[\s\S]*?(?:-\->|$)/],["lang-",/^<\?([\s\S]+?)(?:\?>|$)/],["lang-",/^<%([\s\S]+?)(?:%>|$)/],[L,/^(?:<[%?]|[%?]>)/],["lang-",/^<xmp\b[^>]*>([\s\S]+?)<\/xmp\b[^>]*>/i],["lang-js",/^<script\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\s\S]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i]]),["default-markup","htm","html","mxml","xhtml","xml","xsl"]);c(g([[F,/^[\s]+/,null," \t\r\n"],[n,/^(?:\"[^\"]*\"?|\'[^\']*\'?)/,null,"\"'"]],[[m,/^^<\/?[a-z](?:[\w.:-]*\w)?|\/?>$/i],[P,/^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],["lang-uq.val",/^=\s*([^>\'\"\s]*(?:[^>\'\"\s\/]|\/(?=\s)))/],[L,/^[=<>\/]+/],["lang-js",/^on\w+\s*=\s*\"([^\"]+)\"/i],["lang-js",/^on\w+\s*=\s*\'([^\']+)\'/i],["lang-js",/^on\w+\s*=\s*([^\"\'>\s]+)/i],["lang-css",/^style\s*=\s*\"([^\"]+)\"/i],["lang-css",/^style\s*=\s*\'([^\']+)\'/i],["lang-css",/^style\s*=\s*([^\"\'>\s]+)/i]]),["in.tag"]);c(g([],[[n,/^[\s\S]+/]]),["uq.val"]);c(i({keywords:l,hashComments:true,cStyleComments:true,types:e}),["c","cc","cpp","cxx","cyc","m"]);c(i({keywords:"null,true,false"}),["json"]);c(i({keywords:R,hashComments:true,cStyleComments:true,verbatimStrings:true,types:e}),["cs"]);c(i({keywords:x,cStyleComments:true}),["java"]);c(i({keywords:H,hashComments:true,multiLineStrings:true}),["bsh","csh","sh"]);c(i({keywords:I,hashComments:true,multiLineStrings:true,tripleQuotedStrings:true}),["cv","py"]);c(i({keywords:s,hashComments:true,multiLineStrings:true,regexLiterals:true}),["perl","pl","pm"]);c(i({keywords:f,hashComments:true,multiLineStrings:true,regexLiterals:true}),["rb"]);c(i({keywords:w,cStyleComments:true,regexLiterals:true}),["js"]);c(i({keywords:r,hashComments:3,cStyleComments:true,multilineStrings:true,tripleQuotedStrings:true,regexLiterals:true}),["coffee"]);c(g([],[[C,/^[\s\S]+/]]),["regex"]);function d(V){var U=V.langExtension;try{var S=a(V.sourceNode);var T=S.sourceCode;V.sourceCode=T;V.spans=S.spans;V.basePos=0;q(U,T)(V);D(V)}catch(W){if("console" in window){console.log(W&&W.stack?W.stack:W)}}}function y(W,V,U){var S=document.createElement("PRE");S.innerHTML=W;if(U){Q(S,U)}var T={langExtension:V,numberLines:U,sourceNode:S};d(T);return S.innerHTML}function b(ad){function Y(af){return document.getElementsByTagName(af)}var ac=[Y("pre"),Y("code"),Y("xmp")];var T=[];for(var aa=0;aa<ac.length;++aa){for(var Z=0,V=ac[aa].length;Z<V;++Z){T.push(ac[aa][Z])}}ac=null;var W=Date;if(!W.now){W={now:function(){return +(new Date)}}}var X=0;var S;var ab=/\blang(?:uage)?-([\w.]+)(?!\S)/;var ae=/\bprettyprint\b/;function U(){var ag=(window.PR_SHOULD_USE_CONTINUATION?W.now()+250:Infinity);for(;X<T.length&&W.now()<ag;X++){var aj=T[X];var ai=aj.className;if(ai.indexOf("prettyprint")>=0){var ah=ai.match(ab);var am;if(!ah&&(am=o(aj))&&"CODE"===am.tagName){ah=am.className.match(ab)}if(ah){ah=ah[1]}var al=false;for(var ak=aj.parentNode;ak;ak=ak.parentNode){if((ak.tagName==="pre"||ak.tagName==="code"||ak.tagName==="xmp")&&ak.className&&ak.className.indexOf("prettyprint")>=0){al=true;break}}if(!al){var af=aj.className.match(/\blinenums\b(?::(\d+))?/);af=af?af[1]&&af[1].length?+af[1]:true:false;if(af){Q(aj,af)}S={langExtension:ah,sourceNode:aj,numberLines:af};d(S)}}}if(X<T.length){setTimeout(U,250)}else{if(ad){ad()}}}U()}window.prettyPrintOne=y;window.prettyPrint=b;window.PR={createSimpleLexer:g,registerLangHandler:c,sourceDecorator:i,PR_ATTRIB_NAME:P,PR_ATTRIB_VALUE:n,PR_COMMENT:j,PR_DECLARATION:E,PR_KEYWORD:z,PR_LITERAL:G,PR_NOCODE:N,PR_PLAIN:F,PR_PUNCTUATION:L,PR_SOURCE:J,PR_STRING:C,PR_TAG:m,PR_TYPE:O}})();PR.registerLangHandler(PR.createSimpleLexer([],[[PR.PR_DECLARATION,/^<!\w[^>]*(?:>|$)/],[PR.PR_COMMENT,/^<\!--[\s\S]*?(?:-\->|$)/],[PR.PR_PUNCTUATION,/^(?:<[%?]|[%?]>)/],["lang-",/^<\?([\s\S]+?)(?:\?>|$)/],["lang-",/^<%([\s\S]+?)(?:%>|$)/],["lang-",/^<xmp\b[^>]*>([\s\S]+?)<\/xmp\b[^>]*>/i],["lang-handlebars",/^<script\b[^>]*type\s*=\s*['"]?text\/x-handlebars-template['"]?\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],["lang-js",/^<script\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\s\S]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i],[PR.PR_DECLARATION,/^{{[#^>/]?\s*[\w.][^}]*}}/],[PR.PR_DECLARATION,/^{{&?\s*[\w.][^}]*}}/],[PR.PR_DECLARATION,/^{{{>?\s*[\w.][^}]*}}}/],[PR.PR_COMMENT,/^{{![^}]*}}/]]),["handlebars","hbs"]);PR.registerLangHandler(PR.createSimpleLexer([[PR.PR_PLAIN,/^[ \t\r\n\f]+/,null," \t\r\n\f"]],[[PR.PR_STRING,/^\"(?:[^\n\r\f\\\"]|\\(?:\r\n?|\n|\f)|\\[\s\S])*\"/,null],[PR.PR_STRING,/^\'(?:[^\n\r\f\\\']|\\(?:\r\n?|\n|\f)|\\[\s\S])*\'/,null],["lang-css-str",/^url\(([^\)\"\']*)\)/i],[PR.PR_KEYWORD,/^(?:url|rgb|\!important|@import|@page|@media|@charset|inherit)(?=[^\-\w]|$)/i,null],["lang-css-kw",/^(-?(?:[_a-z]|(?:\\[0-9a-f]+ ?))(?:[_a-z0-9\-]|\\(?:\\[0-9a-f]+ ?))*)\s*:/i],[PR.PR_COMMENT,/^\/\*[^*]*\*+(?:[^\/*][^*]*\*+)*\//],[PR.PR_COMMENT,/^(?:<!--|-->)/],[PR.PR_LITERAL,/^(?:\d+|\d*\.\d+)(?:%|[a-z]+)?/i],[PR.PR_LITERAL,/^#(?:[0-9a-f]{3}){1,2}/i],[PR.PR_PLAIN,/^-?(?:[_a-z]|(?:\\[\da-f]+ ?))(?:[_a-z\d\-]|\\(?:\\[\da-f]+ ?))*/i],[PR.PR_PUNCTUATION,/^[^\s\w\'\"]+/]]),["css"]);PR.registerLangHandler(PR.createSimpleLexer([],[[PR.PR_KEYWORD,/^-?(?:[_a-z]|(?:\\[\da-f]+ ?))(?:[_a-z\d\-]|\\(?:\\[\da-f]+ ?))*/i]]),["css-kw"]);PR.registerLangHandler(PR.createSimpleLexer([],[[PR.PR_STRING,/^[^\)\"\']+/]]),["css-str"]);

---------- END prettify.js ----------


---------- DailyEntryScreen.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for screens/DailyEntryScreen.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">screens</a> DailyEntryScreen.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/338</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/194</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/70</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/281</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a>
<a name='L128'></a><a href='#L128'>128</a>
<a name='L129'></a><a href='#L129'>129</a>
<a name='L130'></a><a href='#L130'>130</a>
<a name='L131'></a><a href='#L131'>131</a>
<a name='L132'></a><a href='#L132'>132</a>
<a name='L133'></a><a href='#L133'>133</a>
<a name='L134'></a><a href='#L134'>134</a>
<a name='L135'></a><a href='#L135'>135</a>
<a name='L136'></a><a href='#L136'>136</a>
<a name='L137'></a><a href='#L137'>137</a>
<a name='L138'></a><a href='#L138'>138</a>
<a name='L139'></a><a href='#L139'>139</a>
<a name='L140'></a><a href='#L140'>140</a>
<a name='L141'></a><a href='#L141'>141</a>
<a name='L142'></a><a href='#L142'>142</a>
<a name='L143'></a><a href='#L143'>143</a>
<a name='L144'></a><a href='#L144'>144</a>
<a name='L145'></a><a href='#L145'>145</a>
<a name='L146'></a><a href='#L146'>146</a>
<a name='L147'></a><a href='#L147'>147</a>
<a name='L148'></a><a href='#L148'>148</a>
<a name='L149'></a><a href='#L149'>149</a>
<a name='L150'></a><a href='#L150'>150</a>
<a name='L151'></a><a href='#L151'>151</a>
<a name='L152'></a><a href='#L152'>152</a>
<a name='L153'></a><a href='#L153'>153</a>
<a name='L154'></a><a href='#L154'>154</a>
<a name='L155'></a><a href='#L155'>155</a>
<a name='L156'></a><a href='#L156'>156</a>
<a name='L157'></a><a href='#L157'>157</a>
<a name='L158'></a><a href='#L158'>158</a>
<a name='L159'></a><a href='#L159'>159</a>
<a name='L160'></a><a href='#L160'>160</a>
<a name='L161'></a><a href='#L161'>161</a>
<a name='L162'></a><a href='#L162'>162</a>
<a name='L163'></a><a href='#L163'>163</a>
<a name='L164'></a><a href='#L164'>164</a>
<a name='L165'></a><a href='#L165'>165</a>
<a name='L166'></a><a href='#L166'>166</a>
<a name='L167'></a><a href='#L167'>167</a>
<a name='L168'></a><a href='#L168'>168</a>
<a name='L169'></a><a href='#L169'>169</a>
<a name='L170'></a><a href='#L170'>170</a>
<a name='L171'></a><a href='#L171'>171</a>
<a name='L172'></a><a href='#L172'>172</a>
<a name='L173'></a><a href='#L173'>173</a>
<a name='L174'></a><a href='#L174'>174</a>
<a name='L175'></a><a href='#L175'>175</a>
<a name='L176'></a><a href='#L176'>176</a>
<a name='L177'></a><a href='#L177'>177</a>
<a name='L178'></a><a href='#L178'>178</a>
<a name='L179'></a><a href='#L179'>179</a>
<a name='L180'></a><a href='#L180'>180</a>
<a name='L181'></a><a href='#L181'>181</a>
<a name='L182'></a><a href='#L182'>182</a>
<a name='L183'></a><a href='#L183'>183</a>
<a name='L184'></a><a href='#L184'>184</a>
<a name='L185'></a><a href='#L185'>185</a>
<a name='L186'></a><a href='#L186'>186</a>
<a name='L187'></a><a href='#L187'>187</a>
<a name='L188'></a><a href='#L188'>188</a>
<a name='L189'></a><a href='#L189'>189</a>
<a name='L190'></a><a href='#L190'>190</a>
<a name='L191'></a><a href='#L191'>191</a>
<a name='L192'></a><a href='#L192'>192</a>
<a name='L193'></a><a href='#L193'>193</a>
<a name='L194'></a><a href='#L194'>194</a>
<a name='L195'></a><a href='#L195'>195</a>
<a name='L196'></a><a href='#L196'>196</a>
<a name='L197'></a><a href='#L197'>197</a>
<a name='L198'></a><a href='#L198'>198</a>
<a name='L199'></a><a href='#L199'>199</a>
<a name='L200'></a><a href='#L200'>200</a>
<a name='L201'></a><a href='#L201'>201</a>
<a name='L202'></a><a href='#L202'>202</a>
<a name='L203'></a><a href='#L203'>203</a>
<a name='L204'></a><a href='#L204'>204</a>
<a name='L205'></a><a href='#L205'>205</a>
<a name='L206'></a><a href='#L206'>206</a>
<a name='L207'></a><a href='#L207'>207</a>
<a name='L208'></a><a href='#L208'>208</a>
<a name='L209'></a><a href='#L209'>209</a>
<a name='L210'></a><a href='#L210'>210</a>
<a name='L211'></a><a href='#L211'>211</a>
<a name='L212'></a><a href='#L212'>212</a>
<a name='L213'></a><a href='#L213'>213</a>
<a name='L214'></a><a href='#L214'>214</a>
<a name='L215'></a><a href='#L215'>215</a>
<a name='L216'></a><a href='#L216'>216</a>
<a name='L217'></a><a href='#L217'>217</a>
<a name='L218'></a><a href='#L218'>218</a>
<a name='L219'></a><a href='#L219'>219</a>
<a name='L220'></a><a href='#L220'>220</a>
<a name='L221'></a><a href='#L221'>221</a>
<a name='L222'></a><a href='#L222'>222</a>
<a name='L223'></a><a href='#L223'>223</a>
<a name='L224'></a><a href='#L224'>224</a>
<a name='L225'></a><a href='#L225'>225</a>
<a name='L226'></a><a href='#L226'>226</a>
<a name='L227'></a><a href='#L227'>227</a>
<a name='L228'></a><a href='#L228'>228</a>
<a name='L229'></a><a href='#L229'>229</a>
<a name='L230'></a><a href='#L230'>230</a>
<a name='L231'></a><a href='#L231'>231</a>
<a name='L232'></a><a href='#L232'>232</a>
<a name='L233'></a><a href='#L233'>233</a>
<a name='L234'></a><a href='#L234'>234</a>
<a name='L235'></a><a href='#L235'>235</a>
<a name='L236'></a><a href='#L236'>236</a>
<a name='L237'></a><a href='#L237'>237</a>
<a name='L238'></a><a href='#L238'>238</a>
<a name='L239'></a><a href='#L239'>239</a>
<a name='L240'></a><a href='#L240'>240</a>
<a name='L241'></a><a href='#L241'>241</a>
<a name='L242'></a><a href='#L242'>242</a>
<a name='L243'></a><a href='#L243'>243</a>
<a name='L244'></a><a href='#L244'>244</a>
<a name='L245'></a><a href='#L245'>245</a>
<a name='L246'></a><a href='#L246'>246</a>
<a name='L247'></a><a href='#L247'>247</a>
<a name='L248'></a><a href='#L248'>248</a>
<a name='L249'></a><a href='#L249'>249</a>
<a name='L250'></a><a href='#L250'>250</a>
<a name='L251'></a><a href='#L251'>251</a>
<a name='L252'></a><a href='#L252'>252</a>
<a name='L253'></a><a href='#L253'>253</a>
<a name='L254'></a><a href='#L254'>254</a>
<a name='L255'></a><a href='#L255'>255</a>
<a name='L256'></a><a href='#L256'>256</a>
<a name='L257'></a><a href='#L257'>257</a>
<a name='L258'></a><a href='#L258'>258</a>
<a name='L259'></a><a href='#L259'>259</a>
<a name='L260'></a><a href='#L260'>260</a>
<a name='L261'></a><a href='#L261'>261</a>
<a name='L262'></a><a href='#L262'>262</a>
<a name='L263'></a><a href='#L263'>263</a>
<a name='L264'></a><a href='#L264'>264</a>
<a name='L265'></a><a href='#L265'>265</a>
<a name='L266'></a><a href='#L266'>266</a>
<a name='L267'></a><a href='#L267'>267</a>
<a name='L268'></a><a href='#L268'>268</a>
<a name='L269'></a><a href='#L269'>269</a>
<a name='L270'></a><a href='#L270'>270</a>
<a name='L271'></a><a href='#L271'>271</a>
<a name='L272'></a><a href='#L272'>272</a>
<a name='L273'></a><a href='#L273'>273</a>
<a name='L274'></a><a href='#L274'>274</a>
<a name='L275'></a><a href='#L275'>275</a>
<a name='L276'></a><a href='#L276'>276</a>
<a name='L277'></a><a href='#L277'>277</a>
<a name='L278'></a><a href='#L278'>278</a>
<a name='L279'></a><a href='#L279'>279</a>
<a name='L280'></a><a href='#L280'>280</a>
<a name='L281'></a><a href='#L281'>281</a>
<a name='L282'></a><a href='#L282'>282</a>
<a name='L283'></a><a href='#L283'>283</a>
<a name='L284'></a><a href='#L284'>284</a>
<a name='L285'></a><a href='#L285'>285</a>
<a name='L286'></a><a href='#L286'>286</a>
<a name='L287'></a><a href='#L287'>287</a>
<a name='L288'></a><a href='#L288'>288</a>
<a name='L289'></a><a href='#L289'>289</a>
<a name='L290'></a><a href='#L290'>290</a>
<a name='L291'></a><a href='#L291'>291</a>
<a name='L292'></a><a href='#L292'>292</a>
<a name='L293'></a><a href='#L293'>293</a>
<a name='L294'></a><a href='#L294'>294</a>
<a name='L295'></a><a href='#L295'>295</a>
<a name='L296'></a><a href='#L296'>296</a>
<a name='L297'></a><a href='#L297'>297</a>
<a name='L298'></a><a href='#L298'>298</a>
<a name='L299'></a><a href='#L299'>299</a>
<a name='L300'></a><a href='#L300'>300</a>
<a name='L301'></a><a href='#L301'>301</a>
<a name='L302'></a><a href='#L302'>302</a>
<a name='L303'></a><a href='#L303'>303</a>
<a name='L304'></a><a href='#L304'>304</a>
<a name='L305'></a><a href='#L305'>305</a>
<a name='L306'></a><a href='#L306'>306</a>
<a name='L307'></a><a href='#L307'>307</a>
<a name='L308'></a><a href='#L308'>308</a>
<a name='L309'></a><a href='#L309'>309</a>
<a name='L310'></a><a href='#L310'>310</a>
<a name='L311'></a><a href='#L311'>311</a>
<a name='L312'></a><a href='#L312'>312</a>
<a name='L313'></a><a href='#L313'>313</a>
<a name='L314'></a><a href='#L314'>314</a>
<a name='L315'></a><a href='#L315'>315</a>
<a name='L316'></a><a href='#L316'>316</a>
<a name='L317'></a><a href='#L317'>317</a>
<a name='L318'></a><a href='#L318'>318</a>
<a name='L319'></a><a href='#L319'>319</a>
<a name='L320'></a><a href='#L320'>320</a>
<a name='L321'></a><a href='#L321'>321</a>
<a name='L322'></a><a href='#L322'>322</a>
<a name='L323'></a><a href='#L323'>323</a>
<a name='L324'></a><a href='#L324'>324</a>
<a name='L325'></a><a href='#L325'>325</a>
<a name='L326'></a><a href='#L326'>326</a>
<a name='L327'></a><a href='#L327'>327</a>
<a name='L328'></a><a href='#L328'>328</a>
<a name='L329'></a><a href='#L329'>329</a>
<a name='L330'></a><a href='#L330'>330</a>
<a name='L331'></a><a href='#L331'>331</a>
<a name='L332'></a><a href='#L332'>332</a>
<a name='L333'></a><a href='#L333'>333</a>
<a name='L334'></a><a href='#L334'>334</a>
<a name='L335'></a><a href='#L335'>335</a>
<a name='L336'></a><a href='#L336'>336</a>
<a name='L337'></a><a href='#L337'>337</a>
<a name='L338'></a><a href='#L338'>338</a>
<a name='L339'></a><a href='#L339'>339</a>
<a name='L340'></a><a href='#L340'>340</a>
<a name='L341'></a><a href='#L341'>341</a>
<a name='L342'></a><a href='#L342'>342</a>
<a name='L343'></a><a href='#L343'>343</a>
<a name='L344'></a><a href='#L344'>344</a>
<a name='L345'></a><a href='#L345'>345</a>
<a name='L346'></a><a href='#L346'>346</a>
<a name='L347'></a><a href='#L347'>347</a>
<a name='L348'></a><a href='#L348'>348</a>
<a name='L349'></a><a href='#L349'>349</a>
<a name='L350'></a><a href='#L350'>350</a>
<a name='L351'></a><a href='#L351'>351</a>
<a name='L352'></a><a href='#L352'>352</a>
<a name='L353'></a><a href='#L353'>353</a>
<a name='L354'></a><a href='#L354'>354</a>
<a name='L355'></a><a href='#L355'>355</a>
<a name='L356'></a><a href='#L356'>356</a>
<a name='L357'></a><a href='#L357'>357</a>
<a name='L358'></a><a href='#L358'>358</a>
<a name='L359'></a><a href='#L359'>359</a>
<a name='L360'></a><a href='#L360'>360</a>
<a name='L361'></a><a href='#L361'>361</a>
<a name='L362'></a><a href='#L362'>362</a>
<a name='L363'></a><a href='#L363'>363</a>
<a name='L364'></a><a href='#L364'>364</a>
<a name='L365'></a><a href='#L365'>365</a>
<a name='L366'></a><a href='#L366'>366</a>
<a name='L367'></a><a href='#L367'>367</a>
<a name='L368'></a><a href='#L368'>368</a>
<a name='L369'></a><a href='#L369'>369</a>
<a name='L370'></a><a href='#L370'>370</a>
<a name='L371'></a><a href='#L371'>371</a>
<a name='L372'></a><a href='#L372'>372</a>
<a name='L373'></a><a href='#L373'>373</a>
<a name='L374'></a><a href='#L374'>374</a>
<a name='L375'></a><a href='#L375'>375</a>
<a name='L376'></a><a href='#L376'>376</a>
<a name='L377'></a><a href='#L377'>377</a>
<a name='L378'></a><a href='#L378'>378</a>
<a name='L379'></a><a href='#L379'>379</a>
<a name='L380'></a><a href='#L380'>380</a>
<a name='L381'></a><a href='#L381'>381</a>
<a name='L382'></a><a href='#L382'>382</a>
<a name='L383'></a><a href='#L383'>383</a>
<a name='L384'></a><a href='#L384'>384</a>
<a name='L385'></a><a href='#L385'>385</a>
<a name='L386'></a><a href='#L386'>386</a>
<a name='L387'></a><a href='#L387'>387</a>
<a name='L388'></a><a href='#L388'>388</a>
<a name='L389'></a><a href='#L389'>389</a>
<a name='L390'></a><a href='#L390'>390</a>
<a name='L391'></a><a href='#L391'>391</a>
<a name='L392'></a><a href='#L392'>392</a>
<a name='L393'></a><a href='#L393'>393</a>
<a name='L394'></a><a href='#L394'>394</a>
<a name='L395'></a><a href='#L395'>395</a>
<a name='L396'></a><a href='#L396'>396</a>
<a name='L397'></a><a href='#L397'>397</a>
<a name='L398'></a><a href='#L398'>398</a>
<a name='L399'></a><a href='#L399'>399</a>
<a name='L400'></a><a href='#L400'>400</a>
<a name='L401'></a><a href='#L401'>401</a>
<a name='L402'></a><a href='#L402'>402</a>
<a name='L403'></a><a href='#L403'>403</a>
<a name='L404'></a><a href='#L404'>404</a>
<a name='L405'></a><a href='#L405'>405</a>
<a name='L406'></a><a href='#L406'>406</a>
<a name='L407'></a><a href='#L407'>407</a>
<a name='L408'></a><a href='#L408'>408</a>
<a name='L409'></a><a href='#L409'>409</a>
<a name='L410'></a><a href='#L410'>410</a>
<a name='L411'></a><a href='#L411'>411</a>
<a name='L412'></a><a href='#L412'>412</a>
<a name='L413'></a><a href='#L413'>413</a>
<a name='L414'></a><a href='#L414'>414</a>
<a name='L415'></a><a href='#L415'>415</a>
<a name='L416'></a><a href='#L416'>416</a>
<a name='L417'></a><a href='#L417'>417</a>
<a name='L418'></a><a href='#L418'>418</a>
<a name='L419'></a><a href='#L419'>419</a>
<a name='L420'></a><a href='#L420'>420</a>
<a name='L421'></a><a href='#L421'>421</a>
<a name='L422'></a><a href='#L422'>422</a>
<a name='L423'></a><a href='#L423'>423</a>
<a name='L424'></a><a href='#L424'>424</a>
<a name='L425'></a><a href='#L425'>425</a>
<a name='L426'></a><a href='#L426'>426</a>
<a name='L427'></a><a href='#L427'>427</a>
<a name='L428'></a><a href='#L428'>428</a>
<a name='L429'></a><a href='#L429'>429</a>
<a name='L430'></a><a href='#L430'>430</a>
<a name='L431'></a><a href='#L431'>431</a>
<a name='L432'></a><a href='#L432'>432</a>
<a name='L433'></a><a href='#L433'>433</a>
<a name='L434'></a><a href='#L434'>434</a>
<a name='L435'></a><a href='#L435'>435</a>
<a name='L436'></a><a href='#L436'>436</a>
<a name='L437'></a><a href='#L437'>437</a>
<a name='L438'></a><a href='#L438'>438</a>
<a name='L439'></a><a href='#L439'>439</a>
<a name='L440'></a><a href='#L440'>440</a>
<a name='L441'></a><a href='#L441'>441</a>
<a name='L442'></a><a href='#L442'>442</a>
<a name='L443'></a><a href='#L443'>443</a>
<a name='L444'></a><a href='#L444'>444</a>
<a name='L445'></a><a href='#L445'>445</a>
<a name='L446'></a><a href='#L446'>446</a>
<a name='L447'></a><a href='#L447'>447</a>
<a name='L448'></a><a href='#L448'>448</a>
<a name='L449'></a><a href='#L449'>449</a>
<a name='L450'></a><a href='#L450'>450</a>
<a name='L451'></a><a href='#L451'>451</a>
<a name='L452'></a><a href='#L452'>452</a>
<a name='L453'></a><a href='#L453'>453</a>
<a name='L454'></a><a href='#L454'>454</a>
<a name='L455'></a><a href='#L455'>455</a>
<a name='L456'></a><a href='#L456'>456</a>
<a name='L457'></a><a href='#L457'>457</a>
<a name='L458'></a><a href='#L458'>458</a>
<a name='L459'></a><a href='#L459'>459</a>
<a name='L460'></a><a href='#L460'>460</a>
<a name='L461'></a><a href='#L461'>461</a>
<a name='L462'></a><a href='#L462'>462</a>
<a name='L463'></a><a href='#L463'>463</a>
<a name='L464'></a><a href='#L464'>464</a>
<a name='L465'></a><a href='#L465'>465</a>
<a name='L466'></a><a href='#L466'>466</a>
<a name='L467'></a><a href='#L467'>467</a>
<a name='L468'></a><a href='#L468'>468</a>
<a name='L469'></a><a href='#L469'>469</a>
<a name='L470'></a><a href='#L470'>470</a>
<a name='L471'></a><a href='#L471'>471</a>
<a name='L472'></a><a href='#L472'>472</a>
<a name='L473'></a><a href='#L473'>473</a>
<a name='L474'></a><a href='#L474'>474</a>
<a name='L475'></a><a href='#L475'>475</a>
<a name='L476'></a><a href='#L476'>476</a>
<a name='L477'></a><a href='#L477'>477</a>
<a name='L478'></a><a href='#L478'>478</a>
<a name='L479'></a><a href='#L479'>479</a>
<a name='L480'></a><a href='#L480'>480</a>
<a name='L481'></a><a href='#L481'>481</a>
<a name='L482'></a><a href='#L482'>482</a>
<a name='L483'></a><a href='#L483'>483</a>
<a name='L484'></a><a href='#L484'>484</a>
<a name='L485'></a><a href='#L485'>485</a>
<a name='L486'></a><a href='#L486'>486</a>
<a name='L487'></a><a href='#L487'>487</a>
<a name='L488'></a><a href='#L488'>488</a>
<a name='L489'></a><a href='#L489'>489</a>
<a name='L490'></a><a href='#L490'>490</a>
<a name='L491'></a><a href='#L491'>491</a>
<a name='L492'></a><a href='#L492'>492</a>
<a name='L493'></a><a href='#L493'>493</a>
<a name='L494'></a><a href='#L494'>494</a>
<a name='L495'></a><a href='#L495'>495</a>
<a name='L496'></a><a href='#L496'>496</a>
<a name='L497'></a><a href='#L497'>497</a>
<a name='L498'></a><a href='#L498'>498</a>
<a name='L499'></a><a href='#L499'>499</a>
<a name='L500'></a><a href='#L500'>500</a>
<a name='L501'></a><a href='#L501'>501</a>
<a name='L502'></a><a href='#L502'>502</a>
<a name='L503'></a><a href='#L503'>503</a>
<a name='L504'></a><a href='#L504'>504</a>
<a name='L505'></a><a href='#L505'>505</a>
<a name='L506'></a><a href='#L506'>506</a>
<a name='L507'></a><a href='#L507'>507</a>
<a name='L508'></a><a href='#L508'>508</a>
<a name='L509'></a><a href='#L509'>509</a>
<a name='L510'></a><a href='#L510'>510</a>
<a name='L511'></a><a href='#L511'>511</a>
<a name='L512'></a><a href='#L512'>512</a>
<a name='L513'></a><a href='#L513'>513</a>
<a name='L514'></a><a href='#L514'>514</a>
<a name='L515'></a><a href='#L515'>515</a>
<a name='L516'></a><a href='#L516'>516</a>
<a name='L517'></a><a href='#L517'>517</a>
<a name='L518'></a><a href='#L518'>518</a>
<a name='L519'></a><a href='#L519'>519</a>
<a name='L520'></a><a href='#L520'>520</a>
<a name='L521'></a><a href='#L521'>521</a>
<a name='L522'></a><a href='#L522'>522</a>
<a name='L523'></a><a href='#L523'>523</a>
<a name='L524'></a><a href='#L524'>524</a>
<a name='L525'></a><a href='#L525'>525</a>
<a name='L526'></a><a href='#L526'>526</a>
<a name='L527'></a><a href='#L527'>527</a>
<a name='L528'></a><a href='#L528'>528</a>
<a name='L529'></a><a href='#L529'>529</a>
<a name='L530'></a><a href='#L530'>530</a>
<a name='L531'></a><a href='#L531'>531</a>
<a name='L532'></a><a href='#L532'>532</a>
<a name='L533'></a><a href='#L533'>533</a>
<a name='L534'></a><a href='#L534'>534</a>
<a name='L535'></a><a href='#L535'>535</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/screens/DailyEntryScreen.tsx
import React, { useState, useEffect, useCallback, useMemo, useRef } from "react";
import { View, FlatList, Alert, Platform, StyleSheet, ActivityIndicator, I18nManager } from "react-native";
import { DailyEntry, DailyEntryItem } from "../types/dailyEntry";
import { Food } from "../types/food";
import { getFoods, createFood, updateFood as updateFoodService } from "../services/foodService";
import { saveDailyEntries, loadDailyEntries, loadSettings } from "../services/storageService";
import { getTodayDateString, formatDateISO, formatDateReadableAsync } from "../utils/dateUtils";
// isValidNumberInput is not directly used in this file after changes
import DailyProgress from "../components/DailyProgress";
import { Text, FAB, makeStyles, useTheme, Divider, Icon as RNEIcon } from "@rneui/themed";
import DateTimePicker, { DateTimePickerEvent } from "@react-native-community/datetimepicker";
import { addDays, subDays, parseISO, formatISO, isValid } from "date-fns";
import { SafeAreaView } from "react-native-safe-area-context";
import AddEntryModal from "../components/AddEntryModal/AddEntryModal";
import "react-native-get-random-values";
import Toast from "react-native-toast-message";
import { useFocusEffect, useNavigation, useRoute, RouteProp } from "@react-navigation/native";
import { getFoodIconUrl } from "../utils/iconUtils";
import DateNavigator from "../components/DateNavigator";
import DailyEntryListItem from "../components/DailyEntryListItem";
import { t } from '../localization/i18n';
import i18n from '../localization/i18n';
import { Settings as AppSettings } from "../types/settings";
import { BottomTabNavigationProp } from '@react-navigation/bottom-tabs';
import { MainTabParamList } from "../navigation/AppNavigator";
&nbsp;
type DailyEntryScreenNavigationProp = BottomTabNavigationProp&lt;MainTabParamList, 'DailyEntryRoute'&gt;;
type DailyEntryScreenRouteProp = RouteProp&lt;MainTabParamList, 'DailyEntryRoute'&gt;;
&nbsp;
const DailyEntryScreen: React.FC = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
  const [dailyEntries, setDailyEntries] = <span class="cstat-no" title="statement not covered" >useState&lt;DailyEntry[]&gt;([]);</span>
  const [selectedDate, setSelectedDate] = <span class="cstat-no" title="statement not covered" >useState&lt;string&gt;(getTodayDateString());</span>
  const [foods, setFoods] = <span class="cstat-no" title="statement not covered" >useState&lt;Food[]&gt;([]);</span>
  
  const [isOverlayVisible, setIsOverlayVisible] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
  const [showDatePicker, setShowDatePicker] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
  const [dailyGoals, setDailyGoals] = <span class="cstat-no" title="statement not covered" >useState&lt;AppSettings['dailyGoals']&gt;({ calories: 2000, protein: 150, carbs: 200, fat: 70 });</span>
  
  const [editIndex, setEditIndex] = <span class="cstat-no" title="statement not covered" >useState&lt;number | null&gt;(null);</span> // This is reversedIndex
  const [initialGramsForEdit, setInitialGramsForEdit] = <span class="cstat-no" title="statement not covered" >useState&lt;string | undefined&gt;(undefined);</span>
  const [foodForEditModal, setFoodForEditModal] = <span class="cstat-no" title="statement not covered" >useState&lt;Food | null&gt;(null);</span>
&nbsp;
  const [foodIcons, setFoodIcons] = <span class="cstat-no" title="statement not covered" >useState&lt;{ [foodName: string]: string | null; }&gt;({});</span>
  const [isLoadingData, setIsLoadingData] = <span class="cstat-no" title="statement not covered" >useState(true);</span>
  const [isSaving, setIsSaving] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
  const [readableDate, setReadableDate] = <span class="cstat-no" title="statement not covered" >useState('');</span>
  const [pendingQuickAddFood, setPendingQuickAddFood] = <span class="cstat-no" title="statement not covered" >useState&lt;Food | null&gt;(null);</span>
&nbsp;
  const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
  const styles = <span class="cstat-no" title="statement not covered" >useStyles();</span>
&nbsp;
  const navigation = <span class="cstat-no" title="statement not covered" >useNavigation&lt;DailyEntryScreenNavigationProp&gt;();</span>
  const route = <span class="cstat-no" title="statement not covered" >useRoute&lt;DailyEntryScreenRouteProp&gt;();</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >  useEffect(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
    const updateDateForToast = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
      const parsedDate = <span class="cstat-no" title="statement not covered" >parseISO(selectedDate);</span>
<span class="cstat-no" title="statement not covered" >      if (isValid(parsedDate)) {</span>
        const formatted = <span class="cstat-no" title="statement not covered" >await formatDateReadableAsync(parsedDate);</span>
<span class="cstat-no" title="statement not covered" >        setReadableDate(formatted);</span>
      } else {
<span class="cstat-no" title="statement not covered" >        setReadableDate(t('dateNavigator.invalidDate'));</span>
      }
    };
<span class="cstat-no" title="statement not covered" >    updateDateForToast();</span>
  }, [selectedDate, i18n.locale, t]);
&nbsp;
  const resolveAndSetIcon = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >(f</span>oodName: string) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (!foodName) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >    if (foodIcons[foodName] === undefined) {</span>
      const icon = <span class="cstat-no" title="statement not covered" >getFoodIconUrl(foodName);</span>
<span class="cstat-no" title="statement not covered" >      setFoodIcons(<span class="fstat-no" title="function not covered" >pr</span>ev =&gt; (<span class="cstat-no" title="statement not covered" >{ ...prev, [foodName]: icon })</span>);</span>
    }
  }, [foodIcons]);
&nbsp;
  const triggerIconPrefetch = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >(e</span>ntries: DailyEntry[], currentSelectedDate: string) =&gt; {</span>
    const uniqueFoodNames = <span class="cstat-no" title="statement not covered" >new Set&lt;string&gt;();</span>
<span class="cstat-no" title="statement not covered" >    entries.forEach(<span class="fstat-no" title="function not covered" >en</span>try =&gt; { </span>
<span class="cstat-no" title="statement not covered" >      if (entry.date === currentSelectedDate &amp;&amp; entry.items) { </span>
<span class="cstat-no" title="statement not covered" >        entry.items.forEach(<span class="fstat-no" title="function not covered" >it</span>em =&gt; { </span>
<span class="cstat-no" title="statement not covered" >          if (item.food?.name) <span class="cstat-no" title="statement not covered" >uniqueFoodNames.add(item.food.name); </span></span>
        }); 
      } 
    });
&nbsp;
<span class="cstat-no" title="statement not covered" >    if (uniqueFoodNames.size &gt; 0) {</span>
      const newIconsStateBatch: { [key: string]: string | null } = <span class="cstat-no" title="statement not covered" >{};</span>
<span class="cstat-no" title="statement not covered" >      Array.from(uniqueFoodNames).forEach(<span class="fstat-no" title="function not covered" >na</span>me =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (foodIcons[name] === undefined) {</span>
<span class="cstat-no" title="statement not covered" >           newIconsStateBatch[name] = getFoodIconUrl(name);</span>
        }
      });
<span class="cstat-no" title="statement not covered" >      if (Object.keys(newIconsStateBatch).length &gt; 0) {</span>
<span class="cstat-no" title="statement not covered" >          setFoodIcons(<span class="fstat-no" title="function not covered" >pr</span>ev =&gt; (<span class="cstat-no" title="statement not covered" >{ ...prev, ...newIconsStateBatch })</span>);</span>
      }
    }
  }, [foodIcons]);
&nbsp;
  const loadData = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    setIsLoadingData(true);</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
      const [foodsResult, loadedEntries, loadedSettings] = <span class="cstat-no" title="statement not covered" >await Promise.all([</span>
        getFoods(),
        loadDailyEntries(),
        loadSettings(),
      ]);
&nbsp;
      const loadedFoodsArray = <span class="cstat-no" title="statement not covered" >foodsResult.items;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >      setDailyGoals(loadedSettings?.dailyGoals ?? { calories: 2000, protein: 150, carbs: 200, fat: 70 });</span>
<span class="cstat-no" title="statement not covered" >      loadedFoodsArray.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; <span class="cstat-no" title="statement not covered" >a.name.localeCompare(b.name))</span>;</span>
<span class="cstat-no" title="statement not covered" >      setFoods(loadedFoodsArray);</span>
<span class="cstat-no" title="statement not covered" >      setDailyEntries(loadedEntries);</span>
<span class="cstat-no" title="statement not covered" >      triggerIconPrefetch(loadedEntries, selectedDate);</span>
    } catch (error) {
<span class="cstat-no" title="statement not covered" >      console.error("Error in DailyEntryScreen loadData:", error);</span>
<span class="cstat-no" title="statement not covered" >      Alert.alert(t('dailyEntryScreen.errorLoad'), t('dailyEntryScreen.errorLoadMessage'));</span>
<span class="cstat-no" title="statement not covered" >      setFoods([]); <span class="cstat-no" title="statement not covered" ></span>setDailyEntries([]); <span class="cstat-no" title="statement not covered" ></span>setDailyGoals({ calories: 0, protein: 0, carbs: 0, fat: 0 });</span>
    } finally {
<span class="cstat-no" title="statement not covered" >      setIsLoadingData(false);</span>
    }
  }, [selectedDate, triggerIconPrefetch, t]);
&nbsp;
<span class="cstat-no" title="statement not covered" >  useEffect(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
    const quickAddFoodParam = <span class="cstat-no" title="statement not covered" >route.params?.quickAddFood;</span>
<span class="cstat-no" title="statement not covered" >    if (quickAddFoodParam) {</span>
<span class="cstat-no" title="statement not covered" >      setPendingQuickAddFood(quickAddFoodParam);</span>
<span class="cstat-no" title="statement not covered" >      navigation.setParams({ quickAddFood: undefined }); </span>
    }
  }, [route.params, navigation]);
&nbsp;
<span class="cstat-no" title="statement not covered" >  useEffect(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (pendingQuickAddFood &amp;&amp; !isLoadingData &amp;&amp; !isOverlayVisible &amp;&amp; foods.length &gt; 0) {</span>
      const foodExistsInLibrary = <span class="cstat-no" title="statement not covered" >foods.find(<span class="fstat-no" title="function not covered" >f </span>=&gt; <span class="cstat-no" title="statement not covered" >f.id === pendingQuickAddFood.id)</span>;</span>
      const foodToUse = <span class="cstat-no" title="statement not covered" >foodExistsInLibrary || pendingQuickAddFood;</span>
  
<span class="cstat-no" title="statement not covered" >      setFoodForEditModal(foodToUse);</span>
<span class="cstat-no" title="statement not covered" >      setInitialGramsForEdit("");    </span>
<span class="cstat-no" title="statement not covered" >      setEditIndex(null);            </span>
  
<span class="cstat-no" title="statement not covered" >      if (foodToUse.name) <span class="cstat-no" title="statement not covered" >resolveAndSetIcon(foodToUse.name);</span></span>
<span class="cstat-no" title="statement not covered" >      setIsOverlayVisible(true);      </span>
<span class="cstat-no" title="statement not covered" >      setPendingQuickAddFood(null);   </span>
    }
  }, [pendingQuickAddFood, isLoadingData, isOverlayVisible, foods, resolveAndSetIcon]);
&nbsp;
<span class="cstat-no" title="statement not covered" >  useFocusEffect(</span>
    useCallback(<span class="fstat-no" title="function not covered" >()</span> =&gt; {
<span class="cstat-no" title="statement not covered" >      loadData();</span>
<span class="cstat-no" title="statement not covered" >      return <span class="fstat-no" title="function not covered" >()</span> =&gt; {};</span>
    }, [loadData]) 
  );
&nbsp;
  const currentEntryItems = <span class="cstat-no" title="statement not covered" >useMemo(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
    const entry = <span class="cstat-no" title="statement not covered" >dailyEntries.find(<span class="fstat-no" title="function not covered" >(e</span>) =&gt; <span class="cstat-no" title="statement not covered" >e.date === selectedDate)</span>;</span>
<span class="cstat-no" title="statement not covered" >    return entry ? [...entry.items].reverse() : [];</span>
  }, [dailyEntries, selectedDate]);
&nbsp;
  const getOriginalIndex = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >(r</span>eversedIndex: number): number =&gt; {</span>
    const entry = <span class="cstat-no" title="statement not covered" >dailyEntries.find(<span class="fstat-no" title="function not covered" >(e</span>) =&gt; <span class="cstat-no" title="statement not covered" >e.date === selectedDate)</span>;</span>
<span class="cstat-no" title="statement not covered" >    if (!entry || reversedIndex &lt; 0 || reversedIndex &gt;= entry.items.length) <span class="cstat-no" title="statement not covered" >return -1;</span></span>
<span class="cstat-no" title="statement not covered" >    return entry.items.length - 1 - reversedIndex;</span>
  }, [dailyEntries, selectedDate]);
&nbsp;
  const updateAndSaveEntries = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync (updaterOrNewEntries: DailyEntry[] | ((prevEntries: DailyEntry[]) =&gt; DailyEntry[])) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    setIsSaving(true);</span>
    const previousEntriesState = <span class="cstat-no" title="statement not covered" >dailyEntries;</span> // Capture current state for potential rollback
&nbsp;
    let newEntriesForStateAndSave: DailyEntry[];
<span class="cstat-no" title="statement not covered" >    if (typeof updaterOrNewEntries === 'function') {</span>
<span class="cstat-no" title="statement not covered" >        newEntriesForStateAndSave = updaterOrNewEntries(previousEntriesState);</span>
    } else {
<span class="cstat-no" title="statement not covered" >        newEntriesForStateAndSave = updaterOrNewEntries;</span>
    }
&nbsp;
<span class="cstat-no" title="statement not covered" >    setDailyEntries(newEntriesForStateAndSave); </span>// Update React state
&nbsp;
<span class="cstat-no" title="statement not covered" >    try {</span>
<span class="cstat-no" title="statement not covered" >      await saveDailyEntries(newEntriesForStateAndSave); </span>// Save the determined new state
    } catch (error) {
<span class="cstat-no" title="statement not covered" >      Alert.alert(t('dailyEntryScreen.errorSave'), t('dailyEntryScreen.errorSaveMessage'));</span>
<span class="cstat-no" title="statement not covered" >      setDailyEntries(previousEntriesState); </span>// Rollback React state
    } finally {
<span class="cstat-no" title="statement not covered" >      setIsSaving(false);</span>
    }
  }, [dailyEntries, t]);
&nbsp;
  const handleSingleEntryActionFinal = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync (foodToAdd: Food, gramsToAdd: number) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (isSaving) <span class="cstat-no" title="statement not covered" >return;</span></span>
    const entryItem: DailyEntryItem = <span class="cstat-no" title="statement not covered" >{ food: foodToAdd, grams: gramsToAdd };</span>
    const isEditingThisAction = <span class="cstat-no" title="statement not covered" >editIndex !== null;</span>
    
<span class="cstat-no" title="statement not covered" >    await updateAndSaveEntries(<span class="fstat-no" title="function not covered" >(p</span>revDailyEntries) =&gt; {</span>
        const existingEntryIndex = <span class="cstat-no" title="statement not covered" >prevDailyEntries.findIndex(<span class="fstat-no" title="function not covered" >(e</span>ntry) =&gt; <span class="cstat-no" title="statement not covered" >entry.date === selectedDate)</span>;</span>
        let updatedEntriesArray: DailyEntry[];
<span class="cstat-no" title="statement not covered" >        if (existingEntryIndex &gt; -1) {</span>
            const existingEntry = <span class="cstat-no" title="statement not covered" >prevDailyEntries[existingEntryIndex];</span>
            let updatedItems: DailyEntryItem[];
<span class="cstat-no" title="statement not covered" >            if (isEditingThisAction &amp;&amp; editIndex !== null) { // Ensure editIndex is not null</span>
                const originalEditIndex = <span class="cstat-no" title="statement not covered" >getOriginalIndex(editIndex);</span>
<span class="cstat-no" title="statement not covered" >                if (originalEditIndex === -1) {</span>
<span class="cstat-no" title="statement not covered" >                    console.error("Edit error: original index not found for reversed index:", editIndex);</span>
<span class="cstat-no" title="statement not covered" >                    return prevDailyEntries; </span>// Return previous state if error
                }
<span class="cstat-no" title="statement not covered" >                updatedItems = existingEntry.items.map(<span class="fstat-no" title="function not covered" >(i</span>tem, index) =&gt; <span class="cstat-no" title="statement not covered" >index === originalEditIndex ? entryItem : item)</span>;</span>
            } else {
<span class="cstat-no" title="statement not covered" >                updatedItems = [entryItem, ...(existingEntry.items ?? [])];</span>
            }
            const updatedEntry = <span class="cstat-no" title="statement not covered" >{ ...existingEntry, items: updatedItems };</span>
<span class="cstat-no" title="statement not covered" >            updatedEntriesArray = prevDailyEntries.map(<span class="fstat-no" title="function not covered" >(e</span>ntry, index) =&gt; <span class="cstat-no" title="statement not covered" >index === existingEntryIndex ? updatedEntry : entry)</span>;</span>
        } else {
<span class="cstat-no" title="statement not covered" >            if (isEditingThisAction) {</span>
<span class="cstat-no" title="statement not covered" >                console.error("Edit error: entry to edit not found for date:", selectedDate);</span>
<span class="cstat-no" title="statement not covered" >                return prevDailyEntries; </span>// Return previous state if error
            }
            const newDailyEntry: DailyEntry = <span class="cstat-no" title="statement not covered" >{ date: selectedDate, items: [entryItem] };</span>
<span class="cstat-no" title="statement not covered" >            updatedEntriesArray = [...prevDailyEntries, newDailyEntry];</span>
<span class="cstat-no" title="statement not covered" >            updatedEntriesArray.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; <span class="cstat-no" title="statement not covered" >a.date.localeCompare(b.date))</span>;</span>
        }
<span class="cstat-no" title="statement not covered" >        return updatedEntriesArray;</span>
    });
&nbsp;
<span class="cstat-no" title="statement not covered" >    if (foodToAdd?.name) <span class="cstat-no" title="statement not covered" >resolveAndSetIcon(foodToAdd.name);</span></span>
    
<span class="cstat-no" title="statement not covered" >    setIsOverlayVisible(false);</span>
<span class="cstat-no" title="statement not covered" >    setEditIndex(null);</span>
<span class="cstat-no" title="statement not covered" >    setInitialGramsForEdit(undefined);</span>
<span class="cstat-no" title="statement not covered" >    setFoodForEditModal(null);</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    Toast.show({ type: "success", text1: t(isEditingThisAction ? 'dailyEntryScreen.entryUpdated' : 'dailyEntryScreen.entryAdded'), position: "bottom", visibilityTime: 2000, });</span>
  }, [ isSaving, editIndex, selectedDate, getOriginalIndex, updateAndSaveEntries, resolveAndSetIcon, t ]);
&nbsp;
&nbsp;
  const handleAddMultipleEntriesFinal = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync (entriesToAdd: { food: Food; grams: number }[]) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (isSaving) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >    try {</span>
<span class="cstat-no" title="statement not covered" >      if (!entriesToAdd || entriesToAdd.length === 0) <span class="cstat-no" title="statement not covered" >return;</span></span>
      const newItems: DailyEntryItem[] = <span class="cstat-no" title="statement not covered" >entriesToAdd.map(<span class="fstat-no" title="function not covered" >(e</span>ntry) =&gt; (<span class="cstat-no" title="statement not covered" >{ food: entry.food, grams: entry.grams })</span>);</span>
      
<span class="cstat-no" title="statement not covered" >      await updateAndSaveEntries(<span class="fstat-no" title="function not covered" >(p</span>revDailyEntries) =&gt; {</span>
          const existingEntryIndex = <span class="cstat-no" title="statement not covered" >prevDailyEntries.findIndex(<span class="fstat-no" title="function not covered" >(e</span>ntry) =&gt; <span class="cstat-no" title="statement not covered" >entry.date === selectedDate)</span>;</span>
          let updatedEntriesArray: DailyEntry[];
<span class="cstat-no" title="statement not covered" >          if (existingEntryIndex &gt; -1) {</span>
            const existingEntry = <span class="cstat-no" title="statement not covered" >prevDailyEntries[existingEntryIndex];</span>
            const updatedItems = <span class="cstat-no" title="statement not covered" >[...newItems, ...(existingEntry.items ?? [])];</span>
            const updatedEntry = <span class="cstat-no" title="statement not covered" >{ ...existingEntry, items: updatedItems };</span>
<span class="cstat-no" title="statement not covered" >            updatedEntriesArray = prevDailyEntries.map(<span class="fstat-no" title="function not covered" >(e</span>ntry, index) =&gt; <span class="cstat-no" title="statement not covered" >index === existingEntryIndex ? updatedEntry : entry)</span>;</span>
          } else {
            const newDailyEntry: DailyEntry = <span class="cstat-no" title="statement not covered" >{ date: selectedDate, items: newItems };</span>
<span class="cstat-no" title="statement not covered" >            updatedEntriesArray = [...prevDailyEntries, newDailyEntry];</span>
<span class="cstat-no" title="statement not covered" >            updatedEntriesArray.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; <span class="cstat-no" title="statement not covered" >a.date.localeCompare(b.date))</span>;</span>
          }
<span class="cstat-no" title="statement not covered" >          return updatedEntriesArray;</span>
      });
&nbsp;
<span class="cstat-no" title="statement not covered" >      newItems.forEach(<span class="fstat-no" title="function not covered" >it</span>em =&gt; { <span class="cstat-no" title="statement not covered" >if (item.food?.name) <span class="cstat-no" title="statement not covered" >resolveAndSetIcon(item.food.name); </span></span>});</span>
      
<span class="cstat-no" title="statement not covered" >      Toast.show({ type: "success", text1: t('dailyEntryScreen.itemsAdded', { count: entriesToAdd.length }), text2: t('dailyEntryScreen.toDateFormat', { date: readableDate }), position: "bottom", visibilityTime: 3000, });</span>
      
<span class="cstat-no" title="statement not covered" >      setIsOverlayVisible(false); </span>
<span class="cstat-no" title="statement not covered" >      setEditIndex(null);</span>
<span class="cstat-no" title="statement not covered" >      setInitialGramsForEdit(undefined);</span>
<span class="cstat-no" title="statement not covered" >      setFoodForEditModal(null);</span>
    } catch (error) { <span class="cstat-no" title="statement not covered" >Alert.alert(t('dailyEntryScreen.errorAddMultiple'), t('dailyEntryScreen.errorAddMultipleMessage')); <span class="cstat-no" title="statement not covered" ></span>setIsOverlayVisible(false); </span>}
  }, [selectedDate, isSaving, updateAndSaveEntries, readableDate, resolveAndSetIcon, t]);
&nbsp;
&nbsp;
  const handleUndoRemoveEntry = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync (itemToRestore: DailyEntryItem, entryDate: string, originalIndexToRestoreAt: number) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (isSaving) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >    Toast.hide(); </span>
<span class="cstat-no" title="statement not covered" >    await updateAndSaveEntries(<span class="fstat-no" title="function not covered" >(p</span>revDailyEntries) =&gt; {</span>
        const entryIdx = <span class="cstat-no" title="statement not covered" >prevDailyEntries.findIndex(<span class="fstat-no" title="function not covered" >e </span>=&gt; <span class="cstat-no" title="statement not covered" >e.date === entryDate)</span>;</span>
        let finalEntries: DailyEntry[];
<span class="cstat-no" title="statement not covered" >        if (entryIdx &gt; -1) {</span>
            const entryToUpdate = <span class="cstat-no" title="statement not covered" >prevDailyEntries[entryIdx];</span>
            const currentItems = <span class="cstat-no" title="statement not covered" >[...entryToUpdate.items];</span>
<span class="cstat-no" title="statement not covered" >            currentItems.splice(originalIndexToRestoreAt, 0, itemToRestore);</span>
            const restoredEntry = <span class="cstat-no" title="statement not covered" >{ ...entryToUpdate, items: currentItems };</span>
<span class="cstat-no" title="statement not covered" >            finalEntries = prevDailyEntries.map(<span class="fstat-no" title="function not covered" >(e</span>ntry, i) =&gt; <span class="cstat-no" title="statement not covered" >i === entryIdx ? restoredEntry : entry)</span>;</span>
        } else {
            const newDailyEntry: DailyEntry = <span class="cstat-no" title="statement not covered" >{ date: entryDate, items: [itemToRestore] };</span>
<span class="cstat-no" title="statement not covered" >            finalEntries = [...prevDailyEntries, newDailyEntry];</span>
<span class="cstat-no" title="statement not covered" >            finalEntries.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; <span class="cstat-no" title="statement not covered" >a.date.localeCompare(b.date))</span>;</span>
        }
<span class="cstat-no" title="statement not covered" >        return finalEntries;</span>
    });
<span class="cstat-no" title="statement not covered" >    Toast.show({ type: "success", text1: t('dailyEntryScreen.entryRestored'), visibilityTime: 1500, position: "bottom" });</span>
  }, [isSaving, updateAndSaveEntries, t]);
&nbsp;
  const undoHandlerRef = <span class="cstat-no" title="statement not covered" >useRef(handleUndoRemoveEntry);</span>
<span class="cstat-no" title="statement not covered" >  useEffect(<span class="fstat-no" title="function not covered" >()</span> =&gt; { <span class="cstat-no" title="statement not covered" >undoHandlerRef.current = handleUndoRemoveEntry; </span>}, [handleUndoRemoveEntry]);</span>
&nbsp;
  const handleRemoveEntry = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync (reversedItemIndex: number) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (isSaving) <span class="cstat-no" title="statement not covered" >return;</span></span>
    const originalItemIndex = <span class="cstat-no" title="statement not covered" >getOriginalIndex(reversedItemIndex);</span>
<span class="cstat-no" title="statement not covered" >    if (originalItemIndex === -1) {</span>
<span class="cstat-no" title="statement not covered" >      console.error("handleRemoveEntry: Original index not found for reversed index:", reversedItemIndex);</span>
<span class="cstat-no" title="statement not covered" >      return;</span>
    }
&nbsp;
    const entryForToast = <span class="cstat-no" title="statement not covered" >dailyEntries.find(<span class="fstat-no" title="function not covered" >(e</span>) =&gt; <span class="cstat-no" title="statement not covered" >e.date === selectedDate)</span>;</span>
    const itemToRemoveForToast = <span class="cstat-no" title="statement not covered" >entryForToast?.items[originalItemIndex];</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    if (!itemToRemoveForToast) {</span>
<span class="cstat-no" title="statement not covered" >      console.error("handleRemoveEntry: Item to remove not found in current state for Toast.");</span>
<span class="cstat-no" title="statement not covered" >      return;</span>
    }
&nbsp;
<span class="cstat-no" title="statement not covered" >    await updateAndSaveEntries(<span class="fstat-no" title="function not covered" >(p</span>revDailyEntries) =&gt; {</span>
      const currentEntryIndex = <span class="cstat-no" title="statement not covered" >prevDailyEntries.findIndex(<span class="fstat-no" title="function not covered" >(e</span>) =&gt; <span class="cstat-no" title="statement not covered" >e.date === selectedDate)</span>;</span>
<span class="cstat-no" title="statement not covered" >      if (currentEntryIndex === -1) {</span>
<span class="cstat-no" title="statement not covered" >        console.warn("handleRemoveEntry (updater): Entry not found for date:", selectedDate);</span>
<span class="cstat-no" title="statement not covered" >        return prevDailyEntries;</span>
      }
      const currentEntry = <span class="cstat-no" title="statement not covered" >prevDailyEntries[currentEntryIndex];</span>
<span class="cstat-no" title="statement not covered" >      if (originalItemIndex &lt; 0 || originalItemIndex &gt;= currentEntry.items.length) {</span>
<span class="cstat-no" title="statement not covered" >        console.warn("handleRemoveEntry (updater): Original item index out of bounds.");</span>
<span class="cstat-no" title="statement not covered" >        return prevDailyEntries;</span>
      }
      
      const updatedItems = <span class="cstat-no" title="statement not covered" >currentEntry.items.filter(<span class="fstat-no" title="function not covered" >(_</span>, i) =&gt; <span class="cstat-no" title="statement not covered" >i !== originalItemIndex)</span>;</span>
      
<span class="cstat-no" title="statement not covered" >      if (updatedItems.length === 0) {</span>
<span class="cstat-no" title="statement not covered" >        return prevDailyEntries.filter(<span class="fstat-no" title="function not covered" >(e</span>ntry) =&gt; <span class="cstat-no" title="statement not covered" >entry.date !== selectedDate)</span>;</span>
      } else {
        const updatedEntry = <span class="cstat-no" title="statement not covered" >{ ...currentEntry, items: updatedItems };</span>
<span class="cstat-no" title="statement not covered" >        return prevDailyEntries.map(<span class="fstat-no" title="function not covered" >(e</span>ntry, i) =&gt; <span class="cstat-no" title="statement not covered" >i === currentEntryIndex ? updatedEntry : entry)</span>;</span>
      }
    });
&nbsp;
<span class="cstat-no" title="statement not covered" >    Toast.show({</span>
        type: "info",
        text1: t('dailyEntryScreen.itemRemoved', { itemName: itemToRemoveForToast.food.name }),
        text2: t('dailyEntryScreen.undo'),
        position: "bottom",
        bottomOffset: 80,
        visibilityTime: 4000,
        onPress: <span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >undoHandlerRef.current(itemToRemoveForToast, selectedDate, originalItemIndex),</span>
    });
  }, [dailyEntries, selectedDate, isSaving, getOriginalIndex, updateAndSaveEntries, t]);
&nbsp;
&nbsp;
  const toggleOverlay = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >(i</span>temToEdit: DailyEntryItem | null = <span class="branch-0 cbranch-no" title="branch not covered" >null,</span> reversedItemIndex: number | null = <span class="branch-0 cbranch-no" title="branch not covered" >null)</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (isSaving) <span class="cstat-no" title="statement not covered" >return;</span></span>
    
<span class="cstat-no" title="statement not covered" >    if (itemToEdit &amp;&amp; reversedItemIndex !== null) {</span>
<span class="cstat-no" title="statement not covered" >      setFoodForEditModal(itemToEdit.food); </span>
<span class="cstat-no" title="statement not covered" >      setInitialGramsForEdit(String(itemToEdit.grams));</span>
<span class="cstat-no" title="statement not covered" >      setEditIndex(reversedItemIndex); </span>// Store reversedIndex
<span class="cstat-no" title="statement not covered" >      if (itemToEdit.food.name) <span class="cstat-no" title="statement not covered" >resolveAndSetIcon(itemToEdit.food.name); </span></span>
    } else {
<span class="cstat-no" title="statement not covered" >      setFoodForEditModal(null);</span>
<span class="cstat-no" title="statement not covered" >      setInitialGramsForEdit(undefined);</span>
<span class="cstat-no" title="statement not covered" >      setEditIndex(null);</span>
    }
<span class="cstat-no" title="statement not covered" >    setIsOverlayVisible(<span class="fstat-no" title="function not covered" >(c</span>urrent) =&gt; <span class="cstat-no" title="statement not covered" >!current)</span>;</span>
  }, [isSaving, resolveAndSetIcon]);
&nbsp;
  const handleAddNewFoodRequestFromModal = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (isSaving) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >    setIsOverlayVisible(false); </span>
<span class="cstat-no" title="statement not covered" >    setFoodForEditModal(null);</span>
<span class="cstat-no" title="statement not covered" >    setInitialGramsForEdit(undefined);</span>
<span class="cstat-no" title="statement not covered" >    setEditIndex(null);</span>
<span class="cstat-no" title="statement not covered" >    navigation.navigate('FoodListRoute', { openAddFoodModal: true });</span>
  }, [isSaving, navigation]);
&nbsp;
&nbsp;
  const handleCommitFoodItemToMainLibrary = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync (</span>
    foodData: Omit&lt;Food, 'id' | 'createdAt'&gt; | Food,
    isUpdate: boolean
  ): Promise&lt;Food | null&gt; =&gt; {
<span class="cstat-no" title="statement not covered" >    if (isSaving) <span class="cstat-no" title="statement not covered" >return null;</span></span>
<span class="cstat-no" title="statement not covered" >    setIsSaving(true);</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
      let committedFood: Food;
<span class="cstat-no" title="statement not covered" >      if (isUpdate &amp;&amp; 'id' in foodData) { // Ensure it's a Food object for update</span>
<span class="cstat-no" title="statement not covered" >        committedFood = await updateFoodService(foodData as Food);</span>
<span class="cstat-no" title="statement not covered" >        setFoods(<span class="fstat-no" title="function not covered" >pr</span>evFoods =&gt;</span>
<span class="cstat-no" title="statement not covered" >          prevFoods.map(<span class="fstat-no" title="function not covered" >f </span>=&gt; (<span class="cstat-no" title="statement not covered" >f.id === committedFood.id ? committedFood : f)</span>).sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; <span class="cstat-no" title="statement not covered" >a.name.localeCompare(b.name))</span></span>
        );
      } else <span class="cstat-no" title="statement not covered" >if (!isUpdate &amp;&amp; !('id' in foodData)) { // Ensure it's Omit&lt;Food, 'id'&gt; for create</span>
<span class="cstat-no" title="statement not covered" >        committedFood = await createFood(foodData as Omit&lt;Food, 'id' | 'createdAt'&gt;);</span>
<span class="cstat-no" title="statement not covered" >        setFoods(<span class="fstat-no" title="function not covered" >pr</span>evFoods =&gt; <span class="cstat-no" title="statement not covered" >[...prevFoods, committedFood].sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; <span class="cstat-no" title="statement not covered" >a.name.localeCompare(b.name))</span>)</span>;</span>
      } else {
<span class="cstat-no" title="statement not covered" >        throw new Error("Invalid data for commitFoodItemToMainLibrary");</span>
      }
<span class="cstat-no" title="statement not covered" >      if(committedFood.name) <span class="cstat-no" title="statement not covered" >resolveAndSetIcon(committedFood.name);</span></span>
<span class="cstat-no" title="statement not covered" >      return committedFood;</span>
    } catch (error) {
<span class="cstat-no" title="statement not covered" >      console.error("Error committing food to library:", error);</span>
<span class="cstat-no" title="statement not covered" >      Alert.alert( t('foodListScreen.errorLoad'), error instanceof Error ? error.message : t(isUpdate ? 'foodListScreen.errorUpdateMessage' : 'foodListScreen.errorCreateMessage') );</span>
<span class="cstat-no" title="statement not covered" >      return null;</span>
    } finally {
<span class="cstat-no" title="statement not covered" >      setIsSaving(false);</span>
    }
  }, [isSaving, resolveAndSetIcon, t]);
&nbsp;
&nbsp;
  const handleEditEntryViaModal = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(i</span>tem: DailyEntryItem, reversedIndex: number) =&gt; <span class="cstat-no" title="statement not covered" >toggleOverlay(item, reversedIndex);</span></span>
&nbsp;
  const handleDateChange = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >(e</span>vent: DateTimePickerEvent, selectedDateValue?: Date) =&gt; {</span>
    const isAndroidDismiss = <span class="cstat-no" title="statement not covered" >Platform.OS === "android" &amp;&amp; event.type === "dismissed";</span>
<span class="cstat-no" title="statement not covered" >    setShowDatePicker(Platform.OS === "ios"); </span>// Keep open on iOS until done
<span class="cstat-no" title="statement not covered" >    if (!isAndroidDismiss &amp;&amp; event.type === "set" &amp;&amp; selectedDateValue) {</span>
<span class="cstat-no" title="statement not covered" >      if (isValid(selectedDateValue)) {</span>
        const formattedDate = <span class="cstat-no" title="statement not covered" >formatISO(selectedDateValue, { representation: "date" });</span>
<span class="cstat-no" title="statement not covered" >        if (formattedDate !== selectedDate) {</span>
<span class="cstat-no" title="statement not covered" >           setSelectedDate(formattedDate);</span>
<span class="cstat-no" title="statement not covered" >           setEditIndex(null); </span>// Reset edit index when date changes
        }
      } else {
<span class="cstat-no" title="statement not covered" >        Alert.alert(t('dailyEntryScreen.errorInvalidDate'), t('dailyEntryScreen.errorInvalidDateMessage'));</span>
      }
    }
    // For Android, dismiss after selection or if explicitly dismissed
<span class="cstat-no" title="statement not covered" >    if (Platform.OS === "android") {</span>
<span class="cstat-no" title="statement not covered" >        setShowDatePicker(false);</span>
    }
  }, [selectedDate, t]);
&nbsp;
  const handlePreviousDay = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (isSaving || isLoadingData) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >    try {</span>
      const currentDateObj = <span class="cstat-no" title="statement not covered" >parseISO(selectedDate);</span>
<span class="cstat-no" title="statement not covered" >      if (!isValid(currentDateObj)) {</span>
<span class="cstat-no" title="statement not covered" >          console.warn("PreviousDay: Invalid current selectedDate:", selectedDate);</span>
<span class="cstat-no" title="statement not covered" >          return;</span>
      }
      const newDate = <span class="cstat-no" title="statement not covered" >subDays(currentDateObj, 1);</span>
      const newDateString = <span class="cstat-no" title="statement not covered" >formatISO(newDate, { representation: "date" });</span>
<span class="cstat-no" title="statement not covered" >      setSelectedDate(newDateString);</span>
<span class="cstat-no" title="statement not covered" >      setEditIndex(null);</span>
    } catch (e) { <span class="cstat-no" title="statement not covered" >console.error("DateNav Error (Prev):", e); </span>}
  }, [selectedDate, isSaving, isLoadingData]);
&nbsp;
  const handleNextDay = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (isSaving || isLoadingData) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >    try {</span>
      const currentDateObj = <span class="cstat-no" title="statement not covered" >parseISO(selectedDate);</span>
<span class="cstat-no" title="statement not covered" >      if (!isValid(currentDateObj)) {</span>
<span class="cstat-no" title="statement not covered" >          console.warn("NextDay: Invalid current selectedDate:", selectedDate);</span>
<span class="cstat-no" title="statement not covered" >          return;</span>
      }
      const newDate = <span class="cstat-no" title="statement not covered" >addDays(currentDateObj, 1);</span>
      const newDateString = <span class="cstat-no" title="statement not covered" >formatISO(newDate, { representation: "date" });</span>
<span class="cstat-no" title="statement not covered" >      setSelectedDate(newDateString);</span>
<span class="cstat-no" title="statement not covered" >      setEditIndex(null);</span>
    } catch (e) { <span class="cstat-no" title="statement not covered" >console.error("DateNav Error (Next):", e); </span>}
  }, [selectedDate, isSaving, isLoadingData]);
&nbsp;
  const calculateTotals = <span class="cstat-no" title="statement not covered" >useMemo(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
    const currentOriginalEntry = <span class="cstat-no" title="statement not covered" >dailyEntries.find(<span class="fstat-no" title="function not covered" >(e</span>ntry) =&gt; <span class="cstat-no" title="statement not covered" >entry.date === selectedDate)</span>;</span>
    let totals = <span class="cstat-no" title="statement not covered" >{ totalCalories: 0, totalProtein: 0, totalCarbs: 0, totalFat: 0 };</span>
<span class="cstat-no" title="statement not covered" >    if (currentOriginalEntry) {</span>
<span class="cstat-no" title="statement not covered" >      currentOriginalEntry.items.forEach(<span class="fstat-no" title="function not covered" >(i</span>tem) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (item.food &amp;&amp; typeof item.food.calories === "number" &amp;&amp; typeof item.food.protein === "number" &amp;&amp; typeof item.food.carbs === "number" &amp;&amp; typeof item.food.fat === "number" &amp;&amp; typeof item.grams === "number" &amp;&amp; item.grams &gt; 0) {</span>
          const factor = <span class="cstat-no" title="statement not covered" >item.grams / 100;</span> <span class="cstat-no" title="statement not covered" >totals.totalCalories += item.food.calories * factor; <span class="cstat-no" title="statement not covered" ></span>totals.totalProtein += item.food.protein * factor; <span class="cstat-no" title="statement not covered" ></span>totals.totalCarbs += item.food.carbs * factor; <span class="cstat-no" title="statement not covered" ></span>totals.totalFat += item.food.fat * factor;</span>
        }
      });
    } <span class="cstat-no" title="statement not covered" >return { totalCalories: Math.round(totals.totalCalories), totalProtein: Math.round(totals.totalProtein), totalCarbs: Math.round(totals.totalCarbs), totalFat: Math.round(totals.totalFat), };</span>
  }, [dailyEntries, selectedDate]);
&nbsp;
<span class="cstat-no" title="statement not covered" >  return (</span>
    &lt;SafeAreaView style={styles.container} edges={["top", "left", "right"]}&gt;
      &lt;DateNavigator selectedDate={selectedDate} onPreviousDay={handlePreviousDay} onNextDay={handleNextDay} onShowDatePicker={<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >!isSaving &amp;&amp; !isLoadingData &amp;&amp; setShowDatePicker(true)}</span> isSaving={isSaving} isLoadingData={isLoadingData} /&gt;
      {showDatePicker &amp;&amp; (&lt;DateTimePicker value={isValid(parseISO(selectedDate)) ? parseISO(selectedDate) : new Date()} mode="date" display={Platform.OS === "ios" ? "spinner" : "default"} onChange={handleDateChange} /&gt;)}
      &lt;View style={styles.progressContainer}&gt;&lt;DailyProgress calories={calculateTotals.totalCalories} protein={calculateTotals.totalProtein} carbs={calculateTotals.totalCarbs} fat={calculateTotals.totalFat} goals={dailyGoals} /&gt;&lt;/View&gt;
      &lt;Divider style={styles.divider} /&gt;
      {isSaving &amp;&amp; (&lt;View style={styles.savingIndicator}&gt;&lt;ActivityIndicator size="small" color={theme.colors.primary} /&gt;&lt;Text style={styles.savingText}&gt;{t('dailyEntryScreen.saving')}&lt;/Text&gt;&lt;/View&gt;)}
      &lt;Text style={styles.sectionTitle}&gt;{t('dailyEntryScreen.todaysEntries')}&lt;/Text&gt;
      {isLoadingData ? (&lt;View style={styles.centeredLoader}&gt;&lt;ActivityIndicator size="large" color={theme.colors.primary} /&gt;&lt;Text style={styles.loadingText}&gt;{t('dailyEntryScreen.loadingEntries')}&lt;/Text&gt;&lt;/View&gt;
      ) : (
        &lt;FlatList
          data={currentEntryItems}
          keyExtractor={<span class="fstat-no" title="function not covered" >(i</span>tem, index) =&gt; <span class="cstat-no" title="statement not covered" >`entry-${item?.food?.id ?? "unknown"}-${getOriginalIndex(index)}-${item?.grams ?? index}-${selectedDate}-${index}`}</span>
          renderItem={<span class="fstat-no" title="function not covered" >({</span> item, index }) =&gt; (
<span class="cstat-no" title="statement not covered" >            &lt;DailyEntryListItem</span>
              item={item}
              reversedIndex={index} // This is the index in the reversed currentEntryItems
              foodIcons={foodIcons}
              setFoodIcons={setFoodIcons}
              onEdit={handleEditEntryViaModal}
              onRemove={handleRemoveEntry}
              isSaving={isSaving}
              dailyGoals={dailyGoals} /&gt;
          )}
          ListEmptyComponent={&lt;View style={styles.emptyListContainer}&gt;&lt;RNEIcon name="reader-outline" type="ionicon" size={50} color={theme.colors.grey3} /&gt;&lt;Text style={styles.emptyListText}&gt;{t('dailyEntryScreen.noEntries')}&lt;/Text&gt;&lt;Text style={styles.emptyListSubText}&gt;{t('dailyEntryScreen.noEntriesHint')}&lt;/Text&gt;&lt;/View&gt;}
          initialNumToRender={10}
          maxToRenderPerBatch={5}
          windowSize={11}
          contentContainerStyle={styles.listContentContainer}
          keyboardShouldPersistTaps="handled"
          extraData={{ foodIcons, isSaving, dailyGoals, selectedDate, itemsLength: currentEntryItems.length }}
        /&gt;
      )}
      &lt;FAB icon={&lt;RNEIcon name="add" color="white" /&gt;} color={theme.colors.primary} onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >!isSaving &amp;&amp; toggleOverlay()}</span> placement="right" size="large" style={styles.fab} disabled={isSaving || isLoadingData} /&gt;
      
      {isOverlayVisible &amp;&amp; (
          &lt;AddEntryModal
            isVisible={isOverlayVisible}
            toggleOverlay={toggleOverlay}
            handleAddEntry={handleSingleEntryActionFinal}
            handleAddMultipleEntries={handleAddMultipleEntriesFinal}
            foods={foods} 
            isEditMode={editIndex !== null}
            initialGrams={initialGramsForEdit}
            initialSelectedFoodForEdit={foodForEditModal}
            onAddNewFoodRequest={handleAddNewFoodRequestFromModal}
            onCommitFoodToLibrary={handleCommitFoodItemToMainLibrary}
            dailyGoals={dailyGoals}
          /&gt;
      )}
    &lt;/SafeAreaView&gt;
  );
};
&nbsp;
const useStyles = <span class="cstat-no" title="statement not covered" >makeStyles(<span class="fstat-no" title="function not covered" >(t</span>heme) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
  container: { flex: 1, backgroundColor: theme.colors.background },
  progressContainer: { paddingHorizontal: 15, paddingTop: 10 },
  divider: { marginVertical: 0, height: StyleSheet.hairlineWidth, backgroundColor: theme.colors.divider, },
  sectionTitle: { marginTop: 15, marginBottom: 10, paddingHorizontal: 15, fontWeight: "bold", fontSize: 18, color: theme.colors.text, textAlign: I18nManager.isRTL ? 'right' : 'left' },
  fab: { position: "absolute", margin: 16, right: I18nManager.isRTL ? undefined : 10, left: I18nManager.isRTL ? 10 : undefined, bottom: 10 },
  emptyListContainer: { flex: 1, alignItems: "center", justifyContent: "center", padding: 30, marginTop: 50, },
  emptyListText: { fontSize: 17, color: theme.colors.grey2, textAlign: "center", marginTop: 15, },
  emptyListSubText: { fontSize: 14, color: theme.colors.grey3, textAlign: "center", marginTop: 8, },
  centeredLoader: { flex: 1, justifyContent: "center", alignItems: "center", paddingBottom: 50, },
  loadingText: { marginTop: 10, color: theme.colors.grey2, fontSize: 16 },
  savingIndicator: { flexDirection: "row", alignItems: "center", justifyContent: "center", paddingVertical: 5, backgroundColor: theme.colors.grey5, },
  savingText: { marginLeft: 8, color: theme.colors.primary, fontSize: 14, fontStyle: "italic", },
  listContentContainer: { paddingBottom: 80 },
}));
&nbsp;
export default DailyEntryScreen;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END DailyEntryScreen.tsx.html ----------


---------- FoodListScreen.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for screens/FoodListScreen.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">screens</a> FoodListScreen.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/268</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/158</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/55</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/223</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a>
<a name='L128'></a><a href='#L128'>128</a>
<a name='L129'></a><a href='#L129'>129</a>
<a name='L130'></a><a href='#L130'>130</a>
<a name='L131'></a><a href='#L131'>131</a>
<a name='L132'></a><a href='#L132'>132</a>
<a name='L133'></a><a href='#L133'>133</a>
<a name='L134'></a><a href='#L134'>134</a>
<a name='L135'></a><a href='#L135'>135</a>
<a name='L136'></a><a href='#L136'>136</a>
<a name='L137'></a><a href='#L137'>137</a>
<a name='L138'></a><a href='#L138'>138</a>
<a name='L139'></a><a href='#L139'>139</a>
<a name='L140'></a><a href='#L140'>140</a>
<a name='L141'></a><a href='#L141'>141</a>
<a name='L142'></a><a href='#L142'>142</a>
<a name='L143'></a><a href='#L143'>143</a>
<a name='L144'></a><a href='#L144'>144</a>
<a name='L145'></a><a href='#L145'>145</a>
<a name='L146'></a><a href='#L146'>146</a>
<a name='L147'></a><a href='#L147'>147</a>
<a name='L148'></a><a href='#L148'>148</a>
<a name='L149'></a><a href='#L149'>149</a>
<a name='L150'></a><a href='#L150'>150</a>
<a name='L151'></a><a href='#L151'>151</a>
<a name='L152'></a><a href='#L152'>152</a>
<a name='L153'></a><a href='#L153'>153</a>
<a name='L154'></a><a href='#L154'>154</a>
<a name='L155'></a><a href='#L155'>155</a>
<a name='L156'></a><a href='#L156'>156</a>
<a name='L157'></a><a href='#L157'>157</a>
<a name='L158'></a><a href='#L158'>158</a>
<a name='L159'></a><a href='#L159'>159</a>
<a name='L160'></a><a href='#L160'>160</a>
<a name='L161'></a><a href='#L161'>161</a>
<a name='L162'></a><a href='#L162'>162</a>
<a name='L163'></a><a href='#L163'>163</a>
<a name='L164'></a><a href='#L164'>164</a>
<a name='L165'></a><a href='#L165'>165</a>
<a name='L166'></a><a href='#L166'>166</a>
<a name='L167'></a><a href='#L167'>167</a>
<a name='L168'></a><a href='#L168'>168</a>
<a name='L169'></a><a href='#L169'>169</a>
<a name='L170'></a><a href='#L170'>170</a>
<a name='L171'></a><a href='#L171'>171</a>
<a name='L172'></a><a href='#L172'>172</a>
<a name='L173'></a><a href='#L173'>173</a>
<a name='L174'></a><a href='#L174'>174</a>
<a name='L175'></a><a href='#L175'>175</a>
<a name='L176'></a><a href='#L176'>176</a>
<a name='L177'></a><a href='#L177'>177</a>
<a name='L178'></a><a href='#L178'>178</a>
<a name='L179'></a><a href='#L179'>179</a>
<a name='L180'></a><a href='#L180'>180</a>
<a name='L181'></a><a href='#L181'>181</a>
<a name='L182'></a><a href='#L182'>182</a>
<a name='L183'></a><a href='#L183'>183</a>
<a name='L184'></a><a href='#L184'>184</a>
<a name='L185'></a><a href='#L185'>185</a>
<a name='L186'></a><a href='#L186'>186</a>
<a name='L187'></a><a href='#L187'>187</a>
<a name='L188'></a><a href='#L188'>188</a>
<a name='L189'></a><a href='#L189'>189</a>
<a name='L190'></a><a href='#L190'>190</a>
<a name='L191'></a><a href='#L191'>191</a>
<a name='L192'></a><a href='#L192'>192</a>
<a name='L193'></a><a href='#L193'>193</a>
<a name='L194'></a><a href='#L194'>194</a>
<a name='L195'></a><a href='#L195'>195</a>
<a name='L196'></a><a href='#L196'>196</a>
<a name='L197'></a><a href='#L197'>197</a>
<a name='L198'></a><a href='#L198'>198</a>
<a name='L199'></a><a href='#L199'>199</a>
<a name='L200'></a><a href='#L200'>200</a>
<a name='L201'></a><a href='#L201'>201</a>
<a name='L202'></a><a href='#L202'>202</a>
<a name='L203'></a><a href='#L203'>203</a>
<a name='L204'></a><a href='#L204'>204</a>
<a name='L205'></a><a href='#L205'>205</a>
<a name='L206'></a><a href='#L206'>206</a>
<a name='L207'></a><a href='#L207'>207</a>
<a name='L208'></a><a href='#L208'>208</a>
<a name='L209'></a><a href='#L209'>209</a>
<a name='L210'></a><a href='#L210'>210</a>
<a name='L211'></a><a href='#L211'>211</a>
<a name='L212'></a><a href='#L212'>212</a>
<a name='L213'></a><a href='#L213'>213</a>
<a name='L214'></a><a href='#L214'>214</a>
<a name='L215'></a><a href='#L215'>215</a>
<a name='L216'></a><a href='#L216'>216</a>
<a name='L217'></a><a href='#L217'>217</a>
<a name='L218'></a><a href='#L218'>218</a>
<a name='L219'></a><a href='#L219'>219</a>
<a name='L220'></a><a href='#L220'>220</a>
<a name='L221'></a><a href='#L221'>221</a>
<a name='L222'></a><a href='#L222'>222</a>
<a name='L223'></a><a href='#L223'>223</a>
<a name='L224'></a><a href='#L224'>224</a>
<a name='L225'></a><a href='#L225'>225</a>
<a name='L226'></a><a href='#L226'>226</a>
<a name='L227'></a><a href='#L227'>227</a>
<a name='L228'></a><a href='#L228'>228</a>
<a name='L229'></a><a href='#L229'>229</a>
<a name='L230'></a><a href='#L230'>230</a>
<a name='L231'></a><a href='#L231'>231</a>
<a name='L232'></a><a href='#L232'>232</a>
<a name='L233'></a><a href='#L233'>233</a>
<a name='L234'></a><a href='#L234'>234</a>
<a name='L235'></a><a href='#L235'>235</a>
<a name='L236'></a><a href='#L236'>236</a>
<a name='L237'></a><a href='#L237'>237</a>
<a name='L238'></a><a href='#L238'>238</a>
<a name='L239'></a><a href='#L239'>239</a>
<a name='L240'></a><a href='#L240'>240</a>
<a name='L241'></a><a href='#L241'>241</a>
<a name='L242'></a><a href='#L242'>242</a>
<a name='L243'></a><a href='#L243'>243</a>
<a name='L244'></a><a href='#L244'>244</a>
<a name='L245'></a><a href='#L245'>245</a>
<a name='L246'></a><a href='#L246'>246</a>
<a name='L247'></a><a href='#L247'>247</a>
<a name='L248'></a><a href='#L248'>248</a>
<a name='L249'></a><a href='#L249'>249</a>
<a name='L250'></a><a href='#L250'>250</a>
<a name='L251'></a><a href='#L251'>251</a>
<a name='L252'></a><a href='#L252'>252</a>
<a name='L253'></a><a href='#L253'>253</a>
<a name='L254'></a><a href='#L254'>254</a>
<a name='L255'></a><a href='#L255'>255</a>
<a name='L256'></a><a href='#L256'>256</a>
<a name='L257'></a><a href='#L257'>257</a>
<a name='L258'></a><a href='#L258'>258</a>
<a name='L259'></a><a href='#L259'>259</a>
<a name='L260'></a><a href='#L260'>260</a>
<a name='L261'></a><a href='#L261'>261</a>
<a name='L262'></a><a href='#L262'>262</a>
<a name='L263'></a><a href='#L263'>263</a>
<a name='L264'></a><a href='#L264'>264</a>
<a name='L265'></a><a href='#L265'>265</a>
<a name='L266'></a><a href='#L266'>266</a>
<a name='L267'></a><a href='#L267'>267</a>
<a name='L268'></a><a href='#L268'>268</a>
<a name='L269'></a><a href='#L269'>269</a>
<a name='L270'></a><a href='#L270'>270</a>
<a name='L271'></a><a href='#L271'>271</a>
<a name='L272'></a><a href='#L272'>272</a>
<a name='L273'></a><a href='#L273'>273</a>
<a name='L274'></a><a href='#L274'>274</a>
<a name='L275'></a><a href='#L275'>275</a>
<a name='L276'></a><a href='#L276'>276</a>
<a name='L277'></a><a href='#L277'>277</a>
<a name='L278'></a><a href='#L278'>278</a>
<a name='L279'></a><a href='#L279'>279</a>
<a name='L280'></a><a href='#L280'>280</a>
<a name='L281'></a><a href='#L281'>281</a>
<a name='L282'></a><a href='#L282'>282</a>
<a name='L283'></a><a href='#L283'>283</a>
<a name='L284'></a><a href='#L284'>284</a>
<a name='L285'></a><a href='#L285'>285</a>
<a name='L286'></a><a href='#L286'>286</a>
<a name='L287'></a><a href='#L287'>287</a>
<a name='L288'></a><a href='#L288'>288</a>
<a name='L289'></a><a href='#L289'>289</a>
<a name='L290'></a><a href='#L290'>290</a>
<a name='L291'></a><a href='#L291'>291</a>
<a name='L292'></a><a href='#L292'>292</a>
<a name='L293'></a><a href='#L293'>293</a>
<a name='L294'></a><a href='#L294'>294</a>
<a name='L295'></a><a href='#L295'>295</a>
<a name='L296'></a><a href='#L296'>296</a>
<a name='L297'></a><a href='#L297'>297</a>
<a name='L298'></a><a href='#L298'>298</a>
<a name='L299'></a><a href='#L299'>299</a>
<a name='L300'></a><a href='#L300'>300</a>
<a name='L301'></a><a href='#L301'>301</a>
<a name='L302'></a><a href='#L302'>302</a>
<a name='L303'></a><a href='#L303'>303</a>
<a name='L304'></a><a href='#L304'>304</a>
<a name='L305'></a><a href='#L305'>305</a>
<a name='L306'></a><a href='#L306'>306</a>
<a name='L307'></a><a href='#L307'>307</a>
<a name='L308'></a><a href='#L308'>308</a>
<a name='L309'></a><a href='#L309'>309</a>
<a name='L310'></a><a href='#L310'>310</a>
<a name='L311'></a><a href='#L311'>311</a>
<a name='L312'></a><a href='#L312'>312</a>
<a name='L313'></a><a href='#L313'>313</a>
<a name='L314'></a><a href='#L314'>314</a>
<a name='L315'></a><a href='#L315'>315</a>
<a name='L316'></a><a href='#L316'>316</a>
<a name='L317'></a><a href='#L317'>317</a>
<a name='L318'></a><a href='#L318'>318</a>
<a name='L319'></a><a href='#L319'>319</a>
<a name='L320'></a><a href='#L320'>320</a>
<a name='L321'></a><a href='#L321'>321</a>
<a name='L322'></a><a href='#L322'>322</a>
<a name='L323'></a><a href='#L323'>323</a>
<a name='L324'></a><a href='#L324'>324</a>
<a name='L325'></a><a href='#L325'>325</a>
<a name='L326'></a><a href='#L326'>326</a>
<a name='L327'></a><a href='#L327'>327</a>
<a name='L328'></a><a href='#L328'>328</a>
<a name='L329'></a><a href='#L329'>329</a>
<a name='L330'></a><a href='#L330'>330</a>
<a name='L331'></a><a href='#L331'>331</a>
<a name='L332'></a><a href='#L332'>332</a>
<a name='L333'></a><a href='#L333'>333</a>
<a name='L334'></a><a href='#L334'>334</a>
<a name='L335'></a><a href='#L335'>335</a>
<a name='L336'></a><a href='#L336'>336</a>
<a name='L337'></a><a href='#L337'>337</a>
<a name='L338'></a><a href='#L338'>338</a>
<a name='L339'></a><a href='#L339'>339</a>
<a name='L340'></a><a href='#L340'>340</a>
<a name='L341'></a><a href='#L341'>341</a>
<a name='L342'></a><a href='#L342'>342</a>
<a name='L343'></a><a href='#L343'>343</a>
<a name='L344'></a><a href='#L344'>344</a>
<a name='L345'></a><a href='#L345'>345</a>
<a name='L346'></a><a href='#L346'>346</a>
<a name='L347'></a><a href='#L347'>347</a>
<a name='L348'></a><a href='#L348'>348</a>
<a name='L349'></a><a href='#L349'>349</a>
<a name='L350'></a><a href='#L350'>350</a>
<a name='L351'></a><a href='#L351'>351</a>
<a name='L352'></a><a href='#L352'>352</a>
<a name='L353'></a><a href='#L353'>353</a>
<a name='L354'></a><a href='#L354'>354</a>
<a name='L355'></a><a href='#L355'>355</a>
<a name='L356'></a><a href='#L356'>356</a>
<a name='L357'></a><a href='#L357'>357</a>
<a name='L358'></a><a href='#L358'>358</a>
<a name='L359'></a><a href='#L359'>359</a>
<a name='L360'></a><a href='#L360'>360</a>
<a name='L361'></a><a href='#L361'>361</a>
<a name='L362'></a><a href='#L362'>362</a>
<a name='L363'></a><a href='#L363'>363</a>
<a name='L364'></a><a href='#L364'>364</a>
<a name='L365'></a><a href='#L365'>365</a>
<a name='L366'></a><a href='#L366'>366</a>
<a name='L367'></a><a href='#L367'>367</a>
<a name='L368'></a><a href='#L368'>368</a>
<a name='L369'></a><a href='#L369'>369</a>
<a name='L370'></a><a href='#L370'>370</a>
<a name='L371'></a><a href='#L371'>371</a>
<a name='L372'></a><a href='#L372'>372</a>
<a name='L373'></a><a href='#L373'>373</a>
<a name='L374'></a><a href='#L374'>374</a>
<a name='L375'></a><a href='#L375'>375</a>
<a name='L376'></a><a href='#L376'>376</a>
<a name='L377'></a><a href='#L377'>377</a>
<a name='L378'></a><a href='#L378'>378</a>
<a name='L379'></a><a href='#L379'>379</a>
<a name='L380'></a><a href='#L380'>380</a>
<a name='L381'></a><a href='#L381'>381</a>
<a name='L382'></a><a href='#L382'>382</a>
<a name='L383'></a><a href='#L383'>383</a>
<a name='L384'></a><a href='#L384'>384</a>
<a name='L385'></a><a href='#L385'>385</a>
<a name='L386'></a><a href='#L386'>386</a>
<a name='L387'></a><a href='#L387'>387</a>
<a name='L388'></a><a href='#L388'>388</a>
<a name='L389'></a><a href='#L389'>389</a>
<a name='L390'></a><a href='#L390'>390</a>
<a name='L391'></a><a href='#L391'>391</a>
<a name='L392'></a><a href='#L392'>392</a>
<a name='L393'></a><a href='#L393'>393</a>
<a name='L394'></a><a href='#L394'>394</a>
<a name='L395'></a><a href='#L395'>395</a>
<a name='L396'></a><a href='#L396'>396</a>
<a name='L397'></a><a href='#L397'>397</a>
<a name='L398'></a><a href='#L398'>398</a>
<a name='L399'></a><a href='#L399'>399</a>
<a name='L400'></a><a href='#L400'>400</a>
<a name='L401'></a><a href='#L401'>401</a>
<a name='L402'></a><a href='#L402'>402</a>
<a name='L403'></a><a href='#L403'>403</a>
<a name='L404'></a><a href='#L404'>404</a>
<a name='L405'></a><a href='#L405'>405</a>
<a name='L406'></a><a href='#L406'>406</a>
<a name='L407'></a><a href='#L407'>407</a>
<a name='L408'></a><a href='#L408'>408</a>
<a name='L409'></a><a href='#L409'>409</a>
<a name='L410'></a><a href='#L410'>410</a>
<a name='L411'></a><a href='#L411'>411</a>
<a name='L412'></a><a href='#L412'>412</a>
<a name='L413'></a><a href='#L413'>413</a>
<a name='L414'></a><a href='#L414'>414</a>
<a name='L415'></a><a href='#L415'>415</a>
<a name='L416'></a><a href='#L416'>416</a>
<a name='L417'></a><a href='#L417'>417</a>
<a name='L418'></a><a href='#L418'>418</a>
<a name='L419'></a><a href='#L419'>419</a>
<a name='L420'></a><a href='#L420'>420</a>
<a name='L421'></a><a href='#L421'>421</a>
<a name='L422'></a><a href='#L422'>422</a>
<a name='L423'></a><a href='#L423'>423</a>
<a name='L424'></a><a href='#L424'>424</a>
<a name='L425'></a><a href='#L425'>425</a>
<a name='L426'></a><a href='#L426'>426</a>
<a name='L427'></a><a href='#L427'>427</a>
<a name='L428'></a><a href='#L428'>428</a>
<a name='L429'></a><a href='#L429'>429</a>
<a name='L430'></a><a href='#L430'>430</a>
<a name='L431'></a><a href='#L431'>431</a>
<a name='L432'></a><a href='#L432'>432</a>
<a name='L433'></a><a href='#L433'>433</a>
<a name='L434'></a><a href='#L434'>434</a>
<a name='L435'></a><a href='#L435'>435</a>
<a name='L436'></a><a href='#L436'>436</a>
<a name='L437'></a><a href='#L437'>437</a>
<a name='L438'></a><a href='#L438'>438</a>
<a name='L439'></a><a href='#L439'>439</a>
<a name='L440'></a><a href='#L440'>440</a>
<a name='L441'></a><a href='#L441'>441</a>
<a name='L442'></a><a href='#L442'>442</a>
<a name='L443'></a><a href='#L443'>443</a>
<a name='L444'></a><a href='#L444'>444</a>
<a name='L445'></a><a href='#L445'>445</a>
<a name='L446'></a><a href='#L446'>446</a>
<a name='L447'></a><a href='#L447'>447</a>
<a name='L448'></a><a href='#L448'>448</a>
<a name='L449'></a><a href='#L449'>449</a>
<a name='L450'></a><a href='#L450'>450</a>
<a name='L451'></a><a href='#L451'>451</a>
<a name='L452'></a><a href='#L452'>452</a>
<a name='L453'></a><a href='#L453'>453</a>
<a name='L454'></a><a href='#L454'>454</a>
<a name='L455'></a><a href='#L455'>455</a>
<a name='L456'></a><a href='#L456'>456</a>
<a name='L457'></a><a href='#L457'>457</a>
<a name='L458'></a><a href='#L458'>458</a>
<a name='L459'></a><a href='#L459'>459</a>
<a name='L460'></a><a href='#L460'>460</a>
<a name='L461'></a><a href='#L461'>461</a>
<a name='L462'></a><a href='#L462'>462</a>
<a name='L463'></a><a href='#L463'>463</a>
<a name='L464'></a><a href='#L464'>464</a>
<a name='L465'></a><a href='#L465'>465</a>
<a name='L466'></a><a href='#L466'>466</a>
<a name='L467'></a><a href='#L467'>467</a>
<a name='L468'></a><a href='#L468'>468</a>
<a name='L469'></a><a href='#L469'>469</a>
<a name='L470'></a><a href='#L470'>470</a>
<a name='L471'></a><a href='#L471'>471</a>
<a name='L472'></a><a href='#L472'>472</a>
<a name='L473'></a><a href='#L473'>473</a>
<a name='L474'></a><a href='#L474'>474</a>
<a name='L475'></a><a href='#L475'>475</a>
<a name='L476'></a><a href='#L476'>476</a>
<a name='L477'></a><a href='#L477'>477</a>
<a name='L478'></a><a href='#L478'>478</a>
<a name='L479'></a><a href='#L479'>479</a>
<a name='L480'></a><a href='#L480'>480</a>
<a name='L481'></a><a href='#L481'>481</a>
<a name='L482'></a><a href='#L482'>482</a>
<a name='L483'></a><a href='#L483'>483</a>
<a name='L484'></a><a href='#L484'>484</a>
<a name='L485'></a><a href='#L485'>485</a>
<a name='L486'></a><a href='#L486'>486</a>
<a name='L487'></a><a href='#L487'>487</a>
<a name='L488'></a><a href='#L488'>488</a>
<a name='L489'></a><a href='#L489'>489</a>
<a name='L490'></a><a href='#L490'>490</a>
<a name='L491'></a><a href='#L491'>491</a>
<a name='L492'></a><a href='#L492'>492</a>
<a name='L493'></a><a href='#L493'>493</a>
<a name='L494'></a><a href='#L494'>494</a>
<a name='L495'></a><a href='#L495'>495</a>
<a name='L496'></a><a href='#L496'>496</a>
<a name='L497'></a><a href='#L497'>497</a>
<a name='L498'></a><a href='#L498'>498</a>
<a name='L499'></a><a href='#L499'>499</a>
<a name='L500'></a><a href='#L500'>500</a>
<a name='L501'></a><a href='#L501'>501</a>
<a name='L502'></a><a href='#L502'>502</a>
<a name='L503'></a><a href='#L503'>503</a>
<a name='L504'></a><a href='#L504'>504</a>
<a name='L505'></a><a href='#L505'>505</a>
<a name='L506'></a><a href='#L506'>506</a>
<a name='L507'></a><a href='#L507'>507</a>
<a name='L508'></a><a href='#L508'>508</a>
<a name='L509'></a><a href='#L509'>509</a>
<a name='L510'></a><a href='#L510'>510</a>
<a name='L511'></a><a href='#L511'>511</a>
<a name='L512'></a><a href='#L512'>512</a>
<a name='L513'></a><a href='#L513'>513</a>
<a name='L514'></a><a href='#L514'>514</a>
<a name='L515'></a><a href='#L515'>515</a>
<a name='L516'></a><a href='#L516'>516</a>
<a name='L517'></a><a href='#L517'>517</a>
<a name='L518'></a><a href='#L518'>518</a>
<a name='L519'></a><a href='#L519'>519</a>
<a name='L520'></a><a href='#L520'>520</a>
<a name='L521'></a><a href='#L521'>521</a>
<a name='L522'></a><a href='#L522'>522</a>
<a name='L523'></a><a href='#L523'>523</a>
<a name='L524'></a><a href='#L524'>524</a>
<a name='L525'></a><a href='#L525'>525</a>
<a name='L526'></a><a href='#L526'>526</a>
<a name='L527'></a><a href='#L527'>527</a>
<a name='L528'></a><a href='#L528'>528</a>
<a name='L529'></a><a href='#L529'>529</a>
<a name='L530'></a><a href='#L530'>530</a>
<a name='L531'></a><a href='#L531'>531</a>
<a name='L532'></a><a href='#L532'>532</a>
<a name='L533'></a><a href='#L533'>533</a>
<a name='L534'></a><a href='#L534'>534</a>
<a name='L535'></a><a href='#L535'>535</a>
<a name='L536'></a><a href='#L536'>536</a>
<a name='L537'></a><a href='#L537'>537</a>
<a name='L538'></a><a href='#L538'>538</a>
<a name='L539'></a><a href='#L539'>539</a>
<a name='L540'></a><a href='#L540'>540</a>
<a name='L541'></a><a href='#L541'>541</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/screens/FoodListScreen.tsx
import React, { useState, useEffect, useCallback, useMemo, useRef } from "react";
import { View, FlatList, Alert, Platform, ActivityIndicator, StyleSheet, I18nManager, Share, LayoutAnimation, UIManager, TouchableOpacity } from "react-native";
import { createFood, getFoods, updateFood, deleteFood as deleteFoodService } from "../services/foodService";
import { Food, SharedFoodData } from "../types/food";
import { isNotEmpty } from "../utils/validationUtils";
import FoodItem from "../components/FoodItem";
import { SearchBar, useTheme, makeStyles, Text, Icon as RNEIcon, Overlay } from "@rneui/themed";
import { FAB } from "@rneui/base";
import { SafeAreaView } from "react-native-safe-area-context";
import AddFoodModal from "../components/AddFoodModal";
import Toast from "react-native-toast-message";
import { useFocusEffect, useNavigation, useRoute, RouteProp } from "@react-navigation/native";
import { getFoodIconUrl } from "../utils/iconUtils";
import { t } from '../localization/i18n';
import { BottomTabNavigationProp } from '@react-navigation/bottom-tabs';
import { MainTabParamList } from "../navigation/AppNavigator";
import Constants from 'expo-constants';
import { findFoodsByTagSearch } from "../utils/searchUtils";
&nbsp;
<span class="cstat-no" title="statement not covered" >if (Platform.OS === 'android' &amp;&amp; UIManager.setLayoutAnimationEnabledExperimental) {</span>
<span class="cstat-no" title="statement not covered" >  UIManager.setLayoutAnimationEnabledExperimental(true);</span>
}
&nbsp;
// Polyfill for atob/btoa if not available, crucial for deep link data decoding.
<span class="cstat-no" title="statement not covered" >if (typeof atob === 'undefined') {</span>
<span class="cstat-no" title="statement not covered" >  global.atob = <span class="fstat-no" title="function not covered" >(s</span>tr: string): string =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
      const { Buffer } = <span class="cstat-no" title="statement not covered" >require('buffer');</span>
<span class="cstat-no" title="statement not covered" >      return Buffer.from(str, 'base64').toString('binary');</span>
    } catch (e) {
<span class="cstat-no" title="statement not covered" >      console.error("Failed to polyfill atob:", e);</span>
<span class="cstat-no" title="statement not covered" >      return '';</span>
    }
  };
}
<span class="cstat-no" title="statement not covered" >if (typeof btoa === 'undefined') {</span>
<span class="cstat-no" title="statement not covered" >  global.btoa = <span class="fstat-no" title="function not covered" >(s</span>tr: string): string =&gt; {</span>
<span class="cstat-no" title="statement not covered" >     try {</span>
       const { Buffer } = <span class="cstat-no" title="statement not covered" >require('buffer');</span>
<span class="cstat-no" title="statement not covered" >       return Buffer.from(str, 'binary').toString('base64');</span>
     } catch (e) {
<span class="cstat-no" title="statement not covered" >       console.error("Failed to polyfill btoa:", e);</span>
<span class="cstat-no" title="statement not covered" >       return '';</span>
     }
  };
}
&nbsp;
interface FoodListScreenProps { onFoodChange?: () =&gt; void; }
&nbsp;
type SortOptionValue = 'name' | 'newest' | 'oldest';
&nbsp;
type FoodListScreenNavigationProp = BottomTabNavigationProp&lt;MainTabParamList, 'FoodListRoute'&gt;;
type FoodListScreenRouteProp = RouteProp&lt;MainTabParamList, 'FoodListRoute'&gt;;
&nbsp;
const getBackendShareBaseUrl = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span>: string =&gt; {</span>
    const envUrl = <span class="cstat-no" title="statement not covered" >process.env.EXPO_PUBLIC_BACKEND_URL_PRODUCTION;</span>
    const appJsonUrl = <span class="cstat-no" title="statement not covered" >Constants.expoConfig?.extra?.env?.BACKEND_URL_PRODUCTION;</span>
    let chosenUrl: string;
&nbsp;
<span class="cstat-no" title="statement not covered" >    if (envUrl) {</span>
<span class="cstat-no" title="statement not covered" >        chosenUrl = envUrl;</span>
    } else <span class="cstat-no" title="statement not covered" >if (appJsonUrl) {</span>
<span class="cstat-no" title="statement not covered" >        chosenUrl = appJsonUrl;</span>
    } else {
<span class="cstat-no" title="statement not covered" >        chosenUrl = "https://macros-vision-ai.xyz";</span>
<span class="cstat-no" title="statement not covered" >        console.warn(</span>
            `Share Link WARNING: Production backend URL is not configured. Falling back to default: ${chosenUrl}.`
        );
    }
<span class="cstat-no" title="statement not covered" >    return String(chosenUrl).replace(/\/api\/v1$/, '').replace(/\/$/, '');</span>
};
&nbsp;
const FoodListScreen: React.FC&lt;FoodListScreenProps&gt; = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span> onFoodChange }) =&gt; {</span>
    const [masterFoods, setMasterFoods] = <span class="cstat-no" title="statement not covered" >useState&lt;Food[]&gt;([]);</span>
    const [foodIcons, setFoodIcons] = <span class="cstat-no" title="statement not covered" >useState&lt;{ [foodName: string]: string | null }&gt;({});</span>
    const [isLoading, setIsLoading] = <span class="cstat-no" title="statement not covered" >useState(true);</span>
    const [isOverlayVisible, setIsOverlayVisible] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
    const [search, setSearch] = <span class="cstat-no" title="statement not covered" >useState("");</span>
    const [sortOption, setSortOption] = <span class="cstat-no" title="statement not covered" >useState&lt;SortOptionValue&gt;('name');</span>
    const [sortIndex, setSortIndex] = <span class="cstat-no" title="statement not covered" >useState(0);</span>
    const [newFood, setNewFood] = <span class="cstat-no" title="statement not covered" >useState&lt;Omit&lt;Food, "id" | "createdAt"&gt;&gt;({ name: "", calories: 0, protein: 0, carbs: 0, fat: 0, });</span>
    const [editFood, setEditFood] = <span class="cstat-no" title="statement not covered" >useState&lt;Food | null&gt;(null);</span>
    const [errors, setErrors] = <span class="cstat-no" title="statement not covered" >useState&lt;{ [key: string]: string }&gt;({});</span>
    const [isSaving, setIsSaving] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
    const [isSortMenuVisible, setIsSortMenuVisible] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
    
    const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
    const styles = <span class="cstat-no" title="statement not covered" >useStyles();</span>
    const deleteTimeoutRef = <span class="cstat-no" title="statement not covered" >useRef&lt;NodeJS.Timeout | null&gt;(null);</span>
    const sortButtonRef = <span class="cstat-no" title="statement not covered" >useRef&lt;View | null&gt;(null);</span>
    const [sortButtonPosition, setSortButtonPosition] = <span class="cstat-no" title="statement not covered" >useState({ x: 0, y: 0, width: 0, height: 0 });</span>
&nbsp;
&nbsp;
    const route = <span class="cstat-no" title="statement not covered" >useRoute&lt;FoodListScreenRouteProp&gt;();</span>
    const navigation = <span class="cstat-no" title="statement not covered" >useNavigation&lt;FoodListScreenNavigationProp&gt;();</span>
&nbsp;
    const sortOptions = <span class="cstat-no" title="statement not covered" >useMemo&lt;{label: string, value: SortOptionValue}[]&gt;(<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >[</span></span>
        { label: t('foodListScreen.sortByName'), value: 'name' },
        { label: t('foodListScreen.sortByNewest'), value: 'newest' },
        { label: t('foodListScreen.sortByOldest'), value: 'oldest' },
    ], [t]);
&nbsp;
    const handleSortChange = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(i</span>ndex: number) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (isLoading || isSaving) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >        setSortIndex(index);</span>
<span class="cstat-no" title="statement not covered" >        setSortOption(sortOptions[index].value);</span>
<span class="cstat-no" title="statement not covered" >        setIsSortMenuVisible(false);</span>
    };
    
    const toggleSortMenu = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        sortButtonRef.current?.measure(<span class="fstat-no" title="function not covered" >(_</span>fx: number, _fy: number, width: number, height: number, px: number, py: number) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >            setSortButtonPosition({ x: px, y: py, width, height });</span>
<span class="cstat-no" title="statement not covered" >            setIsSortMenuVisible(!isSortMenuVisible);</span>
        });
    };
&nbsp;
    const triggerIconPrefetch = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >(f</span>oodsToFetch: Food[]) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (!foodsToFetch || foodsToFetch.length === 0) <span class="cstat-no" title="statement not covered" >return;</span></span>
        const iconsToResolve: { [key: string]: string | null } = <span class="cstat-no" title="statement not covered" >{};</span>
<span class="cstat-no" title="statement not covered" >        foodsToFetch.forEach(<span class="fstat-no" title="function not covered" >fo</span>od =&gt; {</span>
<span class="cstat-no" title="statement not covered" >            if (food.name &amp;&amp; foodIcons[food.name] === undefined) {</span>
<span class="cstat-no" title="statement not covered" >                iconsToResolve[food.name] = getFoodIconUrl(food.name);</span>
            }
        });
<span class="cstat-no" title="statement not covered" >        if (Object.keys(iconsToResolve).length &gt; 0) {</span>
<span class="cstat-no" title="statement not covered" >            setFoodIcons(<span class="fstat-no" title="function not covered" >pr</span>evIcons =&gt; (<span class="cstat-no" title="statement not covered" >{ ...prevIcons, ...iconsToResolve })</span>);</span>
        }
    }, [foodIcons]);
&nbsp;
<span class="cstat-no" title="statement not covered" >    useFocusEffect(</span>
      useCallback(<span class="fstat-no" title="function not covered" >()</span> =&gt; {
        let isActive = <span class="cstat-no" title="statement not covered" >true;</span>
        const loadAllFoods = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >          setIsLoading(true);</span>
<span class="cstat-no" title="statement not covered" >          try {</span>
            const { items } = <span class="cstat-no" title="statement not covered" >await getFoods();</span>
<span class="cstat-no" title="statement not covered" >            if (isActive) {</span>
<span class="cstat-no" title="statement not covered" >              setMasterFoods(items);</span>
<span class="cstat-no" title="statement not covered" >              triggerIconPrefetch(items);</span>
            }
          } catch (error) {
<span class="cstat-no" title="statement not covered" >            if (isActive) <span class="cstat-no" title="statement not covered" >Alert.alert(t('foodListScreen.errorLoad'), t('foodListScreen.errorLoadMessage'));</span></span>
          } finally {
<span class="cstat-no" title="statement not covered" >            if (isActive) <span class="cstat-no" title="statement not covered" >setIsLoading(false);</span></span>
          }
        };
<span class="cstat-no" title="statement not covered" >        loadAllFoods();</span>
<span class="cstat-no" title="statement not covered" >        return <span class="fstat-no" title="function not covered" >()</span> =&gt; { <span class="cstat-no" title="statement not covered" >isActive = false; </span>};</span>
      }, [triggerIconPrefetch, t])
    );
&nbsp;
    const displayedFoods = <span class="cstat-no" title="statement not covered" >useMemo(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
        let items: Food[];
        const lowercasedSearchTerm = <span class="cstat-no" title="statement not covered" >search.toLowerCase().trim();</span>
    
<span class="cstat-no" title="statement not covered" >        if (lowercasedSearchTerm) {</span>
            const combined = <span class="cstat-no" title="statement not covered" >new Map&lt;string, Food&gt;();</span>
    
            // 1. Primary search: by name
            const nameMatchedFoods = <span class="cstat-no" title="statement not covered" >masterFoods.filter(<span class="fstat-no" title="function not covered" >fo</span>od =&gt;</span>
<span class="cstat-no" title="statement not covered" >                food.name.toLowerCase().includes(lowercasedSearchTerm)</span>
            );
<span class="cstat-no" title="statement not covered" >            nameMatchedFoods.forEach(<span class="fstat-no" title="function not covered" >fo</span>od =&gt; <span class="cstat-no" title="statement not covered" >combined.set(food.id, food))</span>;</span>
    
            // 2. Secondary search: by tags
            const tagMatchedFoods = <span class="cstat-no" title="statement not covered" >findFoodsByTagSearch(lowercasedSearchTerm, masterFoods);</span>
<span class="cstat-no" title="statement not covered" >            tagMatchedFoods.forEach(<span class="fstat-no" title="function not covered" >fo</span>od =&gt; <span class="cstat-no" title="statement not covered" >combined.set(food.id, food))</span>;</span>
            
<span class="cstat-no" title="statement not covered" >            items = Array.from(combined.values());</span>
        } else {
<span class="cstat-no" title="statement not covered" >            items = [...masterFoods];</span>
        }
        
        // Apply sorting to the final list
<span class="cstat-no" title="statement not covered" >        if (sortOption === 'name') {</span>
<span class="cstat-no" title="statement not covered" >            items.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; <span class="cstat-no" title="statement not covered" >a.name.localeCompare(b.name))</span>;</span>
        } else {
            const fallbackDate = <span class="cstat-no" title="statement not covered" >'2020-01-01T00:00:00.000Z';</span>
<span class="cstat-no" title="statement not covered" >            items.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; {</span>
                const dateA = <span class="cstat-no" title="statement not covered" >new Date(a.createdAt || fallbackDate).getTime();</span>
                const dateB = <span class="cstat-no" title="statement not covered" >new Date(b.createdAt || fallbackDate).getTime();</span>
<span class="cstat-no" title="statement not covered" >                return sortOption === 'newest' ? dateB - dateA : dateA - dateB;</span>
            });
        }
<span class="cstat-no" title="statement not covered" >        return items;</span>
    }, [masterFoods, search, sortOption]);
&nbsp;
    const toggleOverlay = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >(f</span>oodToEdit?: Food) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (isSaving) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >        if (foodToEdit) {</span>
<span class="cstat-no" title="statement not covered" >            setEditFood({ ...foodToEdit });</span>
<span class="cstat-no" title="statement not covered" >            setNewFood({ name: "", calories: 0, protein: 0, carbs: 0, fat: 0 });</span>
        } else {
<span class="cstat-no" title="statement not covered" >            setEditFood(null);</span>
<span class="cstat-no" title="statement not covered" >            setNewFood({ name: "", calories: 0, protein: 0, carbs: 0, fat: 0 });</span>
        }
<span class="cstat-no" title="statement not covered" >        setErrors({});</span>
<span class="cstat-no" title="statement not covered" >        setIsOverlayVisible(<span class="fstat-no" title="function not covered" >pr</span>ev =&gt; <span class="cstat-no" title="statement not covered" >!prev)</span>;</span>
    }, [isSaving]);
&nbsp;
<span class="cstat-no" title="statement not covered" >    useEffect(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
      const params = <span class="cstat-no" title="statement not covered" >route.params;</span>
<span class="cstat-no" title="statement not covered" >      if (params) {</span>
<span class="cstat-no" title="statement not covered" >        if (params.openAddFoodModal &amp;&amp; !isOverlayVisible) {</span>
<span class="cstat-no" title="statement not covered" >          toggleOverlay();</span>
<span class="cstat-no" title="statement not covered" >          navigation.setParams({ openAddFoodModal: undefined });</span>
        }
<span class="cstat-no" title="statement not covered" >        if (params.foodData &amp;&amp; typeof params.foodData === 'string') {</span>
<span class="cstat-no" title="statement not covered" >          try {</span>
            // URL-safe Base64 decoding
            let b64 = <span class="cstat-no" title="statement not covered" >params.foodData.replace(/-/g, '+').replace(/_/g, '/');</span>
            const binaryString = <span class="cstat-no" title="statement not covered" >atob(b64);</span>
            const utf8Bytes = <span class="cstat-no" title="statement not covered" >new Uint8Array(binaryString.length);</span>
<span class="cstat-no" title="statement not covered" >            for (let i = <span class="cstat-no" title="statement not covered" >0;</span> i &lt; binaryString.length; i++) <span class="cstat-no" title="statement not covered" >utf8Bytes[i] = binaryString.charCodeAt(i);</span></span>
            const decodedJson = <span class="cstat-no" title="statement not covered" >new TextDecoder().decode(utf8Bytes);</span>
            const potentialFood: any = <span class="cstat-no" title="statement not covered" >JSON.parse(decodedJson);</span>
            
            // **SECURITY IMPLEMENTATION: Sanitize and validate incoming data**
            const sanitizedFood: Omit&lt;Food, "id" | "createdAt"&gt; = <span class="cstat-no" title="statement not covered" >{</span>
                name: String(potentialFood.name || "").substring(0, 100).trim(),
                calories: Math.max(0, Number(potentialFood.calories) || 0),
                protein: Math.max(0, Number(potentialFood.protein) || 0),
                carbs: Math.max(0, Number(potentialFood.carbs) || 0),
                fat: Math.max(0, Number(potentialFood.fat) || 0),
            };
&nbsp;
<span class="cstat-no" title="statement not covered" >            if (sanitizedFood.name) {</span>
<span class="cstat-no" title="statement not covered" >              setNewFood(sanitizedFood);</span>
<span class="cstat-no" title="statement not covered" >              setEditFood(null); </span>
<span class="cstat-no" title="statement not covered" >              setIsOverlayVisible(true);</span>
            } else { 
<span class="cstat-no" title="statement not covered" >              Alert.alert(t('foodListScreen.deepLinkErrorTitle'), t('foodListScreen.deepLinkInvalidData')); </span>
            }
          } catch (e) { 
<span class="cstat-no" title="statement not covered" >            Alert.alert(t('foodListScreen.deepLinkErrorTitle'), t('foodListScreen.deepLinkParseError'));</span>
          } finally { 
<span class="cstat-no" title="statement not covered" >            navigation.setParams({ foodData: undefined }); </span>
          }
        }
      }
    }, [route.params, isOverlayVisible, toggleOverlay, navigation, t]);
&nbsp;
    const handleUndoDelete = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >(f</span>oodToRestore: Food) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        Toast.hide();</span>
<span class="cstat-no" title="statement not covered" >        if (deleteTimeoutRef.current) { </span>
<span class="cstat-no" title="statement not covered" >            clearTimeout(deleteTimeoutRef.current); </span>
<span class="cstat-no" title="statement not covered" >            deleteTimeoutRef.current = null; </span>
        }
        
<span class="cstat-no" title="statement not covered" >        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);</span>
<span class="cstat-no" title="statement not covered" >        setMasterFoods(<span class="fstat-no" title="function not covered" >pr</span>ev =&gt; <span class="cstat-no" title="statement not covered" >[...prev, foodToRestore])</span>;</span>
<span class="cstat-no" title="statement not covered" >        Toast.show({</span>
            type: 'success', 
            text1: t('foodListScreen.foodRestored', { foodName: foodToRestore.name }),
            position: 'bottom', 
            visibilityTime: 2000,
        });
    }, [t]);
&nbsp;
    const handleDeleteFood = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >(f</span>oodId: string) =&gt; {</span>
        const foodToDelete = <span class="cstat-no" title="statement not covered" >masterFoods.find(<span class="fstat-no" title="function not covered" >f </span>=&gt; <span class="cstat-no" title="statement not covered" >f.id === foodId)</span>;</span>
<span class="cstat-no" title="statement not covered" >        if (!foodToDelete) <span class="cstat-no" title="statement not covered" >return;</span></span>
        
<span class="cstat-no" title="statement not covered" >        if (deleteTimeoutRef.current) <span class="cstat-no" title="statement not covered" >clearTimeout(deleteTimeoutRef.current);</span></span>
        
<span class="cstat-no" title="statement not covered" >        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);</span>
<span class="cstat-no" title="statement not covered" >        setMasterFoods(<span class="fstat-no" title="function not covered" >pr</span>ev =&gt; <span class="cstat-no" title="statement not covered" >prev.filter(<span class="fstat-no" title="function not covered" >f </span>=&gt; <span class="cstat-no" title="statement not covered" >f.id !== foodId)</span>)</span>;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >        deleteTimeoutRef.current = setTimeout(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >            deleteFoodService(foodId)</span>
              .then(<span class="fstat-no" title="function not covered" >()</span> =&gt; { 
<span class="cstat-no" title="statement not covered" >                  onFoodChange?.(); </span>
<span class="cstat-no" title="statement not covered" >                  console.log(`Permanently deleted ${foodId}`); </span>
              })
              .catch(<span class="fstat-no" title="function not covered" >er</span>ror =&gt; {
<span class="cstat-no" title="statement not covered" >                  Alert.alert(t('foodListScreen.errorDelete'), t('foodListScreen.errorDeleteMessage'));</span>
<span class="cstat-no" title="statement not covered" >                  setMasterFoods(<span class="fstat-no" title="function not covered" >pr</span>ev =&gt; <span class="cstat-no" title="statement not covered" >[...prev, foodToDelete])</span>;</span>
              });
        }, 4000);
&nbsp;
<span class="cstat-no" title="statement not covered" >        Toast.show({</span>
            type: 'info', 
            text1: t('foodListScreen.foodDeleted', { foodName: foodToDelete.name }),
            text2: t('dailyEntryScreen.undo'), 
            position: 'bottom', 
            visibilityTime: 4000,
            onPress: <span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >handleUndoDelete(foodToDelete), </span>
            bottomOffset: 80,
        });
    }, [masterFoods, onFoodChange, t, handleUndoDelete]);
&nbsp;
    const handleQuickAdd = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >(f</span>oodToQuickAdd: Food) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        navigation.navigate('DailyEntryRoute', { quickAddFood: foodToQuickAdd });</span>
    }, [navigation]);
&nbsp;
    const validateFood = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(f</span>oodToValidate: Omit&lt;Food, "id" | "createdAt"&gt; | Food): { [key: string]: string } | null =&gt; {</span>
        const newErrors: { [key: string]: string } = <span class="cstat-no" title="statement not covered" >{};</span>
<span class="cstat-no" title="statement not covered" >        if (!isNotEmpty(foodToValidate.name)) <span class="cstat-no" title="statement not covered" >newErrors.name = "Name is required";</span></span>
<span class="cstat-no" title="statement not covered" >        if (isNaN(foodToValidate.calories) || foodToValidate.calories &lt; 0) <span class="cstat-no" title="statement not covered" >newErrors.calories = "Must be a non-negative number";</span></span>
<span class="cstat-no" title="statement not covered" >        if (isNaN(foodToValidate.protein) || foodToValidate.protein &lt; 0) <span class="cstat-no" title="statement not covered" >newErrors.protein = "Must be a non-negative number";</span></span>
<span class="cstat-no" title="statement not covered" >        if (isNaN(foodToValidate.carbs) || foodToValidate.carbs &lt; 0) <span class="cstat-no" title="statement not covered" >newErrors.carbs = "Must be a non-negative number";</span></span>
<span class="cstat-no" title="statement not covered" >        if (isNaN(foodToValidate.fat) || foodToValidate.fat &lt; 0) <span class="cstat-no" title="statement not covered" >newErrors.fat = "Must be a non-negative number";</span></span>
<span class="cstat-no" title="statement not covered" >        return Object.keys(newErrors).length === 0 ? null : newErrors;</span>
    };
&nbsp;
    const handleCreateFood = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
        const trimmedFood = <span class="cstat-no" title="statement not covered" >{ ...newFood, name: newFood.name.trim() };</span>
<span class="cstat-no" title="statement not covered" >        if (validateFood(trimmedFood)) { <span class="cstat-no" title="statement not covered" >Toast.show({ type: 'error', text1: t('foodListScreen.fixErrors'), position: 'bottom' }); <span class="cstat-no" title="statement not covered" ></span>return; </span>}</span>
<span class="cstat-no" title="statement not covered" >        setIsSaving(true);</span>
<span class="cstat-no" title="statement not covered" >        try {</span>
            const created = <span class="cstat-no" title="statement not covered" >await createFood(trimmedFood);</span>
<span class="cstat-no" title="statement not covered" >            LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);</span>
<span class="cstat-no" title="statement not covered" >            setMasterFoods(<span class="fstat-no" title="function not covered" >pr</span>ev =&gt; <span class="cstat-no" title="statement not covered" >[...prev, created])</span>;</span>
<span class="cstat-no" title="statement not covered" >            setIsOverlayVisible(false); <span class="cstat-no" title="statement not covered" ></span>onFoodChange?.();</span>
<span class="cstat-no" title="statement not covered" >            Toast.show({ type: 'success', text1: t('foodListScreen.foodAdded', { foodName: created.name }), position: 'bottom' });</span>
<span class="cstat-no" title="statement not covered" >            setNewFood({ name: "", calories: 0, protein: 0, carbs: 0, fat: 0 });</span>
        } catch (error: any) { <span class="cstat-no" title="statement not covered" >Alert.alert(t('foodListScreen.errorCreate'), error.message || t('foodListScreen.errorCreateMessage'));</span>
        } finally { <span class="cstat-no" title="statement not covered" >setIsSaving(false); </span>}
    };
&nbsp;
    const handleUpdateFood = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (!editFood) <span class="cstat-no" title="statement not covered" >return;</span></span>
        const trimmedFood = <span class="cstat-no" title="statement not covered" >{ ...editFood, name: editFood.name.trim() };</span>
<span class="cstat-no" title="statement not covered" >        if (validateFood(trimmedFood)) { <span class="cstat-no" title="statement not covered" >Toast.show({ type: 'error', text1: t('foodListScreen.fixErrors'), position: 'bottom' }); <span class="cstat-no" title="statement not covered" ></span>return; </span>}</span>
<span class="cstat-no" title="statement not covered" >        setIsSaving(true);</span>
<span class="cstat-no" title="statement not covered" >        try {</span>
            const updated = <span class="cstat-no" title="statement not covered" >await updateFood(trimmedFood);</span>
<span class="cstat-no" title="statement not covered" >            LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);</span>
<span class="cstat-no" title="statement not covered" >            setMasterFoods(<span class="fstat-no" title="function not covered" >pr</span>ev =&gt; <span class="cstat-no" title="statement not covered" >prev.map(<span class="fstat-no" title="function not covered" >f </span>=&gt; (<span class="cstat-no" title="statement not covered" >f.id === updated.id ? updated : f)</span>))</span>;</span>
<span class="cstat-no" title="statement not covered" >            setIsOverlayVisible(false); <span class="cstat-no" title="statement not covered" ></span>onFoodChange?.();</span>
<span class="cstat-no" title="statement not covered" >            Toast.show({ type: 'success', text1: t('foodListScreen.foodUpdated', { foodName: updated.name }), position: 'bottom' });</span>
<span class="cstat-no" title="statement not covered" >            setEditFood(null);</span>
        } catch (error: any) { <span class="cstat-no" title="statement not covered" >Alert.alert(t('foodListScreen.errorUpdate'), error.message || t('foodListScreen.errorUpdateMessage'));</span>
        } finally { <span class="cstat-no" title="statement not covered" >setIsSaving(false); </span>}
    };
    
    const handleShareFood = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync (foodToShare: Food) =&gt; {</span>
        const foodDataPayload: SharedFoodData = <span class="cstat-no" title="statement not covered" >{</span>
            name: foodToShare.name, calories: foodToShare.calories, protein: foodToShare.protein,
            carbs: foodToShare.carbs, fat: foodToShare.fat,
        };
<span class="cstat-no" title="statement not covered" >        try {</span>
            const jsonString = <span class="cstat-no" title="statement not covered" >JSON.stringify(foodDataPayload);</span>
            const utf8Bytes = <span class="cstat-no" title="statement not covered" >new TextEncoder().encode(jsonString);</span>
            let binaryString = <span class="cstat-no" title="statement not covered" >'';</span>
<span class="cstat-no" title="statement not covered" >            utf8Bytes.forEach(<span class="fstat-no" title="function not covered" >(b</span>yte) =&gt; { <span class="cstat-no" title="statement not covered" >binaryString += String.fromCharCode(byte); </span>});</span>
            const base64Data = <span class="cstat-no" title="statement not covered" >btoa(binaryString).replace(/\+/g, '-').replace(/\//g, '_').replace(/=/g, '');</span>
            const backendBaseUrl = <span class="cstat-no" title="statement not covered" >getBackendShareBaseUrl();</span>
            const shareUrl = <span class="cstat-no" title="statement not covered" >`${backendBaseUrl}/share/food?data=${base64Data}`;</span>
<span class="cstat-no" title="statement not covered" >            await Share.share({ message: shareUrl, title: t('foodListScreen.shareFoodTitle', {foodName: foodToShare.name}), });</span>
        } catch (error) { <span class="cstat-no" title="statement not covered" >Alert.alert(t('foodListScreen.shareErrorTitle'), t('foodListScreen.shareErrorMessage')); </span>}
    }, [t]);
&nbsp;
    const handleInputChange = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(k</span>ey: keyof Omit&lt;Food, "id" | "createdAt"&gt;, value: string, isEdit: boolean) =&gt; {</span>
        const numericKeys: (keyof Omit&lt;Food, "id" | "createdAt"&gt;)[] = <span class="cstat-no" title="statement not covered" >['calories', 'protein', 'carbs', 'fat'];</span>
        let processedValue: string | number = <span class="cstat-no" title="statement not covered" >value;</span>
<span class="cstat-no" title="statement not covered" >        if (numericKeys.includes(key)) {</span>
<span class="cstat-no" title="statement not covered" >            if (value === "" || value === ".") { <span class="cstat-no" title="statement not covered" >processedValue = value; </span>}</span>
            else { const cleaned = <span class="cstat-no" title="statement not covered" >value.replace(/[^0-9.]/g, "").replace(/(\..*)\./g, "$1");</span>
<span class="cstat-no" title="statement not covered" >                   if (cleaned === "" || !isNaN(parseFloat(cleaned))) <span class="cstat-no" title="statement not covered" >processedValue = cleaned; </span>else <span class="cstat-no" title="statement not covered" >return; </span></span>}
        }
        const updateState = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(p</span>revState: any) =&gt; {</span>
            let finalValue: string | number = <span class="cstat-no" title="statement not covered" >numericKeys.includes(key) ? ((processedValue === "" || processedValue === ".") ? 0 : parseFloat(processedValue as string) || 0) : processedValue;</span>
<span class="cstat-no" title="statement not covered" >            return { ...prevState, [key]: finalValue };</span>
        };
<span class="cstat-no" title="statement not covered" >        if (isEdit) <span class="cstat-no" title="statement not covered" >setEditFood(updateState); </span>else <span class="cstat-no" title="statement not covered" >setNewFood(updateState);</span></span>
    };
    
    const setFoodIconForName = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >(n</span>ame: string, icon: string | null) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        setFoodIcons(<span class="fstat-no" title="function not covered" >pr</span>ev =&gt; {</span>
<span class="cstat-no" title="statement not covered" >            if (prev[name] === icon) <span class="cstat-no" title="statement not covered" >return prev;</span></span>
<span class="cstat-no" title="statement not covered" >            return { ...prev, [name]: icon };</span>
        });
    }, []);
&nbsp;
<span class="cstat-no" title="statement not covered" >    if (isLoading) {</span>
<span class="cstat-no" title="statement not covered" >        return (</span>
            &lt;SafeAreaView style={styles.centeredLoader} edges={['top', 'left', 'right']}&gt;
                &lt;ActivityIndicator size="large" color={theme.colors.primary} /&gt;
                &lt;Text style={styles.loadingText}&gt;{t('foodListScreen.loadingFoods')}&lt;/Text&gt;
            &lt;/SafeAreaView&gt;
        );
    }
    
<span class="cstat-no" title="statement not covered" >    return (</span>
        &lt;SafeAreaView style={styles.container} edges={['top', 'left', 'right']}&gt;
            &lt;SearchBar
                placeholder={t('foodListScreen.searchPlaceholder')}
                onChangeText={setSearch}
                value={search}
                platform="default"
                containerStyle={styles.searchBarContainer}
                inputContainerStyle={styles.searchBarInputContainer}
                inputStyle={styles.searchInputStyle}
                onClear={<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >setSearch('')}</span>
                lightTheme={theme.mode === 'light'}
                round
            /&gt;
            &lt;View style={styles.controlsContainer}&gt;
                &lt;Text style={styles.resultsCount}&gt;{`${displayedFoods.length} foods`}&lt;/Text&gt;
                
                &lt;TouchableOpacity ref={sortButtonRef} style={styles.sortButton} onPress={toggleSortMenu}&gt;
                    &lt;RNEIcon name="sort" type="material-community" size={18} color={theme.colors.primary} /&gt;
                    &lt;Text style={styles.sortButtonText}&gt;{sortOptions[sortIndex].label}&lt;/Text&gt;
                &lt;/TouchableOpacity&gt;
&nbsp;
                &lt;Overlay
                    isVisible={isSortMenuVisible}
                    onBackdropPress={toggleSortMenu}
                    overlayStyle={[styles.sortOverlay, { top: sortButtonPosition.y + sortButtonPosition.height, left: I18nManager.isRTL ? undefined : sortButtonPosition.x, right: I18nManager.isRTL ? (StyleSheet.absoluteFillObject.right || 0) + 15 : undefined }]}
                &gt;
                    &lt;View&gt;
                        {sortOptions.map(<span class="fstat-no" title="function not covered" >(o</span>ption, index) =&gt; (
<span class="cstat-no" title="statement not covered" >                            &lt;TouchableOpacity key={option.value} style={styles.sortMenuItem} onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >handleSortChange(index)}</span>&gt;</span>
                                &lt;Text style={styles.sortMenuText}&gt;{option.label}&lt;/Text&gt;
                                {sortIndex === index &amp;&amp; &lt;RNEIcon name="check" type="material-community" size={20} color={theme.colors.primary} /&gt;}
                            &lt;/TouchableOpacity&gt;
                        ))}
                    &lt;/View&gt;
                &lt;/Overlay&gt;
&nbsp;
            &lt;/View&gt;
            &lt;FlatList
                data={displayedFoods}
                keyExtractor={<span class="fstat-no" title="function not covered" >(i</span>tem) =&gt; <span class="cstat-no" title="statement not covered" >item.id}</span>
                renderItem={<span class="fstat-no" title="function not covered" >({</span> item }) =&gt; (
<span class="cstat-no" title="statement not covered" >                    &lt;FoodItem</span>
                        food={item}
                        onEdit={toggleOverlay}
                        onDelete={handleDeleteFood}
                        onQuickAdd={handleQuickAdd}
                        onShare={handleShareFood}
                        foodIconUrl={foodIcons[item.name]}
                        setFoodIconForName={setFoodIconForName}
                    /&gt;
                )}
                ListEmptyComponent={
                    &lt;View style={styles.emptyListContainer}&gt;
                        &lt;RNEIcon name="nutrition-outline" type="ionicon" size={50} color={theme.colors.grey3} /&gt;
                        &lt;Text style={styles.emptyListText}&gt;
                            {search.trim() ? t('foodListScreen.noResults', { searchTerm: search.trim() }) : t('foodListScreen.emptyLibrary')}
                        &lt;/Text&gt;
                        {!search.trim() &amp;&amp; &lt;Text style={styles.emptyListSubText}&gt;{t('foodListScreen.emptyLibraryHint')}&lt;/Text&gt;}
                    &lt;/View&gt;
                }
                contentContainerStyle={displayedFoods.length === 0 ? styles.listContentContainerEmpty : styles.listContentContainer}
                keyboardShouldPersistTaps="handled"
                extraData={{ foodIcons, masterFoodsLength: masterFoods.length, sortOption }}
            /&gt;
            &lt;FAB
                icon={&lt;RNEIcon name="add" color={theme.colors.white} /&gt;}
                color={theme.colors.primary}
                onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >!isSaving &amp;&amp; toggleOverlay()}</span>
                placement="right"
                size="large"
                style={styles.fab}
                disabled={isSaving}
            /&gt;
            {isOverlayVisible &amp;&amp; &lt;AddFoodModal
                isVisible={isOverlayVisible}
                toggleOverlay={<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >!isSaving &amp;&amp; setIsOverlayVisible(false)} </span>
                newFood={newFood}
                editFood={editFood}
                errors={errors}
                handleInputChange={handleInputChange}
                handleCreateFood={handleCreateFood}
                handleUpdateFood={handleUpdateFood}
                validateFood={validateFood}
                setErrors={setErrors}
            /&gt;}
        &lt;/SafeAreaView&gt;
    );
};
&nbsp;
const useStyles = <span class="cstat-no" title="statement not covered" >makeStyles(<span class="fstat-no" title="function not covered" >(t</span>heme) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
    container: { flex: 1, backgroundColor: theme.colors.background, },
    centeredLoader: { flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: theme.colors.background, },
    loadingText: { marginTop: 15, color: theme.colors.grey1, fontSize: 16, },
    emptyListContainer: { flex: 1, alignItems: 'center', justifyContent: 'center', padding: 30, marginTop: 20, },
    emptyListText: { fontSize: 17, color: theme.colors.grey2, textAlign: 'center', marginTop: 15, },
    emptyListSubText: { fontSize: 14, color: theme.colors.grey3, textAlign: 'center', marginTop: 8, },
    searchBarContainer: {
        backgroundColor: 'transparent', borderBottomColor: 'transparent', borderTopColor: 'transparent',
        paddingHorizontal: 10, paddingTop: 8, paddingBottom: 5,
    },
    searchBarInputContainer: { backgroundColor: theme.colors.searchBg || theme.colors.grey5, },
    searchInputStyle: { color: theme.colors.text, fontSize: 15, textAlign: I18nManager.isRTL ? 'right' : 'left', },
    controlsContainer: {
        flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between', paddingHorizontal: 15,
        paddingBottom: 12, borderBottomWidth: StyleSheet.hairlineWidth, borderBottomColor: theme.colors.divider,
    },
    resultsCount: { color: theme.colors.grey2, fontWeight: '600', fontSize: 14, },
    sortButton: {
        flexDirection: 'row',
        alignItems: 'center',
        paddingVertical: 6,
        paddingHorizontal: 12,
        borderRadius: 20,
        backgroundColor: theme.colors.primaryLight,
    },
    sortButtonText: {
        color: theme.colors.primary,
        fontWeight: 'bold',
        fontSize: 14,
        marginLeft: 6,
    },
    sortOverlay: {
        position: 'absolute',
        borderRadius: 8,
        padding: 0,
        backgroundColor: theme.colors.card,
        elevation: 5,
        shadowColor: theme.colors.black,
        shadowOpacity: 0.2,
        shadowRadius: 5,
        shadowOffset: { width: 0, height: 3 },
    },
    sortMenuItem: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        paddingVertical: 12,
        paddingHorizontal: 16,
        borderBottomWidth: StyleSheet.hairlineWidth,
        borderBottomColor: theme.colors.divider,
        minWidth: 150,
    },
    sortMenuText: {
        color: theme.colors.text,
        fontSize: 16,
    },
    listContentContainer: { paddingBottom: 80, },
    listContentContainerEmpty: { flexGrow: 1, justifyContent: 'center', },
    fab: {
        position: 'absolute', margin: 16, right: I18nManager.isRTL ? undefined : 10,
        left: I18nManager.isRTL ? 10 : undefined, bottom: 10,
    },
}));
&nbsp;
export default FoodListScreen;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END FoodListScreen.tsx.html ----------


---------- ForgotPasswordScreen.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for screens/ForgotPasswordScreen.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">screens</a> ForgotPasswordScreen.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/19</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/2</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/5</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/19</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/screens/ForgotPasswordScreen.tsx
import React, { useState } from 'react';
import { View, StyleSheet, Alert, TouchableOpacity, SafeAreaView } from 'react-native';
import { Input, Button, Text, Icon, useTheme } from '@rneui/themed';
import { useNavigation } from '@react-navigation/native';
import { NativeStackNavigationProp } from '@react-navigation/native-stack';
import { AuthStackParamList } from '../navigation/AppNavigator';
import { requestPasswordReset } from '../services/authService';
import { t } from '../localization/i18n';
&nbsp;
type ForgotPasswordScreenNavigationProp = NativeStackNavigationProp&lt;AuthStackParamList, 'ForgotPassword'&gt;;
&nbsp;
const ForgotPasswordScreen: React.FC = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
    const [email, setEmail] = <span class="cstat-no" title="statement not covered" >useState('');</span>
    const [isLoading, setIsLoading] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
    const navigation = <span class="cstat-no" title="statement not covered" >useNavigation&lt;ForgotPasswordScreenNavigationProp&gt;();</span>
    const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
&nbsp;
    const handleSendLink = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (!email.trim()) {</span>
<span class="cstat-no" title="statement not covered" >            Alert.alert('Email Required', 'Please enter your email address.');</span>
<span class="cstat-no" title="statement not covered" >            return;</span>
        }
<span class="cstat-no" title="statement not covered" >        setIsLoading(true);</span>
<span class="cstat-no" title="statement not covered" >        try {</span>
            const response = <span class="cstat-no" title="statement not covered" >await requestPasswordReset(email);</span>
<span class="cstat-no" title="statement not covered" >            Alert.alert(</span>
                t('forgotPasswordScreen.alertSuccessTitle'),
                response.message,
                [{ text: 'OK', onPress: <span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >navigation.goBack() </span>}]
            );
        } catch (error: any) {
            // Error is handled and alerted by the authService
        } finally {
<span class="cstat-no" title="statement not covered" >            setIsLoading(false);</span>
        }
    };
&nbsp;
<span class="cstat-no" title="statement not covered" >    return (</span>
        &lt;SafeAreaView style={[styles.container, { backgroundColor: theme.colors.background }]}&gt;
            &lt;TouchableOpacity onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >navigation.goBack()}</span> style={styles.backButton}&gt;
                &lt;Icon name="arrow-left" type="material-community" color={theme.colors.text} size={28} /&gt;
            &lt;/TouchableOpacity&gt;
            &lt;View style={styles.content}&gt;
                &lt;Text h3 style={[styles.title, { color: theme.colors.text }]}&gt;
                    {t('forgotPasswordScreen.title')}
                &lt;/Text&gt;
                &lt;Text style={[styles.instructions, { color: theme.colors.grey2 }]}&gt;
                    {t('forgotPasswordScreen.instructions')}
                &lt;/Text&gt;
                &lt;Input
                    placeholder={t('forgotPasswordScreen.emailPlaceholder')}
                    leftIcon={&lt;Icon name="envelope" type="font-awesome" size={20} color={theme.colors.grey3} /&gt;}
                    onChangeText={setEmail}
                    value={email}
                    keyboardType="email-address"
                    autoCapitalize="none"
                    autoFocus={true}
                    containerStyle={styles.inputContainer}
                    inputStyle={{ color: theme.colors.text }}
                /&gt;
                &lt;Button
                    title={t('forgotPasswordScreen.buttonText')}
                    onPress={handleSendLink}
                    loading={isLoading}
                    buttonStyle={styles.button}
                    containerStyle={styles.buttonContainer}
                /&gt;
                 &lt;TouchableOpacity onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >navigation.navigate('Login')}</span>&gt;
                    &lt;Text style={[styles.switchText, { color: theme.colors.primary }]}&gt;
                        {t('forgotPasswordScreen.backToLogin')}
                    &lt;/Text&gt;
                &lt;/TouchableOpacity&gt;
            &lt;/View&gt;
        &lt;/SafeAreaView&gt;
    );
};
&nbsp;
const styles = <span class="cstat-no" title="statement not covered" >StyleSheet.create({</span>
    container: {
        flex: 1,
    },
    backButton: {
        position: 'absolute',
        top: 60,
        left: 20,
        zIndex: 1,
    },
    content: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        padding: 20,
    },
    title: {
        marginBottom: 15,
        textAlign: 'center',
    },
    instructions: {
        marginBottom: 30,
        textAlign: 'center',
        fontSize: 16,
        paddingHorizontal: 10,
    },
    inputContainer: {
        width: '100%',
        marginBottom: 10,
    },
    button: {
        height: 50,
        borderRadius: 8,
    },
    buttonContainer: {
        width: '100%',
        marginTop: 20,
    },
    switchText: {
        marginTop: 20,
        textDecorationLine: 'underline',
    },
});
&nbsp;
export default ForgotPasswordScreen;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END ForgotPasswordScreen.tsx.html ----------


---------- index.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for screens</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> screens</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/934</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/530</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/188</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/803</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <div class="pad1">
<table class="coverage-summary">
<thead>
<tr>
   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
</tr>
</thead>
<tbody><tr>
	<td class="file low" data-value="DailyEntryScreen.tsx"><a href="DailyEntryScreen.tsx.html">DailyEntryScreen.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="338" class="abs low">0/338</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="194" class="abs low">0/194</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="70" class="abs low">0/70</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="281" class="abs low">0/281</td>
	</tr>

<tr>
	<td class="file low" data-value="FoodListScreen.tsx"><a href="FoodListScreen.tsx.html">FoodListScreen.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="268" class="abs low">0/268</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="158" class="abs low">0/158</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="55" class="abs low">0/55</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="223" class="abs low">0/223</td>
	</tr>

<tr>
	<td class="file low" data-value="ForgotPasswordScreen.tsx"><a href="ForgotPasswordScreen.tsx.html">ForgotPasswordScreen.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="19" class="abs low">0/19</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="2" class="abs low">0/2</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="5" class="abs low">0/5</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="19" class="abs low">0/19</td>
	</tr>

<tr>
	<td class="file low" data-value="LoginScreen.tsx"><a href="LoginScreen.tsx.html">LoginScreen.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="23" class="abs low">0/23</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="8" class="abs low">0/8</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="5" class="abs low">0/5</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="23" class="abs low">0/23</td>
	</tr>

<tr>
	<td class="file low" data-value="QuestionnaireScreen.tsx"><a href="QuestionnaireScreen.tsx.html">QuestionnaireScreen.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="123" class="abs low">0/123</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="95" class="abs low">0/95</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="21" class="abs low">0/21</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="106" class="abs low">0/106</td>
	</tr>

<tr>
	<td class="file low" data-value="RegisterScreen.tsx"><a href="RegisterScreen.tsx.html">RegisterScreen.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="22" class="abs low">0/22</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="6" class="abs low">0/6</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="4" class="abs low">0/4</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="22" class="abs low">0/22</td>
	</tr>

<tr>
	<td class="file low" data-value="SettingsScreen.tsx"><a href="SettingsScreen.tsx.html">SettingsScreen.tsx</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="141" class="abs low">0/141</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="67" class="abs low">0/67</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="28" class="abs low">0/28</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="129" class="abs low">0/129</td>
	</tr>

</tbody>
</table>
</div>
                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END index.html ----------


---------- LoginScreen.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for screens/LoginScreen.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">screens</a> LoginScreen.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/23</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/8</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/5</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/23</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/screens/LoginScreen.tsx
import React, { useState } from 'react';
import { View, StyleSheet, Alert, TouchableOpacity, SafeAreaView } from 'react-native';
import { Input, Button, Text, Icon, useTheme } from '@rneui/themed';
import { useNavigation } from '@react-navigation/native';
import { NativeStackNavigationProp } from '@react-navigation/native-stack';
import { AuthStackParamList } from '../navigation/AppNavigator';
import { useAuth, AuthContextType } from '../context/AuthContext';
import { loginUser } from '../services/authService';
import { t } from '../localization/i18n';
&nbsp;
type LoginScreenNavigationProp = NativeStackNavigationProp&lt;AuthStackParamList, 'Login'&gt;;
&nbsp;
const LoginScreen: React.FC = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
    const [email, setEmail] = <span class="cstat-no" title="statement not covered" >useState('');</span>
    const [password, setPassword] = <span class="cstat-no" title="statement not covered" >useState('');</span>
    const [isLoading, setIsLoading] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
    const [isPasswordVisible, setIsPasswordVisible] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
    const navigation = <span class="cstat-no" title="statement not covered" >useNavigation&lt;LoginScreenNavigationProp&gt;();</span>
    const { login } = <span class="cstat-no" title="statement not covered" >useAuth() as AuthContextType;</span>
    const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
&nbsp;
    const handleLogin = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (!email || !password) {</span>
<span class="cstat-no" title="statement not covered" >            Alert.alert('Missing Fields', 'Please enter both email and password.');</span>
<span class="cstat-no" title="statement not covered" >            return;</span>
        }
<span class="cstat-no" title="statement not covered" >        setIsLoading(true);</span>
<span class="cstat-no" title="statement not covered" >        try {</span>
            const response = <span class="cstat-no" title="statement not covered" >await loginUser(email, password);</span>
<span class="cstat-no" title="statement not covered" >            if (response.access_token) {</span>
<span class="cstat-no" title="statement not covered" >                await login(response);</span>
            }
        } catch (error: any) {
            // Error is handled and alerted by the authService
        } finally {
<span class="cstat-no" title="statement not covered" >            setIsLoading(false);</span>
        }
    };
&nbsp;
<span class="cstat-no" title="statement not covered" >    return (</span>
        &lt;SafeAreaView style={[styles.container, { backgroundColor: theme.colors.background }]}&gt;
            &lt;Text h2 style={[styles.title, { color: theme.colors.text }]}&gt;Welcome Back&lt;/Text&gt;
            &lt;Input
                placeholder="Email"
                leftIcon={&lt;Icon name="envelope" type="font-awesome" size={20} color={theme.colors.grey3} /&gt;}
                onChangeText={setEmail}
                value={email}
                keyboardType="email-address"
                autoCapitalize="none"
                containerStyle={styles.inputContainer}
                inputStyle={{ color: theme.colors.text }}
            /&gt;
            &lt;Input
                placeholder="Password"
                leftIcon={&lt;Icon name="lock" type="font-awesome" size={24} color={theme.colors.grey3} /&gt;}
                rightIcon={
                    &lt;Icon 
                        name={isPasswordVisible ? 'eye-slash' : 'eye'} 
                        type="font-awesome" 
                        color={theme.colors.grey3}
                        onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >setIsPasswordVisible(!isPasswordVisible)}</span>
                    /&gt;
                }
                onChangeText={setPassword}
                value={password}
                secureTextEntry={!isPasswordVisible}
                containerStyle={styles.inputContainer}
                inputStyle={{ color: theme.colors.text }}
            /&gt;
            &lt;Button
                title="Login"
                onPress={handleLogin}
                loading={isLoading}
                buttonStyle={styles.button}
                containerStyle={styles.buttonContainer}
            /&gt;
            &lt;TouchableOpacity onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >navigation.navigate('ForgotPassword')}</span>&gt;
                &lt;Text style={[styles.forgotPassword, { color: theme.colors.secondary }]}&gt;
                    {t('forgotPasswordScreen.forgotPasswordLink')}
                &lt;/Text&gt;
            &lt;/TouchableOpacity&gt;
            &lt;TouchableOpacity onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >navigation.navigate('Register')}</span>&gt;
                &lt;Text style={[styles.switchText, { color: theme.colors.primary }]}&gt;Don't have an account? Sign Up&lt;/Text&gt;
            &lt;/TouchableOpacity&gt;
        &lt;/SafeAreaView&gt;
    );
};
&nbsp;
const styles = <span class="cstat-no" title="statement not covered" >StyleSheet.create({</span>
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        padding: 20,
    },
    title: {
        marginBottom: 30,
    },
    inputContainer: {
        width: '100%',
        marginBottom: 10,
    },
    button: {
        height: 50,
        borderRadius: 8,
    },
    buttonContainer: {
        width: '100%',
        marginTop: 20,
    },
    forgotPassword: {
        marginTop: 15,
        textAlign: 'center'
    },
    switchText: {
        marginTop: 20,
        textDecorationLine: 'underline',
    },
});
&nbsp;
export default LoginScreen;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END LoginScreen.tsx.html ----------


---------- QuestionnaireScreen.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for screens/QuestionnaireScreen.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">screens</a> QuestionnaireScreen.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/123</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/95</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/21</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/106</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a>
<a name='L128'></a><a href='#L128'>128</a>
<a name='L129'></a><a href='#L129'>129</a>
<a name='L130'></a><a href='#L130'>130</a>
<a name='L131'></a><a href='#L131'>131</a>
<a name='L132'></a><a href='#L132'>132</a>
<a name='L133'></a><a href='#L133'>133</a>
<a name='L134'></a><a href='#L134'>134</a>
<a name='L135'></a><a href='#L135'>135</a>
<a name='L136'></a><a href='#L136'>136</a>
<a name='L137'></a><a href='#L137'>137</a>
<a name='L138'></a><a href='#L138'>138</a>
<a name='L139'></a><a href='#L139'>139</a>
<a name='L140'></a><a href='#L140'>140</a>
<a name='L141'></a><a href='#L141'>141</a>
<a name='L142'></a><a href='#L142'>142</a>
<a name='L143'></a><a href='#L143'>143</a>
<a name='L144'></a><a href='#L144'>144</a>
<a name='L145'></a><a href='#L145'>145</a>
<a name='L146'></a><a href='#L146'>146</a>
<a name='L147'></a><a href='#L147'>147</a>
<a name='L148'></a><a href='#L148'>148</a>
<a name='L149'></a><a href='#L149'>149</a>
<a name='L150'></a><a href='#L150'>150</a>
<a name='L151'></a><a href='#L151'>151</a>
<a name='L152'></a><a href='#L152'>152</a>
<a name='L153'></a><a href='#L153'>153</a>
<a name='L154'></a><a href='#L154'>154</a>
<a name='L155'></a><a href='#L155'>155</a>
<a name='L156'></a><a href='#L156'>156</a>
<a name='L157'></a><a href='#L157'>157</a>
<a name='L158'></a><a href='#L158'>158</a>
<a name='L159'></a><a href='#L159'>159</a>
<a name='L160'></a><a href='#L160'>160</a>
<a name='L161'></a><a href='#L161'>161</a>
<a name='L162'></a><a href='#L162'>162</a>
<a name='L163'></a><a href='#L163'>163</a>
<a name='L164'></a><a href='#L164'>164</a>
<a name='L165'></a><a href='#L165'>165</a>
<a name='L166'></a><a href='#L166'>166</a>
<a name='L167'></a><a href='#L167'>167</a>
<a name='L168'></a><a href='#L168'>168</a>
<a name='L169'></a><a href='#L169'>169</a>
<a name='L170'></a><a href='#L170'>170</a>
<a name='L171'></a><a href='#L171'>171</a>
<a name='L172'></a><a href='#L172'>172</a>
<a name='L173'></a><a href='#L173'>173</a>
<a name='L174'></a><a href='#L174'>174</a>
<a name='L175'></a><a href='#L175'>175</a>
<a name='L176'></a><a href='#L176'>176</a>
<a name='L177'></a><a href='#L177'>177</a>
<a name='L178'></a><a href='#L178'>178</a>
<a name='L179'></a><a href='#L179'>179</a>
<a name='L180'></a><a href='#L180'>180</a>
<a name='L181'></a><a href='#L181'>181</a>
<a name='L182'></a><a href='#L182'>182</a>
<a name='L183'></a><a href='#L183'>183</a>
<a name='L184'></a><a href='#L184'>184</a>
<a name='L185'></a><a href='#L185'>185</a>
<a name='L186'></a><a href='#L186'>186</a>
<a name='L187'></a><a href='#L187'>187</a>
<a name='L188'></a><a href='#L188'>188</a>
<a name='L189'></a><a href='#L189'>189</a>
<a name='L190'></a><a href='#L190'>190</a>
<a name='L191'></a><a href='#L191'>191</a>
<a name='L192'></a><a href='#L192'>192</a>
<a name='L193'></a><a href='#L193'>193</a>
<a name='L194'></a><a href='#L194'>194</a>
<a name='L195'></a><a href='#L195'>195</a>
<a name='L196'></a><a href='#L196'>196</a>
<a name='L197'></a><a href='#L197'>197</a>
<a name='L198'></a><a href='#L198'>198</a>
<a name='L199'></a><a href='#L199'>199</a>
<a name='L200'></a><a href='#L200'>200</a>
<a name='L201'></a><a href='#L201'>201</a>
<a name='L202'></a><a href='#L202'>202</a>
<a name='L203'></a><a href='#L203'>203</a>
<a name='L204'></a><a href='#L204'>204</a>
<a name='L205'></a><a href='#L205'>205</a>
<a name='L206'></a><a href='#L206'>206</a>
<a name='L207'></a><a href='#L207'>207</a>
<a name='L208'></a><a href='#L208'>208</a>
<a name='L209'></a><a href='#L209'>209</a>
<a name='L210'></a><a href='#L210'>210</a>
<a name='L211'></a><a href='#L211'>211</a>
<a name='L212'></a><a href='#L212'>212</a>
<a name='L213'></a><a href='#L213'>213</a>
<a name='L214'></a><a href='#L214'>214</a>
<a name='L215'></a><a href='#L215'>215</a>
<a name='L216'></a><a href='#L216'>216</a>
<a name='L217'></a><a href='#L217'>217</a>
<a name='L218'></a><a href='#L218'>218</a>
<a name='L219'></a><a href='#L219'>219</a>
<a name='L220'></a><a href='#L220'>220</a>
<a name='L221'></a><a href='#L221'>221</a>
<a name='L222'></a><a href='#L222'>222</a>
<a name='L223'></a><a href='#L223'>223</a>
<a name='L224'></a><a href='#L224'>224</a>
<a name='L225'></a><a href='#L225'>225</a>
<a name='L226'></a><a href='#L226'>226</a>
<a name='L227'></a><a href='#L227'>227</a>
<a name='L228'></a><a href='#L228'>228</a>
<a name='L229'></a><a href='#L229'>229</a>
<a name='L230'></a><a href='#L230'>230</a>
<a name='L231'></a><a href='#L231'>231</a>
<a name='L232'></a><a href='#L232'>232</a>
<a name='L233'></a><a href='#L233'>233</a>
<a name='L234'></a><a href='#L234'>234</a>
<a name='L235'></a><a href='#L235'>235</a>
<a name='L236'></a><a href='#L236'>236</a>
<a name='L237'></a><a href='#L237'>237</a>
<a name='L238'></a><a href='#L238'>238</a>
<a name='L239'></a><a href='#L239'>239</a>
<a name='L240'></a><a href='#L240'>240</a>
<a name='L241'></a><a href='#L241'>241</a>
<a name='L242'></a><a href='#L242'>242</a>
<a name='L243'></a><a href='#L243'>243</a>
<a name='L244'></a><a href='#L244'>244</a>
<a name='L245'></a><a href='#L245'>245</a>
<a name='L246'></a><a href='#L246'>246</a>
<a name='L247'></a><a href='#L247'>247</a>
<a name='L248'></a><a href='#L248'>248</a>
<a name='L249'></a><a href='#L249'>249</a>
<a name='L250'></a><a href='#L250'>250</a>
<a name='L251'></a><a href='#L251'>251</a>
<a name='L252'></a><a href='#L252'>252</a>
<a name='L253'></a><a href='#L253'>253</a>
<a name='L254'></a><a href='#L254'>254</a>
<a name='L255'></a><a href='#L255'>255</a>
<a name='L256'></a><a href='#L256'>256</a>
<a name='L257'></a><a href='#L257'>257</a>
<a name='L258'></a><a href='#L258'>258</a>
<a name='L259'></a><a href='#L259'>259</a>
<a name='L260'></a><a href='#L260'>260</a>
<a name='L261'></a><a href='#L261'>261</a>
<a name='L262'></a><a href='#L262'>262</a>
<a name='L263'></a><a href='#L263'>263</a>
<a name='L264'></a><a href='#L264'>264</a>
<a name='L265'></a><a href='#L265'>265</a>
<a name='L266'></a><a href='#L266'>266</a>
<a name='L267'></a><a href='#L267'>267</a>
<a name='L268'></a><a href='#L268'>268</a>
<a name='L269'></a><a href='#L269'>269</a>
<a name='L270'></a><a href='#L270'>270</a>
<a name='L271'></a><a href='#L271'>271</a>
<a name='L272'></a><a href='#L272'>272</a>
<a name='L273'></a><a href='#L273'>273</a>
<a name='L274'></a><a href='#L274'>274</a>
<a name='L275'></a><a href='#L275'>275</a>
<a name='L276'></a><a href='#L276'>276</a>
<a name='L277'></a><a href='#L277'>277</a>
<a name='L278'></a><a href='#L278'>278</a>
<a name='L279'></a><a href='#L279'>279</a>
<a name='L280'></a><a href='#L280'>280</a>
<a name='L281'></a><a href='#L281'>281</a>
<a name='L282'></a><a href='#L282'>282</a>
<a name='L283'></a><a href='#L283'>283</a>
<a name='L284'></a><a href='#L284'>284</a>
<a name='L285'></a><a href='#L285'>285</a>
<a name='L286'></a><a href='#L286'>286</a>
<a name='L287'></a><a href='#L287'>287</a>
<a name='L288'></a><a href='#L288'>288</a>
<a name='L289'></a><a href='#L289'>289</a>
<a name='L290'></a><a href='#L290'>290</a>
<a name='L291'></a><a href='#L291'>291</a>
<a name='L292'></a><a href='#L292'>292</a>
<a name='L293'></a><a href='#L293'>293</a>
<a name='L294'></a><a href='#L294'>294</a>
<a name='L295'></a><a href='#L295'>295</a>
<a name='L296'></a><a href='#L296'>296</a>
<a name='L297'></a><a href='#L297'>297</a>
<a name='L298'></a><a href='#L298'>298</a>
<a name='L299'></a><a href='#L299'>299</a>
<a name='L300'></a><a href='#L300'>300</a>
<a name='L301'></a><a href='#L301'>301</a>
<a name='L302'></a><a href='#L302'>302</a>
<a name='L303'></a><a href='#L303'>303</a>
<a name='L304'></a><a href='#L304'>304</a>
<a name='L305'></a><a href='#L305'>305</a>
<a name='L306'></a><a href='#L306'>306</a>
<a name='L307'></a><a href='#L307'>307</a>
<a name='L308'></a><a href='#L308'>308</a>
<a name='L309'></a><a href='#L309'>309</a>
<a name='L310'></a><a href='#L310'>310</a>
<a name='L311'></a><a href='#L311'>311</a>
<a name='L312'></a><a href='#L312'>312</a>
<a name='L313'></a><a href='#L313'>313</a>
<a name='L314'></a><a href='#L314'>314</a>
<a name='L315'></a><a href='#L315'>315</a>
<a name='L316'></a><a href='#L316'>316</a>
<a name='L317'></a><a href='#L317'>317</a>
<a name='L318'></a><a href='#L318'>318</a>
<a name='L319'></a><a href='#L319'>319</a>
<a name='L320'></a><a href='#L320'>320</a>
<a name='L321'></a><a href='#L321'>321</a>
<a name='L322'></a><a href='#L322'>322</a>
<a name='L323'></a><a href='#L323'>323</a>
<a name='L324'></a><a href='#L324'>324</a>
<a name='L325'></a><a href='#L325'>325</a>
<a name='L326'></a><a href='#L326'>326</a>
<a name='L327'></a><a href='#L327'>327</a>
<a name='L328'></a><a href='#L328'>328</a>
<a name='L329'></a><a href='#L329'>329</a>
<a name='L330'></a><a href='#L330'>330</a>
<a name='L331'></a><a href='#L331'>331</a>
<a name='L332'></a><a href='#L332'>332</a>
<a name='L333'></a><a href='#L333'>333</a>
<a name='L334'></a><a href='#L334'>334</a>
<a name='L335'></a><a href='#L335'>335</a>
<a name='L336'></a><a href='#L336'>336</a>
<a name='L337'></a><a href='#L337'>337</a>
<a name='L338'></a><a href='#L338'>338</a>
<a name='L339'></a><a href='#L339'>339</a>
<a name='L340'></a><a href='#L340'>340</a>
<a name='L341'></a><a href='#L341'>341</a>
<a name='L342'></a><a href='#L342'>342</a>
<a name='L343'></a><a href='#L343'>343</a>
<a name='L344'></a><a href='#L344'>344</a>
<a name='L345'></a><a href='#L345'>345</a>
<a name='L346'></a><a href='#L346'>346</a>
<a name='L347'></a><a href='#L347'>347</a>
<a name='L348'></a><a href='#L348'>348</a>
<a name='L349'></a><a href='#L349'>349</a>
<a name='L350'></a><a href='#L350'>350</a>
<a name='L351'></a><a href='#L351'>351</a>
<a name='L352'></a><a href='#L352'>352</a>
<a name='L353'></a><a href='#L353'>353</a>
<a name='L354'></a><a href='#L354'>354</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/screens/QuestionnaireScreen.tsx
import React, { useState, useCallback, useMemo } from 'react';
import { View, ScrollView, Alert, StyleSheet, I18nManager, Platform } from 'react-native';
import { Input, Button, Text, useTheme, makeStyles, CheckBox } from '@rneui/themed';
import { Picker } from '@react-native-picker/picker';
import { useNavigation } from '@react-navigation/native';
import { NativeStackNavigationProp } from '@react-navigation/native-stack';
import { QuestionnaireFormData, Sex, ActivityLevel, PrimaryGoal, GoalIntensity, CalculatedGoals } from '../types/questionnaire';
import { MacroType, Settings } from '../types/settings';
import { loadSettings, saveSettings } from '../services/storageService';
import i18n, { t } from '../localization/i18n';
import Toast from 'react-native-toast-message';
&nbsp;
type SettingsStackParamList = {
  SettingsScreen: undefined;
  QuestionnaireScreen: undefined;
};
&nbsp;
type QuestionnaireNavigationProp = NativeStackNavigationProp&lt;SettingsStackParamList, 'QuestionnaireScreen'&gt;;
&nbsp;
const QuestionnaireScreen: React.FC = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
  const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
  const styles = <span class="cstat-no" title="statement not covered" >useStyles();</span>
  const navigation = <span class="cstat-no" title="statement not covered" >useNavigation&lt;QuestionnaireNavigationProp&gt;();</span>
&nbsp;
  const [formData, setFormData] = <span class="cstat-no" title="statement not covered" >useState&lt;QuestionnaireFormData&gt;({</span>
    age: '',
    sex: '',
    height: '',
    weight: '',
    activityLevel: '',
    primaryGoal: '',
    goalIntensity: GoalIntensity.MODERATE, // Default intensity
  });
&nbsp;
  const [errors, setErrors] = <span class="cstat-no" title="statement not covered" >useState&lt;Partial&lt;Record&lt;keyof QuestionnaireFormData, string&gt;&gt;&gt;({});</span>
  const [isCalculating, setIsCalculating] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
&nbsp;
  const activityLevelOptions = <span class="cstat-no" title="statement not covered" >useMemo(<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >[</span></span>
    { label: t('questionnaireScreen.activityLevel.select'), value: '' },
    { label: t('questionnaireScreen.activityLevel.sedentary'), value: ActivityLevel.SEDENTARY },
    { label: t('questionnaireScreen.activityLevel.light'), value: ActivityLevel.LIGHT },
    { label: t('questionnaireScreen.activityLevel.moderate'), value: ActivityLevel.MODERATE },
    { label: t('questionnaireScreen.activityLevel.active'), value: ActivityLevel.ACTIVE },
    { label: t('questionnaireScreen.activityLevel.veryActive'), value: ActivityLevel.VERY_ACTIVE },
  ], [i18n.locale]);
&nbsp;
  const sexOptions = <span class="cstat-no" title="statement not covered" >useMemo(<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >[</span></span>
    { label: t('questionnaireScreen.sex.select'), value: '' },
    { label: t('questionnaireScreen.sex.male'), value: Sex.MALE },
    { label: t('questionnaireScreen.sex.female'), value: Sex.FEMALE },
  ], [i18n.locale]);
&nbsp;
  const primaryGoalOptions = <span class="cstat-no" title="statement not covered" >useMemo(<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >[</span></span>
    { label: t('questionnaireScreen.primaryGoal.select'), value: '' },
    { label: t('questionnaireScreen.primaryGoal.loseWeight'), value: PrimaryGoal.LOSE_WEIGHT },
    { label: t('questionnaireScreen.primaryGoal.maintainWeight'), value: PrimaryGoal.MAINTAIN_WEIGHT },
    { label: t('questionnaireScreen.primaryGoal.gainMuscle'), value: PrimaryGoal.GAIN_MUSCLE },
  ], [i18n.locale]);
&nbsp;
  const goalIntensityOptions = <span class="cstat-no" title="statement not covered" >useMemo(<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >[</span></span>
    { label: t('questionnaireScreen.goalIntensity.mild'), value: GoalIntensity.MILD },
    { label: t('questionnaireScreen.goalIntensity.moderate'), value: GoalIntensity.MODERATE },
    { label: t('questionnaireScreen.goalIntensity.aggressive'), value: GoalIntensity.AGGRESSIVE },
  ], [i18n.locale]);
&nbsp;
&nbsp;
  const handleInputChange = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(f</span>ield: keyof QuestionnaireFormData, value: any) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    setFormData(<span class="fstat-no" title="function not covered" >pr</span>ev =&gt; (<span class="cstat-no" title="statement not covered" >{ ...prev, [field]: value })</span>);</span>
<span class="cstat-no" title="statement not covered" >    if (errors[field]) {</span>
<span class="cstat-no" title="statement not covered" >      setErrors(<span class="fstat-no" title="function not covered" >pr</span>ev =&gt; (<span class="cstat-no" title="statement not covered" >{ ...prev, [field]: undefined })</span>);</span>
    }
  };
&nbsp;
  const validateForm = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span>: boolean =&gt; {</span>
    const newErrors: Partial&lt;Record&lt;keyof QuestionnaireFormData, string&gt;&gt; = <span class="cstat-no" title="statement not covered" >{};</span>
    const ageNum = <span class="cstat-no" title="statement not covered" >parseFloat(formData.age);</span>
    const heightNum = <span class="cstat-no" title="statement not covered" >parseFloat(formData.height);</span>
    const weightNum = <span class="cstat-no" title="statement not covered" >parseFloat(formData.weight);</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    if (!formData.age.trim() || isNaN(ageNum) || ageNum &lt;= 0 || ageNum &gt; 120) {</span>
<span class="cstat-no" title="statement not covered" >      newErrors.age = t('questionnaireScreen.validation.invalidAge');</span>
    }
<span class="cstat-no" title="statement not covered" >    if (formData.sex === '') {</span>
<span class="cstat-no" title="statement not covered" >      newErrors.sex = t('questionnaireScreen.validation.selectSex');</span>
    }
<span class="cstat-no" title="statement not covered" >    if (!formData.height.trim() || isNaN(heightNum) || heightNum &lt;= 50 || heightNum &gt; 250) {</span>
<span class="cstat-no" title="statement not covered" >      newErrors.height = t('questionnaireScreen.validation.invalidHeight');</span>
    }
<span class="cstat-no" title="statement not covered" >    if (!formData.weight.trim() || isNaN(weightNum) || weightNum &lt;= 20 || weightNum &gt; 300) {</span>
<span class="cstat-no" title="statement not covered" >      newErrors.weight = t('questionnaireScreen.validation.invalidWeight');</span>
    }
<span class="cstat-no" title="statement not covered" >    if (formData.activityLevel === '') {</span>
<span class="cstat-no" title="statement not covered" >      newErrors.activityLevel = t('questionnaireScreen.validation.selectActivityLevel');</span>
    }
<span class="cstat-no" title="statement not covered" >    if (formData.primaryGoal === '') {</span>
<span class="cstat-no" title="statement not covered" >      newErrors.primaryGoal = t('questionnaireScreen.validation.selectPrimaryGoal');</span>
    }
<span class="cstat-no" title="statement not covered" >    if (formData.primaryGoal !== PrimaryGoal.MAINTAIN_WEIGHT &amp;&amp; !formData.goalIntensity) {</span>
<span class="cstat-no" title="statement not covered" >        newErrors.goalIntensity = t('questionnaireScreen.validation.selectGoalIntensity');</span>
    }
&nbsp;
<span class="cstat-no" title="statement not covered" >    setErrors(newErrors);</span>
<span class="cstat-no" title="statement not covered" >    return Object.keys(newErrors).length === 0;</span>
  };
&nbsp;
  const calculateGoals = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span>: CalculatedGoals | null =&gt; {</span>
    const age = <span class="cstat-no" title="statement not covered" >parseFloat(formData.age);</span>
    const height = <span class="cstat-no" title="statement not covered" >parseFloat(formData.height);</span>
    const weight = <span class="cstat-no" title="statement not covered" >parseFloat(formData.weight);</span>
&nbsp;
    // BMR (Mifflin-St Jeor)
    let bmr: number;
<span class="cstat-no" title="statement not covered" >    if (formData.sex === Sex.MALE) {</span>
<span class="cstat-no" title="statement not covered" >      bmr = 10 * weight + 6.25 * height - 5 * age + 5;</span>
    } else {
<span class="cstat-no" title="statement not covered" >      bmr = 10 * weight + 6.25 * height - 5 * age - 161;</span>
    }
&nbsp;
    // TDEE
    let activityMultiplier = <span class="cstat-no" title="statement not covered" >1.2;</span>
<span class="cstat-no" title="statement not covered" >    switch (formData.activityLevel) {</span>
      case ActivityLevel.SEDENTARY: <span class="cstat-no" title="statement not covered" >activityMultiplier = 1.2; <span class="cstat-no" title="statement not covered" ></span>break;</span>
      case ActivityLevel.LIGHT: <span class="cstat-no" title="statement not covered" >activityMultiplier = 1.375; <span class="cstat-no" title="statement not covered" ></span>break;</span>
      case ActivityLevel.MODERATE: <span class="cstat-no" title="statement not covered" >activityMultiplier = 1.55; <span class="cstat-no" title="statement not covered" ></span>break;</span>
      case ActivityLevel.ACTIVE: <span class="cstat-no" title="statement not covered" >activityMultiplier = 1.725; <span class="cstat-no" title="statement not covered" ></span>break;</span>
      case ActivityLevel.VERY_ACTIVE: <span class="cstat-no" title="statement not covered" >activityMultiplier = 1.9; <span class="cstat-no" title="statement not covered" ></span>break;</span>
    }
    const tdee = <span class="cstat-no" title="statement not covered" >bmr * activityMultiplier;</span>
&nbsp;
    // Calorie Goal
    let calorieAdjustment = <span class="cstat-no" title="statement not covered" >0;</span>
<span class="cstat-no" title="statement not covered" >    if (formData.primaryGoal !== PrimaryGoal.MAINTAIN_WEIGHT) {</span>
<span class="cstat-no" title="statement not covered" >      switch (formData.goalIntensity) {</span>
        case GoalIntensity.MILD: <span class="cstat-no" title="statement not covered" >calorieAdjustment = (formData.primaryGoal === PrimaryGoal.LOSE_WEIGHT ? -300 : 250); <span class="cstat-no" title="statement not covered" ></span>break;</span>
        case GoalIntensity.MODERATE: <span class="cstat-no" title="statement not covered" >calorieAdjustment = (formData.primaryGoal === PrimaryGoal.LOSE_WEIGHT ? -500 : 400); <span class="cstat-no" title="statement not covered" ></span>break;</span>
        case GoalIntensity.AGGRESSIVE: <span class="cstat-no" title="statement not covered" >calorieAdjustment = (formData.primaryGoal === PrimaryGoal.LOSE_WEIGHT ? -700 : 600); <span class="cstat-no" title="statement not covered" ></span>break;</span>
      }
    }
    let calorieGoal = <span class="cstat-no" title="statement not covered" >tdee + calorieAdjustment;</span>
&nbsp;
    // Ensure calorie goal is not below minimums
    const minCalories = <span class="cstat-no" title="statement not covered" >formData.sex === Sex.FEMALE ? 1200 : 1500;</span>
<span class="cstat-no" title="statement not covered" >    if (calorieGoal &lt; minCalories) {</span>
<span class="cstat-no" title="statement not covered" >        calorieGoal = minCalories;</span>
<span class="cstat-no" title="statement not covered" >        Toast.show({ type: 'info', text1: t('questionnaireScreen.toast.minCaloriesAdjustedTitle'), text2: t('questionnaireScreen.toast.minCaloriesAdjustedMessage', { calories: minCalories }), position: 'bottom' });</span>
    }
<span class="cstat-no" title="statement not covered" >    if (formData.primaryGoal === PrimaryGoal.LOSE_WEIGHT &amp;&amp; calorieGoal &gt;= tdee) {</span>
<span class="cstat-no" title="statement not covered" >        calorieGoal = tdee - 100; </span>// Ensure at least a small deficit
    }
<span class="cstat-no" title="statement not covered" >    if (formData.primaryGoal === PrimaryGoal.GAIN_MUSCLE &amp;&amp; calorieGoal &lt;= tdee) {</span>
<span class="cstat-no" title="statement not covered" >        calorieGoal = tdee + 100; </span>// Ensure at least a small surplus
    }
&nbsp;
&nbsp;
    // Macros
    let proteinPerKg = <span class="cstat-no" title="statement not covered" >1.8;</span>
<span class="cstat-no" title="statement not covered" >    if (formData.primaryGoal === PrimaryGoal.GAIN_MUSCLE) <span class="cstat-no" title="statement not covered" >proteinPerKg = 2.0;</span></span>
<span class="cstat-no" title="statement not covered" >    if (age &gt; 65) <span class="cstat-no" title="statement not covered" >proteinPerKg = Math.max(1.2, proteinPerKg - 0.4); </span></span>// Adjust for older adults
&nbsp;
    const proteinGrams = <span class="cstat-no" title="statement not covered" >proteinPerKg * weight;</span>
    const proteinCalories = <span class="cstat-no" title="statement not covered" >proteinGrams * 4;</span>
&nbsp;
    const fatPercentage = <span class="cstat-no" title="statement not covered" >0.25;</span> // 25% of calories from fat
    const fatCalories = <span class="cstat-no" title="statement not covered" >calorieGoal * fatPercentage;</span>
    const fatGrams = <span class="cstat-no" title="statement not covered" >fatCalories / 9;</span>
&nbsp;
    const carbCalories = <span class="cstat-no" title="statement not covered" >calorieGoal - proteinCalories - fatCalories;</span>
    const carbGrams = <span class="cstat-no" title="statement not covered" >carbCalories / 4;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    return {</span>
      calories: Math.round(calorieGoal),
      protein: Math.round(proteinGrams),
      carbs: Math.round(carbGrams),
      fat: Math.round(fatGrams),
    };
  };
&nbsp;
  const handleSubmit = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (!validateForm()) {</span>
<span class="cstat-no" title="statement not covered" >      Toast.show({ type: 'error', text1: t('questionnaireScreen.validation.fixErrors'), position: 'bottom' });</span>
<span class="cstat-no" title="statement not covered" >      return;</span>
    }
<span class="cstat-no" title="statement not covered" >    setIsCalculating(true);</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
      const calculated = <span class="cstat-no" title="statement not covered" >calculateGoals();</span>
<span class="cstat-no" title="statement not covered" >      if (calculated) {</span>
        const currentSettings = <span class="cstat-no" title="statement not covered" >await loadSettings();</span>
        const updatedSettings: Settings = <span class="cstat-no" title="statement not covered" >{</span>
          ...currentSettings,
          dailyGoals: calculated,
        };
<span class="cstat-no" title="statement not covered" >        await saveSettings(updatedSettings);</span>
<span class="cstat-no" title="statement not covered" >        Toast.show({ type: 'success', text1: t('questionnaireScreen.toast.goalsCalculated'), position: 'bottom' });</span>
<span class="cstat-no" title="statement not covered" >        navigation.goBack();</span>
      } else {
<span class="cstat-no" title="statement not covered" >        Alert.alert(t('questionnaireScreen.error.calculationFailedTitle'), t('questionnaireScreen.error.calculationFailedMessage'));</span>
      }
    } catch (error) {
<span class="cstat-no" title="statement not covered" >      console.error("Error saving estimated goals:", error);</span>
<span class="cstat-no" title="statement not covered" >      Alert.alert(t('questionnaireScreen.error.genericSaveTitle'), t('questionnaireScreen.error.genericSaveMessage'));</span>
    } finally {
<span class="cstat-no" title="statement not covered" >      setIsCalculating(false);</span>
    }
  };
&nbsp;
  const renderPicker = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(</span></span>
    label: string,
    selectedValue: string | number,
    onValueChange: (itemValue: any, itemIndex: number) =&gt; void,
    items: { label: string, value: string | number }[],
    error?: string
  ) =&gt; (
<span class="cstat-no" title="statement not covered" >    &lt;View style={styles.inputContainer}&gt;</span>
      &lt;Text style={styles.label}&gt;{label}&lt;/Text&gt;
      &lt;View style={[styles.pickerWrapper, error ? styles.errorBorder : {}]}&gt;
        &lt;Picker
          selectedValue={selectedValue}
          onValueChange={onValueChange}
          style={[styles.picker, Platform.OS === 'android' ? { color: theme.colors.text, backgroundColor: theme.colors.background } : {}]}
          itemStyle={[styles.pickerItem, Platform.OS === 'ios' ? {color: theme.colors.text} : {}]}
          dropdownIconColor={theme.colors.text}
        &gt;
          {items.map(<span class="fstat-no" title="function not covered" >it</span>em =&gt; <span class="cstat-no" title="statement not covered" >&lt;Picker.Item key={item.value.toString()} label={item.label} value={item.value} /&gt;)</span>}
        &lt;/Picker&gt;
      &lt;/View&gt;
      {error &amp;&amp; &lt;Text style={styles.errorText}&gt;{error}&lt;/Text&gt;}
    &lt;/View&gt;
  );
&nbsp;
<span class="cstat-no" title="statement not covered" >  return (</span>
    &lt;ScrollView style={styles.container} contentContainerStyle={styles.scrollContentContainer} keyboardShouldPersistTaps="handled"&gt;
      &lt;Text h4 style={styles.title}&gt;{t('questionnaireScreen.title')}&lt;/Text&gt;
&nbsp;
      &lt;Input
        label={t('questionnaireScreen.ageLabel')}
        placeholder={t('questionnaireScreen.agePlaceholder')}
        keyboardType="numeric"
        value={formData.age}
        onChangeText={<span class="fstat-no" title="function not covered" >va</span>l =&gt; <span class="cstat-no" title="statement not covered" >handleInputChange('age', val)}</span>
        errorMessage={errors.age}
        inputStyle={{ textAlign: I18nManager.isRTL ? 'right' : 'left', color: theme.colors.text}}
        labelStyle={styles.label}
        errorStyle={styles.errorText}
        containerStyle={styles.inputContainer}
      /&gt;
&nbsp;
      {renderPicker(t('questionnaireScreen.sexLabel'), formData.sex, <span class="fstat-no" title="function not covered" >(v</span>al) =&gt; <span class="cstat-no" title="statement not covered" >handleInputChange('sex', val),</span> sexOptions, errors.sex)}
&nbsp;
      &lt;Input
        label={t('questionnaireScreen.heightLabel')}
        placeholder={t('questionnaireScreen.heightPlaceholder')}
        keyboardType="numeric"
        value={formData.height}
        onChangeText={<span class="fstat-no" title="function not covered" >va</span>l =&gt; <span class="cstat-no" title="statement not covered" >handleInputChange('height', val)}</span>
        errorMessage={errors.height}
        rightIcon={&lt;Text style={styles.unitText}&gt;cm&lt;/Text&gt;}
        inputStyle={{ textAlign: I18nManager.isRTL ? 'right' : 'left', color: theme.colors.text}}
        labelStyle={styles.label}
        errorStyle={styles.errorText}
        containerStyle={styles.inputContainer}
      /&gt;
&nbsp;
      &lt;Input
        label={t('questionnaireScreen.weightLabel')}
        placeholder={t('questionnaireScreen.weightPlaceholder')}
        keyboardType="numeric"
        value={formData.weight}
        onChangeText={<span class="fstat-no" title="function not covered" >va</span>l =&gt; <span class="cstat-no" title="statement not covered" >handleInputChange('weight', val)}</span>
        errorMessage={errors.weight}
        rightIcon={&lt;Text style={styles.unitText}&gt;kg&lt;/Text&gt;}
        inputStyle={{ textAlign: I18nManager.isRTL ? 'right' : 'left', color: theme.colors.text}}
        labelStyle={styles.label}
        errorStyle={styles.errorText}
        containerStyle={styles.inputContainer}
      /&gt;
&nbsp;
      {renderPicker(t('questionnaireScreen.activityLevelLabel'), formData.activityLevel, <span class="fstat-no" title="function not covered" >(v</span>al) =&gt; <span class="cstat-no" title="statement not covered" >handleInputChange('activityLevel', val),</span> activityLevelOptions, errors.activityLevel)}
      {renderPicker(t('questionnaireScreen.primaryGoalLabel'), formData.primaryGoal, <span class="fstat-no" title="function not covered" >(v</span>al) =&gt; <span class="cstat-no" title="statement not covered" >handleInputChange('primaryGoal', val),</span> primaryGoalOptions, errors.primaryGoal)}
&nbsp;
      {formData.primaryGoal &amp;&amp; formData.primaryGoal !== PrimaryGoal.MAINTAIN_WEIGHT &amp;&amp; (
        renderPicker(t('questionnaireScreen.goalIntensityLabel'), formData.goalIntensity || '', <span class="fstat-no" title="function not covered" >(v</span>al) =&gt; <span class="cstat-no" title="statement not covered" >handleInputChange('goalIntensity', val),</span> goalIntensityOptions, errors.goalIntensity)
      )}
&nbsp;
      &lt;Button
        title={t('questionnaireScreen.calculateButton')}
        onPress={handleSubmit}
        buttonStyle={styles.button}
        loading={isCalculating}
        disabled={isCalculating}
      /&gt;
    &lt;/ScrollView&gt;
  );
};
&nbsp;
const useStyles = <span class="cstat-no" title="statement not covered" >makeStyles(<span class="fstat-no" title="function not covered" >(t</span>heme) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
  container: {
    flex: 1,
    backgroundColor: theme.colors.background,
  },
  scrollContentContainer: {
    padding: 20,
    paddingBottom: 40,
  },
  title: {
    marginBottom: 20,
    textAlign: 'center',
    color: theme.colors.text,
  },
  inputContainer: {
    marginBottom: 15,
  },
  label: {
    color: theme.colors.secondary,
    fontWeight: 'bold',
    marginBottom: 5,
    fontSize: 16,
    textAlign: I18nManager.isRTL ? 'right' : 'left',
  },
  unitText: {
    color: theme.colors.secondary,
    fontSize: 16,
  },
  pickerWrapper: {
    borderColor: theme.colors.grey3,
    borderWidth: 1,
    borderRadius: 5,
    backgroundColor: theme.colors.background, // Ensure picker background matches
  },
  picker: {
    height: Platform.OS === 'ios' ? 120 : 50,
    width: '100%',
  },
  pickerItem: {
     // For iOS, text color is set here. Android uses picker's color prop.
     textAlign: I18nManager.isRTL ? 'right' : 'left',
  },
  errorText: {
    color: theme.colors.error,
    marginTop: 3,
    fontSize: 12,
    textAlign: I18nManager.isRTL ? 'right' : 'left',
  },
  errorBorder: {
    borderColor: theme.colors.error,
  },
  button: {
    marginTop: 20,
    backgroundColor: theme.colors.primary,
    borderRadius: 8,
  },
}));
&nbsp;
export default QuestionnaireScreen;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END QuestionnaireScreen.tsx.html ----------


---------- RegisterScreen.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for screens/RegisterScreen.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">screens</a> RegisterScreen.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/22</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/6</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/4</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/22</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/screens/RegisterScreen.tsx
import React, { useState } from 'react';
import { View, StyleSheet, Alert, TouchableOpacity, SafeAreaView } from 'react-native';
import { Input, Button, Text, Icon, useTheme } from '@rneui/themed';
import { useNavigation } from '@react-navigation/native';
import { NativeStackNavigationProp } from '@react-navigation/native-stack';
import { AuthStackParamList } from '../navigation/AppNavigator';
import { registerUser } from '../services/authService';
&nbsp;
type RegisterScreenNavigationProp = NativeStackNavigationProp&lt;AuthStackParamList, 'Register'&gt;;
&nbsp;
const RegisterScreen: React.FC = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
    const [email, setEmail] = <span class="cstat-no" title="statement not covered" >useState('');</span>
    const [password, setPassword] = <span class="cstat-no" title="statement not covered" >useState('');</span>
    const [isLoading, setIsLoading] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
    const navigation = <span class="cstat-no" title="statement not covered" >useNavigation&lt;RegisterScreenNavigationProp&gt;();</span>
    const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
&nbsp;
    const handleRegister = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (!email || !password) {</span>
<span class="cstat-no" title="statement not covered" >            Alert.alert('Missing Fields', 'Please fill in all fields.');</span>
<span class="cstat-no" title="statement not covered" >            return;</span>
        }
<span class="cstat-no" title="statement not covered" >        if (password.length &lt; 8) {</span>
<span class="cstat-no" title="statement not covered" >            Alert.alert('Password Too Short', 'Password must be at least 8 characters long.');</span>
<span class="cstat-no" title="statement not covered" >            return;</span>
        }
<span class="cstat-no" title="statement not covered" >        setIsLoading(true);</span>
<span class="cstat-no" title="statement not covered" >        try {</span>
            const response = <span class="cstat-no" title="statement not covered" >await registerUser(email, password);</span>
<span class="cstat-no" title="statement not covered" >            Alert.alert(</span>
                'Check Your Email',
                response.message,
                [{ text: 'OK', onPress: <span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >navigation.navigate('Login') </span>}]
            );
        } catch (error: any) {
            // Error is handled and alerted by the authService
        } finally {
<span class="cstat-no" title="statement not covered" >            setIsLoading(false);</span>
        }
    };
&nbsp;
<span class="cstat-no" title="statement not covered" >    return (</span>
        &lt;SafeAreaView style={[styles.container, { backgroundColor: theme.colors.background }]}&gt;
            &lt;Text h2 style={[styles.title, { color: theme.colors.text }]}&gt;Create Account&lt;/Text&gt;
            &lt;Input
                placeholder="Email"
                leftIcon={&lt;Icon name="envelope" type="font-awesome" size={20} color={theme.colors.grey3} /&gt;}
                onChangeText={setEmail}
                value={email}
                keyboardType="email-address"
                autoCapitalize="none"
                containerStyle={styles.inputContainer}
                inputStyle={{ color: theme.colors.text }}
            /&gt;
            &lt;Input
                placeholder="Password (min 8 characters)"
                leftIcon={&lt;Icon name="lock" type="font-awesome" size={24} color={theme.colors.grey3} /&gt;}
                onChangeText={setPassword}
                value={password}
                secureTextEntry
                containerStyle={styles.inputContainer}
                inputStyle={{ color: theme.colors.text }}
            /&gt;
            &lt;Button
                title="Register"
                onPress={handleRegister}
                loading={isLoading}
                buttonStyle={styles.button}
                containerStyle={styles.buttonContainer}
            /&gt;
            &lt;TouchableOpacity onPress={<span class="fstat-no" title="function not covered" >()</span> =&gt; <span class="cstat-no" title="statement not covered" >navigation.navigate('Login')}</span>&gt;
                &lt;Text style={[styles.switchText, { color: theme.colors.primary }]}&gt;Already have an account? Log In&lt;/Text&gt;
            &lt;/TouchableOpacity&gt;
        &lt;/SafeAreaView&gt;
    );
};
&nbsp;
const styles = <span class="cstat-no" title="statement not covered" >StyleSheet.create({</span>
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        padding: 20,
    },
    title: {
        marginBottom: 30,
    },
    inputContainer: {
        width: '100%',
        marginBottom: 10,
    },
    button: {
        height: 50,
        borderRadius: 8,
    },
    buttonContainer: {
        width: '100%',
        marginTop: 20,
    },
    switchText: {
        marginTop: 20,
        textDecorationLine: 'underline',
    },
});
&nbsp;
export default RegisterScreen;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END RegisterScreen.tsx.html ----------


---------- SettingsScreen.tsx.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for screens/SettingsScreen.tsx</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">screens</a> SettingsScreen.tsx</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/141</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/67</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/28</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/129</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a>
<a name='L128'></a><a href='#L128'>128</a>
<a name='L129'></a><a href='#L129'>129</a>
<a name='L130'></a><a href='#L130'>130</a>
<a name='L131'></a><a href='#L131'>131</a>
<a name='L132'></a><a href='#L132'>132</a>
<a name='L133'></a><a href='#L133'>133</a>
<a name='L134'></a><a href='#L134'>134</a>
<a name='L135'></a><a href='#L135'>135</a>
<a name='L136'></a><a href='#L136'>136</a>
<a name='L137'></a><a href='#L137'>137</a>
<a name='L138'></a><a href='#L138'>138</a>
<a name='L139'></a><a href='#L139'>139</a>
<a name='L140'></a><a href='#L140'>140</a>
<a name='L141'></a><a href='#L141'>141</a>
<a name='L142'></a><a href='#L142'>142</a>
<a name='L143'></a><a href='#L143'>143</a>
<a name='L144'></a><a href='#L144'>144</a>
<a name='L145'></a><a href='#L145'>145</a>
<a name='L146'></a><a href='#L146'>146</a>
<a name='L147'></a><a href='#L147'>147</a>
<a name='L148'></a><a href='#L148'>148</a>
<a name='L149'></a><a href='#L149'>149</a>
<a name='L150'></a><a href='#L150'>150</a>
<a name='L151'></a><a href='#L151'>151</a>
<a name='L152'></a><a href='#L152'>152</a>
<a name='L153'></a><a href='#L153'>153</a>
<a name='L154'></a><a href='#L154'>154</a>
<a name='L155'></a><a href='#L155'>155</a>
<a name='L156'></a><a href='#L156'>156</a>
<a name='L157'></a><a href='#L157'>157</a>
<a name='L158'></a><a href='#L158'>158</a>
<a name='L159'></a><a href='#L159'>159</a>
<a name='L160'></a><a href='#L160'>160</a>
<a name='L161'></a><a href='#L161'>161</a>
<a name='L162'></a><a href='#L162'>162</a>
<a name='L163'></a><a href='#L163'>163</a>
<a name='L164'></a><a href='#L164'>164</a>
<a name='L165'></a><a href='#L165'>165</a>
<a name='L166'></a><a href='#L166'>166</a>
<a name='L167'></a><a href='#L167'>167</a>
<a name='L168'></a><a href='#L168'>168</a>
<a name='L169'></a><a href='#L169'>169</a>
<a name='L170'></a><a href='#L170'>170</a>
<a name='L171'></a><a href='#L171'>171</a>
<a name='L172'></a><a href='#L172'>172</a>
<a name='L173'></a><a href='#L173'>173</a>
<a name='L174'></a><a href='#L174'>174</a>
<a name='L175'></a><a href='#L175'>175</a>
<a name='L176'></a><a href='#L176'>176</a>
<a name='L177'></a><a href='#L177'>177</a>
<a name='L178'></a><a href='#L178'>178</a>
<a name='L179'></a><a href='#L179'>179</a>
<a name='L180'></a><a href='#L180'>180</a>
<a name='L181'></a><a href='#L181'>181</a>
<a name='L182'></a><a href='#L182'>182</a>
<a name='L183'></a><a href='#L183'>183</a>
<a name='L184'></a><a href='#L184'>184</a>
<a name='L185'></a><a href='#L185'>185</a>
<a name='L186'></a><a href='#L186'>186</a>
<a name='L187'></a><a href='#L187'>187</a>
<a name='L188'></a><a href='#L188'>188</a>
<a name='L189'></a><a href='#L189'>189</a>
<a name='L190'></a><a href='#L190'>190</a>
<a name='L191'></a><a href='#L191'>191</a>
<a name='L192'></a><a href='#L192'>192</a>
<a name='L193'></a><a href='#L193'>193</a>
<a name='L194'></a><a href='#L194'>194</a>
<a name='L195'></a><a href='#L195'>195</a>
<a name='L196'></a><a href='#L196'>196</a>
<a name='L197'></a><a href='#L197'>197</a>
<a name='L198'></a><a href='#L198'>198</a>
<a name='L199'></a><a href='#L199'>199</a>
<a name='L200'></a><a href='#L200'>200</a>
<a name='L201'></a><a href='#L201'>201</a>
<a name='L202'></a><a href='#L202'>202</a>
<a name='L203'></a><a href='#L203'>203</a>
<a name='L204'></a><a href='#L204'>204</a>
<a name='L205'></a><a href='#L205'>205</a>
<a name='L206'></a><a href='#L206'>206</a>
<a name='L207'></a><a href='#L207'>207</a>
<a name='L208'></a><a href='#L208'>208</a>
<a name='L209'></a><a href='#L209'>209</a>
<a name='L210'></a><a href='#L210'>210</a>
<a name='L211'></a><a href='#L211'>211</a>
<a name='L212'></a><a href='#L212'>212</a>
<a name='L213'></a><a href='#L213'>213</a>
<a name='L214'></a><a href='#L214'>214</a>
<a name='L215'></a><a href='#L215'>215</a>
<a name='L216'></a><a href='#L216'>216</a>
<a name='L217'></a><a href='#L217'>217</a>
<a name='L218'></a><a href='#L218'>218</a>
<a name='L219'></a><a href='#L219'>219</a>
<a name='L220'></a><a href='#L220'>220</a>
<a name='L221'></a><a href='#L221'>221</a>
<a name='L222'></a><a href='#L222'>222</a>
<a name='L223'></a><a href='#L223'>223</a>
<a name='L224'></a><a href='#L224'>224</a>
<a name='L225'></a><a href='#L225'>225</a>
<a name='L226'></a><a href='#L226'>226</a>
<a name='L227'></a><a href='#L227'>227</a>
<a name='L228'></a><a href='#L228'>228</a>
<a name='L229'></a><a href='#L229'>229</a>
<a name='L230'></a><a href='#L230'>230</a>
<a name='L231'></a><a href='#L231'>231</a>
<a name='L232'></a><a href='#L232'>232</a>
<a name='L233'></a><a href='#L233'>233</a>
<a name='L234'></a><a href='#L234'>234</a>
<a name='L235'></a><a href='#L235'>235</a>
<a name='L236'></a><a href='#L236'>236</a>
<a name='L237'></a><a href='#L237'>237</a>
<a name='L238'></a><a href='#L238'>238</a>
<a name='L239'></a><a href='#L239'>239</a>
<a name='L240'></a><a href='#L240'>240</a>
<a name='L241'></a><a href='#L241'>241</a>
<a name='L242'></a><a href='#L242'>242</a>
<a name='L243'></a><a href='#L243'>243</a>
<a name='L244'></a><a href='#L244'>244</a>
<a name='L245'></a><a href='#L245'>245</a>
<a name='L246'></a><a href='#L246'>246</a>
<a name='L247'></a><a href='#L247'>247</a>
<a name='L248'></a><a href='#L248'>248</a>
<a name='L249'></a><a href='#L249'>249</a>
<a name='L250'></a><a href='#L250'>250</a>
<a name='L251'></a><a href='#L251'>251</a>
<a name='L252'></a><a href='#L252'>252</a>
<a name='L253'></a><a href='#L253'>253</a>
<a name='L254'></a><a href='#L254'>254</a>
<a name='L255'></a><a href='#L255'>255</a>
<a name='L256'></a><a href='#L256'>256</a>
<a name='L257'></a><a href='#L257'>257</a>
<a name='L258'></a><a href='#L258'>258</a>
<a name='L259'></a><a href='#L259'>259</a>
<a name='L260'></a><a href='#L260'>260</a>
<a name='L261'></a><a href='#L261'>261</a>
<a name='L262'></a><a href='#L262'>262</a>
<a name='L263'></a><a href='#L263'>263</a>
<a name='L264'></a><a href='#L264'>264</a>
<a name='L265'></a><a href='#L265'>265</a>
<a name='L266'></a><a href='#L266'>266</a>
<a name='L267'></a><a href='#L267'>267</a>
<a name='L268'></a><a href='#L268'>268</a>
<a name='L269'></a><a href='#L269'>269</a>
<a name='L270'></a><a href='#L270'>270</a>
<a name='L271'></a><a href='#L271'>271</a>
<a name='L272'></a><a href='#L272'>272</a>
<a name='L273'></a><a href='#L273'>273</a>
<a name='L274'></a><a href='#L274'>274</a>
<a name='L275'></a><a href='#L275'>275</a>
<a name='L276'></a><a href='#L276'>276</a>
<a name='L277'></a><a href='#L277'>277</a>
<a name='L278'></a><a href='#L278'>278</a>
<a name='L279'></a><a href='#L279'>279</a>
<a name='L280'></a><a href='#L280'>280</a>
<a name='L281'></a><a href='#L281'>281</a>
<a name='L282'></a><a href='#L282'>282</a>
<a name='L283'></a><a href='#L283'>283</a>
<a name='L284'></a><a href='#L284'>284</a>
<a name='L285'></a><a href='#L285'>285</a>
<a name='L286'></a><a href='#L286'>286</a>
<a name='L287'></a><a href='#L287'>287</a>
<a name='L288'></a><a href='#L288'>288</a>
<a name='L289'></a><a href='#L289'>289</a>
<a name='L290'></a><a href='#L290'>290</a>
<a name='L291'></a><a href='#L291'>291</a>
<a name='L292'></a><a href='#L292'>292</a>
<a name='L293'></a><a href='#L293'>293</a>
<a name='L294'></a><a href='#L294'>294</a>
<a name='L295'></a><a href='#L295'>295</a>
<a name='L296'></a><a href='#L296'>296</a>
<a name='L297'></a><a href='#L297'>297</a>
<a name='L298'></a><a href='#L298'>298</a>
<a name='L299'></a><a href='#L299'>299</a>
<a name='L300'></a><a href='#L300'>300</a>
<a name='L301'></a><a href='#L301'>301</a>
<a name='L302'></a><a href='#L302'>302</a>
<a name='L303'></a><a href='#L303'>303</a>
<a name='L304'></a><a href='#L304'>304</a>
<a name='L305'></a><a href='#L305'>305</a>
<a name='L306'></a><a href='#L306'>306</a>
<a name='L307'></a><a href='#L307'>307</a>
<a name='L308'></a><a href='#L308'>308</a>
<a name='L309'></a><a href='#L309'>309</a>
<a name='L310'></a><a href='#L310'>310</a>
<a name='L311'></a><a href='#L311'>311</a>
<a name='L312'></a><a href='#L312'>312</a>
<a name='L313'></a><a href='#L313'>313</a>
<a name='L314'></a><a href='#L314'>314</a>
<a name='L315'></a><a href='#L315'>315</a>
<a name='L316'></a><a href='#L316'>316</a>
<a name='L317'></a><a href='#L317'>317</a>
<a name='L318'></a><a href='#L318'>318</a>
<a name='L319'></a><a href='#L319'>319</a>
<a name='L320'></a><a href='#L320'>320</a>
<a name='L321'></a><a href='#L321'>321</a>
<a name='L322'></a><a href='#L322'>322</a>
<a name='L323'></a><a href='#L323'>323</a>
<a name='L324'></a><a href='#L324'>324</a>
<a name='L325'></a><a href='#L325'>325</a>
<a name='L326'></a><a href='#L326'>326</a>
<a name='L327'></a><a href='#L327'>327</a>
<a name='L328'></a><a href='#L328'>328</a>
<a name='L329'></a><a href='#L329'>329</a>
<a name='L330'></a><a href='#L330'>330</a>
<a name='L331'></a><a href='#L331'>331</a>
<a name='L332'></a><a href='#L332'>332</a>
<a name='L333'></a><a href='#L333'>333</a>
<a name='L334'></a><a href='#L334'>334</a>
<a name='L335'></a><a href='#L335'>335</a>
<a name='L336'></a><a href='#L336'>336</a>
<a name='L337'></a><a href='#L337'>337</a>
<a name='L338'></a><a href='#L338'>338</a>
<a name='L339'></a><a href='#L339'>339</a>
<a name='L340'></a><a href='#L340'>340</a>
<a name='L341'></a><a href='#L341'>341</a>
<a name='L342'></a><a href='#L342'>342</a>
<a name='L343'></a><a href='#L343'>343</a>
<a name='L344'></a><a href='#L344'>344</a>
<a name='L345'></a><a href='#L345'>345</a>
<a name='L346'></a><a href='#L346'>346</a>
<a name='L347'></a><a href='#L347'>347</a>
<a name='L348'></a><a href='#L348'>348</a>
<a name='L349'></a><a href='#L349'>349</a>
<a name='L350'></a><a href='#L350'>350</a>
<a name='L351'></a><a href='#L351'>351</a>
<a name='L352'></a><a href='#L352'>352</a>
<a name='L353'></a><a href='#L353'>353</a>
<a name='L354'></a><a href='#L354'>354</a>
<a name='L355'></a><a href='#L355'>355</a>
<a name='L356'></a><a href='#L356'>356</a>
<a name='L357'></a><a href='#L357'>357</a>
<a name='L358'></a><a href='#L358'>358</a>
<a name='L359'></a><a href='#L359'>359</a>
<a name='L360'></a><a href='#L360'>360</a>
<a name='L361'></a><a href='#L361'>361</a>
<a name='L362'></a><a href='#L362'>362</a>
<a name='L363'></a><a href='#L363'>363</a>
<a name='L364'></a><a href='#L364'>364</a>
<a name='L365'></a><a href='#L365'>365</a>
<a name='L366'></a><a href='#L366'>366</a>
<a name='L367'></a><a href='#L367'>367</a>
<a name='L368'></a><a href='#L368'>368</a>
<a name='L369'></a><a href='#L369'>369</a>
<a name='L370'></a><a href='#L370'>370</a>
<a name='L371'></a><a href='#L371'>371</a>
<a name='L372'></a><a href='#L372'>372</a>
<a name='L373'></a><a href='#L373'>373</a>
<a name='L374'></a><a href='#L374'>374</a>
<a name='L375'></a><a href='#L375'>375</a>
<a name='L376'></a><a href='#L376'>376</a>
<a name='L377'></a><a href='#L377'>377</a>
<a name='L378'></a><a href='#L378'>378</a>
<a name='L379'></a><a href='#L379'>379</a>
<a name='L380'></a><a href='#L380'>380</a>
<a name='L381'></a><a href='#L381'>381</a>
<a name='L382'></a><a href='#L382'>382</a>
<a name='L383'></a><a href='#L383'>383</a>
<a name='L384'></a><a href='#L384'>384</a>
<a name='L385'></a><a href='#L385'>385</a>
<a name='L386'></a><a href='#L386'>386</a>
<a name='L387'></a><a href='#L387'>387</a>
<a name='L388'></a><a href='#L388'>388</a>
<a name='L389'></a><a href='#L389'>389</a>
<a name='L390'></a><a href='#L390'>390</a>
<a name='L391'></a><a href='#L391'>391</a>
<a name='L392'></a><a href='#L392'>392</a>
<a name='L393'></a><a href='#L393'>393</a>
<a name='L394'></a><a href='#L394'>394</a>
<a name='L395'></a><a href='#L395'>395</a>
<a name='L396'></a><a href='#L396'>396</a>
<a name='L397'></a><a href='#L397'>397</a>
<a name='L398'></a><a href='#L398'>398</a>
<a name='L399'></a><a href='#L399'>399</a>
<a name='L400'></a><a href='#L400'>400</a>
<a name='L401'></a><a href='#L401'>401</a>
<a name='L402'></a><a href='#L402'>402</a>
<a name='L403'></a><a href='#L403'>403</a>
<a name='L404'></a><a href='#L404'>404</a>
<a name='L405'></a><a href='#L405'>405</a>
<a name='L406'></a><a href='#L406'>406</a>
<a name='L407'></a><a href='#L407'>407</a>
<a name='L408'></a><a href='#L408'>408</a>
<a name='L409'></a><a href='#L409'>409</a>
<a name='L410'></a><a href='#L410'>410</a>
<a name='L411'></a><a href='#L411'>411</a>
<a name='L412'></a><a href='#L412'>412</a>
<a name='L413'></a><a href='#L413'>413</a>
<a name='L414'></a><a href='#L414'>414</a>
<a name='L415'></a><a href='#L415'>415</a>
<a name='L416'></a><a href='#L416'>416</a>
<a name='L417'></a><a href='#L417'>417</a>
<a name='L418'></a><a href='#L418'>418</a>
<a name='L419'></a><a href='#L419'>419</a>
<a name='L420'></a><a href='#L420'>420</a>
<a name='L421'></a><a href='#L421'>421</a>
<a name='L422'></a><a href='#L422'>422</a>
<a name='L423'></a><a href='#L423'>423</a>
<a name='L424'></a><a href='#L424'>424</a>
<a name='L425'></a><a href='#L425'>425</a>
<a name='L426'></a><a href='#L426'>426</a>
<a name='L427'></a><a href='#L427'>427</a>
<a name='L428'></a><a href='#L428'>428</a>
<a name='L429'></a><a href='#L429'>429</a>
<a name='L430'></a><a href='#L430'>430</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/screens/SettingsScreen.tsx
import React, { useState, useEffect, useCallback } from "react";
import { View, ScrollView, Alert, StyleSheet, ActivityIndicator, Platform, I18nManager } from "react-native";
import { Text, makeStyles, Button, Icon, useTheme, ListItem } from "@rneui/themed";
import { Picker } from '@react-native-picker/picker';
import DailyGoalsInput from "../components/DailyGoalsInput";
import DataManagementButtons from "../components/DataManagementButtons";
import ThemeSwitch from "../components/ThemeSwitch";
import StatisticsChart from "../components/StatisticsChart";
import AccountSettings from "../components/AccountSettings";
import { loadSettings, saveSettings, loadDailyEntries } from "../services/storageService";
import { Settings, Statistics, MacroType, MacroData, LanguageCode, macros as macroKeysSetting } from "../types/settings";
import { parseISO, isValid, startOfDay } from "date-fns";
import { DailyEntry } from "../types/dailyEntry";
import { useFocusEffect, useNavigation } from "@react-navigation/native";
import { NativeStackNavigationProp } from "@react-navigation/native-stack";
import Toast from "react-native-toast-message";
import { getUserStatus, addCoinsToUser, BackendError } from "../services/backendService";
import { t } from "../localization/i18n";
import i18n from '../localization/i18n';
&nbsp;
interface SettingsScreenProps {
  onThemeChange: (theme: "light" | "dark" | "system") =&gt; void;
  onLocaleChange: (locale: LanguageCode) =&gt; void;
  onDataOperation: () =&gt; void; 
  onLogout: () =&gt; void;
}
&nbsp;
type SettingsStackParamList = {
  SettingsHome: undefined; 
  Questionnaire: undefined; 
};
&nbsp;
type SettingsNavigationProp = NativeStackNavigationProp&lt;SettingsStackParamList, 'SettingsHome'&gt;;
&nbsp;
const calculateMovingAverage = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(d</span>ata: MacroData[], windowSize: number): MacroData[] =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (windowSize &lt;= 1) <span class="cstat-no" title="statement not covered" >return data;</span></span>
    const movingAverageData: MacroData[] = <span class="cstat-no" title="statement not covered" >[];</span>
<span class="cstat-no" title="statement not covered" >    for (let i = <span class="cstat-no" title="statement not covered" >0;</span> i &lt; data.length; i++) {</span>
        const windowStart = <span class="cstat-no" title="statement not covered" >Math.max(0, i - windowSize + 1);</span>
        const windowSlice = <span class="cstat-no" title="statement not covered" >data.slice(windowStart, i + 1);</span>
        const sum = <span class="cstat-no" title="statement not covered" >windowSlice.reduce(<span class="fstat-no" title="function not covered" >(a</span>cc, point) =&gt; <span class="cstat-no" title="statement not covered" >acc + point.y,</span> 0);</span>
        const average = <span class="cstat-no" title="statement not covered" >sum / windowSlice.length;</span>
<span class="cstat-no" title="statement not covered" >        movingAverageData.push({ x: data[i].x, y: Math.round(average) });</span>
    }
<span class="cstat-no" title="statement not covered" >    return movingAverageData;</span>
};
&nbsp;
&nbsp;
const SettingsScreen: React.FC&lt;SettingsScreenProps&gt; = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >({</span> onThemeChange, onLocaleChange, onDataOperation, onLogout }) =&gt; {</span>
  const [settings, setSettings] = <span class="cstat-no" title="statement not covered" >useState&lt;Settings&gt;({</span>
    theme: "system",
    language: "system",
    dailyGoals: { calories: 0, protein: 0, carbs: 0, fat: 0 },
    settingsHistory: [],
  });
&nbsp;
  const [statistics, setStatistics] = <span class="cstat-no" title="statement not covered" >useState&lt;Statistics&gt;({</span>
    calories: [], protein: [], carbs: [], fat: [],
  });
  const [chartUpdateKey, setChartUpdateKey] = <span class="cstat-no" title="statement not covered" >useState(0);</span>
  const [userCoins, setUserCoins] = <span class="cstat-no" title="statement not covered" >useState&lt;number | null&gt;(null);</span>
  const [isLoadingCoins, setIsLoadingCoins] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
  const [isAddingCoins, setIsAddingCoins] = <span class="cstat-no" title="statement not covered" >useState(false);</span>
  const [isDataLoading, setIsDataLoading] = <span class="cstat-no" title="statement not covered" >useState(true); </span>
&nbsp;
  const { theme } = <span class="cstat-no" title="statement not covered" >useTheme();</span>
  const styles = <span class="cstat-no" title="statement not covered" >useStyles();</span>
  const navigation = <span class="cstat-no" title="statement not covered" >useNavigation&lt;SettingsNavigationProp&gt;(); </span>
&nbsp;
  const getStatisticsData = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >(</span></span>
    dailyEntries: DailyEntry[],
    macro: MacroType,
    currentGoals: { [key in MacroType]: number }
  ): MacroData[][] =&gt; {
    const intakeDataMap = <span class="cstat-no" title="statement not covered" >new Map&lt;number, number&gt;(); </span>
    const goalDataMap = <span class="cstat-no" title="statement not covered" >new Map&lt;number, number&gt;();   </span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    dailyEntries.forEach(<span class="fstat-no" title="function not covered" >(e</span>ntry) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >      try {</span>
        const entryDate = <span class="cstat-no" title="statement not covered" >parseISO(entry.date);</span>
<span class="cstat-no" title="statement not covered" >        if (!isValid(entryDate)) {</span>
<span class="cstat-no" title="statement not covered" >          console.warn(`Invalid date in getStatisticsData: ${entry.date}`);</span>
<span class="cstat-no" title="statement not covered" >          return;</span>
        }
        const entryTimestamp = <span class="cstat-no" title="statement not covered" >startOfDay(entryDate).getTime();</span>
&nbsp;
        let intakeValue = <span class="cstat-no" title="statement not covered" >0;</span>
<span class="cstat-no" title="statement not covered" >        if (entry.items &amp;&amp; Array.isArray(entry.items)) {</span>
<span class="cstat-no" title="statement not covered" >          intakeValue = entry.items.reduce(<span class="fstat-no" title="function not covered" >(t</span>otal, item) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >            if (item.food &amp;&amp; typeof item.food[macro] === 'number' &amp;&amp; typeof item.grams === 'number' &amp;&amp; item.grams &gt; 0) {</span>
<span class="cstat-no" title="statement not covered" >              return total + (item.food[macro] / 100) * item.grams;</span>
            }
<span class="cstat-no" title="statement not covered" >            return total;</span>
          }, 0);
        }
<span class="cstat-no" title="statement not covered" >        intakeDataMap.set(entryTimestamp, (intakeDataMap.get(entryTimestamp) || 0) + Math.round(intakeValue));</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >        if (macro === "calories") {</span>
          const goalValue = <span class="cstat-no" title="statement not covered" >currentGoals[macro] ?? 0;</span>
<span class="cstat-no" title="statement not covered" >           if (intakeDataMap.has(entryTimestamp)) {</span>
<span class="cstat-no" title="statement not covered" >             goalDataMap.set(entryTimestamp, Math.round(goalValue));</span>
           }
        }
      } catch (parseError) {
<span class="cstat-no" title="statement not covered" >        console.error(`Error processing entry ${entry.date} for statistics:`, parseError);</span>
      }
    });
&nbsp;
    const sortedTimestamps = <span class="cstat-no" title="statement not covered" >Array.from(new Set([...intakeDataMap.keys(), ...goalDataMap.keys()])).sort(<span class="fstat-no" title="function not covered" >(a</span>,b) =&gt; <span class="cstat-no" title="statement not covered" >a - b)</span>;</span>
    
    const finalIntakeData: MacroData[] = <span class="cstat-no" title="statement not covered" >sortedTimestamps.map(<span class="fstat-no" title="function not covered" >ts</span> =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
        x: ts,
        y: intakeDataMap.get(ts) || 0
    }));
&nbsp;
    const movingAverageData = <span class="cstat-no" title="statement not covered" >calculateMovingAverage(finalIntakeData, 7);</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    if (macro === "calories") {</span>
        const finalGoalData: MacroData[] = <span class="cstat-no" title="statement not covered" >sortedTimestamps.map(<span class="fstat-no" title="function not covered" >ts</span> =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
            x: ts,
            y: goalDataMap.get(ts) || currentGoals[macro] || 0
        }));
<span class="cstat-no" title="statement not covered" >        return [finalIntakeData, movingAverageData, finalGoalData];</span>
    }
<span class="cstat-no" title="statement not covered" >    return [finalIntakeData, movingAverageData];</span>
  }, []);
&nbsp;
&nbsp;
  const updateStatistics = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync (currentGoals: { [key in MacroType]: number }) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
        const loadedEntries = <span class="cstat-no" title="statement not covered" >await loadDailyEntries();</span>
        const updatedStats: Statistics = <span class="cstat-no" title="statement not covered" >{</span>
            calories: [], protein: [], carbs: [], fat: []
        };
<span class="cstat-no" title="statement not covered" >        (macroKeysSetting as readonly MacroType[]).forEach(<span class="fstat-no" title="function not covered" >ma</span>cro =&gt; {</span>
<span class="cstat-no" title="statement not covered" >            updatedStats[macro] = getStatisticsData(loadedEntries, macro, currentGoals);</span>
        });
<span class="cstat-no" title="statement not covered" >        setStatistics(updatedStats);</span>
<span class="cstat-no" title="statement not covered" >        setChartUpdateKey(<span class="fstat-no" title="function not covered" >(p</span>revKey) =&gt; <span class="cstat-no" title="statement not covered" >prevKey + 1)</span>;</span>
    } catch (error) {
<span class="cstat-no" title="statement not covered" >        console.error("SettingsScreen: Failed to update statistics:", error);</span>
    }
  }, [getStatisticsData]);
&nbsp;
  const fetchUserStatus = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    setIsLoadingCoins(true);</span>
<span class="cstat-no" title="statement not covered" >    try { </span>
      const status = <span class="cstat-no" title="statement not covered" >await getUserStatus(); </span>
<span class="cstat-no" title="statement not covered" >      setUserCoins(status.coins); </span>
    }
    catch (error) {
<span class="cstat-no" title="statement not covered" >      setUserCoins(null);</span>
      const message = <span class="cstat-no" title="statement not covered" >error instanceof BackendError ? error.message : t('backendService.errorNetworkConnection');</span>
<span class="cstat-no" title="statement not covered" >      Toast.show({ </span>
        type: 'error', 
        text1: t('accountSettings.errorLoadCoins'), 
        text2: message, 
        position: 'bottom', 
      });
    }
    finally { <span class="cstat-no" title="statement not covered" >setIsLoadingCoins(false); </span>}
  }, [t]);
&nbsp;
<span class="cstat-no" title="statement not covered" >  useFocusEffect( useCallback(<span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
      let isActive = <span class="cstat-no" title="statement not covered" >true;</span>
<span class="cstat-no" title="statement not covered" >      setIsDataLoading(true);</span>
      const loadAndProcessData = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        try {</span>
          const loadedSettings = <span class="cstat-no" title="statement not covered" >await loadSettings();</span>
<span class="cstat-no" title="statement not covered" >          if (!isActive) <span class="cstat-no" title="statement not covered" >return;</span></span>
<span class="cstat-no" title="statement not covered" >          setSettings(loadedSettings);</span>
<span class="cstat-no" title="statement not covered" >          navigation.setOptions({ title: t('settingsScreen.title') });</span>
<span class="cstat-no" title="statement not covered" >          await fetchUserStatus();</span>
<span class="cstat-no" title="statement not covered" >          await updateStatistics(loadedSettings.dailyGoals);</span>
        } catch (error) {
<span class="cstat-no" title="statement not covered" >          if (isActive) {</span>
<span class="cstat-no" title="statement not covered" >            Alert.alert(t('dailyEntryScreen.errorLoad'), t('dailyEntryScreen.errorLoadMessage'));</span>
          }
        } finally {
<span class="cstat-no" title="statement not covered" >          if (isActive) <span class="cstat-no" title="statement not covered" >setIsDataLoading(false);</span></span>
        }
      };
<span class="cstat-no" title="statement not covered" >      loadAndProcessData();</span>
<span class="cstat-no" title="statement not covered" >      return <span class="fstat-no" title="function not covered" >()</span> =&gt; { <span class="cstat-no" title="statement not covered" >isActive = false; </span>};</span>
    }, [updateStatistics, fetchUserStatus, navigation, t]) 
  );
&nbsp;
  const handleGoalChange = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync (goalType: MacroType, value: string) =&gt; {</span>
    const numericValue = <span class="cstat-no" title="statement not covered" >parseFloat(value);</span>
    const validatedValue = <span class="cstat-no" title="statement not covered" >isNaN(numericValue) || numericValue &lt; 0 ? 0 : numericValue;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    setSettings(<span class="fstat-no" title="function not covered" >(p</span>revSettings) =&gt; {</span>
      const updatedGoals = <span class="cstat-no" title="statement not covered" >{ ...prevSettings.dailyGoals, [goalType]: validatedValue };</span>
      const updatedSettings: Settings = <span class="cstat-no" title="statement not covered" >{ ...prevSettings, dailyGoals: updatedGoals };</span>
      
<span class="cstat-no" title="statement not covered" >      saveSettings(updatedSettings)</span>
        .then(<span class="fstat-no" title="function not covered" >()</span> =&gt; {
<span class="cstat-no" title="statement not covered" >          updateStatistics(updatedSettings.dailyGoals);</span>
        })
        .catch(<span class="fstat-no" title="function not covered" >(e</span>rror) =&gt; {
<span class="cstat-no" title="statement not covered" >          Alert.alert(t('dailyEntryScreen.errorSave'), t('dailyEntryScreen.errorSaveMessage'));</span>
        });
<span class="cstat-no" title="statement not covered" >      return updatedSettings;</span>
    });
  }, [updateStatistics, t]);
&nbsp;
&nbsp;
  const localDataOperationHandler = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    setIsDataLoading(true);</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
      const reloadedSettings = <span class="cstat-no" title="statement not covered" >await loadSettings();</span>
<span class="cstat-no" title="statement not covered" >      setSettings(reloadedSettings);</span>
<span class="cstat-no" title="statement not covered" >      await updateStatistics(reloadedSettings.dailyGoals);</span>
<span class="cstat-no" title="statement not covered" >      await fetchUserStatus();</span>
<span class="cstat-no" title="statement not covered" >      onThemeChange(reloadedSettings.theme); </span>
<span class="cstat-no" title="statement not covered" >      onLocaleChange(reloadedSettings.language); </span>
      
<span class="cstat-no" title="statement not covered" >      onDataOperation(); </span>
&nbsp;
<span class="cstat-no" title="statement not covered" >      Toast.show({ type: 'info', text1: t('dataManagement.dataReloaded'), position: 'bottom'});</span>
    }
    catch (error) { <span class="cstat-no" title="statement not covered" >Alert.alert(t('dailyEntryScreen.errorLoad'), t('dailyEntryScreen.errorLoadMessage')); </span>}
    finally { <span class="cstat-no" title="statement not covered" >setIsDataLoading(false); </span>}
  }, [updateStatistics, onThemeChange, onLocaleChange, fetchUserStatus, onDataOperation, t]);
&nbsp;
    const handleAddTestCoins = <span class="cstat-no" title="statement not covered" >useCallback(<span class="fstat-no" title="function not covered" >as</span>ync () =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        setIsAddingCoins(true);</span>
<span class="cstat-no" title="statement not covered" >        try { </span>
            const amount = <span class="cstat-no" title="statement not covered" >10; </span>
            const updatedStatus = <span class="cstat-no" title="statement not covered" >await addCoinsToUser(amount); </span>
<span class="cstat-no" title="statement not covered" >            setUserCoins(updatedStatus.coins); </span>
<span class="cstat-no" title="statement not covered" >            Toast.show({ type: 'success', text1: t('accountSettings.coinsAdded'), text2: `${t('accountSettings.coinBalance')}: ${updatedStatus.coins}`, position: 'bottom' }); </span>
        }
        catch (error) { 
            const message = <span class="cstat-no" title="statement not covered" >error instanceof BackendError ? error.message : t('backendService.errorNetworkConnection');</span>
<span class="cstat-no" title="statement not covered" >            Toast.show({ type: 'error', text1: t('accountSettings.errorAddCoins'), text2: message, position: 'bottom' }); </span>
        }
        finally { <span class="cstat-no" title="statement not covered" >setIsAddingCoins(false); </span>}
    }, [t]);
&nbsp;
  const handleLanguageChange = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(n</span>ewLanguage: LanguageCode) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    setSettings(<span class="fstat-no" title="function not covered" >pr</span>ev =&gt; (<span class="cstat-no" title="statement not covered" >{...prev, language: newLanguage})</span>);</span>
<span class="cstat-no" title="statement not covered" >    onLocaleChange(newLanguage); </span>
  };
&nbsp;
  const handleNavigateToQuestionnaire = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    navigation.navigate('Questionnaire');</span>
  };
&nbsp;
  const handleLogout = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    Alert.alert(</span>
        t('settingsScreen.account.logoutConfirmTitle'),
        t('settingsScreen.account.logoutConfirmMessage'),
        [
            { text: t('confirmationModal.cancel'), style: 'cancel' },
            { text: t('settingsScreen.account.logout'), style: 'destructive', onPress: onLogout },
        ],
        { cancelable: true }
    );
  };
&nbsp;
<span class="cstat-no" title="statement not covered" >  if (isDataLoading) {</span>
<span class="cstat-no" title="statement not covered" >    return (</span>
      &lt;View style={styles.loadingContainer}&gt;
        &lt;ActivityIndicator size="large" color={theme.colors.primary} /&gt;
        &lt;Text style={styles.loadingText}&gt;{t('app.initializing')}&lt;/Text&gt;
      &lt;/View&gt;
    );
  }
&nbsp;
<span class="cstat-no" title="statement not covered" >  return (</span>
    &lt;ScrollView style={styles.container} contentContainerStyle={styles.scrollContentContainer} keyboardShouldPersistTaps="handled"&gt;
        &lt;Text h3 style={styles.sectionTitle}&gt;{t('settingsScreen.account.title')}&lt;/Text&gt;
        &lt;AccountSettings
             userCoins={userCoins}
             isLoadingCoins={isLoadingCoins}
             isAddingCoins={isAddingCoins}
             onAddTestCoins={handleAddTestCoins}
        /&gt;
&nbsp;
        &lt;Text h3 style={styles.sectionTitle}&gt;{t('settingsScreen.account.actions')}&lt;/Text&gt;
        &lt;ListItem bottomDivider onPress={handleLogout} containerStyle={styles.logoutItem}&gt;
            &lt;Icon name="logout" type="material-community" color={theme.colors.error} /&gt;
            &lt;ListItem.Content&gt;
                &lt;ListItem.Title style={styles.logoutTitle}&gt;
                    {t('settingsScreen.account.logout')}
                &lt;/ListItem.Title&gt;
            &lt;/ListItem.Content&gt;
            &lt;ListItem.Chevron color={theme.colors.error} /&gt;
        &lt;/ListItem&gt;
&nbsp;
        &lt;Text h3 style={styles.sectionTitle}&gt;{t('settingsScreen.general.title')}&lt;/Text&gt;
        &lt;ThemeSwitch currentTheme={settings.theme} onToggle={onThemeChange} /&gt;
&nbsp;
        &lt;ListItem bottomDivider containerStyle={{ backgroundColor: theme.colors.background }}&gt;
            &lt;ListItem.Content&gt;
                &lt;ListItem.Title style={styles.listItemTitle}&gt;{t('settingsScreen.language.title')}&lt;/ListItem.Title&gt;
            &lt;/ListItem.Content&gt;
        &lt;/ListItem&gt;
        &lt;View style={Platform.OS === 'ios' ? {} : styles.pickerContainerAndroid}&gt;
             &lt;Picker
                selectedValue={settings.language}
                onValueChange={<span class="fstat-no" title="function not covered" >(i</span>temValue) =&gt; <span class="cstat-no" title="statement not covered" >handleLanguageChange(itemValue as LanguageCode)}</span>
                style={[styles.pickerStyle, Platform.OS === 'android' ? { color: theme.colors.text, backgroundColor: theme.colors.background } : {}]}
                itemStyle={[styles.pickerItemStyle, Platform.OS === 'ios' ? { color: theme.colors.text } : {}]}
                dropdownIconColor={theme.colors.text}
            &gt;
                &lt;Picker.Item label={t('settingsScreen.language.system')} value="system" /&gt;
                &lt;Picker.Item label={t('settingsScreen.language.english')} value="en" /&gt;
                &lt;Picker.Item label={t('settingsScreen.language.russian')} value="ru" /&gt;
                &lt;Picker.Item label={t('settingsScreen.language.hebrew')} value="he" /&gt;
            &lt;/Picker&gt;
        &lt;/View&gt;
&nbsp;
        &lt;View style={styles.sectionHeaderWithButton}&gt;
            &lt;Text h3 style={[styles.sectionTitle, styles.sectionTitleInline]}&gt;{t('settingsScreen.dailyGoals.title')}&lt;/Text&gt;
            &lt;Button
                title={t('settingsScreen.goals.estimateButton')}
                type="outline"
                onPress={handleNavigateToQuestionnaire}
                buttonStyle={styles.estimateButton}
                titleStyle={styles.estimateButtonTitle}
                icon={&lt;Icon name="calculator-variant" type="material-community" color={theme.colors.primary} size={18} /&gt;}
            /&gt;
        &lt;/View&gt;
        &lt;View style={styles.inputGroup}&gt;
            &lt;DailyGoalsInput dailyGoals={settings.dailyGoals} onGoalChange={handleGoalChange} /&gt;
        &lt;/View&gt;
&nbsp;
        &lt;Text h3 style={styles.sectionTitle}&gt;{t('settingsScreen.statistics.title')}&lt;/Text&gt;
        &lt;View style={styles.chartContainer}&gt;
            &lt;StatisticsChart statistics={statistics} key={`${chartUpdateKey}-${i18n.locale}-${theme.mode}`} /&gt;
        &lt;/View&gt;
&nbsp;
        &lt;Text h3 style={styles.sectionTitle}&gt;{t('settingsScreen.dataManagement.title')}&lt;/Text&gt;
        &lt;View style={styles.buttonGroup}&gt;
            &lt;DataManagementButtons onDataOperation={localDataOperationHandler} /&gt;
        &lt;/View&gt;
    &lt;/ScrollView&gt;
  );
};
&nbsp;
const useStyles = <span class="cstat-no" title="statement not covered" >makeStyles(<span class="fstat-no" title="function not covered" >(t</span>heme) =&gt; (<span class="cstat-no" title="statement not covered" >{</span></span>
  container: { flex: 1, backgroundColor: theme.colors.background, },
  loadingContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: theme.colors.background,
  },
  loadingText: {
    marginTop: 10,
    color: theme.colors.text,
    fontSize: 16,
  },
  scrollContentContainer: { padding: 15, paddingBottom: 40, },
  sectionTitle: {
    color: theme.colors.text, marginTop: 25, marginBottom: 15, paddingLeft: 5,
    borderLeftWidth: 3, borderLeftColor: theme.colors.primary,
    textAlign: I18nManager.isRTL ? 'right' : 'left',
    fontSize: 20, fontWeight: 'bold',
  },
  sectionHeaderWithButton: {
    flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginTop: 25,
    marginBottom: 10, 
  },
  sectionTitleInline: {
    marginTop: 0, 
    marginBottom: 0, 
    borderLeftWidth: 0, 
    paddingLeft: 0,
    flexShrink: 1,
  },
  estimateButton: {
    borderColor: theme.colors.primary,
    paddingHorizontal: 10,
    paddingVertical: 6,
    borderRadius: 20,
  },
  estimateButtonTitle: {
    color: theme.colors.primary,
    fontSize: 14,
    fontWeight: '600',
    marginLeft: I18nManager.isRTL ? 0 : 5,
    marginRight: I18nManager.isRTL ? 5 : 0,
  },
  listItemTitle: {
    color: theme.colors.text,
    textAlign: I18nManager.isRTL ? 'right' : 'left',
    fontWeight: '500',
  },
  logoutItem: {
    backgroundColor: theme.colors.background,
    borderTopWidth: 1,
    borderBottomWidth: 1,
    borderColor: theme.colors.divider,
  },
  logoutTitle: {
      color: theme.colors.error,
      textAlign: I18nManager.isRTL ? 'right' : 'left',
      fontWeight: 'bold',
  },
  inputGroup: { marginBottom: 10, paddingHorizontal: 5, },
  buttonGroup: { marginBottom: 10, paddingHorizontal: 5, },
  button: { marginBottom: 10, borderRadius: 8, },
  chartContainer: {
    marginBottom: 20,
  },
  pickerContainerAndroid: {
    backgroundColor: theme.colors.background,
    borderRadius: 8,
    borderWidth: 1,
    borderColor: theme.colors.divider,
    marginBottom: 10,
    marginTop: -5,
  },
  pickerStyle: {
    width: '100%',
    height: Platform.OS === 'ios' ? 120 : 50,
  },
  pickerItemStyle: {
    textAlign: I18nManager.isRTL ? 'right' : 'left',
  },
}));
&nbsp;
export default SettingsScreen;</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END SettingsScreen.tsx.html ----------


---------- authService.ts.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for services/authService.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">services</a> authService.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/68</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/31</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/11</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/68</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a>
<a name='L128'></a><a href='#L128'>128</a>
<a name='L129'></a><a href='#L129'>129</a>
<a name='L130'></a><a href='#L130'>130</a>
<a name='L131'></a><a href='#L131'>131</a>
<a name='L132'></a><a href='#L132'>132</a>
<a name='L133'></a><a href='#L133'>133</a>
<a name='L134'></a><a href='#L134'>134</a>
<a name='L135'></a><a href='#L135'>135</a>
<a name='L136'></a><a href='#L136'>136</a>
<a name='L137'></a><a href='#L137'>137</a>
<a name='L138'></a><a href='#L138'>138</a>
<a name='L139'></a><a href='#L139'>139</a>
<a name='L140'></a><a href='#L140'>140</a>
<a name='L141'></a><a href='#L141'>141</a>
<a name='L142'></a><a href='#L142'>142</a>
<a name='L143'></a><a href='#L143'>143</a>
<a name='L144'></a><a href='#L144'>144</a>
<a name='L145'></a><a href='#L145'>145</a>
<a name='L146'></a><a href='#L146'>146</a>
<a name='L147'></a><a href='#L147'>147</a>
<a name='L148'></a><a href='#L148'>148</a>
<a name='L149'></a><a href='#L149'>149</a>
<a name='L150'></a><a href='#L150'>150</a>
<a name='L151'></a><a href='#L151'>151</a>
<a name='L152'></a><a href='#L152'>152</a>
<a name='L153'></a><a href='#L153'>153</a>
<a name='L154'></a><a href='#L154'>154</a>
<a name='L155'></a><a href='#L155'>155</a>
<a name='L156'></a><a href='#L156'>156</a>
<a name='L157'></a><a href='#L157'>157</a>
<a name='L158'></a><a href='#L158'>158</a>
<a name='L159'></a><a href='#L159'>159</a>
<a name='L160'></a><a href='#L160'>160</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/services/authService.ts
import { Alert } from 'react-native';
import Constants from 'expo-constants';
import { Token } from '../types/token';
import { t } from '../localization/i18n';
import { getToken, saveToken, deleteToken } from './tokenStorage';
&nbsp;
// --- Centralized API URL Configuration ---
const getBackendUrl = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span>: string =&gt; {</span>
    const env = <span class="cstat-no" title="statement not covered" >Constants.expoConfig?.extra?.env;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    if (__DEV__) {</span>
<span class="cstat-no" title="statement not covered" >        if (env?.BACKEND_URL_DEVELOPMENT) {</span>
<span class="cstat-no" title="statement not covered" >            return env.BACKEND_URL_DEVELOPMENT;</span>
        }
<span class="cstat-no" title="statement not covered" >        console.warn(</span>
            "BACKEND_URL_DEVELOPMENT not found in app.json. Falling back to a default."
        );
<span class="cstat-no" title="statement not covered" >        return 'http://127.0.0.1:8000';</span>
    } else {
<span class="cstat-no" title="statement not covered" >        if (env?.BACKEND_URL_PRODUCTION) {</span>
<span class="cstat-no" title="statement not covered" >            return env.BACKEND_URL_PRODUCTION;</span>
        }
<span class="cstat-no" title="statement not covered" >        console.error("FATAL: BACKEND_URL_PRODUCTION is not defined in app.json extra.env.");</span>
<span class="cstat-no" title="statement not covered" >        return 'https://api.example.com/not-configured';</span>
    }
};
&nbsp;
export const getApiUrl = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span>: string =&gt; {</span>
    const baseUrl = <span class="cstat-no" title="statement not covered" >getBackendUrl();</span>
<span class="cstat-no" title="statement not covered" >    return baseUrl.endsWith('/api/v1') ? baseUrl : `${baseUrl.replace(/\/$/, '')}/api/v1`;</span>
};
&nbsp;
const API_URL = <span class="cstat-no" title="statement not covered" >getApiUrl();</span>
&nbsp;
// --- Auth Event Emitter for 401 Handling ---
type LogoutListener = (() =&gt; void) | null;
let onLogout: LogoutListener = <span class="cstat-no" title="statement not covered" >null;</span>
&nbsp;
export const setLogoutListener = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(l</span>istener: LogoutListener) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    onLogout = listener;</span>
};
&nbsp;
export const triggerLogout = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span> =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    console.log("Global logout triggered.");</span>
<span class="cstat-no" title="statement not covered" >    deleteToken(); </span>// Use the new abstracted function
<span class="cstat-no" title="statement not covered" >    if (onLogout) {</span>
<span class="cstat-no" title="statement not covered" >        onLogout();</span>
    } else {
<span class="cstat-no" title="statement not covered" >        console.warn('Logout triggered, but no UI listener was set.');</span>
    }
};
&nbsp;
// --- Token Management using the abstraction layer ---
export {
  getToken as getAuthToken,
  saveToken as setAuthToken,
  deleteToken as removeAuthToken,
};
&nbsp;
// --- API Calls ---
async function <span class="fstat-no" title="function not covered" >fetchAuthApi&lt;</span>T&gt;(endpoint: string, options: RequestInit = <span class="branch-0 cbranch-no" title="branch not covered" >{})</span>: Promise&lt;T&gt; {
    const url = <span class="cstat-no" title="statement not covered" >`${API_URL}/auth${endpoint}`;</span>
    
    const headers: Record&lt;string, string&gt; = <span class="cstat-no" title="statement not covered" >{</span>
        'Content-Type': 'application/json',
        'Accept': 'application/json',
        ...(options.headers as Record&lt;string, string&gt; || {})
    };
&nbsp;
<span class="cstat-no" title="statement not covered" >    try {</span>
        const response = <span class="cstat-no" title="statement not covered" >await fetch(url, { ...options, headers });</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >        if (response.status === 204) {</span>
<span class="cstat-no" title="statement not covered" >             return {} as T;</span>
        }
&nbsp;
        const responseBody = <span class="cstat-no" title="statement not covered" >await response.json();</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >        if (!response.ok) {</span>
            const errorMessage = <span class="cstat-no" title="statement not covered" >responseBody.detail || 'An unknown error occurred.';</span>
            const detailMessage = <span class="cstat-no" title="statement not covered" >typeof errorMessage === 'string' ? errorMessage : JSON.stringify(errorMessage);</span>
<span class="cstat-no" title="statement not covered" >            throw new Error(detailMessage);</span>
        }
<span class="cstat-no" title="statement not covered" >        return responseBody as T;</span>
    } catch (error: any) {
<span class="cstat-no" title="statement not covered" >        Alert.alert('Authentication Error', error.message || 'Could not connect to the server.');</span>
<span class="cstat-no" title="statement not covered" >        throw error;</span>
    }
}
&nbsp;
export const registerUser = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (email: string, password: string): Promise&lt;{message: string}&gt; =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    return fetchAuthApi&lt;{message: string}&gt;('/register', {</span>
        method: 'POST',
        body: JSON.stringify({ email, password }),
    });
};
&nbsp;
export const loginUser = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (email: string, password: string): Promise&lt;Token&gt; =&gt; {</span>
    const details = <span class="cstat-no" title="statement not covered" >{ 'username': email, 'password': password };</span>
    const formBody = <span class="cstat-no" title="statement not covered" >Object.entries(details)</span>
        .map(<span class="fstat-no" title="function not covered" >([</span>key, value]) =&gt; <span class="cstat-no" title="statement not covered" >encodeURIComponent(key) + '=' + encodeURIComponent(value))</span>
        .join('&amp;');
&nbsp;
    const url = <span class="cstat-no" title="statement not covered" >`${API_URL}/auth/login`;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    try {</span>
        const response = <span class="cstat-no" title="statement not covered" >await fetch(url, {</span>
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8' },
            body: formBody,
        });
        
        const responseBody = <span class="cstat-no" title="statement not covered" >await response.json();</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >        if (!response.ok) {</span>
<span class="cstat-no" title="statement not covered" >            throw new Error(responseBody.detail || 'Login failed');</span>
        }
<span class="cstat-no" title="statement not covered" >        return responseBody;</span>
    } catch (error: any) {
<span class="cstat-no" title="statement not covered" >        Alert.alert('Login Error', error.message || 'Could not connect to the server.');</span>
<span class="cstat-no" title="statement not covered" >        throw error;</span>
    }
};
&nbsp;
export const refreshAuthToken = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (refreshToken: string): Promise&lt;Token | null&gt; =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
        const newTokens = <span class="cstat-no" title="statement not covered" >await fetchAuthApi&lt;Token&gt;('/refresh-token', {</span>
             method: 'POST',
             body: JSON.stringify({ refresh_token: refreshToken })
        });
<span class="cstat-no" title="statement not covered" >        return newTokens;</span>
    } catch (error) {
<span class="cstat-no" title="statement not covered" >        console.error("Token refresh failed:", error);</span>
<span class="cstat-no" title="statement not covered" >        return null;</span>
    }
};
&nbsp;
export const logoutUser = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (): Promise&lt;void&gt; =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
        const tokenData = <span class="cstat-no" title="statement not covered" >await getToken();</span>
<span class="cstat-no" title="statement not covered" >        if (tokenData?.access_token) {</span>
<span class="cstat-no" title="statement not covered" >            await fetchAuthApi('/logout', {</span>
                method: 'POST',
                headers: { 'Authorization': `Bearer ${tokenData.access_token}` }
            });
        }
    } catch (error) {
<span class="cstat-no" title="statement not covered" >        console.warn("Logout API call failed, but logging out locally anyway.", error);</span>
    } finally {
<span class="cstat-no" title="statement not covered" >        await deleteToken();</span>
    }
}
&nbsp;
export const requestPasswordReset = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (email: string): Promise&lt;{message: string}&gt; =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    return fetchAuthApi&lt;{message: string}&gt;('/request-password-reset', {</span>
        method: 'POST',
        body: JSON.stringify({ email }),
    });
};</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END authService.ts.html ----------


---------- backendService.ts.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for services/backendService.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">services</a> backendService.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/93</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/75</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/12</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/77</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a>
<a name='L128'></a><a href='#L128'>128</a>
<a name='L129'></a><a href='#L129'>129</a>
<a name='L130'></a><a href='#L130'>130</a>
<a name='L131'></a><a href='#L131'>131</a>
<a name='L132'></a><a href='#L132'>132</a>
<a name='L133'></a><a href='#L133'>133</a>
<a name='L134'></a><a href='#L134'>134</a>
<a name='L135'></a><a href='#L135'>135</a>
<a name='L136'></a><a href='#L136'>136</a>
<a name='L137'></a><a href='#L137'>137</a>
<a name='L138'></a><a href='#L138'>138</a>
<a name='L139'></a><a href='#L139'>139</a>
<a name='L140'></a><a href='#L140'>140</a>
<a name='L141'></a><a href='#L141'>141</a>
<a name='L142'></a><a href='#L142'>142</a>
<a name='L143'></a><a href='#L143'>143</a>
<a name='L144'></a><a href='#L144'>144</a>
<a name='L145'></a><a href='#L145'>145</a>
<a name='L146'></a><a href='#L146'>146</a>
<a name='L147'></a><a href='#L147'>147</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/services/backendService.ts
import { getApiUrl, getAuthToken, setAuthToken, refreshAuthToken, triggerLogout } from './authService';
import { EstimatedFoodItem, Macros, MacrosWithFoodName } from '../types/macros';
import { Platform } from 'react-native';
import i18n, { t } from '../localization/i18n';
import { Token } from '../types/token';
&nbsp;
const BASE_URL = <span class="cstat-no" title="statement not covered" >getApiUrl();</span>
<span class="cstat-no" title="statement not covered" >console.log(`Backend Service Initialized. Base URL: ${BASE_URL}`);</span>
&nbsp;
interface GramsResponse { grams: number; }
export interface UserStatus { client_id: string; coins: number; is_verified: boolean; }
interface BackendErrorDetail { loc?: (string | number)[]; msg?: string; type?: string; }
interface BackendErrorResponse { detail?: string | BackendErrorDetail[]; }
&nbsp;
export class BackendError extends Error {
    status: number; detail?: string | BackendErrorDetail[]; requestId?: string | null;
<span class="fstat-no" title="function not covered" >    co</span>nstructor(message: string, status: number, detail?: string | BackendErrorDetail[], requestId?: string | null) {
<span class="cstat-no" title="statement not covered" >        super(message); <span class="cstat-no" title="statement not covered" ></span>this.name = 'BackendError'; <span class="cstat-no" title="statement not covered" ></span>this.status = status; <span class="cstat-no" title="statement not covered" ></span>this.detail = detail; <span class="cstat-no" title="statement not covered" ></span>this.requestId = requestId;</span>
    }
}
&nbsp;
let isRefreshing = <span class="cstat-no" title="statement not covered" >false;</span>
let failedQueue: { resolve: (value: any) =&gt; void; reject: (reason?: any) =&gt; void; endpoint: string; options: RequestInit; needsAuth: boolean; }[] = <span class="cstat-no" title="statement not covered" >[];</span>
&nbsp;
const processFailedQueue = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(e</span>rror: any, token: Token | null) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    failedQueue.forEach(<span class="fstat-no" title="function not covered" >pr</span>om =&gt; {</span>
<span class="cstat-no" title="statement not covered" >        if (error || !token) {</span>
<span class="cstat-no" title="statement not covered" >            prom.reject(error);</span>
        } else {
<span class="cstat-no" title="statement not covered" >            prom.resolve(fetchBackend(prom.endpoint, prom.options, prom.needsAuth));</span>
        }
    });
<span class="cstat-no" title="statement not covered" >    failedQueue = [];</span>
};
&nbsp;
async function <span class="fstat-no" title="function not covered" >fetchBackend&lt;</span>T&gt;( endpoint: string, options: RequestInit = <span class="branch-0 cbranch-no" title="branch not covered" >{},</span> needsAuth: boolean = <span class="branch-0 cbranch-no" title="branch not covered" >true </span>): Promise&lt;T&gt; {
    const url = <span class="cstat-no" title="statement not covered" >`${BASE_URL}${endpoint.startsWith('/') ? endpoint : `/${endpoint}`}`;</span>
    
    const tokenData = <span class="cstat-no" title="statement not covered" >needsAuth ? await getAuthToken() : null;</span>
    
<span class="cstat-no" title="statement not covered" >    if (needsAuth &amp;&amp; !tokenData?.access_token) {</span>
<span class="cstat-no" title="statement not covered" >        triggerLogout();</span>
<span class="cstat-no" title="statement not covered" >        throw new BackendError(t('backendService.errorAuthFailed'), 401, "Authentication token is missing.");</span>
    }
&nbsp;
    const headers: Record&lt;string, string&gt; = <span class="cstat-no" title="statement not covered" >{</span>
        'Content-Type': 'application/json',
        'Accept': 'application/json',
        'X-Platform': Platform.OS,
        'Accept-Language': i18n.locale,
        ...(options.headers as Record&lt;string, string&gt; || {})
    };
<span class="cstat-no" title="statement not covered" >    if (needsAuth &amp;&amp; tokenData) {</span>
<span class="cstat-no" title="statement not covered" >        headers['Authorization'] = `Bearer ${tokenData.access_token}`;</span>
    }
&nbsp;
<span class="cstat-no" title="statement not covered" >    try {</span>
        const response = <span class="cstat-no" title="statement not covered" >await fetch(url, { ...options, headers });</span>
        const requestId = <span class="cstat-no" title="statement not covered" >response.headers.get("X-Request-ID");</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >        if (response.status === 401 &amp;&amp; needsAuth) {</span>
<span class="cstat-no" title="statement not covered" >            if (isRefreshing) {</span>
<span class="cstat-no" title="statement not covered" >                return new Promise(<span class="fstat-no" title="function not covered" >(r</span>esolve, reject) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >                    failedQueue.push({ resolve, reject, endpoint, options, needsAuth });</span>
                });
            }
&nbsp;
<span class="cstat-no" title="statement not covered" >            isRefreshing = true;</span>
            const currentRefreshToken = <span class="cstat-no" title="statement not covered" >tokenData?.refresh_token;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >            if (!currentRefreshToken) {</span>
<span class="cstat-no" title="statement not covered" >                triggerLogout();</span>
<span class="cstat-no" title="statement not covered" >                isRefreshing = false;</span>
<span class="cstat-no" title="statement not covered" >                throw new BackendError(t('backendService.errorAuthFailed'), 401, "Refresh token not found.");</span>
            }
            
            const newTokens = <span class="cstat-no" title="statement not covered" >await refreshAuthToken(currentRefreshToken);</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >            if (newTokens?.access_token) {</span>
<span class="cstat-no" title="statement not covered" >                await setAuthToken(newTokens);</span>
<span class="cstat-no" title="statement not covered" >                processFailedQueue(null, newTokens);</span>
<span class="cstat-no" title="statement not covered" >                return fetchBackend(endpoint, options, needsAuth);</span>
            } else {
                const refreshError = <span class="cstat-no" title="statement not covered" >new BackendError(t('backendService.errorAuthFailed'), 401, "Session expired. Please log in again.");</span>
<span class="cstat-no" title="statement not covered" >                processFailedQueue(refreshError, null);</span>
<span class="cstat-no" title="statement not covered" >                triggerLogout();</span>
<span class="cstat-no" title="statement not covered" >                throw refreshError;</span>
            }
        }
        
<span class="cstat-no" title="statement not covered" >        if (response.status === 204) <span class="cstat-no" title="statement not covered" >return null as T;</span></span>
&nbsp;
        const contentType = <span class="cstat-no" title="statement not covered" >response.headers.get("content-type");</span>
        const isJson = <span class="cstat-no" title="statement not covered" >contentType &amp;&amp; contentType.includes("application/json");</span>
        const responseBody = <span class="cstat-no" title="statement not covered" >isJson ? await response.json() : await response.text();</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >        if (!response.ok) {</span>
            let errorMessage = <span class="cstat-no" title="statement not covered" >t('backendService.errorRequestFailedWithServerMsg', { status: response.status });</span>
<span class="cstat-no" title="statement not covered" >            if (isJson &amp;&amp; responseBody?.detail) {</span>
<span class="cstat-no" title="statement not covered" >                errorMessage = typeof responseBody.detail === 'string' ? responseBody.detail : JSON.stringify(responseBody.detail);</span>
            }
            
<span class="cstat-no" title="statement not covered" >            if (response.status === 402) <span class="cstat-no" title="statement not covered" >errorMessage = t('backendService.errorInsufficientCoins');</span></span>
<span class="cstat-no" title="statement not covered" >            if (response.status === 403) <span class="cstat-no" title="statement not covered" >errorMessage = responseBody?.detail || t('backendService.errorPermissionDenied');</span></span>
<span class="cstat-no" title="statement not covered" >            if (response.status === 429) <span class="cstat-no" title="statement not covered" >errorMessage = t('backendService.errorTooManyRequests');</span></span>
&nbsp;
<span class="cstat-no" title="statement not covered" >            throw new BackendError(errorMessage, response.status, responseBody?.detail, requestId);</span>
        }
<span class="cstat-no" title="statement not covered" >        return responseBody as T;</span>
&nbsp;
    } catch (error) {
<span class="cstat-no" title="statement not covered" >        if (error instanceof BackendError) <span class="cstat-no" title="statement not covered" >throw error;</span></span>
        
        let networkErrorMessage: string;
<span class="cstat-no" title="statement not covered" >        if (error instanceof Error &amp;&amp; error.name === 'AbortError') {</span>
<span class="cstat-no" title="statement not covered" >            networkErrorMessage = t('backendService.errorNetworkTimeout');</span>
        } else <span class="cstat-no" title="statement not covered" >if (error instanceof Error &amp;&amp; (error.message.includes('Network request failed') || error.message.includes('Failed to fetch'))) {</span>
<span class="cstat-no" title="statement not covered" >            networkErrorMessage = t('backendService.errorNetwork') + t('backendService.errorNetworkConnection');</span>
        } else <span class="cstat-no" title="statement not covered" >if (error instanceof Error) {</span>
<span class="cstat-no" title="statement not covered" >            networkErrorMessage = t('backendService.errorNetwork') + t('backendService.errorNetworkDetails', { error: error.message });</span>
        } else {
<span class="cstat-no" title="statement not covered" >            networkErrorMessage = t('backendService.errorNetwork') + t('backendService.errorNetworkUnknown');</span>
        }
        
<span class="cstat-no" title="statement not covered" >        throw new BackendError(networkErrorMessage, 0, networkErrorMessage, null);</span>
    } finally {
<span class="cstat-no" title="statement not covered" >        if(isRefreshing &amp;&amp; endpoint === '/auth/refresh-token') {</span>
<span class="cstat-no" title="statement not covered" >             isRefreshing = false;</span>
        }
    }
}
&nbsp;
export const getUserStatus = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (): Promise&lt;UserStatus&gt; =&gt; <span class="cstat-no" title="statement not covered" >fetchBackend&lt;UserStatus&gt;('/users/status');</span></span>
export const getMacrosForRecipe = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (foodName: string, ingredients: string): Promise&lt;MacrosWithFoodName&gt; =&gt; <span class="cstat-no" title="statement not covered" >fetchBackend&lt;MacrosWithFoodName&gt;('/ai/macros_recipe', { method: 'POST', body: JSON.stringify({ food_name: foodName, ingredients }) });</span></span>
export const getMacrosForImageSingle = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (image_base64: string, mime_type: string): Promise&lt;MacrosWithFoodName&gt; =&gt; <span class="cstat-no" title="statement not covered" >fetchBackend&lt;MacrosWithFoodName&gt;('/ai/macros_image_single', { method: 'POST', body: JSON.stringify({ image_base64, mime_type }) });</span></span>
export const getMacrosForImageMultiple = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (image_base64: string, mime_type: string): Promise&lt;EstimatedFoodItem[]&gt; =&gt; <span class="cstat-no" title="statement not covered" >fetchBackend&lt;EstimatedFoodItem[]&gt;('/ai/macros_image_multiple', { method: 'POST', body: JSON.stringify({ image_base64, mime_type }) });</span></span>
export const getMacrosForTextMultiple = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (text: string): Promise&lt;EstimatedFoodItem[]&gt; =&gt; <span class="cstat-no" title="statement not covered" >fetchBackend&lt;EstimatedFoodItem[]&gt;('/ai/macros_text_multiple', { method: 'POST', body: JSON.stringify({ text }) });</span></span>
export const estimateGramsNaturalLanguage = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (foodName: string, quantityDescription: string): Promise&lt;number&gt; =&gt; {</span>
    const response = <span class="cstat-no" title="statement not covered" >await fetchBackend&lt;GramsResponse&gt;('/ai/grams_natural_language', { method: 'POST', body: JSON.stringify({ food_name: foodName, quantity_description: quantityDescription }) });</span>
<span class="cstat-no" title="statement not covered" >    if (response === null || typeof response.grams !== 'number') <span class="cstat-no" title="statement not covered" >throw new BackendError(t('backendService.errorEstimateGramsUnexpectedResponse'), 500, "Invalid response format");</span></span>
<span class="cstat-no" title="statement not covered" >    return response.grams;</span>
};
export const addCoinsToUser = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (amount: number): Promise&lt;UserStatus&gt; =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (amount &lt;= 0) <span class="cstat-no" title="statement not covered" >throw new BackendError(t('backendService.errorAddCoinsPositive'), 400, "Amount must be positive.");</span></span>
<span class="cstat-no" title="statement not covered" >    return fetchBackend&lt;UserStatus&gt;('/users/add_coins', { method: 'POST', body: JSON.stringify({ amount }) });</span>
};</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END backendService.ts.html ----------


---------- clientIDService.ts.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for services/clientIDService.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">services</a> clientIDService.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/22</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/4</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/2</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/22</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/services/clientIDService.ts
import AsyncStorage from '@react-native-async-storage/async-storage';
import uuid from 'react-native-uuid';
&nbsp;
const CLIENT_ID_KEY = <span class="cstat-no" title="statement not covered" >'@MacroTracker:clientId';</span>
let currentClientId: string | null = <span class="cstat-no" title="statement not covered" >null;</span> // In-memory cache
&nbsp;
export const getClientId = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (): Promise&lt;string&gt; =&gt; {</span>
<span class="cstat-no" title="statement not covered" >  if (currentClientId) {</span>
<span class="cstat-no" title="statement not covered" >    return currentClientId;</span>
  }
&nbsp;
<span class="cstat-no" title="statement not covered" >  try {</span>
    let clientId = <span class="cstat-no" title="statement not covered" >await AsyncStorage.getItem(CLIENT_ID_KEY);</span>
<span class="cstat-no" title="statement not covered" >    if (!clientId) {</span>
<span class="cstat-no" title="statement not covered" >      clientId = uuid.v4() as string;</span>
<span class="cstat-no" title="statement not covered" >      console.log('Generated new client ID:', clientId);</span>
<span class="cstat-no" title="statement not covered" >      await AsyncStorage.setItem(CLIENT_ID_KEY, clientId);</span>
    } else {
<span class="cstat-no" title="statement not covered" >      console.log('Retrieved existing client ID:', clientId);</span>
    }
<span class="cstat-no" title="statement not covered" >    currentClientId = clientId;</span>
<span class="cstat-no" title="statement not covered" >    return clientId;</span>
  } catch (error) {
<span class="cstat-no" title="statement not covered" >    console.error('Error handling client ID:', error);</span>
    // Fallback or throw error depending on desired behavior
    // For now, generating a temporary one if storage fails
<span class="cstat-no" title="statement not covered" >    return uuid.v4() as string;</span>
  }
};
&nbsp;
// Optional: Function to clear ID for testing
export const clearClientId = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (): Promise&lt;void&gt; =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    currentClientId = null;</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
<span class="cstat-no" title="statement not covered" >        await AsyncStorage.removeItem(CLIENT_ID_KEY);</span>
<span class="cstat-no" title="statement not covered" >        console.log('Client ID cleared.');</span>
    } catch (error) {
<span class="cstat-no" title="statement not covered" >        console.error('Error clearing client ID:', error);</span>
    }
};</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END clientIDService.ts.html ----------


---------- foodService.ts.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for services/foodService.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">services</a> foodService.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/37</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/15</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/9</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/34</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/services/foodService.ts
import { Food } from '../types/food';
import { saveFoods, loadFoods } from './storageService';
import 'react-native-get-random-values';
import { v4 as uuidv4 } from 'uuid';
&nbsp;
export const createFood = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (foodData: Omit&lt;Food, 'id' | 'createdAt'&gt;): Promise&lt;Food&gt; =&gt; {</span>
  const newFood: Food = <span class="cstat-no" title="statement not covered" >{</span>
    id: uuidv4(),
    ...foodData,
    createdAt: new Date().toISOString(),
  };
  const { items: currentFoods } = <span class="cstat-no" title="statement not covered" >await loadFoods();</span> // Load all foods to append
<span class="cstat-no" title="statement not covered" >  currentFoods.push(newFood);</span>
<span class="cstat-no" title="statement not covered" >  await saveFoods(currentFoods);</span>
<span class="cstat-no" title="statement not covered" >  return newFood;</span>
};
&nbsp;
export const getFoods = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (</span>
  searchTerm?: string,
  sortOption: 'name' | 'newest' | 'oldest' = <span class="branch-0 cbranch-no" title="branch not covered" >'name'</span>
): Promise&lt;{ items: Food[], total: number }&gt; =&gt; {
  // Load all foods first.
  const { items: allFoodsFromStorage } = <span class="cstat-no" title="statement not covered" >await loadFoods();</span>
&nbsp;
  let filteredFoods = <span class="cstat-no" title="statement not covered" >allFoodsFromStorage;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >  if (searchTerm &amp;&amp; searchTerm.trim() !== "") {</span>
    const lowercasedSearchTerm = <span class="cstat-no" title="statement not covered" >searchTerm.toLowerCase().trim();</span>
<span class="cstat-no" title="statement not covered" >    filteredFoods = allFoodsFromStorage.filter(<span class="fstat-no" title="function not covered" >fo</span>od =&gt;</span>
<span class="cstat-no" title="statement not covered" >      food.name.toLowerCase().includes(lowercasedSearchTerm)</span>
    );
  }
&nbsp;
  // Sorting logic
<span class="cstat-no" title="statement not covered" >  if (sortOption === 'name') {</span>
<span class="cstat-no" title="statement not covered" >      filteredFoods.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; <span class="cstat-no" title="statement not covered" >a.name.localeCompare(b.name))</span>;</span>
  } else {
      const fallbackDate = <span class="cstat-no" title="statement not covered" >'2020-01-01T00:00:00.000Z';</span> // For items without a creation date
<span class="cstat-no" title="statement not covered" >      filteredFoods.sort(<span class="fstat-no" title="function not covered" >(a</span>, b) =&gt; {</span>
          const dateA = <span class="cstat-no" title="statement not covered" >new Date(a.createdAt || fallbackDate).getTime();</span>
          const dateB = <span class="cstat-no" title="statement not covered" >new Date(b.createdAt || fallbackDate).getTime();</span>
<span class="cstat-no" title="statement not covered" >          return sortOption === 'newest' ? dateB - dateA : dateA - dateB;</span>
      });
  }
&nbsp;
  const totalFiltered = <span class="cstat-no" title="statement not covered" >filteredFoods.length;</span>
&nbsp;
  // Return all filtered and sorted items without pagination
<span class="cstat-no" title="statement not covered" >  return { items: filteredFoods, total: totalFiltered };</span>
};
&nbsp;
export const updateFood = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (updatedFood: Food): Promise&lt;Food&gt; =&gt; {</span>
  const { items: foods } = <span class="cstat-no" title="statement not covered" >await loadFoods();</span> // Load all foods to find and update
  const index = <span class="cstat-no" title="statement not covered" >foods.findIndex(<span class="fstat-no" title="function not covered" >(f</span>) =&gt; <span class="cstat-no" title="statement not covered" >f.id === updatedFood.id)</span>;</span>
<span class="cstat-no" title="statement not covered" >  if (index === -1) {</span>
<span class="cstat-no" title="statement not covered" >    throw new Error('Food not found'); </span>// Throw an error if not found
  }
<span class="cstat-no" title="statement not covered" >  foods[index] = updatedFood;</span>
<span class="cstat-no" title="statement not covered" >  await saveFoods(foods);</span>
<span class="cstat-no" title="statement not covered" >  return updatedFood;</span>
};
&nbsp;
export const deleteFood = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (foodId: string): Promise&lt;void&gt; =&gt; {</span>
  const { items: foods } = <span class="cstat-no" title="statement not covered" >await loadFoods();</span> // Load all to filter
  const filteredFoods = <span class="cstat-no" title="statement not covered" >foods.filter(<span class="fstat-no" title="function not covered" >(f</span>) =&gt; <span class="cstat-no" title="statement not covered" >f.id !== foodId)</span>;</span>
<span class="cstat-no" title="statement not covered" >  await saveFoods(filteredFoods);</span>
};</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END foodService.ts.html ----------


---------- index.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for services</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> services</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/332</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/160</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/48</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/310</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <div class="pad1">
<table class="coverage-summary">
<thead>
<tr>
   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
</tr>
</thead>
<tbody><tr>
	<td class="file low" data-value="authService.ts"><a href="authService.ts.html">authService.ts</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="68" class="abs low">0/68</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="31" class="abs low">0/31</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="11" class="abs low">0/11</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="68" class="abs low">0/68</td>
	</tr>

<tr>
	<td class="file low" data-value="backendService.ts"><a href="backendService.ts.html">backendService.ts</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="93" class="abs low">0/93</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="75" class="abs low">0/75</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="12" class="abs low">0/12</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="77" class="abs low">0/77</td>
	</tr>

<tr>
	<td class="file low" data-value="clientIDService.ts"><a href="clientIDService.ts.html">clientIDService.ts</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="22" class="abs low">0/22</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="4" class="abs low">0/4</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="2" class="abs low">0/2</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="22" class="abs low">0/22</td>
	</tr>

<tr>
	<td class="file low" data-value="foodService.ts"><a href="foodService.ts.html">foodService.ts</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="37" class="abs low">0/37</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="15" class="abs low">0/15</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="9" class="abs low">0/9</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="34" class="abs low">0/34</td>
	</tr>

<tr>
	<td class="file low" data-value="storageService.ts"><a href="storageService.ts.html">storageService.ts</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="90" class="abs low">0/90</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="21" class="abs low">0/21</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="11" class="abs low">0/11</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="87" class="abs low">0/87</td>
	</tr>

<tr>
	<td class="file low" data-value="tokenStorage.ts"><a href="tokenStorage.ts.html">tokenStorage.ts</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="22" class="abs low">0/22</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="14" class="abs low">0/14</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="3" class="abs low">0/3</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="22" class="abs low">0/22</td>
	</tr>

</tbody>
</table>
</div>
                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END index.html ----------


---------- storageService.ts.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for services/storageService.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">services</a> storageService.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/90</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/21</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/11</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/87</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a>
<a name='L128'></a><a href='#L128'>128</a>
<a name='L129'></a><a href='#L129'>129</a>
<a name='L130'></a><a href='#L130'>130</a>
<a name='L131'></a><a href='#L131'>131</a>
<a name='L132'></a><a href='#L132'>132</a>
<a name='L133'></a><a href='#L133'>133</a>
<a name='L134'></a><a href='#L134'>134</a>
<a name='L135'></a><a href='#L135'>135</a>
<a name='L136'></a><a href='#L136'>136</a>
<a name='L137'></a><a href='#L137'>137</a>
<a name='L138'></a><a href='#L138'>138</a>
<a name='L139'></a><a href='#L139'>139</a>
<a name='L140'></a><a href='#L140'>140</a>
<a name='L141'></a><a href='#L141'>141</a>
<a name='L142'></a><a href='#L142'>142</a>
<a name='L143'></a><a href='#L143'>143</a>
<a name='L144'></a><a href='#L144'>144</a>
<a name='L145'></a><a href='#L145'>145</a>
<a name='L146'></a><a href='#L146'>146</a>
<a name='L147'></a><a href='#L147'>147</a>
<a name='L148'></a><a href='#L148'>148</a>
<a name='L149'></a><a href='#L149'>149</a>
<a name='L150'></a><a href='#L150'>150</a>
<a name='L151'></a><a href='#L151'>151</a>
<a name='L152'></a><a href='#L152'>152</a>
<a name='L153'></a><a href='#L153'>153</a>
<a name='L154'></a><a href='#L154'>154</a>
<a name='L155'></a><a href='#L155'>155</a>
<a name='L156'></a><a href='#L156'>156</a>
<a name='L157'></a><a href='#L157'>157</a>
<a name='L158'></a><a href='#L158'>158</a>
<a name='L159'></a><a href='#L159'>159</a>
<a name='L160'></a><a href='#L160'>160</a>
<a name='L161'></a><a href='#L161'>161</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/services/storageService.ts
import AsyncStorage from '@react-native-async-storage/async-storage';
import { DailyEntry } from '../types/dailyEntry';
import { Food } from '../types/food';
import { Settings, LanguageCode } from '../types/settings';
&nbsp;
const DAILY_ENTRIES_KEY = <span class="cstat-no" title="statement not covered" >'dailyEntries';</span>
const FOODS_KEY = <span class="cstat-no" title="statement not covered" >'foods';</span>
const SETTINGS_KEY = <span class="cstat-no" title="statement not covered" >'settings';</span>
const RECENT_FOODS_KEY = <span class="cstat-no" title="statement not covered" >'recentFoods';</span>
const RECENT_SERVINGS_KEY = <span class="cstat-no" title="statement not covered" >'recentServings';</span>
&nbsp;
export type RecentServings = { [foodId: string]: number[] };
&nbsp;
export const saveDailyEntries = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (entries: DailyEntry[]): Promise&lt;void&gt; =&gt; {</span>
<span class="cstat-no" title="statement not covered" >  try {</span>
<span class="cstat-no" title="statement not covered" >    await AsyncStorage.setItem(DAILY_ENTRIES_KEY, JSON.stringify(entries));</span>
  } catch (error) {
<span class="cstat-no" title="statement not covered" >    console.error('Error saving daily entries:', error);</span>
<span class="cstat-no" title="statement not covered" >    throw error;</span>
  }
};
&nbsp;
export const loadDailyEntries = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (): Promise&lt;DailyEntry[]&gt; =&gt; {</span>
<span class="cstat-no" title="statement not covered" >  try {</span>
    const entriesJson = <span class="cstat-no" title="statement not covered" >await AsyncStorage.getItem(DAILY_ENTRIES_KEY);</span>
<span class="cstat-no" title="statement not covered" >    return entriesJson ? JSON.parse(entriesJson) : [];</span>
  } catch (error) {
<span class="cstat-no" title="statement not covered" >    console.error('Failed to parse daily entries from AsyncStorage. Clearing corrupted data.', error);</span>
<span class="cstat-no" title="statement not covered" >    await AsyncStorage.removeItem(DAILY_ENTRIES_KEY);</span>
<span class="cstat-no" title="statement not covered" >    return [];</span>
  }
};
&nbsp;
export const saveFoods = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (foods: Food[]): Promise&lt;void&gt; =&gt; {</span>
<span class="cstat-no" title="statement not covered" >  try {</span>
<span class="cstat-no" title="statement not covered" >    await AsyncStorage.setItem(FOODS_KEY, JSON.stringify(foods));</span>
  } catch (error) {
<span class="cstat-no" title="statement not covered" >    console.error('Error saving foods:', error);</span>
<span class="cstat-no" title="statement not covered" >    throw error;</span>
  }
};
&nbsp;
export const loadFoods = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (offset: number = <span class="branch-0 cbranch-no" title="branch not covered" >0,</span> limit?: number): Promise&lt;{ items: Food[], total: number }&gt; =&gt; {</span>
<span class="cstat-no" title="statement not covered" >  try {</span>
    const foodsJson = <span class="cstat-no" title="statement not covered" >await AsyncStorage.getItem(FOODS_KEY);</span>
    const allFoods: Food[] = <span class="cstat-no" title="statement not covered" >foodsJson ? JSON.parse(foodsJson) : [];</span>
    const total = <span class="cstat-no" title="statement not covered" >allFoods.length;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    if (limit === undefined) {</span>
<span class="cstat-no" title="statement not covered" >      return { items: allFoods, total };</span>
    }
    
    const paginatedFoods = <span class="cstat-no" title="statement not covered" >allFoods.slice(offset, offset + limit);</span>
<span class="cstat-no" title="statement not covered" >    return { items: paginatedFoods, total };</span>
  } catch (error) {
<span class="cstat-no" title="statement not covered" >    console.error('Failed to parse foods from AsyncStorage. Clearing corrupted data.', error);</span>
<span class="cstat-no" title="statement not covered" >    await AsyncStorage.removeItem(FOODS_KEY);</span>
<span class="cstat-no" title="statement not covered" >    return { items: [], total: 0 };</span>
  }
};
&nbsp;
export const saveSettings = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (settings: Settings): Promise&lt;void&gt; =&gt; {</span>
<span class="cstat-no" title="statement not covered" >  try {</span>
<span class="cstat-no" title="statement not covered" >    await AsyncStorage.setItem(SETTINGS_KEY, JSON.stringify(settings));</span>
  } catch (error) {
<span class="cstat-no" title="statement not covered" >    console.error('Error saving settings:', error);</span>
<span class="cstat-no" title="statement not covered" >    throw error;</span>
  }
};
&nbsp;
export const loadSettings = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (): Promise&lt;Settings&gt; =&gt; {</span>
  const defaultSettings: Settings = <span class="cstat-no" title="statement not covered" >{</span>
    theme: 'system',
    language: 'system',
    dailyGoals: { calories: 2000, protein: 50, carbs: 200, fat: 70 },
    settingsHistory: []
  };
&nbsp;
<span class="cstat-no" title="statement not covered" >  try {</span>
    const settingsJson = <span class="cstat-no" title="statement not covered" >await AsyncStorage.getItem(SETTINGS_KEY);</span>
<span class="cstat-no" title="statement not covered" >    if (!settingsJson) <span class="cstat-no" title="statement not covered" >return defaultSettings;</span></span>
    
    const loadedSettings = <span class="cstat-no" title="statement not covered" >JSON.parse(settingsJson);</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    return {</span>
      ...defaultSettings,
      ...loadedSettings,
      dailyGoals: {
        ...defaultSettings.dailyGoals,
        ...(loadedSettings.dailyGoals || {})
      }
    };
  } catch (error) {
<span class="cstat-no" title="statement not covered" >    console.error('Failed to parse settings from AsyncStorage. Clearing corrupted data and returning defaults.', error);</span>
<span class="cstat-no" title="statement not covered" >    await AsyncStorage.removeItem(SETTINGS_KEY);</span>
<span class="cstat-no" title="statement not covered" >    return defaultSettings;</span>
  }
};
&nbsp;
export const clearAllData = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (): Promise&lt;void&gt; =&gt; {</span>
<span class="cstat-no" title="statement not covered" >  try {</span>
    const clientIdKey = <span class="cstat-no" title="statement not covered" >'@MacroTracker:clientId';</span>
    const authTokenKey = <span class="cstat-no" title="statement not covered" >'@MacroTracker:authToken';</span>
    const [clientId, authToken] = <span class="cstat-no" title="statement not covered" >await AsyncStorage.multiGet([clientIdKey, authTokenKey]);</span>
    
<span class="cstat-no" title="statement not covered" >    await AsyncStorage.clear();</span>
    
    const itemsToKeep: [string, string][] = <span class="cstat-no" title="statement not covered" >[];</span>
<span class="cstat-no" title="statement not covered" >    if (clientId?.[1]) <span class="cstat-no" title="statement not covered" >itemsToKeep.push(clientId as [string, string]);</span></span>
<span class="cstat-no" title="statement not covered" >    if (authToken?.[1]) <span class="cstat-no" title="statement not covered" >itemsToKeep.push(authToken as [string, string]);</span></span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    if (itemsToKeep.length &gt; 0) {</span>
<span class="cstat-no" title="statement not covered" >        await AsyncStorage.multiSet(itemsToKeep);</span>
    }
<span class="cstat-no" title="statement not covered" >    console.log('Application data cleared (excluding auth/client ID).');</span>
  } catch (error) {
<span class="cstat-no" title="statement not covered" >    console.error('Error clearing data:', error);</span>
<span class="cstat-no" title="statement not covered" >    throw error;</span>
  }
};
&nbsp;
export const saveRecentFoods = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (foods: Food[]) =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
<span class="cstat-no" title="statement not covered" >        await AsyncStorage.setItem(RECENT_FOODS_KEY, JSON.stringify(foods));</span>
    } catch (error) {
<span class="cstat-no" title="statement not covered" >        console.error('Error saving recent foods:', error);</span>
<span class="cstat-no" title="statement not covered" >        throw error;</span>
    }
};
&nbsp;
export const loadRecentFoods = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (): Promise&lt;Food[]&gt; =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
        const foodsJson = <span class="cstat-no" title="statement not covered" >await AsyncStorage.getItem(RECENT_FOODS_KEY);</span>
<span class="cstat-no" title="statement not covered" >        return foodsJson ? JSON.parse(foodsJson) : [];</span>
    } catch (error) {
<span class="cstat-no" title="statement not covered" >        console.error('Failed to parse recent foods from AsyncStorage. Clearing corrupted data.', error);</span>
<span class="cstat-no" title="statement not covered" >        await AsyncStorage.removeItem(RECENT_FOODS_KEY);</span>
<span class="cstat-no" title="statement not covered" >        return [];</span>
    }
};
&nbsp;
export const saveRecentServings = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (servings: RecentServings): Promise&lt;void&gt; =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
<span class="cstat-no" title="statement not covered" >        await AsyncStorage.setItem(RECENT_SERVINGS_KEY, JSON.stringify(servings));</span>
    } catch (error) {
<span class="cstat-no" title="statement not covered" >        console.error('Error saving recent servings:', error);</span>
<span class="cstat-no" title="statement not covered" >        throw error;</span>
    }
};
&nbsp;
export const loadRecentServings = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (): Promise&lt;RecentServings&gt; =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
        const servingsJson = <span class="cstat-no" title="statement not covered" >await AsyncStorage.getItem(RECENT_SERVINGS_KEY);</span>
<span class="cstat-no" title="statement not covered" >        return servingsJson ? JSON.parse(servingsJson) : {};</span>
    } catch (error) {
<span class="cstat-no" title="statement not covered" >        console.error('Failed to parse recent servings from AsyncStorage. Clearing corrupted data.', error);</span>
<span class="cstat-no" title="statement not covered" >        await AsyncStorage.removeItem(RECENT_SERVINGS_KEY);</span>
<span class="cstat-no" title="statement not covered" >        return {};</span>
    }
};</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END storageService.ts.html ----------


---------- tokenStorage.ts.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for services/tokenStorage.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">services</a> tokenStorage.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/22</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/14</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/3</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/22</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/services/tokenStorage.ts
&nbsp;
import * as SecureStore from 'expo-secure-store';
import AsyncStorage from '@react-native-async-storage/async-storage';
import Constants from 'expo-constants';
import { Token } from '../types/token';
&nbsp;
const TOKEN_KEY = <span class="cstat-no" title="statement not covered" >'@MacroTracker:authToken';</span>
&nbsp;
/**
 * Checks if the app is running inside the generic Expo Go client.
 * SecureStore is not truly secure in Expo Go because the app shares a generic
 * bundle identifier. We fall back to AsyncStorage in this specific case.
 * In development builds and production, this will be false.
 */
const IS_EXPO_GO = <span class="cstat-no" title="statement not covered" >Constants.appOwnership === 'expo';</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >if (__DEV__) {</span>
<span class="cstat-no" title="statement not covered" >  console.log(</span>
    `[TokenStorage] Running in ${IS_EXPO_GO ? 'Expo Go' : 'Development Build/Production'}. ` +
    `Using ${IS_EXPO_GO ? 'AsyncStorage (unsafe)' : 'SecureStore (secure)'} for tokens.`
  );
}
&nbsp;
/**
 * Saves the authentication token to the appropriate storage.
 * @param token The token object to save.
 */
export async function <span class="fstat-no" title="function not covered" >saveToken(</span>token: Token): Promise&lt;void&gt; {
  const tokenJson = <span class="cstat-no" title="statement not covered" >JSON.stringify(token);</span>
<span class="cstat-no" title="statement not covered" >  if (IS_EXPO_GO) {</span>
<span class="cstat-no" title="statement not covered" >    await AsyncStorage.setItem(TOKEN_KEY, tokenJson);</span>
  } else {
<span class="cstat-no" title="statement not covered" >    await SecureStore.setItemAsync(TOKEN_KEY, tokenJson);</span>
  }
}
&nbsp;
/**
 * Retrieves the authentication token from the appropriate storage.
 * @returns The token object or null if not found or corrupted.
 */
export async function <span class="fstat-no" title="function not covered" >getToken(</span>): Promise&lt;Token | null&gt; {
  let tokenJson: string | null = <span class="cstat-no" title="statement not covered" >null;</span>
<span class="cstat-no" title="statement not covered" >  if (IS_EXPO_GO) {</span>
<span class="cstat-no" title="statement not covered" >    tokenJson = await AsyncStorage.getItem(TOKEN_KEY);</span>
  } else {
<span class="cstat-no" title="statement not covered" >    tokenJson = await SecureStore.getItemAsync(TOKEN_KEY);</span>
  }
&nbsp;
<span class="cstat-no" title="statement not covered" >  if (!tokenJson) {</span>
<span class="cstat-no" title="statement not covered" >    return null;</span>
  }
&nbsp;
<span class="cstat-no" title="statement not covered" >  try {</span>
<span class="cstat-no" title="statement not covered" >    return JSON.parse(tokenJson);</span>
  } catch (error) {
<span class="cstat-no" title="statement not covered" >    console.error('Failed to parse auth token from storage. Clearing corrupted token.', error);</span>
    // Clean up the corrupted value
<span class="cstat-no" title="statement not covered" >    await deleteToken();</span>
<span class="cstat-no" title="statement not covered" >    return null;</span>
  }
}
&nbsp;
/**
 * Deletes the authentication token from the appropriate storage.
 */
export async function <span class="fstat-no" title="function not covered" >deleteToken(</span>): Promise&lt;void&gt; {
<span class="cstat-no" title="statement not covered" >  if (IS_EXPO_GO) {</span>
<span class="cstat-no" title="statement not covered" >    await AsyncStorage.removeItem(TOKEN_KEY);</span>
  } else {
<span class="cstat-no" title="statement not covered" >    await SecureStore.deleteItemAsync(TOKEN_KEY);</span>
  }
}</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END tokenStorage.ts.html ----------


---------- sort-arrow-sprite.png ----------
(Image file - content not included)
---------- END sort-arrow-sprite.png ----------


---------- sorter.js ----------
/* eslint-disable */
var addSorting = (function() {
    'use strict';
    var cols,
        currentSort = {
            index: 0,
            desc: false
        };

    // returns the summary table element
    function getTable() {
        return document.querySelector('.coverage-summary');
    }
    // returns the thead element of the summary table
    function getTableHeader() {
        return getTable().querySelector('thead tr');
    }
    // returns the tbody element of the summary table
    function getTableBody() {
        return getTable().querySelector('tbody');
    }
    // returns the th element for nth column
    function getNthColumn(n) {
        return getTableHeader().querySelectorAll('th')[n];
    }

    function onFilterInput() {
        const searchValue = document.getElementById('fileSearch').value;
        const rows = document.getElementsByTagName('tbody')[0].children;
        for (let i = 0; i < rows.length; i++) {
            const row = rows[i];
            if (
                row.textContent
                    .toLowerCase()
                    .includes(searchValue.toLowerCase())
            ) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        }
    }

    // loads the search box
    function addSearchBox() {
        var template = document.getElementById('filterTemplate');
        var templateClone = template.content.cloneNode(true);
        templateClone.getElementById('fileSearch').oninput = onFilterInput;
        template.parentElement.appendChild(templateClone);
    }

    // loads all columns
    function loadColumns() {
        var colNodes = getTableHeader().querySelectorAll('th'),
            colNode,
            cols = [],
            col,
            i;

        for (i = 0; i < colNodes.length; i += 1) {
            colNode = colNodes[i];
            col = {
                key: colNode.getAttribute('data-col'),
                sortable: !colNode.getAttribute('data-nosort'),
                type: colNode.getAttribute('data-type') || 'string'
            };
            cols.push(col);
            if (col.sortable) {
                col.defaultDescSort = col.type === 'number';
                colNode.innerHTML =
                    colNode.innerHTML + '<span class="sorter"></span>';
            }
        }
        return cols;
    }
    // attaches a data attribute to every tr element with an object
    // of data values keyed by column name
    function loadRowData(tableRow) {
        var tableCols = tableRow.querySelectorAll('td'),
            colNode,
            col,
            data = {},
            i,
            val;
        for (i = 0; i < tableCols.length; i += 1) {
            colNode = tableCols[i];
            col = cols[i];
            val = colNode.getAttribute('data-value');
            if (col.type === 'number') {
                val = Number(val);
            }
            data[col.key] = val;
        }
        return data;
    }
    // loads all row data
    function loadData() {
        var rows = getTableBody().querySelectorAll('tr'),
            i;

        for (i = 0; i < rows.length; i += 1) {
            rows[i].data = loadRowData(rows[i]);
        }
    }
    // sorts the table using the data for the ith column
    function sortByIndex(index, desc) {
        var key = cols[index].key,
            sorter = function(a, b) {
                a = a.data[key];
                b = b.data[key];
                return a < b ? -1 : a > b ? 1 : 0;
            },
            finalSorter = sorter,
            tableBody = document.querySelector('.coverage-summary tbody'),
            rowNodes = tableBody.querySelectorAll('tr'),
            rows = [],
            i;

        if (desc) {
            finalSorter = function(a, b) {
                return -1 * sorter(a, b);
            };
        }

        for (i = 0; i < rowNodes.length; i += 1) {
            rows.push(rowNodes[i]);
            tableBody.removeChild(rowNodes[i]);
        }

        rows.sort(finalSorter);

        for (i = 0; i < rows.length; i += 1) {
            tableBody.appendChild(rows[i]);
        }
    }
    // removes sort indicators for current column being sorted
    function removeSortIndicators() {
        var col = getNthColumn(currentSort.index),
            cls = col.className;

        cls = cls.replace(/ sorted$/, '').replace(/ sorted-desc$/, '');
        col.className = cls;
    }
    // adds sort indicators for current column being sorted
    function addSortIndicators() {
        getNthColumn(currentSort.index).className += currentSort.desc
            ? ' sorted-desc'
            : ' sorted';
    }
    // adds event listeners for all sorter widgets
    function enableUI() {
        var i,
            el,
            ithSorter = function ithSorter(i) {
                var col = cols[i];

                return function() {
                    var desc = col.defaultDescSort;

                    if (currentSort.index === i) {
                        desc = !currentSort.desc;
                    }
                    sortByIndex(i, desc);
                    removeSortIndicators();
                    currentSort.index = i;
                    currentSort.desc = desc;
                    addSortIndicators();
                };
            };
        for (i = 0; i < cols.length; i += 1) {
            if (cols[i].sortable) {
                // add the click event handler on the th so users
                // dont have to click on those tiny arrows
                el = getNthColumn(i).querySelector('.sorter').parentElement;
                if (el.addEventListener) {
                    el.addEventListener('click', ithSorter(i));
                } else {
                    el.attachEvent('onclick', ithSorter(i));
                }
            }
        }
    }
    // adds sorting functionality to the UI
    return function() {
        if (!getTable()) {
            return;
        }
        cols = loadColumns();
        loadData();
        addSearchBox();
        addSortIndicators();
        enableUI();
    };
})();

window.addEventListener('load', addSorting);

---------- END sorter.js ----------


---------- dateUtils.ts.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for utils/dateUtils.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">utils</a> dateUtils.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/31</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/16</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/3</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/23</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/utils/dateUtils.ts
// utils/dateUtils.ts
import { format, parseISO, formatISO, isValid } from 'date-fns';
import { getDateFnLocale } from '../localization/i18n'; // Import for locale
&nbsp;
/**
 * Formats a Date object, timestamp (number), or ISO date string (YYYY-MM-DD)
 * into a standard YYYY-MM-DD string representation.
 * Returns an empty string if the input is invalid.
 * @param dateInput - The date to format (Date object, timestamp number, or 'YYYY-MM-DD' string).
 * @returns The formatted date string 'YYYY-MM-DD' or empty string on error.
 */
export const formatDateISO = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(d</span>ateInput: number | string | Date): string =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
        let dateObj: Date;
<span class="cstat-no" title="statement not covered" >        if (dateInput instanceof Date) <span class="cstat-no" title="statement not covered" >dateObj = dateInput;</span></span>
        else <span class="cstat-no" title="statement not covered" >if (typeof dateInput === 'string') <span class="cstat-no" title="statement not covered" >dateObj = parseISO(dateInput);</span></span>
        else <span class="cstat-no" title="statement not covered" >if (typeof dateInput === 'number') <span class="cstat-no" title="statement not covered" >dateObj = new Date(dateInput);</span></span>
        else <span class="cstat-no" title="statement not covered" >throw new Error("Invalid input type");</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >        if (!isValid(dateObj)) <span class="cstat-no" title="statement not covered" >throw new Error("Invalid date value");</span></span>
<span class="cstat-no" title="statement not covered" >        return formatISO(dateObj, { representation: 'date' });</span>
    } catch (error) {
<span class="cstat-no" title="statement not covered" >        console.error("Error in formatDateISO:", error, "Input:", dateInput);</span>
<span class="cstat-no" title="statement not covered" >        return "";</span>
    }
};
&nbsp;
/**
 * Asynchronously formats a Date object, timestamp (number), or ISO date string (YYYY-MM-DD)
 * into a human-readable format (e.g., "MMMM dd, yyyy") using the current app locale.
 * Returns 'Invalid Date' if the input is invalid.
 * @param dateInput - The date to format (Date object, timestamp number, or 'YYYY-MM-DD' string).
 * @returns The formatted readable date string or 'Invalid Date' on error.
 */
export const formatDateReadableAsync = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (dateInput: number | string | Date): Promise&lt;string&gt; =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    try {</span>
        let dateObj: Date;
<span class="cstat-no" title="statement not covered" >        if (dateInput instanceof Date) <span class="cstat-no" title="statement not covered" >dateObj = dateInput;</span></span>
        else <span class="cstat-no" title="statement not covered" >if (typeof dateInput === 'string') <span class="cstat-no" title="statement not covered" >dateObj = parseISO(dateInput);</span></span>
        else <span class="cstat-no" title="statement not covered" >if (typeof dateInput === 'number') <span class="cstat-no" title="statement not covered" >dateObj = new Date(dateInput);</span></span>
        else <span class="cstat-no" title="statement not covered" >throw new Error("Invalid input type");</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >        if (!isValid(dateObj)) <span class="cstat-no" title="statement not covered" >throw new Error("Invalid date value");</span></span>
&nbsp;
        const locale = <span class="cstat-no" title="statement not covered" >await getDateFnLocale();</span> // Get date-fns locale
<span class="cstat-no" title="statement not covered" >        return format(dateObj, 'MMMM dd, yyyy', { locale });</span>
    } catch (error) {
<span class="cstat-no" title="statement not covered" >         console.error("Error in formatDateReadableAsync:", error, "Input:", dateInput);</span>
<span class="cstat-no" title="statement not covered" >         return 'Invalid Date'; </span>// Fallback for display
    }
};
&nbsp;
/**
 * Gets today's date as a standard YYYY-MM-DD string.
 * @returns Today's date in 'YYYY-MM-DD' format.
 */
export const getTodayDateString = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span>: string =&gt; {</span>
<span class="cstat-no" title="statement not covered" >  return formatISO(new Date(), { representation: 'date' });</span>
};</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END dateUtils.ts.html ----------


---------- foodIconMatcher.ts.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for utils/foodIconMatcher.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">utils</a> foodIconMatcher.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/73</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/62</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/10</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/66</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a>
<a name='L128'></a><a href='#L128'>128</a>
<a name='L129'></a><a href='#L129'>129</a>
<a name='L130'></a><a href='#L130'>130</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/utils/foodIconMatcher.ts
import { foodIconDefinitions } from '../assets/food_icons/iconDefinitions';
import i18n, { t, TranslationKey } from '../localization/i18n';
import { LanguageCode } from '../types/settings';
&nbsp;
const normalizeFoodNameForMatching = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(n</span>ame: string): string =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    return name.toLowerCase()</span>
        .replace(/[()",.&amp;'/#!$%^*;:{}=_`~?]/g, '')
        .trim();
};
&nbsp;
const getNormalizedWords = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(n</span>ame: string): string[] =&gt; {</span>
    const normalizedName = <span class="cstat-no" title="statement not covered" >normalizeFoodNameForMatching(name);</span>
    const commonFilterWords = <span class="cstat-no" title="statement not covered" >['and', 'with', 'of', 'a', 'the', 'in', 'on', 'for', 'g', 'ml', 'гр', 'мл'];</span>
<span class="cstat-no" title="statement not covered" >    return normalizedName</span>
        .split(/\s+/)
        .filter(<span class="fstat-no" title="function not covered" >wo</span>rd =&gt; <span class="cstat-no" title="statement not covered" >word.length &gt; 1 &amp;&amp; !commonFilterWords.includes(word.toLowerCase()))</span>;
};
&nbsp;
/**
 * Finds the best matching icon for a given food name based on localized tags.
 * @param foodName The name of the food.
 * @param foodNameLocale The detected language of the foodName string (e.g., 'en', 'ru', 'he').
 * @returns An emoji string for the icon, or null if no good match is found.
 */
export const findBestIcon = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(f</span>oodName: string, foodNameLocale: LanguageCode): string | null =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (!foodName || foodName.trim() === '') {</span>
<span class="cstat-no" title="statement not covered" >        return null;</span>
    }
&nbsp;
    const normalizedFoodNameQuery = <span class="cstat-no" title="statement not covered" >normalizeFoodNameForMatching(foodName);</span>
    const foodNameWords = <span class="cstat-no" title="statement not covered" >getNormalizedWords(foodName);</span>
&nbsp;
    // console.log(`[findBestIcon START] Food: "${foodName}", NormQuery: "${normalizedFoodNameQuery}", Words: [${foodNameWords.join(', ')}], FoodNameLocale: ${foodNameLocale}`);
&nbsp;
    let bestMatch: { icon: string; score: number; priority: number } | null = <span class="cstat-no" title="statement not covered" >null;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    for (const definition of foodIconDefinitions) {</span>
        let currentScore = <span class="cstat-no" title="statement not covered" >0;</span>
        let matchFoundInDefinition = <span class="cstat-no" title="statement not covered" >false;</span>
        const fullTagKey = <span class="cstat-no" title="statement not covered" >`foodIconTags.${definition.tagKey}` as TranslationKey;</span>
        let localizedTags: string[] = <span class="cstat-no" title="statement not covered" >[];</span>
        let effectiveTagLocale: LanguageCode = <span class="cstat-no" title="statement not covered" >foodNameLocale;</span> // The locale from which tags were actually sourced
&nbsp;
<span class="cstat-no" title="statement not covered" >        try {</span>
            const tagsForDetectedLocale = <span class="cstat-no" title="statement not covered" >i18n.t(fullTagKey, { locale: foodNameLocale, returnObjects: true, defaultValue: null });</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >            if (Array.isArray(tagsForDetectedLocale) &amp;&amp; tagsForDetectedLocale.length &gt; 0) {</span>
<span class="cstat-no" title="statement not covered" >                localizedTags = tagsForDetectedLocale;</span>
            } else {
<span class="cstat-no" title="statement not covered" >                if (foodNameLocale !== 'en' &amp;&amp; definition.tagKey !== 'unknownFood' &amp;&amp; definition.tagKey !== 'genericMeal') {</span>
                    const tagsForEnglishFallback = <span class="cstat-no" title="statement not covered" >i18n.t(fullTagKey, { locale: 'en', returnObjects: true, defaultValue: [] });</span>
<span class="cstat-no" title="statement not covered" >                    if (Array.isArray(tagsForEnglishFallback) &amp;&amp; tagsForEnglishFallback.length &gt; 0) {</span>
<span class="cstat-no" title="statement not covered" >                        localizedTags = tagsForEnglishFallback;</span>
<span class="cstat-no" title="statement not covered" >                        effectiveTagLocale = 'en'; </span>// Mark that we used English fallback tags
                    }
                }
            }
        } catch (e) {
<span class="cstat-no" title="statement not covered" >            console.error(`[findBestIcon] ERROR fetching/processing translation for key: ${fullTagKey} in foodNameLocale: ${foodNameLocale}. FoodName: "${foodName}"`, e);</span>
<span class="cstat-no" title="statement not covered" >            localizedTags = [];</span>
        }
&nbsp;
<span class="cstat-no" title="statement not covered" >        if (localizedTags.length === 0 &amp;&amp; definition.tagKey !== 'unknownFood' &amp;&amp; definition.tagKey !== 'genericMeal') {</span>
<span class="cstat-no" title="statement not covered" >            continue;</span>
        }
        
        // if (definition.tagKey === 'redMeat' &amp;&amp; normalizedFoodNameQuery.includes(normalizeFoodNameForMatching('סטייק'))) {
        //      console.log(`[findBestIcon DEBUG STEEK] Checking 'redMeat' for "${foodName}". Tags sourced from locale '${effectiveTagLocale}': [${localizedTags.join(', ')}]. Query: "${normalizedFoodNameQuery}"`);
        // }
&nbsp;
<span class="cstat-no" title="statement not covered" >        for (const localizedTag of localizedTags) {</span>
            const lowerLocalizedTag = <span class="cstat-no" title="statement not covered" >localizedTag.toLowerCase().trim();</span>
<span class="cstat-no" title="statement not covered" >            if (!lowerLocalizedTag) <span class="cstat-no" title="statement not covered" >continue;</span></span>
&nbsp;
<span class="cstat-no" title="statement not covered" >            if (lowerLocalizedTag === normalizedFoodNameQuery) {</span>
<span class="cstat-no" title="statement not covered" >                currentScore = Math.max(currentScore, 100);</span>
<span class="cstat-no" title="statement not covered" >                matchFoundInDefinition = true;</span>
<span class="cstat-no" title="statement not covered" >                break;</span>
            }
&nbsp;
<span class="cstat-no" title="statement not covered" >            if (normalizedFoodNameQuery.includes(lowerLocalizedTag)) {</span>
<span class="cstat-no" title="statement not covered" >                currentScore = Math.max(currentScore, 70 + lowerLocalizedTag.length);</span>
<span class="cstat-no" title="statement not covered" >                matchFoundInDefinition = true;</span>
            }
            
<span class="cstat-no" title="statement not covered" >            if (foodNameWords.some(<span class="fstat-no" title="function not covered" >fo</span>odWord =&gt; <span class="cstat-no" title="statement not covered" >foodWord.length &gt; 1 &amp;&amp; lowerLocalizedTag.includes(foodWord))</span>) {</span>
<span class="cstat-no" title="statement not covered" >                currentScore = Math.max(currentScore, 60);</span>
<span class="cstat-no" title="statement not covered" >                matchFoundInDefinition = true;</span>
            }
        }
        
<span class="cstat-no" title="statement not covered" >        if (!matchFoundInDefinition &amp;&amp; localizedTags.length &gt; 0) {</span>
<span class="cstat-no" title="statement not covered" >            for (const localizedTag of localizedTags) {</span>
                const tagWords = <span class="cstat-no" title="statement not covered" >localizedTag.toLowerCase().trim().split(/\s+/).filter(<span class="fstat-no" title="function not covered" >tw</span> =&gt; <span class="cstat-no" title="statement not covered" >tw.length &gt; 1)</span>;</span>
<span class="cstat-no" title="statement not covered" >                if (tagWords.some(<span class="fstat-no" title="function not covered" >tw</span> =&gt; <span class="cstat-no" title="statement not covered" >normalizedFoodNameQuery.includes(tw))</span>) {</span>
<span class="cstat-no" title="statement not covered" >                    currentScore = Math.max(currentScore, 50);</span>
<span class="cstat-no" title="statement not covered" >                    matchFoundInDefinition = true;</span>
<span class="cstat-no" title="statement not covered" >                    break;</span>
                }
            }
        }
&nbsp;
<span class="cstat-no" title="statement not covered" >        if (matchFoundInDefinition) {</span>
            const priority = <span class="cstat-no" title="statement not covered" >definition.priority || 0;</span>
<span class="cstat-no" title="statement not covered" >            if (!bestMatch || currentScore &gt; bestMatch.score || (currentScore === bestMatch.score &amp;&amp; priority &gt; bestMatch.priority)) {</span>
<span class="cstat-no" title="statement not covered" >                bestMatch = { icon: definition.icon, score: currentScore, priority };</span>
            }
        }
    }
&nbsp;
<span class="cstat-no" title="statement not covered" >    if (bestMatch &amp;&amp; bestMatch.score &gt; 0) {</span>
        // console.log(`[findBestIcon SUCCESS] For "${foodName}" (FoodNameLocale: ${foodNameLocale}): ${bestMatch.icon} (Score: ${bestMatch.score}, Prio: ${bestMatch.priority})`);
<span class="cstat-no" title="statement not covered" >        return bestMatch.icon;</span>
    }
&nbsp;
    const genericMealDefinition = <span class="cstat-no" title="statement not covered" >foodIconDefinitions.find(<span class="fstat-no" title="function not covered" >de</span>f =&gt; <span class="cstat-no" title="statement not covered" >def.tagKey === 'genericMeal')</span>;</span>
<span class="cstat-no" title="statement not covered" >    if (genericMealDefinition) {</span>
        const genericMealKey = <span class="cstat-no" title="statement not covered" >`foodIconTags.${genericMealDefinition.tagKey}` as TranslationKey;</span>
        // Use foodNameLocale for generic meal tags as well.
        const genericMealTagsResult = <span class="cstat-no" title="statement not covered" >i18n.t(genericMealKey, { locale: foodNameLocale, returnObjects: true, defaultValue: [] });</span>
<span class="cstat-no" title="statement not covered" >        if (Array.isArray(genericMealTagsResult) &amp;&amp; genericMealTagsResult.some(<span class="fstat-no" title="function not covered" >ta</span>g =&gt; <span class="cstat-no" title="statement not covered" >normalizedFoodNameQuery.includes(tag.toLowerCase().trim()))</span>) {</span>
<span class="cstat-no" title="statement not covered" >            return genericMealDefinition.icon;</span>
        }
    }
    
    const unknownFoodDefinition = <span class="cstat-no" title="statement not covered" >foodIconDefinitions.find(<span class="fstat-no" title="function not covered" >de</span>f =&gt; <span class="cstat-no" title="statement not covered" >def.tagKey === 'unknownFood')</span>;</span>
    // console.log(`[findBestIcon NO MATCH] For "${foodName}" (FoodNameLocale: ${foodNameLocale}). Returning unknown icon: ${unknownFoodDefinition ? unknownFoodDefinition.icon : 'ERROR_NO_UNKNOWN_ICON_DEF'}`);
<span class="cstat-no" title="statement not covered" >    return unknownFoodDefinition ? unknownFoodDefinition.icon : null;</span>
};</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END foodIconMatcher.ts.html ----------


---------- gradingUtils.ts.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for utils/gradingUtils.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">utils</a> gradingUtils.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/110</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/135</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/3</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/82</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a>
<a name='L74'></a><a href='#L74'>74</a>
<a name='L75'></a><a href='#L75'>75</a>
<a name='L76'></a><a href='#L76'>76</a>
<a name='L77'></a><a href='#L77'>77</a>
<a name='L78'></a><a href='#L78'>78</a>
<a name='L79'></a><a href='#L79'>79</a>
<a name='L80'></a><a href='#L80'>80</a>
<a name='L81'></a><a href='#L81'>81</a>
<a name='L82'></a><a href='#L82'>82</a>
<a name='L83'></a><a href='#L83'>83</a>
<a name='L84'></a><a href='#L84'>84</a>
<a name='L85'></a><a href='#L85'>85</a>
<a name='L86'></a><a href='#L86'>86</a>
<a name='L87'></a><a href='#L87'>87</a>
<a name='L88'></a><a href='#L88'>88</a>
<a name='L89'></a><a href='#L89'>89</a>
<a name='L90'></a><a href='#L90'>90</a>
<a name='L91'></a><a href='#L91'>91</a>
<a name='L92'></a><a href='#L92'>92</a>
<a name='L93'></a><a href='#L93'>93</a>
<a name='L94'></a><a href='#L94'>94</a>
<a name='L95'></a><a href='#L95'>95</a>
<a name='L96'></a><a href='#L96'>96</a>
<a name='L97'></a><a href='#L97'>97</a>
<a name='L98'></a><a href='#L98'>98</a>
<a name='L99'></a><a href='#L99'>99</a>
<a name='L100'></a><a href='#L100'>100</a>
<a name='L101'></a><a href='#L101'>101</a>
<a name='L102'></a><a href='#L102'>102</a>
<a name='L103'></a><a href='#L103'>103</a>
<a name='L104'></a><a href='#L104'>104</a>
<a name='L105'></a><a href='#L105'>105</a>
<a name='L106'></a><a href='#L106'>106</a>
<a name='L107'></a><a href='#L107'>107</a>
<a name='L108'></a><a href='#L108'>108</a>
<a name='L109'></a><a href='#L109'>109</a>
<a name='L110'></a><a href='#L110'>110</a>
<a name='L111'></a><a href='#L111'>111</a>
<a name='L112'></a><a href='#L112'>112</a>
<a name='L113'></a><a href='#L113'>113</a>
<a name='L114'></a><a href='#L114'>114</a>
<a name='L115'></a><a href='#L115'>115</a>
<a name='L116'></a><a href='#L116'>116</a>
<a name='L117'></a><a href='#L117'>117</a>
<a name='L118'></a><a href='#L118'>118</a>
<a name='L119'></a><a href='#L119'>119</a>
<a name='L120'></a><a href='#L120'>120</a>
<a name='L121'></a><a href='#L121'>121</a>
<a name='L122'></a><a href='#L122'>122</a>
<a name='L123'></a><a href='#L123'>123</a>
<a name='L124'></a><a href='#L124'>124</a>
<a name='L125'></a><a href='#L125'>125</a>
<a name='L126'></a><a href='#L126'>126</a>
<a name='L127'></a><a href='#L127'>127</a>
<a name='L128'></a><a href='#L128'>128</a>
<a name='L129'></a><a href='#L129'>129</a>
<a name='L130'></a><a href='#L130'>130</a>
<a name='L131'></a><a href='#L131'>131</a>
<a name='L132'></a><a href='#L132'>132</a>
<a name='L133'></a><a href='#L133'>133</a>
<a name='L134'></a><a href='#L134'>134</a>
<a name='L135'></a><a href='#L135'>135</a>
<a name='L136'></a><a href='#L136'>136</a>
<a name='L137'></a><a href='#L137'>137</a>
<a name='L138'></a><a href='#L138'>138</a>
<a name='L139'></a><a href='#L139'>139</a>
<a name='L140'></a><a href='#L140'>140</a>
<a name='L141'></a><a href='#L141'>141</a>
<a name='L142'></a><a href='#L142'>142</a>
<a name='L143'></a><a href='#L143'>143</a>
<a name='L144'></a><a href='#L144'>144</a>
<a name='L145'></a><a href='#L145'>145</a>
<a name='L146'></a><a href='#L146'>146</a>
<a name='L147'></a><a href='#L147'>147</a>
<a name='L148'></a><a href='#L148'>148</a>
<a name='L149'></a><a href='#L149'>149</a>
<a name='L150'></a><a href='#L150'>150</a>
<a name='L151'></a><a href='#L151'>151</a>
<a name='L152'></a><a href='#L152'>152</a>
<a name='L153'></a><a href='#L153'>153</a>
<a name='L154'></a><a href='#L154'>154</a>
<a name='L155'></a><a href='#L155'>155</a>
<a name='L156'></a><a href='#L156'>156</a>
<a name='L157'></a><a href='#L157'>157</a>
<a name='L158'></a><a href='#L158'>158</a>
<a name='L159'></a><a href='#L159'>159</a>
<a name='L160'></a><a href='#L160'>160</a>
<a name='L161'></a><a href='#L161'>161</a>
<a name='L162'></a><a href='#L162'>162</a>
<a name='L163'></a><a href='#L163'>163</a>
<a name='L164'></a><a href='#L164'>164</a>
<a name='L165'></a><a href='#L165'>165</a>
<a name='L166'></a><a href='#L166'>166</a>
<a name='L167'></a><a href='#L167'>167</a>
<a name='L168'></a><a href='#L168'>168</a>
<a name='L169'></a><a href='#L169'>169</a>
<a name='L170'></a><a href='#L170'>170</a>
<a name='L171'></a><a href='#L171'>171</a>
<a name='L172'></a><a href='#L172'>172</a>
<a name='L173'></a><a href='#L173'>173</a>
<a name='L174'></a><a href='#L174'>174</a>
<a name='L175'></a><a href='#L175'>175</a>
<a name='L176'></a><a href='#L176'>176</a>
<a name='L177'></a><a href='#L177'>177</a>
<a name='L178'></a><a href='#L178'>178</a>
<a name='L179'></a><a href='#L179'>179</a>
<a name='L180'></a><a href='#L180'>180</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/utils/gradingUtils.ts
import { Food } from '../types/food';
import { Settings } from '../types/settings';
&nbsp;
export type GradeLetter = 'A' | 'B' | 'C' | 'D' | 'F';
&nbsp;
export interface FoodGradeResult {
    letter: GradeLetter;
    color: string;
    score: number; // Underlying score for potential adjustments
}
&nbsp;
export const gradeColors: Record&lt;GradeLetter, string&gt; = <span class="cstat-no" title="statement not covered" >{</span>
    A: '#4CAF50', // Green
    B: '#8BC34A', // Light Green
    C: '#FFC107', // Amber/Yellow
    D: '#FF9800', // Orange
    F: '#F44336', // Red
};
&nbsp;
const mapScoreToGradeDetails = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(s</span>core: number): FoodGradeResult =&gt; {</span>
    let letter: GradeLetter;
    const clampedScore = <span class="cstat-no" title="statement not covered" >Math.max(0, Math.min(100, Math.round(score)));</span> // Ensure score is 0-100
&nbsp;
<span class="cstat-no" title="statement not covered" >    if (clampedScore &gt;= 85) <span class="cstat-no" title="statement not covered" >letter = 'A';</span></span>
    else <span class="cstat-no" title="statement not covered" >if (clampedScore &gt;= 70) <span class="cstat-no" title="statement not covered" >letter = 'B';</span></span>
    else <span class="cstat-no" title="statement not covered" >if (clampedScore &gt;= 55) <span class="cstat-no" title="statement not covered" >letter = 'C';</span></span>
    else <span class="cstat-no" title="statement not covered" >if (clampedScore &gt;= 40) <span class="cstat-no" title="statement not covered" >letter = 'D';</span></span>
    else <span class="cstat-no" title="statement not covered" >letter = 'F';</span>
<span class="cstat-no" title="statement not covered" >    return { letter, color: gradeColors[letter], score: clampedScore };</span>
};
&nbsp;
/**
 * Calculates a base grade for a food item (per 100g) based on refined heuristics.
 * @param food The food item (calories, protein, carbs, fat per 100g).
 * @returns FoodGradeResult or null if grading is not possible.
 */
export const calculateBaseFoodGrade = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(f</span>ood: Food): FoodGradeResult | null =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (!food || typeof food.calories !== 'number' || typeof food.protein !== 'number' || typeof food.carbs !== 'number' || typeof food.fat !== 'number') {</span>
<span class="cstat-no" title="statement not covered" >        return null;</span>
    }
&nbsp;
    const { calories, protein, carbs, fat } = <span class="cstat-no" title="statement not covered" >food;</span>
    let score = <span class="cstat-no" title="statement not covered" >70;</span> // Start with a baseline score (e.g., C grade)
&nbsp;
    // --- 1. Calorie Density (per 100g) ---
<span class="cstat-no" title="statement not covered" >    if (calories &lt; 100) <span class="cstat-no" title="statement not covered" >score += 15; </span>// Low density</span>
    else <span class="cstat-no" title="statement not covered" >if (calories &lt; 200) <span class="cstat-no" title="statement not covered" >score += 7;</span></span>
    else <span class="cstat-no" title="statement not covered" >if (calories &gt; 350) <span class="cstat-no" title="statement not covered" >score -= (calories - 350) * 0.08; </span></span>// Penalize high density
<span class="cstat-no" title="statement not covered" >    if (calories &gt; 500) <span class="cstat-no" title="statement not covered" >score -= 15; </span></span>// Further penalty for very high density
&nbsp;
    // --- 2. Protein Content (per 100g) ---
<span class="cstat-no" title="statement not covered" >    if (protein &gt; 20) <span class="cstat-no" title="statement not covered" >score += 20; </span>// Excellent protein</span>
    else <span class="cstat-no" title="statement not covered" >if (protein &gt; 10) <span class="cstat-no" title="statement not covered" >score += 10; </span>// Good protein</span>
    else <span class="cstat-no" title="statement not covered" >if (protein &lt; 5 &amp;&amp; calories &gt; 150) <span class="cstat-no" title="statement not covered" >score -= 10; </span></span>// Low protein for moderate/high cal food
&nbsp;
    // --- 3. Fat Content &amp; Type (Heuristic for "quality" based on balance) ---
    const caloriesFromFat = <span class="cstat-no" title="statement not covered" >fat * 9;</span>
    const percentageCaloriesFromFat = <span class="cstat-no" title="statement not covered" >(calories &gt; 0) ? (caloriesFromFat / calories) * 100 : 0;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    if (fat &gt; 25) { // High total fat</span>
<span class="cstat-no" title="statement not covered" >        score -= (fat - 25) * 0.5;</span>
<span class="cstat-no" title="statement not covered" >        if (protein &lt; fat * 0.5 &amp;&amp; protein &lt; 10) { // High fat, low protein suggests less ideal source</span>
<span class="cstat-no" title="statement not covered" >            score -= 10;</span>
        }
    } else <span class="cstat-no" title="statement not covered" >if (fat &lt; 5 &amp;&amp; percentageCaloriesFromFat &lt; 20 &amp;&amp; protein &gt; 10) { // Low fat, potentially good if protein is present</span>
<span class="cstat-no" title="statement not covered" >        score += 5;</span>
    }
<span class="cstat-no" title="statement not covered" >    if (percentageCaloriesFromFat &gt; 50) <span class="cstat-no" title="statement not covered" >score -= 15; </span></span>// More than 50% cals from fat is heavily penalized
<span class="cstat-no" title="statement not covered" >    if (percentageCaloriesFromFat &gt; 35 &amp;&amp; percentageCaloriesFromFat &lt;= 50) <span class="cstat-no" title="statement not covered" >score -= 7;</span></span>
&nbsp;
&nbsp;
    // --- 4. Carbohydrate Content &amp; Type (Heuristic) ---
    const caloriesFromCarbs = <span class="cstat-no" title="statement not covered" >carbs * 4;</span>
    const percentageCaloriesFromCarbs = <span class="cstat-no" title="statement not covered" >(calories &gt; 0) ? (caloriesFromCarbs / calories) * 100 : 0;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    if (carbs &gt; 40) { // High total carbs</span>
<span class="cstat-no" title="statement not covered" >        score -= (carbs - 40) * 0.3;</span>
<span class="cstat-no" title="statement not covered" >        if (protein &lt; carbs * 0.1 &amp;&amp; protein &lt; 7) { // High carb, very low protein suggests refined carbs</span>
<span class="cstat-no" title="statement not covered" >            score -= 10;</span>
        }
    }
<span class="cstat-no" title="statement not covered" >    if (percentageCaloriesFromCarbs &gt; 60) <span class="cstat-no" title="statement not covered" >score -= 15; </span></span>// More than 60% cals from carbs
<span class="cstat-no" title="statement not covered" >    if (percentageCaloriesFromCarbs &gt; 50 &amp;&amp; percentageCaloriesFromCarbs &lt;= 60) <span class="cstat-no" title="statement not covered" >score -=7;</span></span>
&nbsp;
    // --- 5. Macronutrient Balance (Percentage of Calories) ---
    const caloriesFromProtein = <span class="cstat-no" title="statement not covered" >protein * 4;</span>
    const percentageCaloriesFromProtein = <span class="cstat-no" title="statement not covered" >(calories &gt; 0) ? (caloriesFromProtein / calories) * 100 : 0;</span>
&nbsp;
    // Ideal ranges (approx): Protein 20-30%, Fat 20-30%, Carbs 40-50%
    // Bonus for being within a generally healthy profile
    let balanceBonus = <span class="cstat-no" title="statement not covered" >0;</span>
<span class="cstat-no" title="statement not covered" >    if (percentageCaloriesFromProtein &gt;= 15 &amp;&amp; percentageCaloriesFromProtein &lt;= 35) <span class="cstat-no" title="statement not covered" >balanceBonus += 4;</span></span>
<span class="cstat-no" title="statement not covered" >    if (percentageCaloriesFromFat &gt;= 15 &amp;&amp; percentageCaloriesFromFat &lt;= 35) <span class="cstat-no" title="statement not covered" >balanceBonus += 4;</span></span>
<span class="cstat-no" title="statement not covered" >    if (percentageCaloriesFromCarbs &gt;= 35 &amp;&amp; percentageCaloriesFromCarbs &lt;= 55) <span class="cstat-no" title="statement not covered" >balanceBonus += 4;</span></span>
<span class="cstat-no" title="statement not covered" >    if (balanceBonus &gt;=10) <span class="cstat-no" title="statement not covered" >score += 10; </span>// Max 10 points for good balance</span>
    else <span class="cstat-no" title="statement not covered" >if (balanceBonus &gt;=8) <span class="cstat-no" title="statement not covered" >score +=5;</span></span>
&nbsp;
    // Penalty for extreme imbalance if not already heavily penalized
<span class="cstat-no" title="statement not covered" >    if (protein &lt; 5 &amp;&amp; fat &gt; 20 &amp;&amp; carbs &gt; 30 &amp;&amp; calories &gt; 200) { // Low protein, high fat &amp; carbs</span>
<span class="cstat-no" title="statement not covered" >        score -= 15;</span>
    }
&nbsp;
<span class="cstat-no" title="statement not covered" >    return mapScoreToGradeDetails(score);</span>
};
&nbsp;
/**
 * Calculates a grade for a specific daily entry, considering portion size and daily goals.
 * @param food The food item.
 * @param consumedGrams The amount of the food consumed in grams.
 * @param dailyGoals The user's daily macronutrient goals.
 * @returns FoodGradeResult or null if grading is not possible.
 */
export const calculateDailyEntryGrade = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(</span></span>
    food: Food,
    consumedGrams: number,
    dailyGoals: Settings['dailyGoals']
): FoodGradeResult | null =&gt; {
    const baseGradeResult = <span class="cstat-no" title="statement not covered" >calculateBaseFoodGrade(food);</span>
<span class="cstat-no" title="statement not covered" >    if (!baseGradeResult) <span class="cstat-no" title="statement not covered" >return null;</span></span>
<span class="cstat-no" title="statement not covered" >    if (consumedGrams &lt;= 0) <span class="cstat-no" title="statement not covered" >return baseGradeResult;</span></span>
&nbsp;
    let currentScore = <span class="cstat-no" title="statement not covered" >baseGradeResult.score;</span>
&nbsp;
    // Ensure dailyGoals are valid numbers, default to avoid division by zero or nonsensical percentages
    const safeGoals = <span class="cstat-no" title="statement not covered" >{</span>
        calories: Math.max(1, dailyGoals.calories || 2000), // Minimum 1 to avoid /0
        protein: Math.max(1, dailyGoals.protein || 100),
        carbs: Math.max(1, dailyGoals.carbs || 200),
        fat: Math.max(1, dailyGoals.fat || 70),
    };
&nbsp;
    const factor = <span class="cstat-no" title="statement not covered" >consumedGrams / 100;</span>
    const consumedCalories = <span class="cstat-no" title="statement not covered" >food.calories * factor;</span>
    const consumedProtein = <span class="cstat-no" title="statement not covered" >food.protein * factor;</span>
    const consumedCarbs = <span class="cstat-no" title="statement not covered" >food.carbs * factor;</span>
    const consumedFat = <span class="cstat-no" title="statement not covered" >food.fat * factor;</span>
&nbsp;
    // --- Adjustments based on portion size relative to daily goals ---
&nbsp;
    // Penalty for consuming a large percentage of daily calorie allowance in one go
    const caloriePortionPercentage = <span class="cstat-no" title="statement not covered" >(consumedCalories / safeGoals.calories) * 100;</span>
<span class="cstat-no" title="statement not covered" >    if (caloriePortionPercentage &gt; 50) <span class="cstat-no" title="statement not covered" >currentScore -= 20; </span>// &gt;50% of daily cals in one item</span>
    else <span class="cstat-no" title="statement not covered" >if (caloriePortionPercentage &gt; 35) <span class="cstat-no" title="statement not covered" >currentScore -= 10; </span></span>// &gt;35%
&nbsp;
    // Penalty for consuming a large percentage of daily fat allowance
    const fatPortionPercentage = <span class="cstat-no" title="statement not covered" >(consumedFat / safeGoals.fat) * 100;</span>
<span class="cstat-no" title="statement not covered" >    if (fatPortionPercentage &gt; 60) <span class="cstat-no" title="statement not covered" >currentScore -= 15; </span>// &gt;60% of daily fat</span>
    else <span class="cstat-no" title="statement not covered" >if (fatPortionPercentage &gt; 40) <span class="cstat-no" title="statement not covered" >currentScore -= 7;</span></span>
&nbsp;
    // Penalty for consuming a large percentage of daily carb allowance
    const carbPortionPercentage = <span class="cstat-no" title="statement not covered" >(consumedCarbs / safeGoals.carbs) * 100;</span>
<span class="cstat-no" title="statement not covered" >    if (carbPortionPercentage &gt; 60) <span class="cstat-no" title="statement not covered" >currentScore -= 10; </span>// &gt;60% of daily carbs</span>
    else <span class="cstat-no" title="statement not covered" >if (carbPortionPercentage &gt; 45) <span class="cstat-no" title="statement not covered" >currentScore -= 5;</span></span>
&nbsp;
    // Bonus for significant protein contribution if calories are reasonable
    const proteinPortionPercentage = <span class="cstat-no" title="statement not covered" >(consumedProtein / safeGoals.protein) * 100;</span>
<span class="cstat-no" title="statement not covered" >    if (proteinPortionPercentage &gt; 25 &amp;&amp; caloriePortionPercentage &lt; 30) {</span>
<span class="cstat-no" title="statement not covered" >        currentScore += 10; </span>// Good protein hit without too many cals
    } else <span class="cstat-no" title="statement not covered" >if (proteinPortionPercentage &gt; 15 &amp;&amp; caloriePortionPercentage &lt; 20) {</span>
<span class="cstat-no" title="statement not covered" >        currentScore += 5;</span>
    }
&nbsp;
    // Mitigation for small portions of "F" grade foods
<span class="cstat-no" title="statement not covered" >    if (baseGradeResult.letter === 'F' &amp;&amp; caloriePortionPercentage &lt; 10) {</span>
<span class="cstat-no" title="statement not covered" >        currentScore += 15; </span>// Small "treat" is less impactful
    } else <span class="cstat-no" title="statement not covered" >if (baseGradeResult.letter === 'D' &amp;&amp; caloriePortionPercentage &lt; 7) {</span>
<span class="cstat-no" title="statement not covered" >        currentScore += 7;</span>
    }
&nbsp;
    // Slight penalty if a large portion of an "A" grade food makes macros significantly off for the day
<span class="cstat-no" title="statement not covered" >    if (baseGradeResult.letter === 'A' &amp;&amp;</span>
        (caloriePortionPercentage &gt; 30 || fatPortionPercentage &gt; 30 || carbPortionPercentage &gt; 30) &amp;&amp;
        consumedGrams &gt; 200 // and it's a large portion
    ) {
<span class="cstat-no" title="statement not covered" >        currentScore -= 7;</span>
    }
&nbsp;
<span class="cstat-no" title="statement not covered" >    return mapScoreToGradeDetails(currentScore);</span>
};</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END gradingUtils.ts.html ----------


---------- iconUtils.ts.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for utils/iconUtils.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">utils</a> iconUtils.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/27</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/10</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/3</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/25</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/utils/iconUtils.ts
import { findBestIcon } from './foodIconMatcher';
import { detectLanguageFromText } from './languageUtils'; // Import new utility
import { LanguageCode } from '../types/settings';
&nbsp;
const syncMemoryCache = <span class="cstat-no" title="statement not covered" >new Map&lt;string, string | null&gt;();</span>
const MAX_CACHE_SIZE = <span class="cstat-no" title="statement not covered" >300;</span>
&nbsp;
/**
 * Synchronously gets the icon identifier (e.g., emoji) for a food item.
 * It first detects the language of the food name, then uses an in-memory cache.
 * Relies on `findBestIcon` which uses localized tags based on the detected language.
 *
 * @param foodName The name of the food item.
 * @returns An icon string (emoji) or null if not found or an error occurred.
 */
export const getFoodIconUrl = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(f</span>oodName: string): string | null =&gt; {</span>
<span class="cstat-no" title="statement not covered" >  if (!foodName || foodName.trim() === '') {</span>
<span class="cstat-no" title="statement not covered" >    return null;</span>
  }
&nbsp;
  const detectedLocale = <span class="cstat-no" title="statement not covered" >detectLanguageFromText(foodName);</span>
  const normalizedNameForCache = <span class="cstat-no" title="statement not covered" >foodName.toLowerCase().trim();</span>
  const cacheKey = <span class="cstat-no" title="statement not covered" >`${detectedLocale}_${normalizedNameForCache}`;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >  if (syncMemoryCache.has(cacheKey)) {</span>
    const cachedIcon = <span class="cstat-no" title="statement not covered" >syncMemoryCache.get(cacheKey)!;</span>
    // console.log(`[getFoodIconUrl] CACHE HIT for key "${cacheKey}". Food: "${foodName}", Detected Locale: ${detectedLocale}, Icon: ${cachedIcon}`);
<span class="cstat-no" title="statement not covered" >    return cachedIcon;</span>
  }
  // console.log(`[getFoodIconUrl] CACHE MISS for key "${cacheKey}". Food: "${foodName}", Detected Locale: ${detectedLocale}. Calling findBestIcon.`);
&nbsp;
  const iconIdentifier = <span class="cstat-no" title="statement not covered" >findBestIcon(foodName, detectedLocale);</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >  if (syncMemoryCache.size &gt;= MAX_CACHE_SIZE) {</span>
    const keys = <span class="cstat-no" title="statement not covered" >Array.from(syncMemoryCache.keys());</span>
<span class="cstat-no" title="statement not covered" >    for (let i = <span class="cstat-no" title="statement not covered" >0;</span> i &lt; Math.floor(MAX_CACHE_SIZE / 4); i++) {</span>
        const randomIndex = <span class="cstat-no" title="statement not covered" >Math.floor(Math.random() * keys.length);</span>
        const keyToRemove = <span class="cstat-no" title="statement not covered" >keys.splice(randomIndex, 1)[0];</span>
<span class="cstat-no" title="statement not covered" >        if(keyToRemove) <span class="cstat-no" title="statement not covered" >syncMemoryCache.delete(keyToRemove);</span></span>
    }
    // console.log(`[getFoodIconUrl] Food icon memory cache partially cleared. New size: ${syncMemoryCache.size}`);
  }
<span class="cstat-no" title="statement not covered" >  syncMemoryCache.set(cacheKey, iconIdentifier);</span>
  // console.log(`[getFoodIconUrl] Cached new icon for key "${cacheKey}". Food: "${foodName}", Icon: ${iconIdentifier}`);
&nbsp;
<span class="cstat-no" title="statement not covered" >  return iconIdentifier;</span>
};
&nbsp;
export const clearLocalIconCache = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span>: void =&gt; {</span>
<span class="cstat-no" title="statement not covered" >  syncMemoryCache.clear();</span>
<span class="cstat-no" title="statement not covered" >  console.log("[clearLocalIconCache] In-memory food icon cache CLEARED.");</span>
};
&nbsp;
export const logLocalIconCacheSize = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >()</span>: void =&gt; {</span>
<span class="cstat-no" title="statement not covered" >  console.log(`[logLocalIconCacheSize] In-memory food icon cache size: ${syncMemoryCache.size}`);</span>
};</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END iconUtils.ts.html ----------


---------- imageUtils.ts.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for utils/imageUtils.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">utils</a> imageUtils.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/25</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/10</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/2</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/24</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/utils/imageUtils.ts
import * as ImageManipulator from 'expo-image-manipulator';
import { ImagePickerAsset } from 'expo-image-picker';
import { Alert } from 'react-native';
import * as FileSystem from 'expo-file-system';
import { t } from '../localization/i18n'; // Import t
&nbsp;
const MAX_IMAGE_DIMENSION = <span class="cstat-no" title="statement not covered" >1024;</span>
const IMAGE_COMPRESSION_QUALITY = <span class="cstat-no" title="statement not covered" >0.7;</span>
&nbsp;
export const compressImageIfNeeded = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >as</span>ync (</span>
    asset: ImagePickerAsset
): Promise&lt;ImageManipulator.ImageResult | null&gt; =&gt; {
<span class="cstat-no" title="statement not covered" >    try {</span>
        const actions: ImageManipulator.Action[] = <span class="cstat-no" title="statement not covered" >[];</span>
        let needsResize = <span class="cstat-no" title="statement not covered" >false;</span>
<span class="cstat-no" title="statement not covered" >        if (asset.width &gt; MAX_IMAGE_DIMENSION || asset.height &gt; MAX_IMAGE_DIMENSION) {</span>
<span class="cstat-no" title="statement not covered" >            needsResize = true;</span>
            const resizeOptions: ImageManipulator.ActionResize['resize'] = <span class="cstat-no" title="statement not covered" >{ width: undefined, height: undefined, };</span>
<span class="cstat-no" title="statement not covered" >            if (asset.width &gt; asset.height) <span class="cstat-no" title="statement not covered" >resizeOptions.width = MAX_IMAGE_DIMENSION;</span></span>
            else <span class="cstat-no" title="statement not covered" >resizeOptions.height = MAX_IMAGE_DIMENSION;</span>
<span class="cstat-no" title="statement not covered" >            actions.push({ resize: resizeOptions });</span>
        } else {
<span class="cstat-no" title="statement not covered" >            return null;</span>
        }
<span class="cstat-no" title="statement not covered" >        if (needsResize) {</span>
            const saveOptions: ImageManipulator.SaveOptions = <span class="cstat-no" title="statement not covered" >{</span>
                compress: IMAGE_COMPRESSION_QUALITY, format: ImageManipulator.SaveFormat.JPEG, base64: false,
            };
            const result = <span class="cstat-no" title="statement not covered" >await ImageManipulator.manipulateAsync(asset.uri, actions, saveOptions);</span>
<span class="cstat-no" title="statement not covered" >            return result;</span>
        } else {
<span class="cstat-no" title="statement not covered" >            return null;</span>
        }
    } catch (error) {
<span class="cstat-no" title="statement not covered" >        Alert.alert(t('utils.image.alertCompressionError'), t('utils.image.alertCompressionErrorMessage'));</span>
<span class="cstat-no" title="statement not covered" >        return null;</span>
    }
};
&nbsp;
export async function <span class="fstat-no" title="function not covered" >getBase64FromUri(</span>uri: string): Promise&lt;string&gt; {
<span class="cstat-no" title="statement not covered" >    try {</span>
        const base64 = <span class="cstat-no" title="statement not covered" >await FileSystem.readAsStringAsync(uri, { encoding: FileSystem.EncodingType.Base64, });</span>
<span class="cstat-no" title="statement not covered" >        return base64;</span>
    } catch (error: any) {
<span class="cstat-no" title="statement not covered" >        throw new Error(t('utils.image.errorFailedToRead', { error: error.message || 'Unknown error' }));</span>
    }
}</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END imageUtils.ts.html ----------


---------- index.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for utils</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> utils</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/367</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/289</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/34</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/316</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <div class="pad1">
<table class="coverage-summary">
<thead>
<tr>
   <th data-col="file" data-fmt="html" data-html="true" class="file">File</th>
   <th data-col="pic" data-type="number" data-fmt="html" data-html="true" class="pic"></th>
   <th data-col="statements" data-type="number" data-fmt="pct" class="pct">Statements</th>
   <th data-col="statements_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="branches" data-type="number" data-fmt="pct" class="pct">Branches</th>
   <th data-col="branches_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="functions" data-type="number" data-fmt="pct" class="pct">Functions</th>
   <th data-col="functions_raw" data-type="number" data-fmt="html" class="abs"></th>
   <th data-col="lines" data-type="number" data-fmt="pct" class="pct">Lines</th>
   <th data-col="lines_raw" data-type="number" data-fmt="html" class="abs"></th>
</tr>
</thead>
<tbody><tr>
	<td class="file low" data-value="dateUtils.ts"><a href="dateUtils.ts.html">dateUtils.ts</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="31" class="abs low">0/31</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="16" class="abs low">0/16</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="3" class="abs low">0/3</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="23" class="abs low">0/23</td>
	</tr>

<tr>
	<td class="file low" data-value="foodIconMatcher.ts"><a href="foodIconMatcher.ts.html">foodIconMatcher.ts</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="73" class="abs low">0/73</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="62" class="abs low">0/62</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="10" class="abs low">0/10</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="66" class="abs low">0/66</td>
	</tr>

<tr>
	<td class="file low" data-value="gradingUtils.ts"><a href="gradingUtils.ts.html">gradingUtils.ts</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="110" class="abs low">0/110</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="135" class="abs low">0/135</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="3" class="abs low">0/3</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="82" class="abs low">0/82</td>
	</tr>

<tr>
	<td class="file low" data-value="iconUtils.ts"><a href="iconUtils.ts.html">iconUtils.ts</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="27" class="abs low">0/27</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="10" class="abs low">0/10</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="3" class="abs low">0/3</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="25" class="abs low">0/25</td>
	</tr>

<tr>
	<td class="file low" data-value="imageUtils.ts"><a href="imageUtils.ts.html">imageUtils.ts</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="25" class="abs low">0/25</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="10" class="abs low">0/10</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="2" class="abs low">0/2</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="24" class="abs low">0/24</td>
	</tr>

<tr>
	<td class="file low" data-value="languageUtils.ts"><a href="languageUtils.ts.html">languageUtils.ts</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="23" class="abs low">0/23</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="18" class="abs low">0/18</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="1" class="abs low">0/1</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="23" class="abs low">0/23</td>
	</tr>

<tr>
	<td class="file low" data-value="macros.ts"><a href="macros.ts.html">macros.ts</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="35" class="abs low">0/35</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="14" class="abs low">0/14</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="6" class="abs low">0/6</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="32" class="abs low">0/32</td>
	</tr>

<tr>
	<td class="file low" data-value="searchUtils.ts"><a href="searchUtils.ts.html">searchUtils.ts</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="33" class="abs low">0/33</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="20" class="abs low">0/20</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="3" class="abs low">0/3</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="31" class="abs low">0/31</td>
	</tr>

<tr>
	<td class="file low" data-value="units.ts"><a href="units.ts.html">units.ts</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="6" class="abs low">0/6</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="2" class="abs low">0/2</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="1" class="abs low">0/1</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="6" class="abs low">0/6</td>
	</tr>

<tr>
	<td class="file low" data-value="validationUtils.ts"><a href="validationUtils.ts.html">validationUtils.ts</a></td>
	<td data-value="0" class="pic low">
	<div class="chart"><div class="cover-fill" style="width: 0%"></div><div class="cover-empty" style="width: 100%"></div></div>
	</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="4" class="abs low">0/4</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="2" class="abs low">0/2</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="2" class="abs low">0/2</td>
	<td data-value="0" class="pct low">0%</td>
	<td data-value="4" class="abs low">0/4</td>
	</tr>

</tbody>
</table>
</div>
                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END index.html ----------


---------- languageUtils.ts.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for utils/languageUtils.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">utils</a> languageUtils.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/23</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/18</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/1</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/23</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/utils/languageUtils.ts
import { LanguageCode } from '../types/settings';
&nbsp;
// Basic script detection character ranges
const HEBREW_REGEX = <span class="cstat-no" title="statement not covered" >/[\u0590-\u05FF]/;</span>
const CYRILLIC_REGEX = <span class="cstat-no" title="statement not covered" >/[\u0400-\u04FF]/;</span>
// Basic Latin check - very broad, English will be the default for this
const LATIN_REGEX = <span class="cstat-no" title="statement not covered" >/[a-zA-Z]/;</span>
&nbsp;
/**
 * Detects the dominant language script in a given text.
 * Prioritizes Hebrew, then Cyrillic. If neither is dominant,
 * defaults to 'en' (representing Latin script languages for icon tag purposes).
 * @param text The text to analyze.
 * @returns LanguageCode ('he', 'ru', or 'en' as default).
 */
export const detectLanguageFromText = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(t</span>ext: string): LanguageCode =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (!text || text.trim() === '') {</span>
<span class="cstat-no" title="statement not covered" >        return 'en'; </span>// Default if no text
    }
&nbsp;
    let hebrewChars = <span class="cstat-no" title="statement not covered" >0;</span>
    let cyrillicChars = <span class="cstat-no" title="statement not covered" >0;</span>
    let latinChars = <span class="cstat-no" title="statement not covered" >0;</span>
    let otherChars = <span class="cstat-no" title="statement not covered" >0;</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >    for (const char of text) {</span>
<span class="cstat-no" title="statement not covered" >        if (HEBREW_REGEX.test(char)) {</span>
<span class="cstat-no" title="statement not covered" >            hebrewChars++;</span>
        } else <span class="cstat-no" title="statement not covered" >if (CYRILLIC_REGEX.test(char)) {</span>
<span class="cstat-no" title="statement not covered" >            cyrillicChars++;</span>
        } else <span class="cstat-no" title="statement not covered" >if (LATIN_REGEX.test(char)) {</span>
<span class="cstat-no" title="statement not covered" >            latinChars++;</span>
        } else {
<span class="cstat-no" title="statement not covered" >            otherChars++;</span>
        }
    }
&nbsp;
    // Simple dominance check
    // Give a higher weight or lower threshold for Hebrew/Cyrillic if names are often short
<span class="cstat-no" title="statement not covered" >    if (hebrewChars &gt; latinChars / 2 &amp;&amp; hebrewChars &gt; cyrillicChars) { // If Hebrew chars are significant</span>
<span class="cstat-no" title="statement not covered" >        return 'he';</span>
    }
<span class="cstat-no" title="statement not covered" >    if (cyrillicChars &gt; latinChars / 2 &amp;&amp; cyrillicChars &gt; hebrewChars) { // If Cyrillic chars are significant</span>
<span class="cstat-no" title="statement not covered" >        return 'ru';</span>
    }
    
    // If primarily Latin, or mixed with no clear non-Latin dominance, default to 'en'
    // This 'en' will then correctly use English tags.
    // If the text was, e.g., French and we default to 'en', English tags are a reasonable fallback.
<span class="cstat-no" title="statement not covered" >    return 'en';</span>
};</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END languageUtils.ts.html ----------


---------- macros.ts.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for utils/macros.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">utils</a> macros.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/35</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/14</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/6</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/32</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/utils/macros.ts
import { Alert } from 'react-native';
import { getMacrosForRecipe, getMacrosForImageSingle, getMacrosForImageMultiple, getMacrosForTextMultiple, BackendError } from '../services/backendService';
import { Macros, MacrosWithFoodName, EstimatedFoodItem } from '../types/macros';
import { ImagePickerAsset } from 'expo-image-picker';
import { getBase64FromUri } from './imageUtils';
import { t } from '../localization/i18n';
&nbsp;
export function <span class="fstat-no" title="function not covered" >determineMimeType(</span>asset: { uri: string; mimeType?: string | null; fileName?: string | null; }): string {
<span class="cstat-no" title="statement not covered" >    if (asset.mimeType &amp;&amp; asset.mimeType.includes('/')) <span class="cstat-no" title="statement not covered" >return asset.mimeType;</span></span>
    const extension = <span class="cstat-no" title="statement not covered" >asset.uri.split('.').pop()?.toLowerCase();</span>
<span class="cstat-no" title="statement not covered" >    switch (extension) {</span>
        case 'jpg': case 'jpeg': <span class="cstat-no" title="statement not covered" >return 'image/jpeg';</span>
        case 'png': <span class="cstat-no" title="statement not covered" >return 'image/png';</span>
        default: <span class="cstat-no" title="statement not covered" >return 'image/jpeg';</span>
    }
}
&nbsp;
const handleError = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(e</span>rror: unknown, title: string) =&gt; {</span>
    const message = <span class="cstat-no" title="statement not covered" >error instanceof BackendError ? error.message : t('utils.macros.errorMessage');</span>
<span class="cstat-no" title="statement not covered" >    Alert.alert(title, message);</span>
<span class="cstat-no" title="statement not covered" >    throw error;</span>
}
&nbsp;
export async function <span class="fstat-no" title="function not covered" >getMacrosFromText(</span>foodName: string, ingredients: string): Promise&lt;MacrosWithFoodName&gt; {
<span class="cstat-no" title="statement not covered" >    try {</span>
<span class="cstat-no" title="statement not covered" >        return await getMacrosForRecipe(foodName, ingredients);</span>
    } catch (error) {
<span class="cstat-no" title="statement not covered" >        handleError(error, t('utils.macros.errorTitle'));</span>
<span class="cstat-no" title="statement not covered" >        throw error; </span>// Re-throw to allow caller to handle UI state
    }
}
&nbsp;
export async function <span class="fstat-no" title="function not covered" >getMacrosForImageFile(</span>asset: ImagePickerAsset): Promise&lt;MacrosWithFoodName&gt; {
<span class="cstat-no" title="statement not covered" >    try {</span>
        const base64File = <span class="cstat-no" title="statement not covered" >await getBase64FromUri(asset.uri);</span>
        const mimeType = <span class="cstat-no" title="statement not covered" >determineMimeType(asset);</span>
<span class="cstat-no" title="statement not covered" >        return await getMacrosForImageSingle(base64File, mimeType);</span>
    } catch (error) {
<span class="cstat-no" title="statement not covered" >        handleError(error, t('utils.macros.errorTitle'));</span>
<span class="cstat-no" title="statement not covered" >        throw error;</span>
    }
}
&nbsp;
export async function <span class="fstat-no" title="function not covered" >getMultipleFoodsFromImage(</span>base64Image: string, mimeType: string): Promise&lt;EstimatedFoodItem[]&gt; {
<span class="cstat-no" title="statement not covered" >    try {</span>
        const results = <span class="cstat-no" title="statement not covered" >await getMacrosForImageMultiple(base64Image, mimeType);</span>
<span class="cstat-no" title="statement not covered" >        if (!Array.isArray(results)) <span class="cstat-no" title="statement not covered" >throw new Error(t('utils.macros.invalidResponse'));</span></span>
<span class="cstat-no" title="statement not covered" >        return results;</span>
    } catch (error) {
<span class="cstat-no" title="statement not covered" >        handleError(error, t('utils.macros.multiItemErrorTitle'));</span>
<span class="cstat-no" title="statement not covered" >        throw error;</span>
    }
}
&nbsp;
export async function <span class="fstat-no" title="function not covered" >getMultipleFoodsFromText(</span>text: string): Promise&lt;EstimatedFoodItem[]&gt; {
<span class="cstat-no" title="statement not covered" >    try {</span>
        const results = <span class="cstat-no" title="statement not covered" >await getMacrosForTextMultiple(text);</span>
<span class="cstat-no" title="statement not covered" >        if (!Array.isArray(results)) <span class="cstat-no" title="statement not covered" >throw new Error(t('utils.macros.invalidResponse'));</span></span>
<span class="cstat-no" title="statement not covered" >        return results;</span>
    } catch (error) {
<span class="cstat-no" title="statement not covered" >        handleError(error, t('utils.macros.multiItemErrorTitle'));</span>
<span class="cstat-no" title="statement not covered" >        throw error;</span>
    }
}
&nbsp;
export { BackendError, EstimatedFoodItem, Macros, MacrosWithFoodName };</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END macros.ts.html ----------


---------- searchUtils.ts.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for utils/searchUtils.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">utils</a> searchUtils.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/33</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/20</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/3</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/31</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a>
<a name='L21'></a><a href='#L21'>21</a>
<a name='L22'></a><a href='#L22'>22</a>
<a name='L23'></a><a href='#L23'>23</a>
<a name='L24'></a><a href='#L24'>24</a>
<a name='L25'></a><a href='#L25'>25</a>
<a name='L26'></a><a href='#L26'>26</a>
<a name='L27'></a><a href='#L27'>27</a>
<a name='L28'></a><a href='#L28'>28</a>
<a name='L29'></a><a href='#L29'>29</a>
<a name='L30'></a><a href='#L30'>30</a>
<a name='L31'></a><a href='#L31'>31</a>
<a name='L32'></a><a href='#L32'>32</a>
<a name='L33'></a><a href='#L33'>33</a>
<a name='L34'></a><a href='#L34'>34</a>
<a name='L35'></a><a href='#L35'>35</a>
<a name='L36'></a><a href='#L36'>36</a>
<a name='L37'></a><a href='#L37'>37</a>
<a name='L38'></a><a href='#L38'>38</a>
<a name='L39'></a><a href='#L39'>39</a>
<a name='L40'></a><a href='#L40'>40</a>
<a name='L41'></a><a href='#L41'>41</a>
<a name='L42'></a><a href='#L42'>42</a>
<a name='L43'></a><a href='#L43'>43</a>
<a name='L44'></a><a href='#L44'>44</a>
<a name='L45'></a><a href='#L45'>45</a>
<a name='L46'></a><a href='#L46'>46</a>
<a name='L47'></a><a href='#L47'>47</a>
<a name='L48'></a><a href='#L48'>48</a>
<a name='L49'></a><a href='#L49'>49</a>
<a name='L50'></a><a href='#L50'>50</a>
<a name='L51'></a><a href='#L51'>51</a>
<a name='L52'></a><a href='#L52'>52</a>
<a name='L53'></a><a href='#L53'>53</a>
<a name='L54'></a><a href='#L54'>54</a>
<a name='L55'></a><a href='#L55'>55</a>
<a name='L56'></a><a href='#L56'>56</a>
<a name='L57'></a><a href='#L57'>57</a>
<a name='L58'></a><a href='#L58'>58</a>
<a name='L59'></a><a href='#L59'>59</a>
<a name='L60'></a><a href='#L60'>60</a>
<a name='L61'></a><a href='#L61'>61</a>
<a name='L62'></a><a href='#L62'>62</a>
<a name='L63'></a><a href='#L63'>63</a>
<a name='L64'></a><a href='#L64'>64</a>
<a name='L65'></a><a href='#L65'>65</a>
<a name='L66'></a><a href='#L66'>66</a>
<a name='L67'></a><a href='#L67'>67</a>
<a name='L68'></a><a href='#L68'>68</a>
<a name='L69'></a><a href='#L69'>69</a>
<a name='L70'></a><a href='#L70'>70</a>
<a name='L71'></a><a href='#L71'>71</a>
<a name='L72'></a><a href='#L72'>72</a>
<a name='L73'></a><a href='#L73'>73</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/utils/searchUtils.ts
import { Food } from '../types/food';
import { foodIconDefinitions } from '../assets/food_icons/iconDefinitions';
import i18n, { TranslationKey } from '../localization/i18n';
import { getFoodIconUrl } from './iconUtils';
import { combinationTags } from '../assets/food_icons/combinationTags';
&nbsp;
/**
 * Finds foods that match a search term via their associated icon tags.
 * This is the "smart search" functionality. It supports both direct tag
 * matching (e.g., searching "apple") and combination tag matching
 * (e.g., searching "fruit" to find apples, bananas, etc.).
 *
 * @param searchTerm The string to search for.
 * @param allFoods The complete list of foods in the library.
 * @returns An array of foods that matched the search term via tags.
 */
export const findFoodsByTagSearch = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(s</span>earchTerm: string, allFoods: Food[]): Food[] =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    if (!searchTerm || !allFoods) {</span>
<span class="cstat-no" title="statement not covered" >        return [];</span>
    }
&nbsp;
    const lowercasedSearchTerm = <span class="cstat-no" title="statement not covered" >searchTerm.toLowerCase().trim();</span>
<span class="cstat-no" title="statement not covered" >    if (lowercasedSearchTerm.length &lt; 2) { // Don't search for very short terms</span>
<span class="cstat-no" title="statement not covered" >        return [];</span>
    }
&nbsp;
    const relevantIcons = <span class="cstat-no" title="statement not covered" >new Set&lt;string&gt;();</span>
    const iconsMap = <span class="cstat-no" title="statement not covered" >new Map(foodIconDefinitions.map(<span class="fstat-no" title="function not covered" >de</span>f =&gt; <span class="cstat-no" title="statement not covered" >[def.tagKey, def.icon])</span>);</span>
&nbsp;
    // --- Step 1: Check for combination tag matches ---
<span class="cstat-no" title="statement not covered" >    if (combinationTags[lowercasedSearchTerm]) {</span>
        const tagKeys = <span class="cstat-no" title="statement not covered" >combinationTags[lowercasedSearchTerm];</span>
<span class="cstat-no" title="statement not covered" >        for (const tagKey of tagKeys) {</span>
            const icon = <span class="cstat-no" title="statement not covered" >iconsMap.get(tagKey);</span>
<span class="cstat-no" title="statement not covered" >            if (icon) {</span>
<span class="cstat-no" title="statement not covered" >                relevantIcons.add(icon);</span>
            }
        }
    }
&nbsp;
    // --- Step 2: Find which icon categories are relevant to the search term (direct matching) ---
<span class="cstat-no" title="statement not covered" >    for (const definition of foodIconDefinitions) {</span>
        const fullTagKey = <span class="cstat-no" title="statement not covered" >`foodIconTags.${definition.tagKey}` as TranslationKey;</span>
        
        // Check tags in all available languages for comprehensiveness
        const localesToSearch: ('en' | 'ru' | 'he')[] = <span class="cstat-no" title="statement not covered" >['en', 'ru', 'he'];</span>
<span class="cstat-no" title="statement not covered" >        for (const locale of localesToSearch) {</span>
            const tagResult = <span class="cstat-no" title="statement not covered" >i18n.t(fullTagKey, { locale, returnObjects: true, defaultValue: [] });</span>
            const tags: string[] = <span class="cstat-no" title="statement not covered" >Array.isArray(tagResult) ? tagResult : [];</span>
&nbsp;
<span class="cstat-no" title="statement not covered" >            if (tags.some(<span class="fstat-no" title="function not covered" >ta</span>g =&gt; <span class="cstat-no" title="statement not covered" >tag.toLowerCase().includes(lowercasedSearchTerm))</span>) {</span>
<span class="cstat-no" title="statement not covered" >                relevantIcons.add(definition.icon);</span>
<span class="cstat-no" title="statement not covered" >                break; </span>// Found a match in this language, no need to check others for this definition
            }
        }
    }
&nbsp;
<span class="cstat-no" title="statement not covered" >    if (relevantIcons.size === 0) {</span>
<span class="cstat-no" title="statement not covered" >        return [];</span>
    }
&nbsp;
    // --- Step 3: Find all foods that map to these relevant icons ---
    const matchedFoods: Food[] = <span class="cstat-no" title="statement not covered" >[];</span>
<span class="cstat-no" title="statement not covered" >    for (const food of allFoods) {</span>
        const foodIcon = <span class="cstat-no" title="statement not covered" >getFoodIconUrl(food.name);</span> // This uses a cache, so it's efficient.
<span class="cstat-no" title="statement not covered" >        if (foodIcon &amp;&amp; relevantIcons.has(foodIcon)) {</span>
<span class="cstat-no" title="statement not covered" >            matchedFoods.push(food);</span>
        }
    }
&nbsp;
<span class="cstat-no" title="statement not covered" >    return matchedFoods;</span>
};</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END searchUtils.ts.html ----------


---------- units.ts.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for utils/units.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">utils</a> units.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/6</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/2</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/1</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/6</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a>
<a name='L10'></a><a href='#L10'>10</a>
<a name='L11'></a><a href='#L11'>11</a>
<a name='L12'></a><a href='#L12'>12</a>
<a name='L13'></a><a href='#L13'>13</a>
<a name='L14'></a><a href='#L14'>14</a>
<a name='L15'></a><a href='#L15'>15</a>
<a name='L16'></a><a href='#L16'>16</a>
<a name='L17'></a><a href='#L17'>17</a>
<a name='L18'></a><a href='#L18'>18</a>
<a name='L19'></a><a href='#L19'>19</a>
<a name='L20'></a><a href='#L20'>20</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// src/utils/units.ts
import { Alert } from 'react-native';
import { estimateGramsNaturalLanguage, BackendError } from '../services/backendService';
import { t } from '../localization/i18n';
&nbsp;
export async function <span class="fstat-no" title="function not covered" >getGramsFromNaturalLanguage(</span>
    foodName: string,
    quantityDescription: string
): Promise&lt;number&gt; {
<span class="cstat-no" title="statement not covered" >    try {</span>
        const grams = <span class="cstat-no" title="statement not covered" >await estimateGramsNaturalLanguage(foodName, quantityDescription);</span>
<span class="cstat-no" title="statement not covered" >        return grams;</span>
    } catch (error) {
        const message = <span class="cstat-no" title="statement not covered" >error instanceof BackendError</span>
            ? error.message
            : t('errors.unexpectedError');
<span class="cstat-no" title="statement not covered" >        Alert.alert(t('utils.units.errorTitle'), message);</span>
<span class="cstat-no" title="statement not covered" >        throw error;</span>
    }
}</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END units.ts.html ----------


---------- validationUtils.ts.html ----------

<!doctype html>
<html lang="en">

<head>
    <title>Code coverage report for utils/validationUtils.ts</title>
    <meta charset="utf-8" />
    <link rel="stylesheet" href="../prettify.css" />
    <link rel="stylesheet" href="../base.css" />
    <link rel="shortcut icon" type="image/x-icon" href="../favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type='text/css'>
        .coverage-summary .sorter {
            background-image: url(../sort-arrow-sprite.png);
        }
    </style>
</head>
    
<body>
<div class='wrapper'>
    <div class='pad1'>
        <h1><a href="../index.html">All files</a> / <a href="index.html">utils</a> validationUtils.ts</h1>
        <div class='clearfix'>
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Statements</span>
                <span class='fraction'>0/4</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Branches</span>
                <span class='fraction'>0/2</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Functions</span>
                <span class='fraction'>0/2</span>
            </div>
        
            
            <div class='fl pad1y space-right2'>
                <span class="strong">0% </span>
                <span class="quiet">Lines</span>
                <span class='fraction'>0/4</span>
            </div>
        
            
        </div>
        <p class="quiet">
            Press <em>n</em> or <em>j</em> to go to the next uncovered block, <em>b</em>, <em>p</em> or <em>k</em> for the previous block.
        </p>
        <template id="filterTemplate">
            <div class="quiet">
                Filter:
                <input type="search" id="fileSearch">
            </div>
        </template>
    </div>
    <div class='status-line low'></div>
    <pre><table class="coverage">
<tr><td class="line-count quiet"><a name='L1'></a><a href='#L1'>1</a>
<a name='L2'></a><a href='#L2'>2</a>
<a name='L3'></a><a href='#L3'>3</a>
<a name='L4'></a><a href='#L4'>4</a>
<a name='L5'></a><a href='#L5'>5</a>
<a name='L6'></a><a href='#L6'>6</a>
<a name='L7'></a><a href='#L7'>7</a>
<a name='L8'></a><a href='#L8'>8</a>
<a name='L9'></a><a href='#L9'>9</a></td><td class="line-coverage quiet"><span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-no">&nbsp;</span>
<span class="cline-any cline-neutral">&nbsp;</span></td><td class="text"><pre class="prettyprint lang-js">// utils/validationUtils.ts
&nbsp;
export const isValidNumberInput = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(v</span>alue: string): boolean =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    return /^[0-9]*(\.[0-9]*)?$/.test(value) &amp;&amp; !isNaN(parseFloat(value));</span>
  };
  
  export const isNotEmpty = <span class="cstat-no" title="statement not covered" ><span class="fstat-no" title="function not covered" >(v</span>alue: string): boolean =&gt; {</span>
<span class="cstat-no" title="statement not covered" >    return value.trim() !== '';</span>
  };</pre></td></tr></table></pre>

                <div class='push'></div><!-- for sticky footer -->
            </div><!-- /wrapper -->
            <div class='footer quiet pad2 space-top1 center small'>
                Code coverage generated by
                <a href="https://istanbul.js.org/" target="_blank" rel="noopener noreferrer">istanbul</a>
                at 2025-07-31T22:12:05.161Z
            </div>
        <script src="../prettify.js"></script>
        <script>
            window.onload = function () {
                prettyPrint();
            };
        </script>
        <script src="../sorter.js"></script>
        <script src="../block-navigation.js"></script>
    </body>
</html>
    
---------- END validationUtils.ts.html ----------


---------- lcov.info ----------
TN:
SF:src\components\AccountSettings.tsx
FN:14,(anonymous_0)
FN:57,(anonymous_1)
FNF:2
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
DA:14,0
DA:20,0
DA:21,0
DA:23,0
DA:57,0
LF:5
LH:0
BRDA:30,0,0,0
BRDA:30,0,1,0
BRDA:33,1,0,0
BRDA:33,1,1,0
BRDA:38,2,0,0
BRDA:38,2,1,0
BRDA:46,3,0,0
BRDA:46,3,1,0
BRF:8
BRH:0
end_of_record
TN:
SF:src\components\AddFoodModal.tsx
FN:58,(anonymous_0)
FN:78,(anonymous_1)
FN:89,(anonymous_2)
FN:93,(anonymous_3)
FN:123,(anonymous_4)
FN:159,(anonymous_5)
FN:161,(anonymous_6)
FN:183,(anonymous_7)
FN:184,(anonymous_8)
FN:209,(anonymous_9)
FN:279,(anonymous_10)
FNF:11
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
FNDA:0,(anonymous_5)
FNDA:0,(anonymous_6)
FNDA:0,(anonymous_7)
FNDA:0,(anonymous_8)
FNDA:0,(anonymous_9)
FNDA:0,(anonymous_10)
DA:56,0
DA:58,0
DA:70,0
DA:71,0
DA:72,0
DA:73,0
DA:74,0
DA:75,0
DA:76,0
DA:78,0
DA:79,0
DA:80,0
DA:81,0
DA:82,0
DA:83,0
DA:84,0
DA:85,0
DA:89,0
DA:90,0
DA:93,0
DA:94,0
DA:95,0
DA:97,0
DA:102,0
DA:103,0
DA:104,0
DA:105,0
DA:106,0
DA:108,0
DA:109,0
DA:110,0
DA:111,0
DA:112,0
DA:114,0
DA:115,0
DA:117,0
DA:119,0
DA:120,0
DA:123,0
DA:124,0
DA:125,0
DA:126,0
DA:127,0
DA:128,0
DA:131,0
DA:132,0
DA:133,0
DA:134,0
DA:136,0
DA:137,0
DA:139,0
DA:140,0
DA:141,0
DA:142,0
DA:144,0
DA:146,0
DA:153,0
DA:155,0
DA:159,0
DA:160,0
DA:161,0
DA:162,0
DA:163,0
DA:164,0
DA:165,0
DA:166,0
DA:167,0
DA:168,0
DA:169,0
DA:170,0
DA:171,0
DA:172,0
DA:173,0
DA:174,0
DA:175,0
DA:176,0
DA:177,0
DA:178,0
DA:179,0
DA:181,0
DA:183,0
DA:184,0
DA:189,0
DA:190,0
DA:192,0
DA:210,0
DA:211,0
DA:279,0
LF:88
LH:0
BRDA:56,0,0,0
BRDA:56,0,1,0
BRDA:79,1,0,0
BRDA:79,1,1,0
BRDA:85,2,0,0
BRDA:85,2,1,0
BRDA:90,3,0,0
BRDA:90,3,1,0
BRDA:95,4,0,0
BRDA:95,4,1,0
BRDA:99,5,0,0
BRDA:99,5,1,0
BRDA:103,6,0,0
BRDA:103,6,1,0
BRDA:110,7,0,0
BRDA:110,7,1,0
BRDA:119,8,0,0
BRDA:119,8,1,0
BRDA:119,9,0,0
BRDA:119,9,1,0
BRDA:124,10,0,0
BRDA:124,10,1,0
BRDA:126,11,0,0
BRDA:126,11,1,0
BRDA:126,12,0,0
BRDA:126,12,1,0
BRDA:136,13,0,0
BRDA:136,13,1,0
BRDA:148,14,0,0
BRDA:148,14,1,0
BRDA:149,15,0,0
BRDA:149,15,1,0
BRDA:160,16,0,0
BRDA:160,16,1,0
BRDA:160,17,0,0
BRDA:160,17,1,0
BRDA:160,17,2,0
BRDA:162,18,0,0
BRDA:162,18,1,0
BRDA:163,19,0,0
BRDA:163,19,1,0
BRDA:163,20,0,0
BRDA:163,20,1,0
BRDA:167,21,0,0
BRDA:167,21,1,0
BRDA:183,22,0,0
BRDA:183,22,1,0
BRDA:184,23,0,0
BRDA:184,23,1,0
BRDA:189,24,0,0
BRDA:189,24,1,0
BRDA:189,24,2,0
BRDA:193,25,0,0
BRDA:193,25,1,0
BRDA:194,26,0,0
BRDA:194,26,1,0
BRDA:197,27,0,0
BRDA:197,27,1,0
BRDA:198,28,0,0
BRDA:198,28,1,0
BRDA:199,29,0,0
BRDA:199,29,1,0
BRDA:201,30,0,0
BRDA:201,30,1,0
BRDA:205,31,0,0
BRDA:205,31,1,0
BRDA:208,32,0,0
BRDA:208,32,1,0
BRDA:210,33,0,0
BRDA:210,33,1,0
BRDA:211,34,0,0
BRDA:211,34,1,0
BRDA:224,35,0,0
BRDA:224,35,1,0
BRF:74
BRH:0
end_of_record
TN:
SF:src\components\ConfirmationModal.tsx
FN:19,(anonymous_0)
FNF:1
FNH:0
FNDA:0,(anonymous_0)
DA:19,0
DA:29,0
DA:31,0
DA:32,0
DA:33,0
DA:36,0
DA:70,0
LF:7
LH:0
BRDA:31,0,0,0
BRDA:31,0,1,0
BRDA:32,1,0,0
BRDA:32,1,1,0
BRDA:33,2,0,0
BRDA:33,2,1,0
BRF:6
BRH:0
end_of_record
TN:
SF:src\components\DailyEntryListItem.tsx
FN:23,(anonymous_0)
FN:36,(anonymous_1)
FN:46,(anonymous_2)
FN:48,(anonymous_3)
FN:53,(anonymous_4)
FN:59,(anonymous_5)
FN:88,(anonymous_6)
FN:89,(anonymous_7)
FN:99,(anonymous_8)
FN:102,(anonymous_9)
FN:109,(anonymous_10)
FN:112,(anonymous_11)
FN:142,(anonymous_12)
FNF:13
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
FNDA:0,(anonymous_5)
FNDA:0,(anonymous_6)
FNDA:0,(anonymous_7)
FNDA:0,(anonymous_8)
FNDA:0,(anonymous_9)
FNDA:0,(anonymous_10)
FNDA:0,(anonymous_11)
FNDA:0,(anonymous_12)
DA:23,0
DA:33,0
DA:34,0
DA:36,0
DA:37,0
DA:38,0
DA:39,0
DA:41,0
DA:43,0
DA:46,0
DA:47,0
DA:48,0
DA:53,0
DA:54,0
DA:55,0
DA:59,0
DA:60,0
DA:61,0
DA:67,0
DA:68,0
DA:70,0
DA:78,0
DA:79,0
DA:88,0
DA:89,0
DA:91,0
DA:92,0
DA:93,0
DA:94,0
DA:96,0
DA:100,0
DA:102,0
DA:110,0
DA:112,0
DA:142,0
LF:35
LH:0
BRDA:37,0,0,0
BRDA:37,0,1,0
BRDA:38,1,0,0
BRDA:38,1,1,0
BRDA:47,2,0,0
BRDA:47,2,1,0
BRDA:47,3,0,0
BRDA:47,3,1,0
BRDA:47,3,2,0
BRDA:54,4,0,0
BRDA:54,4,1,0
BRDA:54,5,0,0
BRDA:54,5,1,0
BRDA:54,5,2,0
BRDA:60,6,0,0
BRDA:60,6,1,0
BRDA:67,7,0,0
BRDA:67,7,1,0
BRDA:78,8,0,0
BRDA:78,8,1,0
BRDA:78,9,0,0
BRDA:78,9,1,0
BRDA:88,10,0,0
BRDA:88,10,1,0
BRDA:89,11,0,0
BRDA:89,11,1,0
BRDA:124,12,0,0
BRDA:124,12,1,0
BRF:28
BRH:0
end_of_record
TN:
SF:src\components\DailyGoalsInput.tsx
FN:14,(anonymous_0)
FN:21,(anonymous_1)
FN:33,(anonymous_2)
FN:39,(anonymous_3)
FN:49,(anonymous_4)
FNF:5
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
DA:14,0
DA:18,0
DA:19,0
DA:21,0
DA:22,0
DA:23,0
DA:24,0
DA:25,0
DA:26,0
DA:27,0
DA:31,0
DA:34,0
DA:39,0
DA:49,0
LF:14
LH:0
BRDA:22,0,0,0
BRDA:22,0,1,0
BRDA:22,0,2,0
BRDA:22,0,3,0
BRDA:22,0,4,0
BRDA:38,1,0,0
BRDA:38,1,1,0
BRF:7
BRH:0
end_of_record
TN:
SF:src\components\DailyProgress.tsx
FN:20,(anonymous_0)
FN:30,(anonymous_1)
FN:35,(anonymous_2)
FN:63,(anonymous_3)
FNF:4
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
DA:20,0
DA:27,0
DA:28,0
DA:30,0
DA:31,0
DA:32,0
DA:35,0
DA:36,0
DA:37,0
DA:38,0
DA:53,0
DA:63,0
LF:12
LH:0
BRDA:31,0,0,0
BRDA:31,0,1,0
BRDA:31,1,0,0
BRDA:31,1,1,0
BRDA:43,2,0,0
BRDA:43,2,1,0
BRF:6
BRH:0
end_of_record
TN:
SF:src\components\DataManagementButtons.tsx
FN:30,(anonymous_0)
FN:37,(anonymous_1)
FN:61,(anonymous_2)
FN:94,(anonymous_3)
FN:96,(anonymous_4)
FN:136,(anonymous_5)
FNF:6
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
FNDA:0,(anonymous_5)
DA:30,0
DA:33,0
DA:34,0
DA:35,0
DA:37,0
DA:38,0
DA:39,0
DA:40,0
DA:41,0
DA:43,0
DA:45,0
DA:46,0
DA:47,0
DA:48,0
DA:49,0
DA:50,0
DA:51,0
DA:52,0
DA:54,0
DA:56,0
DA:57,0
DA:61,0
DA:62,0
DA:63,0
DA:64,0
DA:65,0
DA:66,0
DA:67,0
DA:68,0
DA:69,0
DA:70,0
DA:71,0
DA:72,0
DA:73,0
DA:75,0
DA:76,0
DA:77,0
DA:78,0
DA:79,0
DA:81,0
DA:82,0
DA:85,0
DA:88,0
DA:89,0
DA:90,0
DA:94,0
DA:96,0
DA:97,0
DA:98,0
DA:99,0
DA:100,0
DA:101,0
DA:103,0
DA:104,0
DA:106,0
DA:109,0
DA:113,0
DA:136,0
LF:58
LH:0
BRDA:50,0,0,0
BRDA:50,0,1,0
BRDA:57,1,0,0
BRDA:57,1,1,0
BRDA:64,2,0,0
BRDA:64,2,1,0
BRDA:65,3,0,0
BRDA:65,3,1,0
BRDA:65,4,0,0
BRDA:65,4,1,0
BRDA:67,5,0,0
BRDA:67,5,1,0
BRDA:68,6,0,0
BRDA:68,6,1,0
BRDA:68,7,0,0
BRDA:68,7,1,0
BRDA:72,8,0,0
BRDA:72,8,1,0
BRDA:72,9,0,0
BRDA:72,9,1,0
BRDA:72,9,2,0
BRDA:72,9,3,0
BRDA:72,9,4,0
BRDA:72,9,5,0
BRDA:72,9,6,0
BRDA:72,9,7,0
BRDA:89,10,0,0
BRDA:89,10,1,0
BRDA:90,11,0,0
BRDA:90,11,1,0
BRDA:97,12,0,0
BRDA:97,12,1,0
BRDA:104,13,0,0
BRDA:104,13,1,0
BRF:34
BRH:0
end_of_record
TN:
SF:src\components\DateNavigator.tsx
FN:19,(anonymous_0)
FN:31,(anonymous_1)
FN:32,(anonymous_2)
FN:73,(anonymous_3)
FNF:4
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
DA:19,0
DA:27,0
DA:28,0
DA:29,0
DA:31,0
DA:32,0
DA:33,0
DA:34,0
DA:35,0
DA:36,0
DA:38,0
DA:41,0
DA:44,0
DA:46,0
DA:73,0
LF:15
LH:0
BRDA:34,0,0,0
BRDA:34,0,1,0
BRDA:44,1,0,0
BRDA:44,1,1,0
BRDA:57,2,0,0
BRDA:57,2,1,0
BRF:6
BRH:0
end_of_record
TN:
SF:src\components\FoodFormFields.tsx
FN:20,(anonymous_0)
FN:30,(anonymous_1)
FN:39,(anonymous_2)
FN:57,(anonymous_3)
FN:69,(anonymous_4)
FN:80,(anonymous_5)
FN:91,(anonymous_6)
FN:102,(anonymous_7)
FN:114,(anonymous_8)
FNF:9
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
FNDA:0,(anonymous_5)
FNDA:0,(anonymous_6)
FNDA:0,(anonymous_7)
FNDA:0,(anonymous_8)
DA:20,0
DA:27,0
DA:28,0
DA:30,0
DA:31,0
DA:32,0
DA:33,0
DA:34,0
DA:36,0
DA:39,0
DA:40,0
DA:41,0
DA:45,0
DA:46,0
DA:47,0
DA:49,0
DA:52,0
DA:57,0
DA:69,0
DA:80,0
DA:91,0
DA:102,0
DA:114,0
LF:23
LH:0
BRDA:32,0,0,0
BRDA:32,0,1,0
BRDA:33,1,0,0
BRDA:33,1,1,0
BRDA:33,2,0,0
BRDA:33,2,1,0
BRDA:36,3,0,0
BRDA:36,3,1,0
BRDA:41,4,0,0
BRDA:41,4,1,0
BRDA:45,5,0,0
BRDA:45,5,1,0
BRDA:45,6,0,0
BRDA:45,6,1,0
BRDA:46,7,0,0
BRDA:46,7,1,0
BRDA:46,8,0,0
BRDA:46,8,1,0
BRDA:62,9,0,0
BRDA:62,9,1,0
BRDA:74,10,0,0
BRDA:74,10,1,0
BRDA:85,11,0,0
BRDA:85,11,1,0
BRDA:96,12,0,0
BRDA:96,12,1,0
BRDA:107,13,0,0
BRDA:107,13,1,0
BRF:28
BRH:0
end_of_record
TN:
SF:src\components\FoodItem.tsx
FN:21,(anonymous_0)
FN:25,(anonymous_1)
FN:30,(anonymous_2)
FN:36,(anonymous_3)
FN:40,(anonymous_4)
FN:56,(anonymous_5)
FN:57,(anonymous_6)
FN:59,(anonymous_7)
FN:60,(anonymous_8)
FN:80,(anonymous_9)
FN:83,(anonymous_10)
FN:91,(anonymous_11)
FNF:12
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
FNDA:0,(anonymous_5)
FNDA:0,(anonymous_6)
FNDA:0,(anonymous_7)
FNDA:0,(anonymous_8)
FNDA:0,(anonymous_9)
FNDA:0,(anonymous_10)
FNDA:0,(anonymous_11)
DA:20,0
DA:22,0
DA:23,0
DA:25,0
DA:26,0
DA:27,0
DA:30,0
DA:31,0
DA:32,0
DA:36,0
DA:37,0
DA:40,0
DA:41,0
DA:42,0
DA:44,0
DA:52,0
DA:57,0
DA:60,0
DA:80,0
DA:83,0
DA:91,0
LF:21
LH:0
BRDA:26,0,0,0
BRDA:26,0,1,0
BRDA:31,1,0,0
BRDA:31,1,1,0
BRDA:31,2,0,0
BRDA:31,2,1,0
BRDA:31,2,2,0
BRDA:41,3,0,0
BRDA:41,3,1,0
BRDA:67,4,0,0
BRDA:67,4,1,0
BRF:11
BRH:0
end_of_record
TN:
SF:src\components\QuickAddList.tsx
FN:38,(anonymous_0)
FN:59,(anonymous_1)
FN:99,(anonymous_2)
FN:118,(anonymous_3)
FNF:4
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
DA:38,0
DA:56,0
DA:57,0
DA:59,0
DA:60,0
DA:61,0
DA:62,0
DA:64,0
DA:87,0
DA:88,0
DA:96,0
DA:99,0
DA:118,0
LF:13
LH:0
BRDA:73,0,0,0
BRDA:73,0,1,0
BRDA:74,1,0,0
BRDA:74,1,1,0
BRDA:87,2,0,0
BRDA:87,2,1,0
BRDA:87,3,0,0
BRDA:87,3,1,0
BRDA:102,4,0,0
BRDA:102,4,1,0
BRDA:113,5,0,0
BRDA:113,5,1,0
BRDA:113,6,0,0
BRDA:113,6,1,0
BRF:14
BRH:0
end_of_record
TN:
SF:src\components\StatisticsChart.tsx
FN:29,(anonymous_0)
FN:32,(anonymous_1)
FN:48,(anonymous_2)
FN:49,(anonymous_3)
FN:50,(anonymous_4)
FN:51,(anonymous_5)
FN:82,(anonymous_6)
FN:189,(anonymous_7)
FN:193,(anonymous_8)
FN:198,(anonymous_9)
FNF:10
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
FNDA:0,(anonymous_5)
FNDA:0,(anonymous_6)
FNDA:0,(anonymous_7)
FNDA:0,(anonymous_8)
FNDA:0,(anonymous_9)
DA:29,0
DA:30,0
DA:32,0
DA:33,0
DA:34,0
DA:35,0
DA:36,0
DA:37,0
DA:39,0
DA:40,0
DA:44,0
DA:45,0
DA:46,0
DA:48,0
DA:49,0
DA:50,0
DA:51,0
DA:53,0
DA:56,0
DA:57,0
DA:58,0
DA:60,0
DA:65,0
DA:83,0
DA:84,0
DA:85,0
DA:87,0
DA:88,0
DA:90,0
DA:98,0
DA:106,0
DA:111,0
DA:112,0
DA:116,0
DA:179,0
DA:190,0
DA:191,0
DA:194,0
DA:195,0
DA:199,0
DA:243,0
LF:41
LH:0
BRDA:33,0,0,0
BRDA:33,0,1,0
BRDA:33,0,2,0
BRDA:33,0,3,0
BRDA:33,0,4,0
BRDA:58,1,0,0
BRDA:58,1,1,0
BRDA:111,2,0,0
BRDA:111,2,1,0
BRDA:155,3,0,0
BRDA:155,3,1,0
BRDA:183,4,0,0
BRDA:183,4,1,0
BRF:13
BRH:0
end_of_record
TN:
SF:src\components\ThemeSwitch.tsx
FN:12,(anonymous_0)
FN:27,(anonymous_1)
FNF:2
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
DA:12,0
DA:13,0
DA:15,0
DA:28,0
LF:4
LH:0
BRDA:28,0,0,0
BRDA:28,0,1,0
BRF:2
BRH:0
end_of_record
TN:
SF:src\components\AddEntryModal\AddEntryModal.tsx
FN:44,(anonymous_0)
FN:75,(anonymous_1)
FN:78,(anonymous_2)
FN:81,(anonymous_3)
FN:89,(anonymous_4)
FN:115,(anonymous_5)
FN:115,(anonymous_6)
FN:117,(anonymous_7)
FN:119,(anonymous_8)
FN:120,(anonymous_9)
FN:121,(anonymous_10)
FN:125,(anonymous_11)
FN:128,(anonymous_12)
FN:130,(anonymous_13)
FN:133,(anonymous_14)
FN:136,(anonymous_15)
FN:141,(anonymous_16)
FN:147,(anonymous_17)
FN:153,(anonymous_18)
FN:163,(anonymous_19)
FN:175,(anonymous_20)
FN:177,(anonymous_21)
FN:180,(anonymous_22)
FN:185,(anonymous_23)
FN:186,(anonymous_24)
FN:191,(anonymous_25)
FN:214,(anonymous_26)
FN:215,(anonymous_27)
FN:225,(anonymous_28)
FN:230,(anonymous_29)
FN:231,(anonymous_30)
FN:235,(anonymous_31)
FN:241,(anonymous_32)
FN:251,(anonymous_33)
FN:252,(anonymous_34)
FN:259,(anonymous_35)
FN:261,(anonymous_36)
FN:264,(anonymous_37)
FN:270,(anonymous_38)
FN:274,(anonymous_39)
FN:274,(anonymous_40)
FN:279,(anonymous_41)
FN:284,(anonymous_42)
FN:286,(anonymous_43)
FN:288,(anonymous_44)
FN:294,(anonymous_45)
FN:299,(anonymous_46)
FN:301,(anonymous_47)
FN:305,(anonymous_48)
FN:308,(anonymous_49)
FN:309,(anonymous_50)
FN:344,(anonymous_51)
FN:356,(anonymous_52)
FNF:53
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
FNDA:0,(anonymous_5)
FNDA:0,(anonymous_6)
FNDA:0,(anonymous_7)
FNDA:0,(anonymous_8)
FNDA:0,(anonymous_9)
FNDA:0,(anonymous_10)
FNDA:0,(anonymous_11)
FNDA:0,(anonymous_12)
FNDA:0,(anonymous_13)
FNDA:0,(anonymous_14)
FNDA:0,(anonymous_15)
FNDA:0,(anonymous_16)
FNDA:0,(anonymous_17)
FNDA:0,(anonymous_18)
FNDA:0,(anonymous_19)
FNDA:0,(anonymous_20)
FNDA:0,(anonymous_21)
FNDA:0,(anonymous_22)
FNDA:0,(anonymous_23)
FNDA:0,(anonymous_24)
FNDA:0,(anonymous_25)
FNDA:0,(anonymous_26)
FNDA:0,(anonymous_27)
FNDA:0,(anonymous_28)
FNDA:0,(anonymous_29)
FNDA:0,(anonymous_30)
FNDA:0,(anonymous_31)
FNDA:0,(anonymous_32)
FNDA:0,(anonymous_33)
FNDA:0,(anonymous_34)
FNDA:0,(anonymous_35)
FNDA:0,(anonymous_36)
FNDA:0,(anonymous_37)
FNDA:0,(anonymous_38)
FNDA:0,(anonymous_39)
FNDA:0,(anonymous_40)
FNDA:0,(anonymous_41)
FNDA:0,(anonymous_42)
FNDA:0,(anonymous_43)
FNDA:0,(anonymous_44)
FNDA:0,(anonymous_45)
FNDA:0,(anonymous_46)
FNDA:0,(anonymous_47)
FNDA:0,(anonymous_48)
FNDA:0,(anonymous_49)
FNDA:0,(anonymous_50)
FNDA:0,(anonymous_51)
FNDA:0,(anonymous_52)
DA:37,0
DA:38,0
DA:39,0
DA:44,0
DA:48,0
DA:49,0
DA:51,0
DA:52,0
DA:53,0
DA:54,0
DA:55,0
DA:56,0
DA:57,0
DA:58,0
DA:59,0
DA:61,0
DA:62,0
DA:63,0
DA:64,0
DA:65,0
DA:66,0
DA:67,0
DA:68,0
DA:70,0
DA:71,0
DA:73,0
DA:75,0
DA:76,0
DA:77,0
DA:78,0
DA:81,0
DA:82,0
DA:83,0
DA:84,0
DA:86,0
DA:89,0
DA:90,0
DA:91,0
DA:93,0
DA:94,0
DA:95,0
DA:96,0
DA:97,0
DA:98,0
DA:99,0
DA:100,0
DA:101,0
DA:102,0
DA:103,0
DA:104,0
DA:108,0
DA:109,0
DA:110,0
DA:115,0
DA:117,0
DA:118,0
DA:119,0
DA:120,0
DA:121,0
DA:125,0
DA:126,0
DA:128,0
DA:129,0
DA:130,0
DA:131,0
DA:132,0
DA:133,0
DA:134,0
DA:136,0
DA:137,0
DA:141,0
DA:142,0
DA:144,0
DA:145,0
DA:147,0
DA:153,0
DA:154,0
DA:155,0
DA:156,0
DA:157,0
DA:158,0
DA:159,0
DA:160,0
DA:163,0
DA:164,0
DA:165,0
DA:166,0
DA:167,0
DA:168,0
DA:169,0
DA:170,0
DA:171,0
DA:175,0
DA:176,0
DA:177,0
DA:180,0
DA:181,0
DA:182,0
DA:183,0
DA:184,0
DA:185,0
DA:186,0
DA:187,0
DA:188,0
DA:191,0
DA:192,0
DA:193,0
DA:194,0
DA:197,0
DA:198,0
DA:199,0
DA:200,0
DA:201,0
DA:203,0
DA:204,0
DA:205,0
DA:206,0
DA:207,0
DA:208,0
DA:210,0
DA:211,0
DA:212,0
DA:214,0
DA:215,0
DA:218,0
DA:219,0
DA:221,0
DA:225,0
DA:226,0
DA:227,0
DA:228,0
DA:230,0
DA:231,0
DA:235,0
DA:236,0
DA:237,0
DA:238,0
DA:241,0
DA:242,0
DA:243,0
DA:244,0
DA:245,0
DA:246,0
DA:247,0
DA:248,0
DA:249,0
DA:251,0
DA:252,0
DA:253,0
DA:256,0
DA:259,0
DA:260,0
DA:261,0
DA:264,0
DA:265,0
DA:266,0
DA:267,0
DA:270,0
DA:271,0
DA:272,0
DA:273,0
DA:274,0
DA:275,0
DA:276,0
DA:279,0
DA:280,0
DA:281,0
DA:284,0
DA:285,0
DA:286,0
DA:287,0
DA:288,0
DA:289,0
DA:290,0
DA:292,0
DA:293,0
DA:294,0
DA:295,0
DA:299,0
DA:301,0
DA:302,0
DA:303,0
DA:304,0
DA:305,0
DA:306,0
DA:307,0
DA:308,0
DA:310,0
DA:311,0
DA:312,0
DA:316,0
DA:317,0
DA:318,0
DA:320,0
DA:323,0
DA:327,0
DA:328,0
DA:329,0
DA:330,0
DA:331,0
DA:332,0
DA:334,0
DA:344,0
DA:356,0
LF:204
LH:0
BRDA:37,0,0,0
BRDA:37,0,1,0
BRDA:73,1,0,0
BRDA:73,1,1,0
BRDA:76,2,0,0
BRDA:76,2,1,0
BRDA:76,3,0,0
BRDA:76,3,1,0
BRDA:83,4,0,0
BRDA:83,4,1,0
BRDA:83,5,0,0
BRDA:83,5,1,0
BRDA:83,5,2,0
BRDA:83,5,3,0
BRDA:90,6,0,0
BRDA:90,6,1,0
BRDA:90,6,2,0
BRDA:91,7,0,0
BRDA:91,7,1,0
BRDA:93,8,0,0
BRDA:93,8,1,0
BRDA:98,9,0,0
BRDA:98,9,1,0
BRDA:99,10,0,0
BRDA:99,10,1,0
BRDA:103,11,0,0
BRDA:103,11,1,0
BRDA:104,12,0,0
BRDA:104,12,1,0
BRDA:108,13,0,0
BRDA:108,13,1,0
BRDA:118,14,0,0
BRDA:118,14,1,0
BRDA:118,15,0,0
BRDA:118,15,1,0
BRDA:126,16,0,0
BRDA:126,16,1,0
BRDA:126,17,0,0
BRDA:126,17,1,0
BRDA:132,18,0,0
BRDA:132,18,1,0
BRDA:142,19,0,0
BRDA:142,19,1,0
BRDA:144,20,0,0
BRDA:144,20,1,0
BRDA:145,21,0,0
BRDA:145,21,1,0
BRDA:148,22,0,0
BRDA:148,22,1,0
BRDA:154,23,0,0
BRDA:154,23,1,0
BRDA:154,24,0,0
BRDA:154,24,1,0
BRDA:154,24,2,0
BRDA:164,25,0,0
BRDA:164,25,1,0
BRDA:166,26,0,0
BRDA:166,26,1,0
BRDA:166,27,0,0
BRDA:166,27,1,0
BRDA:167,28,0,0
BRDA:167,28,1,0
BRDA:169,29,0,0
BRDA:169,29,1,0
BRDA:176,30,0,0
BRDA:176,30,1,0
BRDA:176,31,0,0
BRDA:176,31,1,0
BRDA:177,32,0,0
BRDA:177,32,1,0
BRDA:181,33,0,0
BRDA:181,33,1,0
BRDA:181,34,0,0
BRDA:181,34,1,0
BRDA:181,34,2,0
BRDA:181,34,3,0
BRDA:183,35,0,0
BRDA:183,35,1,0
BRDA:192,36,0,0
BRDA:192,36,1,0
BRDA:198,37,0,0
BRDA:198,37,1,0
BRDA:199,38,0,0
BRDA:199,38,1,0
BRDA:200,39,0,0
BRDA:200,39,1,0
BRDA:201,40,0,0
BRDA:201,40,1,0
BRDA:203,41,0,0
BRDA:203,41,1,0
BRDA:205,42,0,0
BRDA:205,42,1,0
BRDA:210,43,0,0
BRDA:210,43,1,0
BRDA:218,44,0,0
BRDA:218,44,1,0
BRDA:218,45,0,0
BRDA:218,45,1,0
BRDA:218,45,2,0
BRDA:218,46,0,0
BRDA:218,46,1,0
BRDA:226,47,0,0
BRDA:226,47,1,0
BRDA:226,48,0,0
BRDA:226,48,1,0
BRDA:227,49,0,0
BRDA:227,49,1,0
BRDA:236,50,0,0
BRDA:236,50,1,0
BRDA:236,51,0,0
BRDA:236,51,1,0
BRDA:243,52,0,0
BRDA:243,52,1,0
BRDA:243,53,0,0
BRDA:243,53,1,0
BRDA:248,54,0,0
BRDA:248,54,1,0
BRDA:252,55,0,0
BRDA:252,55,1,0
BRDA:260,56,0,0
BRDA:260,56,1,0
BRDA:260,57,0,0
BRDA:260,57,1,0
BRDA:261,58,0,0
BRDA:261,58,1,0
BRDA:265,59,0,0
BRDA:265,59,1,0
BRDA:265,60,0,0
BRDA:265,60,1,0
BRDA:271,61,0,0
BRDA:271,61,1,0
BRDA:271,62,0,0
BRDA:271,62,1,0
BRDA:272,63,0,0
BRDA:272,63,1,0
BRDA:273,64,0,0
BRDA:273,64,1,0
BRDA:273,65,0,0
BRDA:273,65,1,0
BRDA:274,66,0,0
BRDA:274,66,1,0
BRDA:275,67,0,0
BRDA:275,67,1,0
BRDA:280,68,0,0
BRDA:280,68,1,0
BRDA:285,69,0,0
BRDA:285,69,1,0
BRDA:285,70,0,0
BRDA:285,70,1,0
BRDA:285,70,2,0
BRDA:285,70,3,0
BRDA:289,71,0,0
BRDA:289,71,1,0
BRDA:289,72,0,0
BRDA:289,72,1,0
BRDA:289,73,0,0
BRDA:289,73,1,0
BRDA:289,74,0,0
BRDA:289,74,1,0
BRDA:289,75,0,0
BRDA:289,75,1,0
BRDA:290,76,0,0
BRDA:290,76,1,0
BRDA:292,77,0,0
BRDA:292,77,1,0
BRDA:306,78,0,0
BRDA:306,78,1,0
BRDA:311,79,0,0
BRDA:311,79,1,0
BRDA:317,80,0,0
BRDA:317,80,1,0
BRDA:323,81,0,0
BRDA:323,81,1,0
BRDA:323,82,0,0
BRDA:323,82,1,0
BRDA:323,83,0,0
BRDA:323,83,1,0
BRDA:324,84,0,0
BRDA:324,84,1,0
BRDA:325,85,0,0
BRDA:325,85,1,0
BRDA:327,86,0,0
BRDA:327,86,1,0
BRDA:327,86,2,0
BRDA:327,86,3,0
BRDA:327,86,4,0
BRDA:328,87,0,0
BRDA:328,87,1,0
BRDA:328,87,2,0
BRDA:328,87,3,0
BRDA:328,87,4,0
BRDA:329,88,0,0
BRDA:329,88,1,0
BRDA:329,88,2,0
BRDA:329,88,3,0
BRDA:329,88,4,0
BRDA:330,89,0,0
BRDA:330,89,1,0
BRDA:330,89,2,0
BRDA:330,89,3,0
BRDA:330,89,4,0
BRDA:330,89,5,0
BRDA:331,90,0,0
BRDA:331,90,1,0
BRDA:331,90,2,0
BRDA:332,91,0,0
BRDA:332,91,1,0
BRDA:332,91,2,0
BRDA:335,92,0,0
BRDA:335,92,1,0
BRDA:336,93,0,0
BRDA:336,93,1,0
BRDA:346,94,0,0
BRDA:346,94,1,0
BRDA:346,95,0,0
BRDA:346,95,1,0
BRDA:347,96,0,0
BRDA:347,96,1,0
BRDA:347,97,0,0
BRDA:347,97,1,0
BRDA:348,98,0,0
BRDA:348,98,1,0
BRDA:349,99,0,0
BRDA:349,99,1,0
BRF:224
BRH:0
end_of_record
TN:
SF:src\components\AddEntryModal\AmountInputSection.tsx
FN:29,(anonymous_0)
FN:49,(anonymous_1)
FN:51,(anonymous_2)
FN:54,(anonymous_3)
FN:59,(anonymous_4)
FN:79,(anonymous_5)
FN:101,(anonymous_6)
FN:105,(anonymous_7)
FN:154,(anonymous_8)
FN:169,(anonymous_9)
FNF:10
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
FNDA:0,(anonymous_5)
FNDA:0,(anonymous_6)
FNDA:0,(anonymous_7)
FNDA:0,(anonymous_8)
FNDA:0,(anonymous_9)
DA:29,0
DA:45,0
DA:46,0
DA:47,0
DA:49,0
DA:50,0
DA:51,0
DA:52,0
DA:54,0
DA:59,0
DA:60,0
DA:61,0
DA:64,0
DA:80,0
DA:81,0
DA:82,0
DA:102,0
DA:106,0
DA:107,0
DA:108,0
DA:154,0
DA:169,0
LF:22
LH:0
BRDA:50,0,0,0
BRDA:50,0,1,0
BRDA:50,1,0,0
BRDA:50,1,1,0
BRDA:69,2,0,0
BRDA:69,2,1,0
BRDA:75,3,0,0
BRDA:75,3,1,0
BRDA:78,4,0,0
BRDA:78,4,1,0
BRDA:80,5,0,0
BRDA:80,5,1,0
BRDA:81,6,0,0
BRDA:81,6,1,0
BRDA:89,7,0,0
BRDA:89,7,1,0
BRDA:95,8,0,0
BRDA:95,8,1,0
BRDA:97,9,0,0
BRDA:97,9,1,0
BRDA:97,9,2,0
BRDA:104,10,0,0
BRDA:104,10,1,0
BRDA:106,11,0,0
BRDA:106,11,1,0
BRDA:121,12,0,0
BRDA:121,12,1,0
BRDA:127,13,0,0
BRDA:127,13,1,0
BRDA:127,14,0,0
BRDA:127,14,1,0
BRDA:127,14,2,0
BRDA:138,15,0,0
BRDA:138,15,1,0
BRDA:138,15,2,0
BRDA:155,16,0,0
BRDA:155,16,1,0
BRDA:158,17,0,0
BRDA:158,17,1,0
BRDA:161,18,0,0
BRDA:161,18,1,0
BRF:41
BRH:0
end_of_record
TN:
SF:src\components\AddEntryModal\FoodSelectionList.tsx
FN:34,(anonymous_0)
FN:56,(anonymous_1)
FN:61,(anonymous_2)
FN:64,(anonymous_3)
FN:68,(anonymous_4)
FN:74,(anonymous_5)
FN:77,(anonymous_6)
FN:90,(anonymous_7)
FN:98,(anonymous_8)
FN:99,(anonymous_9)
FN:102,(anonymous_10)
FN:109,(anonymous_11)
FN:111,(anonymous_12)
FN:113,(anonymous_13)
FN:120,(anonymous_14)
FN:158,(anonymous_15)
FN:165,(anonymous_16)
FN:177,(anonymous_17)
FN:199,(anonymous_18)
FN:234,(anonymous_19)
FN:284,(anonymous_20)
FN:286,(anonymous_21)
FN:293,(anonymous_22)
FN:303,(anonymous_23)
FN:311,(anonymous_24)
FNF:25
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
FNDA:0,(anonymous_5)
FNDA:0,(anonymous_6)
FNDA:0,(anonymous_7)
FNDA:0,(anonymous_8)
FNDA:0,(anonymous_9)
FNDA:0,(anonymous_10)
FNDA:0,(anonymous_11)
FNDA:0,(anonymous_12)
FNDA:0,(anonymous_13)
FNDA:0,(anonymous_14)
FNDA:0,(anonymous_15)
FNDA:0,(anonymous_16)
FNDA:0,(anonymous_17)
FNDA:0,(anonymous_18)
FNDA:0,(anonymous_19)
FNDA:0,(anonymous_20)
FNDA:0,(anonymous_21)
FNDA:0,(anonymous_22)
FNDA:0,(anonymous_23)
FNDA:0,(anonymous_24)
DA:11,0
DA:34,0
DA:52,0
DA:53,0
DA:54,0
DA:56,0
DA:57,0
DA:58,0
DA:61,0
DA:62,0
DA:64,0
DA:67,0
DA:68,0
DA:71,0
DA:74,0
DA:76,0
DA:77,0
DA:78,0
DA:82,0
DA:83,0
DA:87,0
DA:88,0
DA:90,0
DA:91,0
DA:92,0
DA:93,0
DA:97,0
DA:98,0
DA:99,0
DA:102,0
DA:103,0
DA:106,0
DA:109,0
DA:110,0
DA:111,0
DA:112,0
DA:113,0
DA:114,0
DA:120,0
DA:121,0
DA:122,0
DA:123,0
DA:125,0
DA:126,0
DA:127,0
DA:128,0
DA:129,0
DA:130,0
DA:131,0
DA:132,0
DA:133,0
DA:134,0
DA:135,0
DA:136,0
DA:137,0
DA:138,0
DA:139,0
DA:140,0
DA:141,0
DA:143,0
DA:158,0
DA:159,0
DA:160,0
DA:161,0
DA:165,0
DA:166,0
DA:167,0
DA:168,0
DA:169,0
DA:170,0
DA:172,0
DA:173,0
DA:175,0
DA:178,0
DA:179,0
DA:180,0
DA:182,0
DA:200,0
DA:201,0
DA:234,0
DA:235,0
DA:236,0
DA:253,0
DA:254,0
DA:271,0
DA:274,0
DA:284,0
DA:286,0
DA:293,0
DA:304,0
DA:311,0
LF:91
LH:0
BRDA:58,0,0,0
BRDA:58,0,1,0
BRDA:76,1,0,0
BRDA:76,1,1,0
BRDA:82,2,0,0
BRDA:82,2,1,0
BRDA:91,3,0,0
BRDA:91,3,1,0
BRDA:110,4,0,0
BRDA:110,4,1,0
BRDA:110,5,0,0
BRDA:110,5,1,0
BRDA:110,5,2,0
BRDA:110,5,3,0
BRDA:112,6,0,0
BRDA:112,6,1,0
BRDA:121,7,0,0
BRDA:121,7,1,0
BRDA:121,8,0,0
BRDA:121,8,1,0
BRDA:121,8,2,0
BRDA:121,8,3,0
BRDA:126,9,0,0
BRDA:126,9,1,0
BRDA:126,10,0,0
BRDA:126,10,1,0
BRDA:126,10,2,0
BRDA:131,11,0,0
BRDA:131,11,1,0
BRDA:134,12,0,0
BRDA:134,12,1,0
BRDA:138,13,0,0
BRDA:138,13,1,0
BRDA:140,14,0,0
BRDA:140,14,1,0
BRDA:160,15,0,0
BRDA:160,15,1,0
BRDA:160,16,0,0
BRDA:160,16,1,0
BRDA:170,17,0,0
BRDA:170,17,1,0
BRDA:172,18,0,0
BRDA:172,18,1,0
BRDA:172,18,2,0
BRDA:172,18,3,0
BRDA:173,19,0,0
BRDA:173,19,1,0
BRDA:173,19,2,0
BRDA:178,20,0,0
BRDA:178,20,1,0
BRDA:179,21,0,0
BRDA:179,21,1,0
BRDA:186,22,0,0
BRDA:186,22,1,0
BRDA:192,23,0,0
BRDA:192,23,1,0
BRDA:192,23,2,0
BRDA:193,24,0,0
BRDA:193,24,1,0
BRDA:196,25,0,0
BRDA:196,25,1,0
BRDA:200,26,0,0
BRDA:200,26,1,0
BRDA:208,27,0,0
BRDA:208,27,1,0
BRDA:219,28,0,0
BRDA:219,28,1,0
BRDA:224,29,0,0
BRDA:224,29,1,0
BRDA:224,29,2,0
BRDA:224,29,3,0
BRDA:224,29,4,0
BRDA:228,30,0,0
BRDA:228,30,1,0
BRDA:235,31,0,0
BRDA:235,31,1,0
BRDA:235,32,0,0
BRDA:235,32,1,0
BRDA:253,33,0,0
BRDA:253,33,1,0
BRDA:253,34,0,0
BRDA:253,34,1,0
BRDA:253,34,2,0
BRDA:280,35,0,0
BRDA:280,35,1,0
BRDA:287,36,0,0
BRDA:287,36,1,0
BRDA:321,37,0,0
BRDA:321,37,1,0
BRDA:327,38,0,0
BRDA:327,38,1,0
BRF:91
BRH:0
end_of_record
TN:
SF:src\components\AddEntryModal\ModalHeader.tsx
FN:36,(anonymous_0)
FN:46,(anonymous_1)
FN:58,(anonymous_2)
FN:113,(anonymous_3)
FNF:4
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
DA:36,0
DA:43,0
DA:44,0
DA:46,0
DA:47,0
DA:48,0
DA:51,0
DA:53,0
DA:58,0
DA:113,0
LF:10
LH:0
BRDA:51,0,0,0
BRDA:51,0,1,0
BRDA:51,0,2,0
BRDA:55,1,0,0
BRDA:55,1,1,0
BRDA:58,2,0,0
BRDA:58,2,1,0
BRDA:59,3,0,0
BRDA:59,3,1,0
BRDA:65,4,0,0
BRDA:65,4,1,0
BRDA:69,5,0,0
BRDA:69,5,1,0
BRDA:69,5,2,0
BRDA:74,6,0,0
BRDA:74,6,1,0
BRDA:76,7,0,0
BRDA:76,7,1,0
BRDA:76,7,2,0
BRDA:79,8,0,0
BRDA:79,8,1,0
BRDA:79,9,0,0
BRDA:79,9,1,0
BRDA:82,10,0,0
BRDA:82,10,1,0
BRDA:86,11,0,0
BRDA:86,11,1,0
BRDA:86,12,0,0
BRDA:86,12,1,0
BRDA:89,13,0,0
BRDA:89,13,1,0
BRDA:94,14,0,0
BRDA:94,14,1,0
BRDA:95,15,0,0
BRDA:95,15,1,0
BRDA:96,16,0,0
BRDA:96,16,1,0
BRDA:103,17,0,0
BRDA:103,17,1,0
BRDA:103,17,2,0
BRDA:104,18,0,0
BRDA:104,18,1,0
BRDA:106,19,0,0
BRDA:106,19,1,0
BRDA:107,20,0,0
BRDA:107,20,1,0
BRDA:107,20,2,0
BRF:47
BRH:0
end_of_record
TN:
SF:src\components\Entry\QuickAddItem.tsx
FN:53,(anonymous_0)
FN:81,(anonymous_1)
FN:101,(anonymous_2)
FN:105,(anonymous_3)
FN:106,(anonymous_4)
FN:109,(anonymous_5)
FN:114,(anonymous_6)
FN:137,(anonymous_7)
FN:230,(anonymous_8)
FN:289,(anonymous_9)
FN:310,(anonymous_10)
FNF:11
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
FNDA:0,(anonymous_5)
FNDA:0,(anonymous_6)
FNDA:0,(anonymous_7)
FNDA:0,(anonymous_8)
FNDA:0,(anonymous_9)
FNDA:0,(anonymous_10)
DA:53,0
DA:72,0
DA:73,0
DA:74,0
DA:76,0
DA:80,0
DA:81,0
DA:100,0
DA:101,0
DA:105,0
DA:106,0
DA:109,0
DA:110,0
DA:111,0
DA:114,0
DA:116,0
DA:117,0
DA:118,0
DA:120,0
DA:133,0
DA:135,0
DA:137,0
DA:230,0
DA:289,0
DA:310,0
LF:25
LH:0
BRDA:110,0,0,0
BRDA:110,0,1,0
BRDA:110,1,0,0
BRDA:110,1,1,0
BRDA:110,1,2,0
BRDA:116,2,0,0
BRDA:116,2,1,0
BRDA:117,3,0,0
BRDA:117,3,1,0
BRDA:133,4,0,0
BRDA:133,4,1,0
BRDA:133,4,2,0
BRDA:137,5,0,0
BRDA:137,5,1,0
BRDA:139,6,0,0
BRDA:139,6,1,0
BRDA:139,6,2,0
BRDA:139,6,3,0
BRDA:148,7,0,0
BRDA:148,7,1,0
BRDA:149,8,0,0
BRDA:149,8,1,0
BRDA:149,8,2,0
BRDA:150,9,0,0
BRDA:150,9,1,0
BRDA:150,9,2,0
BRDA:150,9,3,0
BRDA:150,9,4,0
BRDA:156,10,0,0
BRDA:156,10,1,0
BRDA:160,11,0,0
BRDA:160,11,1,0
BRDA:196,12,0,0
BRDA:196,12,1,0
BRDA:196,13,0,0
BRDA:196,13,1,0
BRDA:239,14,0,0
BRDA:239,14,1,0
BRDA:264,15,0,0
BRDA:264,15,1,0
BRDA:277,16,0,0
BRDA:277,16,1,0
BRDA:281,17,0,0
BRDA:281,17,1,0
BRDA:298,18,0,0
BRDA:298,18,1,0
BRF:46
BRH:0
end_of_record
TN:
SF:src\context\AuthContext.tsx
FN:25,useAuth
FN:29,(anonymous_1)
FN:38,(anonymous_2)
FN:39,(anonymous_3)
FN:58,(anonymous_4)
FN:63,(anonymous_5)
FN:68,(anonymous_6)
FN:74,(anonymous_7)
FNF:8
FNH:0
FNDA:0,useAuth
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
FNDA:0,(anonymous_5)
FNDA:0,(anonymous_6)
FNDA:0,(anonymous_7)
DA:23,0
DA:26,0
DA:29,0
DA:30,0
DA:31,0
DA:36,0
DA:38,0
DA:39,0
DA:40,0
DA:41,0
DA:42,0
DA:43,0
DA:45,0
DA:46,0
DA:49,0
DA:51,0
DA:55,0
DA:58,0
DA:59,0
DA:60,0
DA:63,0
DA:64,0
DA:65,0
DA:68,0
DA:69,0
DA:70,0
DA:71,0
DA:74,0
DA:75,0
DA:76,0
DA:77,0
DA:80,0
DA:90,0
LF:33
LH:0
BRDA:45,0,0,0
BRDA:45,0,1,0
BRF:2
BRH:0
end_of_record
TN:
SF:src\localization\i18n.ts
FN:42,(anonymous_0)
FN:60,t
FN:65,(anonymous_2)
FNF:3
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,t
FNDA:0,(anonymous_2)
DA:11,0
DA:17,0
DA:42,0
DA:43,0
DA:44,0
DA:45,0
DA:47,0
DA:48,0
DA:49,0
DA:50,0
DA:51,0
DA:52,0
DA:56,0
DA:57,0
DA:61,0
DA:65,0
DA:66,0
DA:67,0
DA:69,0
DA:71,0
DA:74,0
LF:21
LH:0
BRDA:48,0,0,0
BRDA:48,0,1,0
BRDA:48,1,0,0
BRDA:48,1,1,0
BRDA:51,2,0,0
BRDA:51,2,1,0
BRDA:52,3,0,0
BRDA:52,3,1,0
BRDA:56,4,0,0
BRDA:56,4,1,0
BRDA:67,5,0,0
BRDA:67,5,1,0
BRDA:67,5,2,0
BRDA:67,5,3,0
BRF:14
BRH:0
end_of_record
TN:
SF:src\screens\DailyEntryScreen.tsx
FN:31,(anonymous_0)
FN:56,(anonymous_1)
FN:57,(anonymous_2)
FN:69,(anonymous_3)
FN:73,(anonymous_4)
FN:77,(anonymous_5)
FN:79,(anonymous_6)
FN:81,(anonymous_7)
FN:89,(anonymous_8)
FN:95,(anonymous_9)
FN:100,(anonymous_10)
FN:112,(anonymous_11)
FN:125,(anonymous_12)
FN:133,(anonymous_13)
FN:135,(anonymous_14)
FN:149,(anonymous_15)
FN:151,(anonymous_16)
FN:155,(anonymous_17)
FN:156,(anonymous_18)
FN:160,(anonymous_19)
FN:161,(anonymous_20)
FN:166,(anonymous_21)
FN:189,(anonymous_22)
FN:194,(anonymous_23)
FN:195,(anonymous_24)
FN:206,(anonymous_25)
FN:211,(anonymous_26)
FN:219,(anonymous_27)
FN:235,(anonymous_28)
FN:239,(anonymous_29)
FN:241,(anonymous_30)
FN:242,(anonymous_31)
FN:248,(anonymous_32)
FN:252,(anonymous_33)
FN:257,(anonymous_34)
FN:269,(anonymous_35)
FN:272,(anonymous_36)
FN:273,(anonymous_37)
FN:280,(anonymous_38)
FN:284,(anonymous_39)
FN:292,(anonymous_40)
FN:294,(anonymous_41)
FN:302,(anonymous_42)
FN:310,(anonymous_43)
FN:311,(anonymous_44)
FN:322,(anonymous_45)
FN:325,(anonymous_46)
FN:328,(anonymous_47)
FN:339,(anonymous_48)
FN:344,(anonymous_49)
FN:357,(anonymous_50)
FN:360,(anonymous_51)
FN:370,(anonymous_52)
FN:380,(anonymous_53)
FN:381,(anonymous_54)
FN:381,(anonymous_55)
FN:385,(anonymous_56)
FN:385,(anonymous_57)
FN:401,(anonymous_58)
FN:403,(anonymous_59)
FN:423,(anonymous_60)
FN:438,(anonymous_61)
FN:453,(anonymous_62)
FN:454,(anonymous_63)
FN:457,(anonymous_64)
FN:467,(anonymous_65)
FN:477,(anonymous_66)
FN:478,(anonymous_67)
FN:498,(anonymous_68)
FN:519,(anonymous_69)
FNF:70
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
FNDA:0,(anonymous_5)
FNDA:0,(anonymous_6)
FNDA:0,(anonymous_7)
FNDA:0,(anonymous_8)
FNDA:0,(anonymous_9)
FNDA:0,(anonymous_10)
FNDA:0,(anonymous_11)
FNDA:0,(anonymous_12)
FNDA:0,(anonymous_13)
FNDA:0,(anonymous_14)
FNDA:0,(anonymous_15)
FNDA:0,(anonymous_16)
FNDA:0,(anonymous_17)
FNDA:0,(anonymous_18)
FNDA:0,(anonymous_19)
FNDA:0,(anonymous_20)
FNDA:0,(anonymous_21)
FNDA:0,(anonymous_22)
FNDA:0,(anonymous_23)
FNDA:0,(anonymous_24)
FNDA:0,(anonymous_25)
FNDA:0,(anonymous_26)
FNDA:0,(anonymous_27)
FNDA:0,(anonymous_28)
FNDA:0,(anonymous_29)
FNDA:0,(anonymous_30)
FNDA:0,(anonymous_31)
FNDA:0,(anonymous_32)
FNDA:0,(anonymous_33)
FNDA:0,(anonymous_34)
FNDA:0,(anonymous_35)
FNDA:0,(anonymous_36)
FNDA:0,(anonymous_37)
FNDA:0,(anonymous_38)
FNDA:0,(anonymous_39)
FNDA:0,(anonymous_40)
FNDA:0,(anonymous_41)
FNDA:0,(anonymous_42)
FNDA:0,(anonymous_43)
FNDA:0,(anonymous_44)
FNDA:0,(anonymous_45)
FNDA:0,(anonymous_46)
FNDA:0,(anonymous_47)
FNDA:0,(anonymous_48)
FNDA:0,(anonymous_49)
FNDA:0,(anonymous_50)
FNDA:0,(anonymous_51)
FNDA:0,(anonymous_52)
FNDA:0,(anonymous_53)
FNDA:0,(anonymous_54)
FNDA:0,(anonymous_55)
FNDA:0,(anonymous_56)
FNDA:0,(anonymous_57)
FNDA:0,(anonymous_58)
FNDA:0,(anonymous_59)
FNDA:0,(anonymous_60)
FNDA:0,(anonymous_61)
FNDA:0,(anonymous_62)
FNDA:0,(anonymous_63)
FNDA:0,(anonymous_64)
FNDA:0,(anonymous_65)
FNDA:0,(anonymous_66)
FNDA:0,(anonymous_67)
FNDA:0,(anonymous_68)
FNDA:0,(anonymous_69)
DA:31,0
DA:32,0
DA:33,0
DA:34,0
DA:36,0
DA:37,0
DA:38,0
DA:40,0
DA:41,0
DA:42,0
DA:44,0
DA:45,0
DA:46,0
DA:47,0
DA:48,0
DA:50,0
DA:51,0
DA:53,0
DA:54,0
DA:56,0
DA:57,0
DA:58,0
DA:59,0
DA:60,0
DA:61,0
DA:63,0
DA:66,0
DA:69,0
DA:70,0
DA:71,0
DA:72,0
DA:73,0
DA:77,0
DA:78,0
DA:79,0
DA:80,0
DA:81,0
DA:82,0
DA:87,0
DA:88,0
DA:89,0
DA:90,0
DA:91,0
DA:94,0
DA:95,0
DA:100,0
DA:101,0
DA:102,0
DA:103,0
DA:109,0
DA:111,0
DA:112,0
DA:113,0
DA:114,0
DA:115,0
DA:117,0
DA:118,0
DA:119,0
DA:121,0
DA:125,0
DA:126,0
DA:127,0
DA:128,0
DA:129,0
DA:133,0
DA:134,0
DA:135,0
DA:136,0
DA:138,0
DA:139,0
DA:140,0
DA:142,0
DA:143,0
DA:144,0
DA:148,0
DA:150,0
DA:151,0
DA:155,0
DA:156,0
DA:157,0
DA:160,0
DA:161,0
DA:162,0
DA:163,0
DA:166,0
DA:167,0
DA:168,0
DA:171,0
DA:172,0
DA:174,0
DA:177,0
DA:179,0
DA:180,0
DA:182,0
DA:183,0
DA:185,0
DA:189,0
DA:190,0
DA:191,0
DA:192,0
DA:194,0
DA:195,0
DA:197,0
DA:198,0
DA:200,0
DA:201,0
DA:202,0
DA:203,0
DA:204,0
DA:206,0
DA:208,0
DA:210,0
DA:211,0
DA:213,0
DA:214,0
DA:215,0
DA:217,0
DA:218,0
DA:219,0
DA:221,0
DA:224,0
DA:226,0
DA:227,0
DA:228,0
DA:229,0
DA:231,0
DA:235,0
DA:236,0
DA:237,0
DA:238,0
DA:239,0
DA:241,0
DA:242,0
DA:244,0
DA:245,0
DA:246,0
DA:247,0
DA:248,0
DA:250,0
DA:251,0
DA:252,0
DA:254,0
DA:257,0
DA:259,0
DA:261,0
DA:262,0
DA:263,0
DA:264,0
DA:265,0
DA:269,0
DA:270,0
DA:271,0
DA:272,0
DA:273,0
DA:275,0
DA:276,0
DA:277,0
DA:278,0
DA:279,0
DA:280,0
DA:282,0
DA:283,0
DA:284,0
DA:286,0
DA:288,0
DA:291,0
DA:292,0
DA:294,0
DA:295,0
DA:296,0
DA:297,0
DA:298,0
DA:299,0
DA:302,0
DA:303,0
DA:305,0
DA:306,0
DA:307,0
DA:310,0
DA:311,0
DA:312,0
DA:313,0
DA:314,0
DA:316,0
DA:317,0
DA:318,0
DA:319,0
DA:322,0
DA:324,0
DA:325,0
DA:327,0
DA:328,0
DA:332,0
DA:339,0
DA:344,0
DA:345,0
DA:347,0
DA:348,0
DA:349,0
DA:350,0
DA:351,0
DA:353,0
DA:354,0
DA:355,0
DA:357,0
DA:360,0
DA:361,0
DA:362,0
DA:363,0
DA:364,0
DA:365,0
DA:366,0
DA:370,0
DA:374,0
DA:375,0
DA:376,0
DA:378,0
DA:379,0
DA:380,0
DA:381,0
DA:383,0
DA:384,0
DA:385,0
DA:387,0
DA:389,0
DA:390,0
DA:392,0
DA:393,0
DA:394,0
DA:396,0
DA:401,0
DA:403,0
DA:404,0
DA:405,0
DA:406,0
DA:407,0
DA:408,0
DA:409,0
DA:410,0
DA:411,0
DA:414,0
DA:418,0
DA:419,0
DA:423,0
DA:424,0
DA:425,0
DA:426,0
DA:427,0
DA:428,0
DA:429,0
DA:431,0
DA:432,0
DA:433,0
DA:434,0
DA:435,0
DA:438,0
DA:439,0
DA:440,0
DA:441,0
DA:442,0
DA:443,0
DA:444,0
DA:446,0
DA:447,0
DA:448,0
DA:449,0
DA:450,0
DA:453,0
DA:454,0
DA:455,0
DA:456,0
DA:457,0
DA:458,0
DA:459,0
DA:462,0
DA:465,0
DA:467,0
DA:477,0
DA:479,0
DA:498,0
DA:519,0
LF:281
LH:0
BRDA:59,0,0,0
BRDA:59,0,1,0
BRDA:70,1,0,0
BRDA:70,1,1,0
BRDA:71,2,0,0
BRDA:71,2,1,0
BRDA:80,3,0,0
BRDA:80,3,1,0
BRDA:80,4,0,0
BRDA:80,4,1,0
BRDA:82,5,0,0
BRDA:82,5,1,0
BRDA:87,6,0,0
BRDA:87,6,1,0
BRDA:90,7,0,0
BRDA:90,7,1,0
BRDA:94,8,0,0
BRDA:94,8,1,0
BRDA:111,9,0,0
BRDA:111,9,1,0
BRDA:127,10,0,0
BRDA:127,10,1,0
BRDA:134,11,0,0
BRDA:134,11,1,0
BRDA:134,12,0,0
BRDA:134,12,1,0
BRDA:134,12,2,0
BRDA:134,12,3,0
BRDA:136,13,0,0
BRDA:136,13,1,0
BRDA:142,14,0,0
BRDA:142,14,1,0
BRDA:157,15,0,0
BRDA:157,15,1,0
BRDA:162,16,0,0
BRDA:162,16,1,0
BRDA:162,17,0,0
BRDA:162,17,1,0
BRDA:162,17,2,0
BRDA:171,18,0,0
BRDA:171,18,1,0
BRDA:190,19,0,0
BRDA:190,19,1,0
BRDA:197,20,0,0
BRDA:197,20,1,0
BRDA:200,21,0,0
BRDA:200,21,1,0
BRDA:200,22,0,0
BRDA:200,22,1,0
BRDA:202,23,0,0
BRDA:202,23,1,0
BRDA:206,24,0,0
BRDA:206,24,1,0
BRDA:208,25,0,0
BRDA:208,25,1,0
BRDA:211,26,0,0
BRDA:211,26,1,0
BRDA:213,27,0,0
BRDA:213,27,1,0
BRDA:224,28,0,0
BRDA:224,28,1,0
BRDA:231,29,0,0
BRDA:231,29,1,0
BRDA:236,30,0,0
BRDA:236,30,1,0
BRDA:238,31,0,0
BRDA:238,31,1,0
BRDA:238,32,0,0
BRDA:238,32,1,0
BRDA:244,33,0,0
BRDA:244,33,1,0
BRDA:246,34,0,0
BRDA:246,34,1,0
BRDA:248,35,0,0
BRDA:248,35,1,0
BRDA:257,36,0,0
BRDA:257,36,1,0
BRDA:270,37,0,0
BRDA:270,37,1,0
BRDA:275,38,0,0
BRDA:275,38,1,0
BRDA:280,39,0,0
BRDA:280,39,1,0
BRDA:295,40,0,0
BRDA:295,40,1,0
BRDA:297,41,0,0
BRDA:297,41,1,0
BRDA:305,42,0,0
BRDA:305,42,1,0
BRDA:312,43,0,0
BRDA:312,43,1,0
BRDA:317,44,0,0
BRDA:317,44,1,0
BRDA:317,45,0,0
BRDA:317,45,1,0
BRDA:324,46,0,0
BRDA:324,46,1,0
BRDA:328,47,0,0
BRDA:328,47,1,0
BRDA:344,48,0,0
BRDA:344,49,0,0
BRDA:345,50,0,0
BRDA:345,50,1,0
BRDA:347,51,0,0
BRDA:347,51,1,0
BRDA:347,52,0,0
BRDA:347,52,1,0
BRDA:351,53,0,0
BRDA:351,53,1,0
BRDA:361,54,0,0
BRDA:361,54,1,0
BRDA:374,55,0,0
BRDA:374,55,1,0
BRDA:378,56,0,0
BRDA:378,56,1,0
BRDA:378,57,0,0
BRDA:378,57,1,0
BRDA:381,58,0,0
BRDA:381,58,1,0
BRDA:383,59,0,0
BRDA:383,59,1,0
BRDA:383,60,0,0
BRDA:383,60,1,0
BRDA:389,61,0,0
BRDA:389,61,1,0
BRDA:393,62,0,0
BRDA:393,62,1,0
BRDA:393,63,0,0
BRDA:393,63,1,0
BRDA:404,64,0,0
BRDA:404,64,1,0
BRDA:406,65,0,0
BRDA:406,65,1,0
BRDA:406,66,0,0
BRDA:406,66,1,0
BRDA:406,66,2,0
BRDA:407,67,0,0
BRDA:407,67,1,0
BRDA:409,68,0,0
BRDA:409,68,1,0
BRDA:418,69,0,0
BRDA:418,69,1,0
BRDA:424,70,0,0
BRDA:424,70,1,0
BRDA:424,71,0,0
BRDA:424,71,1,0
BRDA:427,72,0,0
BRDA:427,72,1,0
BRDA:439,73,0,0
BRDA:439,73,1,0
BRDA:439,74,0,0
BRDA:439,74,1,0
BRDA:442,75,0,0
BRDA:442,75,1,0
BRDA:456,76,0,0
BRDA:456,76,1,0
BRDA:458,77,0,0
BRDA:458,77,1,0
BRDA:458,78,0,0
BRDA:458,78,1,0
BRDA:458,78,2,0
BRDA:458,78,3,0
BRDA:458,78,4,0
BRDA:458,78,5,0
BRDA:458,78,6,0
BRDA:467,79,0,0
BRDA:467,79,1,0
BRDA:467,79,2,0
BRDA:468,80,0,0
BRDA:468,80,1,0
BRDA:468,81,0,0
BRDA:468,81,1,0
BRDA:468,82,0,0
BRDA:468,82,1,0
BRDA:471,83,0,0
BRDA:471,83,1,0
BRDA:473,84,0,0
BRDA:473,84,1,0
BRDA:477,85,0,0
BRDA:477,85,1,0
BRDA:477,86,0,0
BRDA:477,86,1,0
BRDA:498,87,0,0
BRDA:498,87,1,0
BRDA:498,88,0,0
BRDA:498,88,1,0
BRDA:500,89,0,0
BRDA:500,89,1,0
BRDA:523,90,0,0
BRDA:523,90,1,0
BRDA:524,91,0,0
BRDA:524,91,1,0
BRDA:524,92,0,0
BRDA:524,92,1,0
BRF:194
BRH:0
end_of_record
TN:
SF:src\screens\FoodListScreen.tsx
FN:27,(anonymous_0)
FN:38,(anonymous_1)
FN:56,(anonymous_2)
FN:74,(anonymous_3)
FN:98,(anonymous_4)
FN:104,(anonymous_5)
FN:111,(anonymous_6)
FN:112,(anonymous_7)
FN:118,(anonymous_8)
FN:121,(anonymous_9)
FN:127,(anonymous_10)
FN:132,(anonymous_11)
FN:134,(anonymous_12)
FN:149,(anonymous_13)
FN:153,(anonymous_14)
FN:161,(anonymous_15)
FN:164,(anonymous_16)
FN:168,(anonymous_17)
FN:177,(anonymous_18)
FN:180,(anonymous_19)
FN:189,(anonymous_20)
FN:199,(anonymous_21)
FN:202,(anonymous_22)
FN:244,(anonymous_23)
FN:252,(anonymous_24)
FN:261,(anonymous_25)
FN:262,(anonymous_26)
FN:268,(anonymous_27)
FN:268,(anonymous_28)
FN:270,(anonymous_29)
FN:272,(anonymous_30)
FN:276,(anonymous_31)
FN:278,(anonymous_32)
FN:288,(anonymous_33)
FN:293,(anonymous_34)
FN:297,(anonymous_35)
FN:307,(anonymous_36)
FN:314,(anonymous_37)
FN:322,(anonymous_38)
FN:330,(anonymous_39)
FN:330,(anonymous_40)
FN:338,(anonymous_41)
FN:347,(anonymous_42)
FN:355,(anonymous_43)
FN:363,(anonymous_44)
FN:370,(anonymous_45)
FN:371,(anonymous_46)
FN:396,(anonymous_47)
FN:414,(anonymous_48)
FN:415,(anonymous_49)
FN:426,(anonymous_50)
FN:427,(anonymous_51)
FN:454,(anonymous_52)
FN:462,(anonymous_53)
FN:476,(anonymous_54)
FNF:55
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
FNDA:0,(anonymous_5)
FNDA:0,(anonymous_6)
FNDA:0,(anonymous_7)
FNDA:0,(anonymous_8)
FNDA:0,(anonymous_9)
FNDA:0,(anonymous_10)
FNDA:0,(anonymous_11)
FNDA:0,(anonymous_12)
FNDA:0,(anonymous_13)
FNDA:0,(anonymous_14)
FNDA:0,(anonymous_15)
FNDA:0,(anonymous_16)
FNDA:0,(anonymous_17)
FNDA:0,(anonymous_18)
FNDA:0,(anonymous_19)
FNDA:0,(anonymous_20)
FNDA:0,(anonymous_21)
FNDA:0,(anonymous_22)
FNDA:0,(anonymous_23)
FNDA:0,(anonymous_24)
FNDA:0,(anonymous_25)
FNDA:0,(anonymous_26)
FNDA:0,(anonymous_27)
FNDA:0,(anonymous_28)
FNDA:0,(anonymous_29)
FNDA:0,(anonymous_30)
FNDA:0,(anonymous_31)
FNDA:0,(anonymous_32)
FNDA:0,(anonymous_33)
FNDA:0,(anonymous_34)
FNDA:0,(anonymous_35)
FNDA:0,(anonymous_36)
FNDA:0,(anonymous_37)
FNDA:0,(anonymous_38)
FNDA:0,(anonymous_39)
FNDA:0,(anonymous_40)
FNDA:0,(anonymous_41)
FNDA:0,(anonymous_42)
FNDA:0,(anonymous_43)
FNDA:0,(anonymous_44)
FNDA:0,(anonymous_45)
FNDA:0,(anonymous_46)
FNDA:0,(anonymous_47)
FNDA:0,(anonymous_48)
FNDA:0,(anonymous_49)
FNDA:0,(anonymous_50)
FNDA:0,(anonymous_51)
FNDA:0,(anonymous_52)
FNDA:0,(anonymous_53)
FNDA:0,(anonymous_54)
DA:21,0
DA:22,0
DA:26,0
DA:27,0
DA:28,0
DA:29,0
DA:30,0
DA:32,0
DA:33,0
DA:37,0
DA:38,0
DA:39,0
DA:40,0
DA:41,0
DA:43,0
DA:44,0
DA:56,0
DA:57,0
DA:58,0
DA:61,0
DA:62,0
DA:63,0
DA:64,0
DA:66,0
DA:67,0
DA:71,0
DA:74,0
DA:75,0
DA:76,0
DA:77,0
DA:78,0
DA:79,0
DA:80,0
DA:81,0
DA:82,0
DA:83,0
DA:84,0
DA:85,0
DA:86,0
DA:88,0
DA:89,0
DA:90,0
DA:91,0
DA:92,0
DA:95,0
DA:96,0
DA:98,0
DA:104,0
DA:105,0
DA:106,0
DA:107,0
DA:108,0
DA:111,0
DA:112,0
DA:113,0
DA:114,0
DA:118,0
DA:119,0
DA:120,0
DA:121,0
DA:122,0
DA:123,0
DA:126,0
DA:127,0
DA:131,0
DA:133,0
DA:134,0
DA:135,0
DA:136,0
DA:137,0
DA:138,0
DA:139,0
DA:140,0
DA:143,0
DA:145,0
DA:148,0
DA:149,0
DA:153,0
DA:155,0
DA:157,0
DA:158,0
DA:161,0
DA:162,0
DA:164,0
DA:167,0
DA:168,0
DA:170,0
DA:172,0
DA:176,0
DA:177,0
DA:179,0
DA:180,0
DA:181,0
DA:182,0
DA:183,0
DA:186,0
DA:189,0
DA:190,0
DA:191,0
DA:192,0
DA:193,0
DA:195,0
DA:196,0
DA:198,0
DA:199,0
DA:202,0
DA:203,0
DA:204,0
DA:205,0
DA:206,0
DA:207,0
DA:209,0
DA:210,0
DA:212,0
DA:213,0
DA:214,0
DA:215,0
DA:216,0
DA:217,0
DA:220,0
DA:228,0
DA:229,0
DA:230,0
DA:231,0
DA:233,0
DA:236,0
DA:238,0
DA:244,0
DA:245,0
DA:246,0
DA:247,0
DA:248,0
DA:251,0
DA:252,0
DA:253,0
DA:261,0
DA:262,0
DA:263,0
DA:265,0
DA:267,0
DA:268,0
DA:270,0
DA:271,0
DA:273,0
DA:274,0
DA:277,0
DA:278,0
DA:282,0
DA:288,0
DA:293,0
DA:294,0
DA:297,0
DA:298,0
DA:299,0
DA:300,0
DA:301,0
DA:302,0
DA:303,0
DA:304,0
DA:307,0
DA:308,0
DA:309,0
DA:310,0
DA:311,0
DA:312,0
DA:313,0
DA:314,0
DA:315,0
DA:316,0
DA:317,0
DA:318,0
DA:319,0
DA:322,0
DA:323,0
DA:324,0
DA:325,0
DA:326,0
DA:327,0
DA:328,0
DA:329,0
DA:330,0
DA:331,0
DA:332,0
DA:333,0
DA:334,0
DA:335,0
DA:338,0
DA:339,0
DA:343,0
DA:344,0
DA:345,0
DA:346,0
DA:347,0
DA:348,0
DA:349,0
DA:350,0
DA:351,0
DA:352,0
DA:355,0
DA:356,0
DA:357,0
DA:358,0
DA:359,0
DA:360,0
DA:361,0
DA:363,0
DA:364,0
DA:365,0
DA:367,0
DA:370,0
DA:371,0
DA:372,0
DA:373,0
DA:377,0
DA:378,0
DA:386,0
DA:396,0
DA:415,0
DA:426,0
DA:428,0
DA:454,0
DA:462,0
DA:476,0
LF:223
LH:0
BRDA:21,0,0,0
BRDA:21,0,1,0
BRDA:21,1,0,0
BRDA:21,1,1,0
BRDA:26,2,0,0
BRDA:26,2,1,0
BRDA:37,3,0,0
BRDA:37,3,1,0
BRDA:61,4,0,0
BRDA:61,4,1,0
BRDA:63,5,0,0
BRDA:63,5,1,0
BRDA:105,6,0,0
BRDA:105,6,1,0
BRDA:105,7,0,0
BRDA:105,7,1,0
BRDA:119,8,0,0
BRDA:119,8,1,0
BRDA:119,9,0,0
BRDA:119,9,1,0
BRDA:122,10,0,0
BRDA:122,10,1,0
BRDA:122,11,0,0
BRDA:122,11,1,0
BRDA:126,12,0,0
BRDA:126,12,1,0
BRDA:138,13,0,0
BRDA:138,13,1,0
BRDA:143,14,0,0
BRDA:143,14,1,0
BRDA:145,15,0,0
BRDA:145,15,1,0
BRDA:157,16,0,0
BRDA:157,16,1,0
BRDA:176,17,0,0
BRDA:176,17,1,0
BRDA:181,18,0,0
BRDA:181,18,1,0
BRDA:182,19,0,0
BRDA:182,19,1,0
BRDA:183,20,0,0
BRDA:183,20,1,0
BRDA:190,21,0,0
BRDA:190,21,1,0
BRDA:191,22,0,0
BRDA:191,22,1,0
BRDA:204,23,0,0
BRDA:204,23,1,0
BRDA:205,24,0,0
BRDA:205,24,1,0
BRDA:205,25,0,0
BRDA:205,25,1,0
BRDA:209,26,0,0
BRDA:209,26,1,0
BRDA:209,27,0,0
BRDA:209,27,1,0
BRDA:221,28,0,0
BRDA:221,28,1,0
BRDA:222,29,0,0
BRDA:222,29,1,0
BRDA:223,30,0,0
BRDA:223,30,1,0
BRDA:224,31,0,0
BRDA:224,31,1,0
BRDA:225,32,0,0
BRDA:225,32,1,0
BRDA:228,33,0,0
BRDA:228,33,1,0
BRDA:246,34,0,0
BRDA:246,34,1,0
BRDA:263,35,0,0
BRDA:263,35,1,0
BRDA:265,36,0,0
BRDA:265,36,1,0
BRDA:299,37,0,0
BRDA:299,37,1,0
BRDA:300,38,0,0
BRDA:300,38,1,0
BRDA:300,39,0,0
BRDA:300,39,1,0
BRDA:301,40,0,0
BRDA:301,40,1,0
BRDA:301,41,0,0
BRDA:301,41,1,0
BRDA:302,42,0,0
BRDA:302,42,1,0
BRDA:302,43,0,0
BRDA:302,43,1,0
BRDA:303,44,0,0
BRDA:303,44,1,0
BRDA:303,45,0,0
BRDA:303,45,1,0
BRDA:304,46,0,0
BRDA:304,46,1,0
BRDA:309,47,0,0
BRDA:309,47,1,0
BRDA:318,48,0,0
BRDA:318,48,1,0
BRDA:323,49,0,0
BRDA:323,49,1,0
BRDA:325,50,0,0
BRDA:325,50,1,0
BRDA:330,51,0,0
BRDA:330,51,1,0
BRDA:334,52,0,0
BRDA:334,52,1,0
BRDA:358,53,0,0
BRDA:358,53,1,0
BRDA:359,54,0,0
BRDA:359,54,1,0
BRDA:359,55,0,0
BRDA:359,55,1,0
BRDA:361,56,0,0
BRDA:361,56,1,0
BRDA:361,57,0,0
BRDA:361,57,1,0
BRDA:364,58,0,0
BRDA:364,58,1,0
BRDA:364,59,0,0
BRDA:364,59,1,0
BRDA:364,60,0,0
BRDA:364,60,1,0
BRDA:364,61,0,0
BRDA:364,61,1,0
BRDA:367,62,0,0
BRDA:367,62,1,0
BRDA:372,63,0,0
BRDA:372,63,1,0
BRDA:377,64,0,0
BRDA:377,64,1,0
BRDA:411,65,0,0
BRDA:411,65,1,0
BRDA:411,66,0,0
BRDA:411,66,1,0
BRDA:411,67,0,0
BRDA:411,67,1,0
BRDA:417,68,0,0
BRDA:417,68,1,0
BRDA:442,69,0,0
BRDA:442,69,1,0
BRDA:444,70,0,0
BRDA:444,70,1,0
BRDA:447,71,0,0
BRDA:447,71,1,0
BRDA:454,72,0,0
BRDA:454,72,1,0
BRDA:460,73,0,0
BRDA:460,73,1,0
BRDA:462,74,0,0
BRDA:462,74,1,0
BRDA:487,75,0,0
BRDA:487,75,1,0
BRDA:488,76,0,0
BRDA:488,76,1,0
BRDA:536,77,0,0
BRDA:536,77,1,0
BRDA:537,78,0,0
BRDA:537,78,1,0
BRF:158
BRH:0
end_of_record
TN:
SF:src\screens\ForgotPasswordScreen.tsx
FN:13,(anonymous_0)
FN:19,(anonymous_1)
FN:30,(anonymous_2)
FN:41,(anonymous_3)
FN:69,(anonymous_4)
FNF:5
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
DA:13,0
DA:14,0
DA:15,0
DA:16,0
DA:17,0
DA:19,0
DA:20,0
DA:21,0
DA:22,0
DA:24,0
DA:25,0
DA:26,0
DA:27,0
DA:30,0
DA:35,0
DA:39,0
DA:41,0
DA:69,0
DA:79,0
LF:19
LH:0
BRDA:20,0,0,0
BRDA:20,0,1,0
BRF:2
BRH:0
end_of_record
TN:
SF:src\screens\LoginScreen.tsx
FN:14,(anonymous_0)
FN:23,(anonymous_1)
FN:62,(anonymous_2)
FN:78,(anonymous_3)
FN:83,(anonymous_4)
FNF:5
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
DA:14,0
DA:15,0
DA:16,0
DA:17,0
DA:18,0
DA:19,0
DA:20,0
DA:21,0
DA:23,0
DA:24,0
DA:25,0
DA:26,0
DA:28,0
DA:29,0
DA:30,0
DA:31,0
DA:32,0
DA:37,0
DA:41,0
DA:62,0
DA:78,0
DA:83,0
DA:90,0
LF:23
LH:0
BRDA:24,0,0,0
BRDA:24,0,1,0
BRDA:24,1,0,0
BRDA:24,1,1,0
BRDA:31,2,0,0
BRDA:31,2,1,0
BRDA:59,3,0,0
BRDA:59,3,1,0
BRF:8
BRH:0
end_of_record
TN:
SF:src\screens\QuestionnaireScreen.tsx
FN:21,(anonymous_0)
FN:39,(anonymous_1)
FN:48,(anonymous_2)
FN:54,(anonymous_3)
FN:61,(anonymous_4)
FN:68,(anonymous_5)
FN:69,(anonymous_6)
FN:71,(anonymous_7)
FN:75,(anonymous_8)
FN:107,(anonymous_9)
FN:179,(anonymous_10)
FN:207,(anonymous_11)
FN:224,(anonymous_12)
FN:240,(anonymous_13)
FN:248,(anonymous_14)
FN:255,(anonymous_15)
FN:269,(anonymous_16)
FN:278,(anonymous_17)
FN:279,(anonymous_18)
FN:282,(anonymous_19)
FN:296,(anonymous_20)
FNF:21
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
FNDA:0,(anonymous_5)
FNDA:0,(anonymous_6)
FNDA:0,(anonymous_7)
FNDA:0,(anonymous_8)
FNDA:0,(anonymous_9)
FNDA:0,(anonymous_10)
FNDA:0,(anonymous_11)
FNDA:0,(anonymous_12)
FNDA:0,(anonymous_13)
FNDA:0,(anonymous_14)
FNDA:0,(anonymous_15)
FNDA:0,(anonymous_16)
FNDA:0,(anonymous_17)
FNDA:0,(anonymous_18)
FNDA:0,(anonymous_19)
FNDA:0,(anonymous_20)
DA:21,0
DA:22,0
DA:23,0
DA:24,0
DA:26,0
DA:36,0
DA:37,0
DA:39,0
DA:48,0
DA:54,0
DA:61,0
DA:68,0
DA:69,0
DA:70,0
DA:71,0
DA:75,0
DA:76,0
DA:77,0
DA:78,0
DA:79,0
DA:81,0
DA:82,0
DA:84,0
DA:85,0
DA:87,0
DA:88,0
DA:90,0
DA:91,0
DA:93,0
DA:94,0
DA:96,0
DA:97,0
DA:99,0
DA:100,0
DA:103,0
DA:104,0
DA:107,0
DA:108,0
DA:109,0
DA:110,0
DA:114,0
DA:115,0
DA:117,0
DA:121,0
DA:122,0
DA:123,0
DA:124,0
DA:125,0
DA:126,0
DA:127,0
DA:129,0
DA:132,0
DA:133,0
DA:134,0
DA:135,0
DA:136,0
DA:137,0
DA:140,0
DA:143,0
DA:144,0
DA:145,0
DA:146,0
DA:148,0
DA:149,0
DA:151,0
DA:152,0
DA:157,0
DA:158,0
DA:159,0
DA:161,0
DA:162,0
DA:164,0
DA:165,0
DA:166,0
DA:168,0
DA:169,0
DA:171,0
DA:179,0
DA:180,0
DA:181,0
DA:182,0
DA:184,0
DA:185,0
DA:186,0
DA:187,0
DA:188,0
DA:189,0
DA:193,0
DA:194,0
DA:195,0
DA:197,0
DA:200,0
DA:201,0
DA:203,0
DA:207,0
DA:214,0
DA:224,0
DA:231,0
DA:240,0
DA:248,0
DA:255,0
DA:269,0
DA:278,0
DA:279,0
DA:282,0
DA:296,0
LF:106
LH:0
BRDA:70,0,0,0
BRDA:70,0,1,0
BRDA:81,1,0,0
BRDA:81,1,1,0
BRDA:81,2,0,0
BRDA:81,2,1,0
BRDA:81,2,2,0
BRDA:81,2,3,0
BRDA:84,3,0,0
BRDA:84,3,1,0
BRDA:87,4,0,0
BRDA:87,4,1,0
BRDA:87,5,0,0
BRDA:87,5,1,0
BRDA:87,5,2,0
BRDA:87,5,3,0
BRDA:90,6,0,0
BRDA:90,6,1,0
BRDA:90,7,0,0
BRDA:90,7,1,0
BRDA:90,7,2,0
BRDA:90,7,3,0
BRDA:93,8,0,0
BRDA:93,8,1,0
BRDA:96,9,0,0
BRDA:96,9,1,0
BRDA:99,10,0,0
BRDA:99,10,1,0
BRDA:99,11,0,0
BRDA:99,11,1,0
BRDA:114,12,0,0
BRDA:114,12,1,0
BRDA:122,13,0,0
BRDA:122,13,1,0
BRDA:122,13,2,0
BRDA:122,13,3,0
BRDA:122,13,4,0
BRDA:133,14,0,0
BRDA:133,14,1,0
BRDA:134,15,0,0
BRDA:134,15,1,0
BRDA:134,15,2,0
BRDA:135,16,0,0
BRDA:135,16,1,0
BRDA:136,17,0,0
BRDA:136,17,1,0
BRDA:137,18,0,0
BRDA:137,18,1,0
BRDA:143,19,0,0
BRDA:143,19,1,0
BRDA:144,20,0,0
BRDA:144,20,1,0
BRDA:148,21,0,0
BRDA:148,21,1,0
BRDA:148,22,0,0
BRDA:148,22,1,0
BRDA:151,23,0,0
BRDA:151,23,1,0
BRDA:151,24,0,0
BRDA:151,24,1,0
BRDA:158,25,0,0
BRDA:158,25,1,0
BRDA:159,26,0,0
BRDA:159,26,1,0
BRDA:180,27,0,0
BRDA:180,27,1,0
BRDA:187,28,0,0
BRDA:187,28,1,0
BRDA:216,29,0,0
BRDA:216,29,1,0
BRDA:220,30,0,0
BRDA:220,30,1,0
BRDA:221,31,0,0
BRDA:221,31,1,0
BRDA:227,32,0,0
BRDA:227,32,1,0
BRDA:242,33,0,0
BRDA:242,33,1,0
BRDA:258,34,0,0
BRDA:258,34,1,0
BRDA:272,35,0,0
BRDA:272,35,1,0
BRDA:281,36,0,0
BRDA:281,36,1,0
BRDA:281,36,2,0
BRDA:282,37,0,0
BRDA:282,37,1,0
BRDA:318,38,0,0
BRDA:318,38,1,0
BRDA:331,39,0,0
BRDA:331,39,1,0
BRDA:336,40,0,0
BRDA:336,40,1,0
BRDA:342,41,0,0
BRDA:342,41,1,0
BRF:95
BRH:0
end_of_record
TN:
SF:src\screens\RegisterScreen.tsx
FN:12,(anonymous_0)
FN:19,(anonymous_1)
FN:34,(anonymous_2)
FN:72,(anonymous_3)
FNF:4
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
DA:12,0
DA:13,0
DA:14,0
DA:15,0
DA:16,0
DA:17,0
DA:19,0
DA:20,0
DA:21,0
DA:22,0
DA:24,0
DA:25,0
DA:26,0
DA:28,0
DA:29,0
DA:30,0
DA:31,0
DA:34,0
DA:39,0
DA:43,0
DA:72,0
DA:79,0
LF:22
LH:0
BRDA:20,0,0,0
BRDA:20,0,1,0
BRDA:20,1,0,0
BRDA:20,1,1,0
BRDA:24,2,0,0
BRDA:24,2,1,0
BRF:6
BRH:0
end_of_record
TN:
SF:src\screens\SettingsScreen.tsx
FN:36,(anonymous_0)
FN:42,(anonymous_1)
FN:50,(anonymous_2)
FN:71,(anonymous_3)
FN:79,(anonymous_4)
FN:90,(anonymous_5)
FN:110,(anonymous_6)
FN:112,(anonymous_7)
FN:120,(anonymous_8)
FN:130,(anonymous_9)
FN:136,(anonymous_10)
FN:140,(anonymous_11)
FN:146,(anonymous_12)
FN:165,(anonymous_13)
FN:168,(anonymous_14)
FN:185,(anonymous_15)
FN:189,(anonymous_16)
FN:193,(anonymous_17)
FN:198,(anonymous_18)
FN:201,(anonymous_19)
FN:209,(anonymous_20)
FN:227,(anonymous_21)
FN:242,(anonymous_22)
FN:243,(anonymous_23)
FN:247,(anonymous_24)
FN:251,(anonymous_25)
FN:304,(anonymous_26)
FN:344,(anonymous_27)
FNF:28
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
FNDA:0,(anonymous_5)
FNDA:0,(anonymous_6)
FNDA:0,(anonymous_7)
FNDA:0,(anonymous_8)
FNDA:0,(anonymous_9)
FNDA:0,(anonymous_10)
FNDA:0,(anonymous_11)
FNDA:0,(anonymous_12)
FNDA:0,(anonymous_13)
FNDA:0,(anonymous_14)
FNDA:0,(anonymous_15)
FNDA:0,(anonymous_16)
FNDA:0,(anonymous_17)
FNDA:0,(anonymous_18)
FNDA:0,(anonymous_19)
FNDA:0,(anonymous_20)
FNDA:0,(anonymous_21)
FNDA:0,(anonymous_22)
FNDA:0,(anonymous_23)
FNDA:0,(anonymous_24)
FNDA:0,(anonymous_25)
FNDA:0,(anonymous_26)
FNDA:0,(anonymous_27)
DA:36,0
DA:37,0
DA:38,0
DA:39,0
DA:40,0
DA:41,0
DA:42,0
DA:43,0
DA:44,0
DA:46,0
DA:50,0
DA:51,0
DA:58,0
DA:61,0
DA:62,0
DA:63,0
DA:64,0
DA:65,0
DA:67,0
DA:68,0
DA:69,0
DA:71,0
DA:76,0
DA:77,0
DA:79,0
DA:80,0
DA:81,0
DA:82,0
DA:83,0
DA:84,0
DA:86,0
DA:88,0
DA:89,0
DA:90,0
DA:91,0
DA:92,0
DA:94,0
DA:97,0
DA:99,0
DA:100,0
DA:101,0
DA:102,0
DA:106,0
DA:110,0
DA:112,0
DA:117,0
DA:119,0
DA:120,0
DA:124,0
DA:126,0
DA:130,0
DA:131,0
DA:132,0
DA:133,0
DA:136,0
DA:137,0
DA:139,0
DA:140,0
DA:142,0
DA:146,0
DA:147,0
DA:148,0
DA:149,0
DA:150,0
DA:153,0
DA:154,0
DA:155,0
DA:162,0
DA:165,0
DA:166,0
DA:167,0
DA:168,0
DA:169,0
DA:170,0
DA:171,0
DA:172,0
DA:173,0
DA:174,0
DA:175,0
DA:177,0
DA:178,0
DA:181,0
DA:184,0
DA:185,0
DA:189,0
DA:190,0
DA:191,0
DA:193,0
DA:194,0
DA:195,0
DA:197,0
DA:199,0
DA:202,0
DA:204,0
DA:209,0
DA:210,0
DA:211,0
DA:212,0
DA:213,0
DA:214,0
DA:215,0
DA:216,0
DA:217,0
DA:219,0
DA:221,0
DA:223,0
DA:224,0
DA:227,0
DA:228,0
DA:229,0
DA:230,0
DA:231,0
DA:232,0
DA:233,0
DA:236,0
DA:237,0
DA:239,0
DA:242,0
DA:243,0
DA:244,0
DA:247,0
DA:248,0
DA:251,0
DA:252,0
DA:263,0
DA:264,0
DA:272,0
DA:304,0
DA:344,0
LF:129
LH:0
BRDA:37,0,0,0
BRDA:37,0,1,0
BRDA:82,1,0,0
BRDA:82,1,1,0
BRDA:89,2,0,0
BRDA:89,2,1,0
BRDA:89,3,0,0
BRDA:89,3,1,0
BRDA:91,4,0,0
BRDA:91,4,1,0
BRDA:91,5,0,0
BRDA:91,5,1,0
BRDA:91,5,2,0
BRDA:91,5,3,0
BRDA:97,6,0,0
BRDA:97,6,1,0
BRDA:99,7,0,0
BRDA:99,7,1,0
BRDA:100,8,0,0
BRDA:100,8,1,0
BRDA:101,9,0,0
BRDA:101,9,1,0
BRDA:114,10,0,0
BRDA:114,10,1,0
BRDA:119,11,0,0
BRDA:119,11,1,0
BRDA:122,12,0,0
BRDA:122,12,1,0
BRDA:122,12,2,0
BRDA:154,13,0,0
BRDA:154,13,1,0
BRDA:171,14,0,0
BRDA:171,14,1,0
BRDA:177,15,0,0
BRDA:177,15,1,0
BRDA:181,16,0,0
BRDA:181,16,1,0
BRDA:191,17,0,0
BRDA:191,17,1,0
BRDA:191,18,0,0
BRDA:191,18,1,0
BRDA:236,19,0,0
BRDA:236,19,1,0
BRDA:263,20,0,0
BRDA:263,20,1,0
BRDA:301,21,0,0
BRDA:301,21,1,0
BRDA:305,22,0,0
BRDA:305,22,1,0
BRDA:306,23,0,0
BRDA:306,23,1,0
BRDA:361,24,0,0
BRDA:361,24,1,0
BRDA:365,25,0,0
BRDA:365,25,1,0
BRDA:388,26,0,0
BRDA:388,26,1,0
BRDA:389,27,0,0
BRDA:389,27,1,0
BRDA:393,28,0,0
BRDA:393,28,1,0
BRDA:404,29,0,0
BRDA:404,29,1,0
BRDA:423,30,0,0
BRDA:423,30,1,0
BRDA:426,31,0,0
BRDA:426,31,1,0
BRF:67
BRH:0
end_of_record
TN:
SF:src\services\authService.ts
FN:9,(anonymous_0)
FN:29,(anonymous_1)
FN:40,(anonymous_2)
FN:44,(anonymous_3)
FN:62,fetchAuthApi
FN:92,(anonymous_5)
FN:99,(anonymous_6)
FN:102,(anonymous_7)
FN:126,(anonymous_8)
FN:139,(anonymous_9)
FN:155,(anonymous_10)
FNF:11
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,fetchAuthApi
FNDA:0,(anonymous_5)
FNDA:0,(anonymous_6)
FNDA:0,(anonymous_7)
FNDA:0,(anonymous_8)
FNDA:0,(anonymous_9)
FNDA:0,(anonymous_10)
DA:9,0
DA:10,0
DA:12,0
DA:13,0
DA:14,0
DA:16,0
DA:19,0
DA:21,0
DA:22,0
DA:24,0
DA:25,0
DA:29,0
DA:30,0
DA:31,0
DA:34,0
DA:38,0
DA:40,0
DA:41,0
DA:44,0
DA:45,0
DA:46,0
DA:47,0
DA:48,0
DA:50,0
DA:63,0
DA:65,0
DA:71,0
DA:72,0
DA:74,0
DA:75,0
DA:78,0
DA:80,0
DA:81,0
DA:82,0
DA:83,0
DA:85,0
DA:87,0
DA:88,0
DA:92,0
DA:93,0
DA:99,0
DA:100,0
DA:101,0
DA:102,0
DA:105,0
DA:107,0
DA:108,0
DA:114,0
DA:116,0
DA:117,0
DA:119,0
DA:121,0
DA:122,0
DA:126,0
DA:127,0
DA:128,0
DA:132,0
DA:134,0
DA:135,0
DA:139,0
DA:140,0
DA:141,0
DA:142,0
DA:143,0
DA:149,0
DA:151,0
DA:155,0
DA:156,0
LF:68
LH:0
BRDA:12,0,0,0
BRDA:12,0,1,0
BRDA:13,1,0,0
BRDA:13,1,1,0
BRDA:21,2,0,0
BRDA:21,2,1,0
BRDA:31,3,0,0
BRDA:31,3,1,0
BRDA:47,4,0,0
BRDA:47,4,1,0
BRDA:62,5,0,0
BRDA:68,6,0,0
BRDA:68,6,1,0
BRDA:74,7,0,0
BRDA:74,7,1,0
BRDA:80,8,0,0
BRDA:80,8,1,0
BRDA:81,9,0,0
BRDA:81,9,1,0
BRDA:82,10,0,0
BRDA:82,10,1,0
BRDA:87,11,0,0
BRDA:87,11,1,0
BRDA:116,12,0,0
BRDA:116,12,1,0
BRDA:117,13,0,0
BRDA:117,13,1,0
BRDA:121,14,0,0
BRDA:121,14,1,0
BRDA:142,15,0,0
BRDA:142,15,1,0
BRF:31
BRH:0
end_of_record
TN:
SF:src\services\backendService.ts
FN:18,(anonymous_0)
FN:26,(anonymous_1)
FN:27,(anonymous_2)
FN:37,fetchBackend
FN:64,(anonymous_4)
FN:134,(anonymous_5)
FN:135,(anonymous_6)
FN:136,(anonymous_7)
FN:137,(anonymous_8)
FN:138,(anonymous_9)
FN:139,(anonymous_10)
FN:144,(anonymous_11)
FNF:12
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,fetchBackend
FNDA:0,(anonymous_4)
FNDA:0,(anonymous_5)
FNDA:0,(anonymous_6)
FNDA:0,(anonymous_7)
FNDA:0,(anonymous_8)
FNDA:0,(anonymous_9)
FNDA:0,(anonymous_10)
FNDA:0,(anonymous_11)
DA:8,0
DA:9,0
DA:19,0
DA:23,0
DA:24,0
DA:26,0
DA:27,0
DA:28,0
DA:29,0
DA:31,0
DA:34,0
DA:38,0
DA:40,0
DA:42,0
DA:43,0
DA:44,0
DA:47,0
DA:54,0
DA:55,0
DA:58,0
DA:59,0
DA:60,0
DA:62,0
DA:63,0
DA:64,0
DA:65,0
DA:69,0
DA:70,0
DA:72,0
DA:73,0
DA:74,0
DA:75,0
DA:78,0
DA:80,0
DA:81,0
DA:82,0
DA:83,0
DA:85,0
DA:86,0
DA:87,0
DA:88,0
DA:92,0
DA:94,0
DA:95,0
DA:96,0
DA:98,0
DA:99,0
DA:100,0
DA:101,0
DA:104,0
DA:105,0
DA:106,0
DA:108,0
DA:110,0
DA:113,0
DA:116,0
DA:117,0
DA:118,0
DA:119,0
DA:120,0
DA:121,0
DA:123,0
DA:126,0
DA:128,0
DA:129,0
DA:134,0
DA:135,0
DA:136,0
DA:137,0
DA:138,0
DA:139,0
DA:140,0
DA:141,0
DA:142,0
DA:144,0
DA:145,0
DA:146,0
LF:77
LH:0
BRDA:28,0,0,0
BRDA:28,0,1,0
BRDA:28,1,0,0
BRDA:28,1,1,0
BRDA:37,2,0,0
BRDA:37,3,0,0
BRDA:38,4,0,0
BRDA:38,4,1,0
BRDA:40,5,0,0
BRDA:40,5,1,0
BRDA:42,6,0,0
BRDA:42,6,1,0
BRDA:42,7,0,0
BRDA:42,7,1,0
BRDA:52,8,0,0
BRDA:52,8,1,0
BRDA:54,9,0,0
BRDA:54,9,1,0
BRDA:54,10,0,0
BRDA:54,10,1,0
BRDA:62,11,0,0
BRDA:62,11,1,0
BRDA:62,12,0,0
BRDA:62,12,1,0
BRDA:63,13,0,0
BRDA:63,13,1,0
BRDA:72,14,0,0
BRDA:72,14,1,0
BRDA:80,15,0,0
BRDA:80,15,1,0
BRDA:92,16,0,0
BRDA:92,16,1,0
BRDA:95,17,0,0
BRDA:95,17,1,0
BRDA:96,18,0,0
BRDA:96,18,1,0
BRDA:98,19,0,0
BRDA:98,19,1,0
BRDA:100,20,0,0
BRDA:100,20,1,0
BRDA:100,21,0,0
BRDA:100,21,1,0
BRDA:101,22,0,0
BRDA:101,22,1,0
BRDA:104,23,0,0
BRDA:104,23,1,0
BRDA:105,24,0,0
BRDA:105,24,1,0
BRDA:105,25,0,0
BRDA:105,25,1,0
BRDA:106,26,0,0
BRDA:106,26,1,0
BRDA:113,27,0,0
BRDA:113,27,1,0
BRDA:116,28,0,0
BRDA:116,28,1,0
BRDA:116,29,0,0
BRDA:116,29,1,0
BRDA:118,30,0,0
BRDA:118,30,1,0
BRDA:118,31,0,0
BRDA:118,31,1,0
BRDA:118,31,2,0
BRDA:120,32,0,0
BRDA:120,32,1,0
BRDA:128,33,0,0
BRDA:128,33,1,0
BRDA:128,34,0,0
BRDA:128,34,1,0
BRDA:141,35,0,0
BRDA:141,35,1,0
BRDA:141,36,0,0
BRDA:141,36,1,0
BRDA:145,37,0,0
BRDA:145,37,1,0
BRF:75
BRH:0
end_of_record
TN:
SF:src\services\clientIDService.ts
FN:8,(anonymous_0)
FN:33,(anonymous_1)
FNF:2
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
DA:5,0
DA:6,0
DA:8,0
DA:9,0
DA:10,0
DA:13,0
DA:14,0
DA:15,0
DA:16,0
DA:17,0
DA:18,0
DA:20,0
DA:22,0
DA:23,0
DA:25,0
DA:28,0
DA:33,0
DA:34,0
DA:35,0
DA:36,0
DA:37,0
DA:39,0
LF:22
LH:0
BRDA:9,0,0,0
BRDA:9,0,1,0
BRDA:15,1,0,0
BRDA:15,1,1,0
BRF:4
BRH:0
end_of_record
TN:
SF:src\services\foodService.ts
FN:7,(anonymous_0)
FN:19,(anonymous_1)
FN:30,(anonymous_2)
FN:37,(anonymous_3)
FN:40,(anonymous_4)
FN:53,(anonymous_5)
FN:55,(anonymous_6)
FN:64,(anonymous_7)
FN:66,(anonymous_8)
FNF:9
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
FNDA:0,(anonymous_5)
FNDA:0,(anonymous_6)
FNDA:0,(anonymous_7)
FNDA:0,(anonymous_8)
DA:7,0
DA:8,0
DA:13,0
DA:14,0
DA:15,0
DA:16,0
DA:19,0
DA:24,0
DA:26,0
DA:28,0
DA:29,0
DA:30,0
DA:31,0
DA:36,0
DA:37,0
DA:39,0
DA:40,0
DA:41,0
DA:42,0
DA:43,0
DA:47,0
DA:50,0
DA:53,0
DA:54,0
DA:55,0
DA:56,0
DA:57,0
DA:59,0
DA:60,0
DA:61,0
DA:64,0
DA:65,0
DA:66,0
DA:67,0
LF:34
LH:0
BRDA:21,0,0,0
BRDA:28,1,0,0
BRDA:28,1,1,0
BRDA:28,2,0,0
BRDA:28,2,1,0
BRDA:36,3,0,0
BRDA:36,3,1,0
BRDA:41,4,0,0
BRDA:41,4,1,0
BRDA:42,5,0,0
BRDA:42,5,1,0
BRDA:43,6,0,0
BRDA:43,6,1,0
BRDA:56,7,0,0
BRDA:56,7,1,0
BRF:15
BRH:0
end_of_record
TN:
SF:src\services\storageService.ts
FN:15,(anonymous_0)
FN:24,(anonymous_1)
FN:35,(anonymous_2)
FN:44,(anonymous_3)
FN:63,(anonymous_4)
FN:72,(anonymous_5)
FN:101,(anonymous_6)
FN:123,(anonymous_7)
FN:132,(anonymous_8)
FN:143,(anonymous_9)
FN:152,(anonymous_10)
FNF:11
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
FNDA:0,(anonymous_5)
FNDA:0,(anonymous_6)
FNDA:0,(anonymous_7)
FNDA:0,(anonymous_8)
FNDA:0,(anonymous_9)
FNDA:0,(anonymous_10)
DA:7,0
DA:8,0
DA:9,0
DA:10,0
DA:11,0
DA:15,0
DA:16,0
DA:17,0
DA:19,0
DA:20,0
DA:24,0
DA:25,0
DA:26,0
DA:27,0
DA:29,0
DA:30,0
DA:31,0
DA:35,0
DA:36,0
DA:37,0
DA:39,0
DA:40,0
DA:44,0
DA:45,0
DA:46,0
DA:47,0
DA:48,0
DA:50,0
DA:51,0
DA:54,0
DA:55,0
DA:57,0
DA:58,0
DA:59,0
DA:63,0
DA:64,0
DA:65,0
DA:67,0
DA:68,0
DA:72,0
DA:73,0
DA:80,0
DA:81,0
DA:82,0
DA:84,0
DA:86,0
DA:95,0
DA:96,0
DA:97,0
DA:101,0
DA:102,0
DA:103,0
DA:104,0
DA:105,0
DA:107,0
DA:109,0
DA:110,0
DA:111,0
DA:113,0
DA:114,0
DA:116,0
DA:118,0
DA:119,0
DA:123,0
DA:124,0
DA:125,0
DA:127,0
DA:128,0
DA:132,0
DA:133,0
DA:134,0
DA:135,0
DA:137,0
DA:138,0
DA:139,0
DA:143,0
DA:144,0
DA:145,0
DA:147,0
DA:148,0
DA:152,0
DA:153,0
DA:154,0
DA:155,0
DA:157,0
DA:158,0
DA:159,0
LF:87
LH:0
BRDA:27,0,0,0
BRDA:27,0,1,0
BRDA:44,1,0,0
BRDA:47,2,0,0
BRDA:47,2,1,0
BRDA:50,3,0,0
BRDA:50,3,1,0
BRDA:82,4,0,0
BRDA:82,4,1,0
BRDA:91,5,0,0
BRDA:91,5,1,0
BRDA:110,6,0,0
BRDA:110,6,1,0
BRDA:111,7,0,0
BRDA:111,7,1,0
BRDA:113,8,0,0
BRDA:113,8,1,0
BRDA:135,9,0,0
BRDA:135,9,1,0
BRDA:155,10,0,0
BRDA:155,10,1,0
BRF:21
BRH:0
end_of_record
TN:
SF:src\services\tokenStorage.ts
FN:29,saveToken
FN:42,getToken
FN:67,deleteToken
FNF:3
FNH:0
FNDA:0,saveToken
FNDA:0,getToken
FNDA:0,deleteToken
DA:8,0
DA:16,0
DA:18,0
DA:19,0
DA:30,0
DA:31,0
DA:32,0
DA:34,0
DA:43,0
DA:44,0
DA:45,0
DA:47,0
DA:50,0
DA:51,0
DA:54,0
DA:55,0
DA:57,0
DA:59,0
DA:60,0
DA:68,0
DA:69,0
DA:71,0
LF:22
LH:0
BRDA:18,0,0,0
BRDA:18,0,1,0
BRDA:20,1,0,0
BRDA:20,1,1,0
BRDA:21,2,0,0
BRDA:21,2,1,0
BRDA:31,3,0,0
BRDA:31,3,1,0
BRDA:44,4,0,0
BRDA:44,4,1,0
BRDA:50,5,0,0
BRDA:50,5,1,0
BRDA:68,6,0,0
BRDA:68,6,1,0
BRF:14
BRH:0
end_of_record
TN:
SF:src\utils\dateUtils.ts
FN:13,(anonymous_0)
FN:36,(anonymous_1)
FN:58,(anonymous_2)
FNF:3
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
DA:13,0
DA:14,0
DA:16,0
DA:17,0
DA:18,0
DA:19,0
DA:21,0
DA:22,0
DA:24,0
DA:25,0
DA:36,0
DA:37,0
DA:39,0
DA:40,0
DA:41,0
DA:42,0
DA:44,0
DA:46,0
DA:47,0
DA:49,0
DA:50,0
DA:58,0
DA:59,0
LF:23
LH:0
BRDA:16,0,0,0
BRDA:16,0,1,0
BRDA:17,1,0,0
BRDA:17,1,1,0
BRDA:18,2,0,0
BRDA:18,2,1,0
BRDA:21,3,0,0
BRDA:21,3,1,0
BRDA:39,4,0,0
BRDA:39,4,1,0
BRDA:40,5,0,0
BRDA:40,5,1,0
BRDA:41,6,0,0
BRDA:41,6,1,0
BRDA:44,7,0,0
BRDA:44,7,1,0
BRF:16
BRH:0
end_of_record
TN:
SF:src\utils\foodIconMatcher.ts
FN:6,(anonymous_0)
FN:12,(anonymous_1)
FN:17,(anonymous_2)
FN:26,(anonymous_3)
FN:87,(anonymous_4)
FN:95,(anonymous_5)
FN:96,(anonymous_6)
FN:117,(anonymous_7)
FN:122,(anonymous_8)
FN:127,(anonymous_9)
FNF:10
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
FNDA:0,(anonymous_3)
FNDA:0,(anonymous_4)
FNDA:0,(anonymous_5)
FNDA:0,(anonymous_6)
FNDA:0,(anonymous_7)
FNDA:0,(anonymous_8)
FNDA:0,(anonymous_9)
DA:6,0
DA:7,0
DA:12,0
DA:13,0
DA:14,0
DA:15,0
DA:17,0
DA:26,0
DA:27,0
DA:28,0
DA:31,0
DA:32,0
DA:36,0
DA:38,0
DA:39,0
DA:40,0
DA:41,0
DA:42,0
DA:43,0
DA:45,0
DA:46,0
DA:48,0
DA:49,0
DA:51,0
DA:52,0
DA:53,0
DA:54,0
DA:55,0
DA:60,0
DA:61,0
DA:64,0
DA:65,0
DA:72,0
DA:73,0
DA:74,0
DA:76,0
DA:77,0
DA:78,0
DA:79,0
DA:82,0
DA:83,0
DA:84,0
DA:87,0
DA:88,0
DA:89,0
DA:93,0
DA:94,0
DA:95,0
DA:96,0
DA:97,0
DA:98,0
DA:99,0
DA:104,0
DA:105,0
DA:106,0
DA:107,0
DA:112,0
DA:114,0
DA:117,0
DA:118,0
DA:119,0
DA:121,0
DA:122,0
DA:123,0
DA:127,0
DA:129,0
LF:66
LH:0
BRDA:17,0,0,0
BRDA:17,0,1,0
BRDA:27,1,0,0
BRDA:27,1,1,0
BRDA:27,2,0,0
BRDA:27,2,1,0
BRDA:48,3,0,0
BRDA:48,3,1,0
BRDA:48,4,0,0
BRDA:48,4,1,0
BRDA:51,5,0,0
BRDA:51,5,1,0
BRDA:51,6,0,0
BRDA:51,6,1,0
BRDA:51,6,2,0
BRDA:53,7,0,0
BRDA:53,7,1,0
BRDA:53,8,0,0
BRDA:53,8,1,0
BRDA:64,9,0,0
BRDA:64,9,1,0
BRDA:64,10,0,0
BRDA:64,10,1,0
BRDA:64,10,2,0
BRDA:74,11,0,0
BRDA:74,11,1,0
BRDA:76,12,0,0
BRDA:76,12,1,0
BRDA:82,13,0,0
BRDA:82,13,1,0
BRDA:87,14,0,0
BRDA:87,14,1,0
BRDA:87,15,0,0
BRDA:87,15,1,0
BRDA:93,16,0,0
BRDA:93,16,1,0
BRDA:93,17,0,0
BRDA:93,17,1,0
BRDA:96,18,0,0
BRDA:96,18,1,0
BRDA:104,19,0,0
BRDA:104,19,1,0
BRDA:105,20,0,0
BRDA:105,20,1,0
BRDA:106,21,0,0
BRDA:106,21,1,0
BRDA:106,22,0,0
BRDA:106,22,1,0
BRDA:106,22,2,0
BRDA:106,22,3,0
BRDA:112,23,0,0
BRDA:112,23,1,0
BRDA:112,24,0,0
BRDA:112,24,1,0
BRDA:118,25,0,0
BRDA:118,25,1,0
BRDA:122,26,0,0
BRDA:122,26,1,0
BRDA:122,27,0,0
BRDA:122,27,1,0
BRDA:129,28,0,0
BRDA:129,28,1,0
BRF:62
BRH:0
end_of_record
TN:
SF:src\utils\gradingUtils.ts
FN:21,(anonymous_0)
FN:38,(anonymous_1)
FN:114,(anonymous_2)
FNF:3
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
DA:13,0
DA:21,0
DA:23,0
DA:25,0
DA:26,0
DA:27,0
DA:28,0
DA:29,0
DA:30,0
DA:38,0
DA:39,0
DA:40,0
DA:43,0
DA:44,0
DA:47,0
DA:48,0
DA:49,0
DA:50,0
DA:53,0
DA:54,0
DA:55,0
DA:58,0
DA:59,0
DA:61,0
DA:62,0
DA:63,0
DA:64,0
DA:66,0
DA:67,0
DA:69,0
DA:70,0
DA:74,0
DA:75,0
DA:77,0
DA:78,0
DA:79,0
DA:80,0
DA:83,0
DA:84,0
DA:87,0
DA:88,0
DA:92,0
DA:93,0
DA:94,0
DA:95,0
DA:96,0
DA:97,0
DA:100,0
DA:101,0
DA:104,0
DA:114,0
DA:119,0
DA:120,0
DA:121,0
DA:123,0
DA:126,0
DA:133,0
DA:134,0
DA:135,0
DA:136,0
DA:137,0
DA:142,0
DA:143,0
DA:144,0
DA:147,0
DA:148,0
DA:149,0
DA:152,0
DA:153,0
DA:154,0
DA:157,0
DA:158,0
DA:159,0
DA:160,0
DA:161,0
DA:165,0
DA:166,0
DA:167,0
DA:168,0
DA:172,0
DA:176,0
DA:179,0
LF:82
LH:0
BRDA:25,0,0,0
BRDA:25,0,1,0
BRDA:26,1,0,0
BRDA:26,1,1,0
BRDA:27,2,0,0
BRDA:27,2,1,0
BRDA:28,3,0,0
BRDA:28,3,1,0
BRDA:39,4,0,0
BRDA:39,4,1,0
BRDA:39,5,0,0
BRDA:39,5,1,0
BRDA:39,5,2,0
BRDA:39,5,3,0
BRDA:39,5,4,0
BRDA:47,6,0,0
BRDA:47,6,1,0
BRDA:48,7,0,0
BRDA:48,7,1,0
BRDA:49,8,0,0
BRDA:49,8,1,0
BRDA:50,9,0,0
BRDA:50,9,1,0
BRDA:53,10,0,0
BRDA:53,10,1,0
BRDA:54,11,0,0
BRDA:54,11,1,0
BRDA:55,12,0,0
BRDA:55,12,1,0
BRDA:55,13,0,0
BRDA:55,13,1,0
BRDA:59,14,0,0
BRDA:59,14,1,0
BRDA:61,15,0,0
BRDA:61,15,1,0
BRDA:63,16,0,0
BRDA:63,16,1,0
BRDA:63,17,0,0
BRDA:63,17,1,0
BRDA:66,18,0,0
BRDA:66,18,1,0
BRDA:66,19,0,0
BRDA:66,19,1,0
BRDA:66,19,2,0
BRDA:69,20,0,0
BRDA:69,20,1,0
BRDA:70,21,0,0
BRDA:70,21,1,0
BRDA:70,22,0,0
BRDA:70,22,1,0
BRDA:75,23,0,0
BRDA:75,23,1,0
BRDA:77,24,0,0
BRDA:77,24,1,0
BRDA:79,25,0,0
BRDA:79,25,1,0
BRDA:79,26,0,0
BRDA:79,26,1,0
BRDA:83,27,0,0
BRDA:83,27,1,0
BRDA:84,28,0,0
BRDA:84,28,1,0
BRDA:84,29,0,0
BRDA:84,29,1,0
BRDA:88,30,0,0
BRDA:88,30,1,0
BRDA:93,31,0,0
BRDA:93,31,1,0
BRDA:93,32,0,0
BRDA:93,32,1,0
BRDA:94,33,0,0
BRDA:94,33,1,0
BRDA:94,34,0,0
BRDA:94,34,1,0
BRDA:95,35,0,0
BRDA:95,35,1,0
BRDA:95,36,0,0
BRDA:95,36,1,0
BRDA:96,37,0,0
BRDA:96,37,1,0
BRDA:97,38,0,0
BRDA:97,38,1,0
BRDA:100,39,0,0
BRDA:100,39,1,0
BRDA:100,40,0,0
BRDA:100,40,1,0
BRDA:100,40,2,0
BRDA:100,40,3,0
BRDA:120,41,0,0
BRDA:120,41,1,0
BRDA:121,42,0,0
BRDA:121,42,1,0
BRDA:127,43,0,0
BRDA:127,43,1,0
BRDA:128,44,0,0
BRDA:128,44,1,0
BRDA:129,45,0,0
BRDA:129,45,1,0
BRDA:130,46,0,0
BRDA:130,46,1,0
BRDA:143,47,0,0
BRDA:143,47,1,0
BRDA:144,48,0,0
BRDA:144,48,1,0
BRDA:148,49,0,0
BRDA:148,49,1,0
BRDA:149,50,0,0
BRDA:149,50,1,0
BRDA:153,51,0,0
BRDA:153,51,1,0
BRDA:154,52,0,0
BRDA:154,52,1,0
BRDA:158,53,0,0
BRDA:158,53,1,0
BRDA:158,54,0,0
BRDA:158,54,1,0
BRDA:160,55,0,0
BRDA:160,55,1,0
BRDA:160,56,0,0
BRDA:160,56,1,0
BRDA:165,57,0,0
BRDA:165,57,1,0
BRDA:165,58,0,0
BRDA:165,58,1,0
BRDA:167,59,0,0
BRDA:167,59,1,0
BRDA:167,60,0,0
BRDA:167,60,1,0
BRDA:172,61,0,0
BRDA:172,61,1,0
BRDA:172,62,0,0
BRDA:172,62,1,0
BRDA:172,62,2,0
BRDA:172,62,3,0
BRDA:172,62,4,0
BRF:135
BRH:0
end_of_record
TN:
SF:src\utils\iconUtils.ts
FN:17,(anonymous_0)
FN:50,(anonymous_1)
FN:55,(anonymous_2)
FNF:3
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
DA:6,0
DA:7,0
DA:17,0
DA:18,0
DA:19,0
DA:22,0
DA:23,0
DA:24,0
DA:26,0
DA:27,0
DA:29,0
DA:33,0
DA:35,0
DA:36,0
DA:37,0
DA:38,0
DA:39,0
DA:40,0
DA:44,0
DA:47,0
DA:50,0
DA:51,0
DA:52,0
DA:55,0
DA:56,0
LF:25
LH:0
BRDA:18,0,0,0
BRDA:18,0,1,0
BRDA:18,1,0,0
BRDA:18,1,1,0
BRDA:26,2,0,0
BRDA:26,2,1,0
BRDA:35,3,0,0
BRDA:35,3,1,0
BRDA:40,4,0,0
BRDA:40,4,1,0
BRF:10
BRH:0
end_of_record
TN:
SF:src\utils\imageUtils.ts
FN:11,(anonymous_0)
FN:41,getBase64FromUri
FNF:2
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,getBase64FromUri
DA:8,0
DA:9,0
DA:11,0
DA:14,0
DA:15,0
DA:16,0
DA:17,0
DA:18,0
DA:19,0
DA:20,0
DA:21,0
DA:22,0
DA:24,0
DA:26,0
DA:27,0
DA:30,0
DA:31,0
DA:33,0
DA:36,0
DA:37,0
DA:42,0
DA:43,0
DA:44,0
DA:46,0
LF:24
LH:0
BRDA:17,0,0,0
BRDA:17,0,1,0
BRDA:17,1,0,0
BRDA:17,1,1,0
BRDA:20,2,0,0
BRDA:20,2,1,0
BRDA:26,3,0,0
BRDA:26,3,1,0
BRDA:46,4,0,0
BRDA:46,4,1,0
BRF:10
BRH:0
end_of_record
TN:
SF:src\utils\languageUtils.ts
FN:17,(anonymous_0)
FNF:1
FNH:0
FNDA:0,(anonymous_0)
DA:5,0
DA:6,0
DA:8,0
DA:17,0
DA:18,0
DA:19,0
DA:22,0
DA:23,0
DA:24,0
DA:25,0
DA:27,0
DA:28,0
DA:29,0
DA:30,0
DA:31,0
DA:32,0
DA:33,0
DA:35,0
DA:41,0
DA:42,0
DA:44,0
DA:45,0
DA:51,0
LF:23
LH:0
BRDA:18,0,0,0
BRDA:18,0,1,0
BRDA:18,1,0,0
BRDA:18,1,1,0
BRDA:28,2,0,0
BRDA:28,2,1,0
BRDA:30,3,0,0
BRDA:30,3,1,0
BRDA:32,4,0,0
BRDA:32,4,1,0
BRDA:41,5,0,0
BRDA:41,5,1,0
BRDA:41,6,0,0
BRDA:41,6,1,0
BRDA:44,7,0,0
BRDA:44,7,1,0
BRDA:44,8,0,0
BRDA:44,8,1,0
BRF:18
BRH:0
end_of_record
TN:
SF:src\utils\macros.ts
FN:9,determineMimeType
FN:19,(anonymous_1)
FN:25,getMacrosFromText
FN:34,getMacrosForImageFile
FN:45,getMultipleFoodsFromImage
FN:56,getMultipleFoodsFromText
FNF:6
FNH:0
FNDA:0,determineMimeType
FNDA:0,(anonymous_1)
FNDA:0,getMacrosFromText
FNDA:0,getMacrosForImageFile
FNDA:0,getMultipleFoodsFromImage
FNDA:0,getMultipleFoodsFromText
DA:10,0
DA:11,0
DA:12,0
DA:13,0
DA:14,0
DA:15,0
DA:19,0
DA:20,0
DA:21,0
DA:22,0
DA:26,0
DA:27,0
DA:29,0
DA:30,0
DA:35,0
DA:36,0
DA:37,0
DA:38,0
DA:40,0
DA:41,0
DA:46,0
DA:47,0
DA:48,0
DA:49,0
DA:51,0
DA:52,0
DA:57,0
DA:58,0
DA:59,0
DA:60,0
DA:62,0
DA:63,0
LF:32
LH:0
BRDA:10,0,0,0
BRDA:10,0,1,0
BRDA:10,1,0,0
BRDA:10,1,1,0
BRDA:12,2,0,0
BRDA:12,2,1,0
BRDA:12,2,2,0
BRDA:12,2,3,0
BRDA:20,3,0,0
BRDA:20,3,1,0
BRDA:48,4,0,0
BRDA:48,4,1,0
BRDA:59,5,0,0
BRDA:59,5,1,0
BRF:14
BRH:0
end_of_record
TN:
SF:src\utils\searchUtils.ts
FN:18,(anonymous_0)
FN:29,(anonymous_1)
FN:52,(anonymous_2)
FNF:3
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
FNDA:0,(anonymous_2)
DA:18,0
DA:19,0
DA:20,0
DA:23,0
DA:24,0
DA:25,0
DA:28,0
DA:29,0
DA:32,0
DA:33,0
DA:34,0
DA:35,0
DA:36,0
DA:37,0
DA:43,0
DA:44,0
DA:47,0
DA:48,0
DA:49,0
DA:50,0
DA:52,0
DA:53,0
DA:54,0
DA:59,0
DA:60,0
DA:64,0
DA:65,0
DA:66,0
DA:67,0
DA:68,0
DA:72,0
LF:31
LH:0
BRDA:19,0,0,0
BRDA:19,0,1,0
BRDA:19,1,0,0
BRDA:19,1,1,0
BRDA:24,2,0,0
BRDA:24,2,1,0
BRDA:32,3,0,0
BRDA:32,3,1,0
BRDA:36,4,0,0
BRDA:36,4,1,0
BRDA:50,5,0,0
BRDA:50,5,1,0
BRDA:52,6,0,0
BRDA:52,6,1,0
BRDA:59,7,0,0
BRDA:59,7,1,0
BRDA:67,8,0,0
BRDA:67,8,1,0
BRDA:67,9,0,0
BRDA:67,9,1,0
BRF:20
BRH:0
end_of_record
TN:
SF:src\utils\units.ts
FN:6,getGramsFromNaturalLanguage
FNF:1
FNH:0
FNDA:0,getGramsFromNaturalLanguage
DA:10,0
DA:11,0
DA:12,0
DA:14,0
DA:17,0
DA:18,0
LF:6
LH:0
BRDA:14,0,0,0
BRDA:14,0,1,0
BRF:2
BRH:0
end_of_record
TN:
SF:src\utils\validationUtils.ts
FN:3,(anonymous_0)
FN:7,(anonymous_1)
FNF:2
FNH:0
FNDA:0,(anonymous_0)
FNDA:0,(anonymous_1)
DA:3,0
DA:4,0
DA:7,0
DA:8,0
LF:4
LH:0
BRDA:4,0,0,0
BRDA:4,0,1,0
BRF:2
BRH:0
end_of_record

---------- END lcov.info ----------


---------- eas.json ----------
{
  "cli": {
    "version": ">= 13.4.1",
    "appVersionSource": "remote"
  },
  "build": {
    "development": {
      "developmentClient": true,
      "distribution": "internal"
    },
    "preview": {
      "android": {
        "buildType": "apk"
      },
      "env": {
         "BACKEND_URL_PRODUCTION": "https://macros-vision-ai.xyz",
         "BACKEND_URL_DEVELOPMENT": "http://192.168.1.185:8000"
      }
    },
    "production": {
      "autoIncrement": true
    }
  },
  "submit": {
    "production": {}
  }
}
---------- END eas.json ----------


---------- index.ts ----------
import { registerRootComponent } from 'expo';

import App from './App';

// registerRootComponent calls AppRegistry.registerComponent('main', () => App);
// It also ensures that whether you load the app in Expo Go or in a native build,
// the environment is set up appropriately
registerRootComponent(App);

---------- END index.ts ----------


---------- jest-setup.js ----------
// jest-setup.js
import '@testing-library/jest-native/extend-expect';
import 'react-native-get-random-values';

// Mock AsyncStorage
jest.mock('@react-native-async-storage/async-storage', () =>
  require('@react-native-async-storage/async-storage/jest/async-storage-mock')
);

// Mock react-native-toast-message
jest.mock('react-native-toast-message', () => ({
  show: jest.fn(),
  hide: jest.fn(),
}));

// Mock Expo Modules
jest.mock('expo-constants', () => ({
  ...jest.requireActual('expo-constants'),
  expoConfig: {
    extra: {
      env: {
        BACKEND_URL_DEVELOPMENT: 'http://mock-dev-url.com',
        BACKEND_URL_PRODUCTION: 'http://mock-prod-url.com',
      },
    },
  },
}));

jest.mock('expo-secure-store', () => ({
  getItemAsync: jest.fn(() => Promise.resolve(null)),
  setItemAsync: jest.fn(() => Promise.resolve()),
  deleteItemAsync: jest.fn(() => Promise.resolve()),
}));
---------- END jest-setup.js ----------


---------- jest.config.js ----------
// jest.config.js
module.exports = {
  preset: 'jest-expo',
  transform: {
    '^.+\\.(js|jsx|ts|tsx)$': 'babel-jest',
  },
  testPathIgnorePatterns: ['/node_modules/', '/android/', '/ios/'],
  setupFilesAfterEnv: ['./jest-setup.js'],
  transformIgnorePatterns: [
    'node_modules/(?!((jest-)?react-native|@react-native(-community)?)|expo(nent)?|@expo(nent)?/.*|@expo-google-fonts/.*|react-navigation|@react-navigation/.*|@unimodules/.*|unimodules|sentry-expo|native-base|react-native-svg)',
  ],
  collectCoverage: true,
  collectCoverageFrom: [
    'src/**/*.{ts,tsx}',
    '!src/**/*.d.ts',
    '!src/types/**',
    '!src/navigation/**',
    '!src/localization/languages/**',
    '!src/assets/**',
  ],
  coverageReporters: ['json', 'lcov', 'text', 'clover'],
};
---------- END jest.config.js ----------


---------- package.json ----------
{
  "name": "macrosvisionai",
  "license": "0BSD",
  "version": "1.0.0",
  "main": "index.ts",
  "scripts": {
    "start": "expo start",
    "android": "expo start --android",
    "ios": "expo start --ios",
    "web": "expo start --web",
    "test": "jest"
  },
  "dependencies": {
    "@react-native-async-storage/async-storage": "^2.1.2",
    "@react-native-community/datetimepicker": "8.2.0",
    "@react-native-picker/picker": "^2.11.0",
    "@react-navigation/bottom-tabs": "^7.3.1",
    "@react-navigation/native": "^7.0.17",
    "@react-navigation/native-stack": "^7.3.12",
    "@rneui/base": "^4.0.0-rc.7",
    "@rneui/themed": "^4.0.0-rc.8",
    "@types/d3-scale": "^4.0.9",
    "d3-scale": "^4.0.2",
    "date-fns": "^4.1.0",
    "expo": "~52.0.40",
    "expo-constants": "~16.0.2",
    "expo-document-picker": "^13.0.3",
    "expo-file-system": "^18.0.12",
    "expo-image-manipulator": "~13.0.5",
    "expo-image-picker": "^16.0.6",
    "expo-linking": "~7.0.5",
    "expo-localization": "~15.0.3",
    "expo-secure-store": "~14.0.1",
    "expo-sharing": "~13.0.1",
    "expo-status-bar": "~2.0.1",
    "i18n-js": "^4.5.1",
    "react": "18.3.1",
    "react-native": "0.76.7",
    "react-native-config": "^1.5.5",
    "react-native-get-random-values": "^1.11.0",
    "react-native-mime-types": "^2.5.0",
    "react-native-reanimated": "~3.16.1",
    "react-native-safe-area-context": "^4.14.1",
    "react-native-screens": "^4.9.2",
    "react-native-svg": "^15.11.2",
    "react-native-toast-message": "^2.2.1",
    "react-native-uuid": "^2.0.3",
    "react-native-webview": "^13.13.4",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@babel/core": "^7.25.2",
    "@testing-library/jest-native": "^5.4.3",
    "@testing-library/react-native": "^12.9.0",
    "@types/i18n-js": "^4.0.1",
    "@types/jest": "^29.5.14",
    "@types/react": "~18.3.12",
    "@types/react-native": "^0.73.0",
    "@types/react-native-svg-charts": "^5.0.16",
    "@types/uuid": "^10.0.0",
    "jest": "^29.7.0",
    "jest-expo": "^51.0.4",
    "react-test-renderer": "^18.3.1",
    "ts-jest": "^29.4.0",
    "typescript": "^5.3.3",
    "victory": "^37.3.6"
  },
  "private": true
}

---------- END package.json ----------


---------- projectToFile.js ----------
const fs = require('fs');
const path = require('path');

async function generateProjectStructureAndContent(projectRoot, outputFile) {
    const excludedDirs = ['node_modules', '.git', '.expo', 'android', 'ios', '__tests__', 'dist', 'build', '.vscode'];
    const excludedFiles = ['.DS_Store', 'package-lock.json', 'yarn.lock', 'bun.lockb', 'metro.config.js', 'babel.config.js'];
    const imageExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.bmp', '.svg', '.webp', '.ico']; // Add more if needed

    let fileStructureTree = '';  // For the initial tree structure
    let fileContents = '';      // For the file contents

    async function traverseDirectory(dir, indent = '') {
        const entries = await fs.promises.readdir(dir, { withFileTypes: true });

        for (const entry of entries) {
            const fullPath = path.join(dir, entry.name);

            if (excludedDirs.includes(entry.name)) {
                continue;
            }

            if (entry.isDirectory()) {
                fileStructureTree += `${indent}${entry.name}/\n`;
                await traverseDirectory(fullPath, indent + '  ');
            } else if (entry.isFile()) {
                if (excludedFiles.includes(entry.name)) {
                    continue;
                }
                fileStructureTree += `${indent}${entry.name}\n`;
                const fileExtension = path.extname(entry.name).toLowerCase();

                if (!imageExtensions.includes(fileExtension)) {
                    fileContents += `\n---------- ${entry.name} ----------\n`;
                    try {
                        const fileContent = await fs.promises.readFile(fullPath, 'utf-8');
                        fileContents += `${fileContent}\n`;
                    } catch (readError) {
                        fileContents += `ERROR READING FILE: ${readError.message}\n`;
                    }
                    fileContents += `---------- END ${entry.name} ----------\n\n`;
                } else {
                     fileContents += `\n---------- ${entry.name} ----------\n`;
                     fileContents += `(Image file - content not included)\n`;
                     fileContents += `---------- END ${entry.name} ----------\n\n`;
                }
            }
        }
    }

    try {
        await traverseDirectory(projectRoot);
        const fullOutput = fileStructureTree + fileContents;

        await fs.promises.writeFile(outputFile, fullOutput);
        console.log(`Project structure and content written to ${outputFile}`);

    } catch (error) {
        console.error('An error occurred:', error);
        process.exit(1);
    }
}

// --- Main execution ---

const projectRoot = process.cwd(); // Use the current working directory
const outputFile = 'project_structure.txt';

// Check if the projectRoot exists.
fs.stat(projectRoot, (err, stats) => {
    if (err) {
        console.error(`Error: Project root directory "${projectRoot}" not found or not accessible.`);
        process.exit(1);
    }

    if (!stats.isDirectory()) {
        console.error(`Error: "${projectRoot}" is not a directory.`);
        process.exit(1);
    }

    generateProjectStructureAndContent(projectRoot, outputFile);
});
---------- END projectToFile.js ----------


---------- combinationTags.ts ----------
// src/assets/food_icons/combinationTags.ts

// This file maps broad search terms (in multiple languages) to specific tagKeys
// from foodIconDefinitions.ts. This enables searching for "vegetable" and
// finding items tagged as "carrot", "broccoli", etc.

// Keys are lowercase search terms. Values are arrays of tagKey strings.
export const combinationTags: Record<string, string[]> = {
  // --- VEGETABLES ---
  "vegetable": [
    "carrot", "broccoli", "leafyGreen", "cucumber", "pepperGeneral",
    "bellPepper", "corn", "potato", "onion", "garlic", "eggplant",
    "mushroom", "tomato" // Tomato is culinarily a vegetable
  ],
  "vegetables": [
    "carrot", "broccoli", "leafyGreen", "cucumber", "pepperGeneral",
    "bellPepper", "corn", "potato", "onion", "garlic", "eggplant",
    "mushroom", "tomato"
  ],
  "овощ": [ // Russian for vegetable (singular)
    "carrot", "broccoli", "leafyGreen", "cucumber", "pepperGeneral",
    "bellPepper", "corn", "potato", "onion", "garlic", "eggplant",
    "mushroom", "tomato"
  ],
  "овощи": [ // Russian for vegetables (plural)
    "carrot", "broccoli", "leafyGreen", "cucumber", "pepperGeneral",
    "bellPepper", "corn", "potato", "onion", "garlic", "eggplant",
    "mushroom", "tomato"
  ],
  "ירק": [ // Hebrew for vegetable (singular)
    "carrot", "broccoli", "leafyGreen", "cucumber", "pepperGeneral",
    "bellPepper", "corn", "potato", "onion", "garlic", "eggplant",
    "mushroom", "tomato"
  ],
  "ירקות": [ // Hebrew for vegetables (plural)
    "carrot", "broccoli", "leafyGreen", "cucumber", "pepperGeneral",
    "bellPepper", "corn", "potato", "onion", "garlic", "eggplant",
    "mushroom", "tomato"
  ],

  // --- FRUITS ---
  "fruit": [
    "apple", "banana", "grapes", "strawberry", "blueberry", "orange",
    "lemonLime", "watermelon", "pineapple", "mango", "kiwi",
    "peachNectarine", "cherry", "pear", "avocado", "coconut", "genericFruit"
  ],
  "fruits": [
    "apple", "banana", "grapes", "strawberry", "blueberry", "orange",
    "lemonLime", "watermelon", "pineapple", "mango", "kiwi",
    "peachNectarine", "cherry", "pear", "avocado", "coconut", "genericFruit"
  ],
  "фрукт": [ // Russian for fruit (singular)
    "apple", "banana", "grapes", "strawberry", "blueberry", "orange",
    "lemonLime", "watermelon", "pineapple", "mango", "kiwi",
    "peachNectarine", "cherry", "pear", "avocado", "coconut", "genericFruit"
  ],
  "фрукты": [ // Russian for fruits (plural)
    "apple", "banana", "grapes", "strawberry", "blueberry", "orange",
    "lemonLime", "watermelon", "pineapple", "mango", "kiwi",
    "peachNectarine", "cherry", "pear", "avocado", "coconut", "genericFruit"
  ],
  "פרי": [ // Hebrew for fruit (singular)
    "apple", "banana", "grapes", "strawberry", "blueberry", "orange",
    "lemonLime", "watermelon", "pineapple", "mango", "kiwi",
    "peachNectarine", "cherry", "pear", "avocado", "coconut", "genericFruit"
  ],
  "פירות": [ // Hebrew for fruits (plural)
    "apple", "banana", "grapes", "strawberry", "blueberry", "orange",
    "lemonLime", "watermelon", "pineapple", "mango", "kiwi",
    "peachNectarine", "cherry", "pear", "avocado", "coconut", "genericFruit"
  ],

  // --- MEATS ---
  "meat": ["poultry", "redMeat", "bacon", "processedMeat"],
  "мясо": ["poultry", "redMeat", "bacon", "processedMeat"], // Russian
  "בשר": ["poultry", "redMeat", "bacon", "processedMeat"], // Hebrew

  // --- DRINKS ---
  "drink": ["coffee", "tea", "softDrinkJuice", "water", "wine", "beer", "cocktail"],
  "drinks": ["coffee", "tea", "softDrinkJuice", "water", "wine", "beer", "cocktail"],
  "напиток": ["coffee", "tea", "softDrinkJuice", "water", "wine", "beer", "cocktail"], // Russian
  "напитки": ["coffee", "tea", "softDrinkJuice", "water", "wine", "beer", "cocktail"],
  "משקה": ["coffee", "tea", "softDrinkJuice", "water", "wine", "beer", "cocktail"], // Hebrew
  "משקאות": ["coffee", "tea", "softDrinkJuice", "water", "wine", "beer", "cocktail"],

  // --- DAIRY ---
  "dairy": ["milk", "cheese", "butter", "yogurt"],
  "молочные продукты": ["milk", "cheese", "butter", "yogurt"], // Russian
  "מוצרי חלב": ["milk", "cheese", "butter", "yogurt"], // Hebrew
};
---------- END combinationTags.ts ----------


---------- iconDefinitions.ts ----------
// src/assets/food_icons/iconDefinitions.ts

// The `icon` property should be an emoji string.
// The `tagKey` property refers to a key within the "foodIconTags" section of your language JSON files.
// For example, a `tagKey` of "apple" will look for `t('foodIconTags.apple')` which should return an array of tags.
export interface FoodIconDefinition {
  icon: string; // Emoji character
  tagKey: string; // Base key for tags, e.g., "apple", "banana". Full key will be "foodIconTags.apple"
  priority?: number; // Optional: Higher number means higher priority if multiple tags match
}

export const foodIconDefinitions: FoodIconDefinition[] = [
  // Fruits
  { icon: '🍎', tagKey: 'apple', priority: 10 },
  { icon: '🍌', tagKey: 'banana', priority: 10 },
  { icon: '🍇', tagKey: 'grapes', priority: 10 },
  { icon: '🍓', tagKey: 'strawberry', priority: 10 },
  { icon: '🫐', tagKey: 'blueberry', priority: 10 },
  { icon: '🍊', tagKey: 'orange', priority: 10 },
  { icon: '🍋', tagKey: 'lemonLime', priority: 10 },
  { icon: '🍉', tagKey: 'watermelon', priority: 10 },
  { icon: '🍍', tagKey: 'pineapple', priority: 10 },
  { icon: '🥭', tagKey: 'mango', priority: 10 },
  { icon: '🥝', tagKey: 'kiwi', priority: 10 },
  { icon: '🍑', tagKey: 'peachNectarine', priority: 10 },
  { icon: '🍒', tagKey: 'cherry', priority: 10 },
  { icon: '🍐', tagKey: 'pear', priority: 10 },
  { icon: '🥑', tagKey: 'avocado', priority: 10 },
  { icon: '🥥', tagKey: 'coconut', priority: 10 },
  { icon: '🍅', tagKey: 'tomato', priority: 9 }, // Often culinary vegetable

  // Vegetables
  { icon: '🥕', tagKey: 'carrot', priority: 10 },
  { icon: '🥦', tagKey: 'broccoli', priority: 10 },
  { icon: '🥬', tagKey: 'leafyGreen', priority: 10 },
  { icon: '🥒', tagKey: 'cucumber', priority: 10 },
  { icon: '🌶️', tagKey: 'pepperGeneral', priority: 10 }, // General pepper
  { icon: '🫑', tagKey: 'bellPepper', priority: 11 },   // More specific bell pepper (can cover green, yellow, orange)
  { icon: '🌽', tagKey: 'corn', priority: 10 },
  { icon: '🥔', tagKey: 'potato', priority: 10 },
  { icon: '🧅', tagKey: 'onion', priority: 10 },
  { icon: '🧄', tagKey: 'garlic', priority: 10 },
  { icon: '🍆', tagKey: 'eggplant', priority: 10 },
  { icon: '🍄', tagKey: 'mushroom', priority: 10 },

  // Meats & Poultry
  { icon: '🍗', tagKey: 'poultry', priority: 10 },
  { icon: '🥩', tagKey: 'redMeat', priority: 10 },
  { icon: '🥓', tagKey: 'bacon', priority: 10 },
  { icon: '🍖', tagKey: 'processedMeat', priority: 9 },

  // Seafood
  { icon: '🐟', tagKey: 'fish', priority: 10 },
  { icon: '🦐', tagKey: 'shrimpPrawn', priority: 10 },
  { icon: '🦞', tagKey: 'lobster', priority: 10 },
  { icon: '🦀', tagKey: 'crab', priority: 10 },
  { icon: '🍣', tagKey: 'sushi', priority: 10 },

  // Dairy & Eggs
  { icon: '🥚', tagKey: 'egg', priority: 10 },
  { icon: '🥛', tagKey: 'milk', priority: 10 },
  { icon: '🧀', tagKey: 'cheese', priority: 10 },
  { icon: '🧈', tagKey: 'butter', priority: 10 },
  { icon: '🍦', tagKey: 'iceCream', priority: 8 },
  { icon: '🍧', tagKey: 'yogurt', priority: 10 }, // Changed from 🍧 to a more generic yogurt emoji, or keep 🍧 for frozen

  // Grains, Bread, Pasta, Cereal
  { icon: '🍞', tagKey: 'bread', priority: 10 },
  { icon: '🍚', tagKey: 'rice', priority: 10 },
  { icon: '🍝', tagKey: 'pasta', priority: 10 },
  { icon: '🥣', tagKey: 'cerealOats', priority: 10 },
  { icon: '🌾', tagKey: 'otherGrains', priority: 10 }, // Quinoa, couscous etc.
  { icon: '🫓', tagKey: 'flatbread', priority: 10 },

  // Legumes
  { icon: '🫘', tagKey: 'beansLegumes', priority: 10 },
  { icon: '🥜', tagKey: 'peanut', priority: 9 },

  // Nuts & Seeds
  { icon: '🌰', tagKey: 'nuts', priority: 10 },
  { icon: '🌻', tagKey: 'seeds', priority: 10 }, // Using sunflower as general seed representation

  // Sweets & Snacks
  { icon: '🍩', tagKey: 'donut', priority: 7 },
  { icon: '🍪', tagKey: 'cookie', priority: 7 },
  { icon: '🍫', tagKey: 'chocolate', priority: 7 },
  { icon: '🍰', tagKey: 'cake', priority: 7 },
  { icon: '🍬', tagKey: 'candy', priority: 6 },
  { icon: '🍿', tagKey: 'popcorn', priority: 8 },
  { icon: '🥨', tagKey: 'pretzel', priority: 8 },
  { icon: '🍟', tagKey: 'friesChips', priority: 7 },

  // Drinks
  { icon: '☕', tagKey: 'coffee', priority: 9 },
  { icon: '🍵', tagKey: 'tea', priority: 9 },
  { icon: '🥤', tagKey: 'softDrinkJuice', priority: 8 },
  { icon: '💧', tagKey: 'water', priority: 10 },
  { icon: '🍷', tagKey: 'wine', priority: 7 },
  { icon: '🍺', tagKey: 'beer', priority: 7 },
  { icon: '🍸', tagKey: 'cocktail', priority: 7 },

  // Prepared Meals / Dishes
  { icon: '🍕', tagKey: 'pizza', priority: 8 },
  { icon: '🍔', tagKey: 'burger', priority: 8 },
  { icon: '🌮', tagKey: 'tacoBurrito', priority: 8 },
  { icon: '🥪', tagKey: 'sandwich', priority: 9 },
  { icon: '🍲', tagKey: 'soupStew', priority: 9 },
  { icon: '🥗', tagKey: 'salad', priority: 10 },
  { icon: '🍜', tagKey: 'noodleDish', priority: 9 },


  // Generic fallbacks - these should have broad tags in the language files
  { icon: '🍓', tagKey: 'genericFruit', priority: 2 },
  { icon: '🥬', tagKey: 'genericVegetable', priority: 2 },
  { icon: '🍽️', tagKey: 'genericMeal', priority: 1 },
  { icon: '❓', tagKey: 'unknownFood', priority: 0 }, // Lowest priority
];
---------- END iconDefinitions.ts ----------


---------- AccountSettings.tsx ----------
// src/components/AccountSettings.tsx
import React from 'react';
import { View, ActivityIndicator } from 'react-native';
import { Text, makeStyles, Button, Icon, ListItem, useTheme } from '@rneui/themed';
import { t } from '../localization/i18n';

interface AccountSettingsProps {
    userCoins: number | null;
    isLoadingCoins: boolean;
    isAddingCoins: boolean;
    onAddTestCoins: () => void;
}

const AccountSettings: React.FC<AccountSettingsProps> = ({
    userCoins,
    isLoadingCoins,
    isAddingCoins,
    onAddTestCoins,
}) => {
    const { theme } = useTheme();
    const styles = useStyles();

    return (
        <View>
            <ListItem bottomDivider containerStyle={styles.listItem}>
                <Icon name="database" type="material-community" color={theme.colors.warning} />
                <ListItem.Content>
                    <ListItem.Title style={styles.listItemTitle}>{t('accountSettings.coinBalance')}</ListItem.Title>
                </ListItem.Content>
                {isLoadingCoins ? (
                    <ActivityIndicator size="small" color={theme.colors.primary} />
                ) : (
                    <Text style={styles.coinValue}>{userCoins !== null ? userCoins : t('accountSettings.notApplicable')}</Text>
                )}
            </ListItem>

            {/* This button and its warning are only available in development builds */}
            {__DEV__ && (
                <>
                    <Button
                        title={t('accountSettings.addTestCoins')}
                        onPress={onAddTestCoins}
                        buttonStyle={[styles.button, { backgroundColor: theme.colors.success, marginTop: 10 }]}
                        icon={<Icon name="plus-circle-outline" type="material-community" color="white" size={20} style={{ marginRight: 8 }} />}
                        loading={isAddingCoins}
                        disabled={isAddingCoins || isLoadingCoins}
                    />
                    <Text style={styles.testButtonWarning}>
                        {t('accountSettings.testButtonWarning')}
                    </Text>
                </>
            )}
        </View>
    );
};

const useStyles = makeStyles((theme) => ({
    listItem: {
        backgroundColor: theme.colors.background,
        paddingVertical: 15,
    },
    listItemTitle: {
        color: theme.colors.text,
        fontWeight: '500',
        textAlign: 'left',
    },
    coinValue: {
        color: theme.colors.primary,
        fontWeight: 'bold',
        fontSize: 16,
    },
    button: {
        marginBottom: 10,
        borderRadius: 8,
    },
    testButtonWarning: {
        fontSize: 12,
        color: theme.colors.grey3,
        fontStyle: 'italic',
        textAlign: 'center',
        marginTop: 0,
        marginBottom: 15,
        marginHorizontal: 10,
    },
}));

export default AccountSettings;
---------- END AccountSettings.tsx ----------


---------- AddEntryModal.tsx ----------
// src/components/AddEntryModal/AddEntryModal.tsx
import React, { useEffect, useState, useMemo, useCallback, useRef } from "react";
import { View, KeyboardAvoidingView, Platform, Dimensions, StyleSheet, Alert, Keyboard } from "react-native";
import { Overlay, makeStyles, useTheme, Button, Input } from "@rneui/themed";
import { Food } from "../../types/food";
import { isValidNumberInput } from "../../utils/validationUtils";
import { loadRecentFoods, saveRecentFoods, RecentServings, loadRecentServings, saveRecentServings } from "../../services/storageService";
import { getFoodIconUrl } from "../../utils/iconUtils";
import { getGramsFromNaturalLanguage } from "../../utils/units";
import Toast from "react-native-toast-message";
import * as ImagePicker from "expo-image-picker";
import { EstimatedFoodItem, getMultipleFoodsFromImage, getMultipleFoodsFromText, BackendError, determineMimeType } from "../../utils/macros";
import { compressImageIfNeeded, getBase64FromUri } from "../../utils/imageUtils";
import { v4 as uuidv4 } from "uuid";
import QuickAddList from "../QuickAddList";
import { t } from '../../localization/i18n';
import { calculateDailyEntryGrade, FoodGradeResult } from "../../utils/gradingUtils";
import { Settings } from '../../types/settings';
import ModalHeader from './ModalHeader';
import FoodSelectionList from './FoodSelectionList';
import AmountInputSection from './AmountInputSection';

interface AddEntryModalProps {
  isVisible: boolean;
  toggleOverlay: () => void;
  handleAddEntry: (food: Food, grams: number) => void;
  handleAddMultipleEntries: (entries: { food: Food; grams: number }[]) => void;
  foods: Food[];
  isEditMode: boolean;
  initialGrams?: string;
  initialSelectedFoodForEdit?: Food | null;
  onAddNewFoodRequest: () => void;
  onCommitFoodToLibrary: (foodData: Omit<Food, 'id' | 'createdAt'> | Food, isUpdate: boolean) => Promise<Food | null>;
  dailyGoals: Settings['dailyGoals'];
}

const KEYBOARD_VERTICAL_OFFSET = Platform.OS === "ios" ? 80 : 0;
const MAX_RECENT_FOODS = 15;
const MAX_SERVINGS_PER_FOOD = 4;

type UnitMode = "grams" | "auto";
type ModalMode = "normal" | "quickAddSelect" | "quickAddText";

const AddEntryModal: React.FC<AddEntryModalProps> = ({
  isVisible, toggleOverlay, handleAddEntry: parentHandleAddEntry, handleAddMultipleEntries: parentHandleAddMultipleEntries,
  foods, isEditMode, initialGrams, initialSelectedFoodForEdit, onAddNewFoodRequest, onCommitFoodToLibrary, dailyGoals,
}) => {
  const { theme } = useTheme();
  const styles = useStyles();

  const [internalSelectedFood, setInternalSelectedFood] = useState<Food | null>(null);
  const [internalGrams, setInternalGrams] = useState("");
  const [internalSearch, setInternalSearch] = useState("");
  const [recentFoods, setRecentFoods] = useState<Food[]>([]);
  const [recentServings, setRecentServings] = useState<RecentServings>({});
  const [foodIcons, setFoodIcons] = useState<{ [foodName: string]: string | null; }>({});
  const [unitMode, setUnitMode] = useState<UnitMode>("grams");
  const [autoInput, setAutoInput] = useState("");
  const [isAiLoading, setIsAiLoading] = useState(false);

  const [modalMode, setModalMode] = useState<ModalMode>("normal");
  const [quickAddLoading, setQuickAddLoading] = useState(false);
  const [quickAddItems, setQuickAddItems] = useState<EstimatedFoodItem[]>([]);
  const [selectedQuickAddIndices, setSelectedQuickAddIndices] = useState<Set<number>>(new Set());
  const [editingQuickAddItemIndex, setEditingQuickAddItemIndex] = useState<number | null>(null);
  const [editedFoodName, setEditedFoodName] = useState<string>("");
  const [editedGrams, setEditedGrams] = useState<string>("");
  const [selectedMultipleFoods, setSelectedMultipleFoods] = useState<Map<string, { food: Food; grams: number }>>(new Map());
  
  const [quickAddTextInput, setQuickAddTextInput] = useState("");
  const [isTextQuickAddLoading, setIsTextQuickAddLoading] = useState(false);

  const isActionDisabled = isAiLoading || quickAddLoading;

  const resolveAndSetIcon = useCallback((foodName: string) => {
    if (!foodName || foodIcons[foodName] !== undefined) return;
    const icon = getFoodIconUrl(foodName);
    setFoodIcons(prevIcons => ({ ...prevIcons, [foodName]: icon }));
  }, [foodIcons]);

  const foodGradeResult = useMemo((): FoodGradeResult | null => {
    const numericGramsValue = parseFloat(internalGrams);
    if (internalSelectedFood && isValidNumberInput(internalGrams) && numericGramsValue > 0 && dailyGoals) {
        return calculateDailyEntryGrade(internalSelectedFood, numericGramsValue, dailyGoals);
    }
    return null;
  }, [internalSelectedFood, internalGrams, dailyGoals]);

  useEffect(() => {
    const actuallyEditingDailyItem = isEditMode && initialSelectedFoodForEdit && initialGrams !== undefined;
    const isPreSelectedForAdd = !isEditMode && initialSelectedFoodForEdit;

    if (actuallyEditingDailyItem) {
        setModalMode("normal");
        setUnitMode("grams");
        setInternalSelectedFood(initialSelectedFoodForEdit);
        setInternalGrams(initialGrams);
        if (initialSelectedFoodForEdit?.name) resolveAndSetIcon(initialSelectedFoodForEdit.name);
    } else if (isPreSelectedForAdd) {
        setModalMode("normal");
        setUnitMode("grams");
        setInternalSelectedFood(initialSelectedFoodForEdit);
        setInternalGrams(initialGrams || "");
        if (initialSelectedFoodForEdit?.name) resolveAndSetIcon(initialSelectedFoodForEdit.name);
    } 
    
    // Always load recents for non-edit scenarios.
    if (!isEditMode) {
        loadRecentFoods().then(setRecentFoods);
        loadRecentServings().then(setRecentServings);
    }
  }, []); 


  useEffect(() => { recentFoods.forEach(food => resolveAndSetIcon(food.name)); }, [recentFoods, resolveAndSetIcon]);

  const addToRecentFoods = useCallback(async (food: Food) => {
    if (!food || !food.id) return;
    setRecentFoods(prev => {
      const updated = [food, ...prev.filter(f => f.id !== food.id)].slice(0, MAX_RECENT_FOODS);
      saveRecentFoods(updated).catch(() => {}); return updated;
    });
  }, []);

  const addMultipleToRecentServings = useCallback(async (entries: { foodId: string; grams: number }[]) => {
    if (!entries || entries.length === 0) return;
    
    setRecentServings(prevServings => {
        const newServings = { ...prevServings };
        entries.forEach(({ foodId, grams }) => {
            const roundedGrams = Math.round(grams);
            const currentServingsForFood = newServings[foodId] || [];
            const updatedServingsForFood = [roundedGrams, ...currentServingsForFood.filter(g => g !== roundedGrams)];
            newServings[foodId] = [...new Set(updatedServingsForFood)].slice(0, MAX_SERVINGS_PER_FOOD);
        });
        saveRecentServings(newServings).catch(() => {});
        return newServings;
    });
  }, []);

  const servingSizeSuggestions = useMemo(() => {
    if (!internalSelectedFood?.id) return [];
    
    const servingsForFood = recentServings[internalSelectedFood.id] || [];
    if (servingsForFood.length === 0) return [];

    return servingsForFood.map((val, index) => ({
        label: index === 0 ? t('addEntryModal.lastUsedServing', { grams: val }) : `${val}g`,
        value: String(val)
    }));
  }, [internalSelectedFood, recentServings, t]);

  const handleEstimateGrams = useCallback(async () => {
    Keyboard.dismiss(); if (!internalSelectedFood || !autoInput.trim() || isAiLoading) return;
    setIsAiLoading(true);
    try {
      const estimatedGrams = await getGramsFromNaturalLanguage(internalSelectedFood.name, autoInput);
      const roundedGrams = String(Math.round(estimatedGrams)); setInternalGrams(roundedGrams); setUnitMode("grams"); setAutoInput("");
      Toast.show({ type: "success", text1: t('addEntryModal.alertGramsEstimated'), text2: t('addEntryModal.alertGramsEstimatedMessage', {grams: roundedGrams, foodName: internalSelectedFood.name}), position: "bottom" });
    } catch (error) { /* Handled by getGramsFromNaturalLanguage */ } finally { setIsAiLoading(false); }
  }, [internalSelectedFood, autoInput, isAiLoading, t]);

  const handleAddOrUpdateSingleEntry = useCallback(async () => {
    Keyboard.dismiss(); if (!internalSelectedFood?.id) return Alert.alert(t('addEntryModal.alertFoodNotSelected'), t('addEntryModal.alertFoodNotSelectedMessage'));
    const numericGramsValue = parseFloat(internalGrams);
    if (!isValidNumberInput(internalGrams) || numericGramsValue <= 0) return Alert.alert(t('addEntryModal.alertInvalidAmount'), t('addEntryModal.alertInvalidAmountMessage'));
    if (isActionDisabled) return;
    parentHandleAddEntry(internalSelectedFood, numericGramsValue);
    if (!isEditMode) {
        addToRecentFoods(internalSelectedFood);
        addMultipleToRecentServings([{ foodId: internalSelectedFood.id, grams: numericGramsValue }]);
    }
  }, [internalSelectedFood, internalGrams, isActionDisabled, isEditMode, parentHandleAddEntry, addToRecentFoods, addMultipleToRecentServings, t]);

  const handleToggleMultipleFoodSelection = useCallback((food: Food, displayGrams: number) => {
    if (isEditMode || internalSelectedFood) return;
    setSelectedMultipleFoods(prev => { const newMap = new Map(prev); newMap.has(food.id) ? newMap.delete(food.id) : newMap.set(food.id, { food, grams: displayGrams }); return newMap; });
  }, [isEditMode, internalSelectedFood]);

  const handleConfirmAddMultipleSelected = useCallback(async () => {
    if (isEditMode || internalSelectedFood || selectedMultipleFoods.size === 0 || isActionDisabled) return;
    Keyboard.dismiss();
    const entriesToAdd = Array.from(selectedMultipleFoods.values()); if (entriesToAdd.length === 0) return;
    parentHandleAddMultipleEntries(entriesToAdd);
    entriesToAdd.forEach(entry => addToRecentFoods(entry.food));
    const servingsToAdd = entriesToAdd.map(e => ({ foodId: e.food.id, grams: e.grams }));
    addMultipleToRecentServings(servingsToAdd);
    setSelectedMultipleFoods(new Map());
  }, [isEditMode, internalSelectedFood, selectedMultipleFoods, isActionDisabled, parentHandleAddMultipleEntries, addToRecentFoods, addMultipleToRecentServings]);

  const pickImageAndAnalyze = useCallback(async (source: "camera" | "gallery") => {
    if (isEditMode) return;
    setQuickAddItems([]); setSelectedQuickAddIndices(new Set()); setEditingQuickAddItemIndex(null);
    setModalMode("quickAddSelect"); setQuickAddLoading(true); setIsTextQuickAddLoading(false);
    
    let permissionResult, pickerResult: ImagePicker.ImagePickerResult;
    try {
      permissionResult = source === "camera" ? await ImagePicker.requestCameraPermissionsAsync() : await ImagePicker.requestMediaLibraryPermissionsAsync();
      if (!permissionResult.granted) throw new Error("Permission denied");
      pickerResult = source === "camera" ? await ImagePicker.launchCameraAsync({ quality: 1 }) : await ImagePicker.launchImageLibraryAsync({ mediaTypes: ImagePicker.MediaTypeOptions.Images, quality: 1 });
      if (pickerResult.canceled) throw new Error("User cancelled");

      const asset = pickerResult.assets?.[0]; if (!asset) throw new Error(t('addEntryModal.alertQuickAddCouldNotSelect'));
      const compressed = await compressImageIfNeeded(asset);
      const assetForAnalysis = compressed ? { ...asset, uri: compressed.uri, mimeType: 'image/jpeg' } : asset;
      const base64 = await getBase64FromUri(assetForAnalysis.uri);
      const mimeType = determineMimeType(assetForAnalysis);
      const results = await getMultipleFoodsFromImage(base64, mimeType);

      if (results.length === 0) {
        Toast.show({type: 'info', text1: t('addEntryModal.noQuickAddResults'), position: 'bottom'});
        setModalMode("normal");
      } else {
        setQuickAddItems(results); setSelectedQuickAddIndices(new Set(results.map((_, i) => i)));
        results.forEach(item => resolveAndSetIcon(item.foodName));
      }
    } catch (error: any) {
      if (error.message !== "User cancelled" && error.message !== "Permission denied" && !(error instanceof BackendError)) Alert.alert(t('addEntryModal.alertQuickAddError'), error.message || t('addEntryModal.alertQuickAddErrorMessage'));
      setModalMode("normal");
    } finally {
      setQuickAddLoading(false);
    }
  }, [isEditMode, resolveAndSetIcon, t]);

  const handleQuickAddImage = useCallback(() => {
    Keyboard.dismiss(); if (isEditMode || isActionDisabled) return;
    if (editingQuickAddItemIndex !== null) return Alert.alert(t('addEntryModal.alertQuickAddFinishEditing'), t('addEntryModal.alertQuickAddFinishEditingSaveOrCancel'));
    Alert.alert(t('addEntryModal.alertQuickAddFromImageTitle'), t('addEntryModal.alertQuickAddFromImageMessage'), [
        { text: t('addEntryModal.cancel'), style: "cancel" },
        { text: t('addEntryModal.camera'), onPress: () => pickImageAndAnalyze("camera") },
        { text: t('addEntryModal.gallery'), onPress: () => pickImageAndAnalyze("gallery") },
    ]);
  }, [isEditMode, editingQuickAddItemIndex, isActionDisabled, pickImageAndAnalyze, t]);

  const handleQuickAddText = useCallback(() => {
    Keyboard.dismiss(); if (isEditMode || isActionDisabled) return;
    setModalMode('quickAddText');
    setQuickAddItems([]); setSelectedQuickAddIndices(new Set()); setEditingQuickAddItemIndex(null);
  }, [isEditMode, isActionDisabled]);

  const handleAnalyzeText = async () => {
    const textToAnalyze = quickAddTextInput.trim();
    if (!textToAnalyze || quickAddLoading) return;
    Keyboard.dismiss();
    setQuickAddLoading(true); setIsTextQuickAddLoading(true);
    try {
        const results = await getMultipleFoodsFromText(textToAnalyze);
        if (results.length === 0) {
            Toast.show({ type: 'info', text1: t('addEntryModal.noQuickAddResults'), position: 'bottom' });
        } else {
            setQuickAddItems(results); setSelectedQuickAddIndices(new Set(results.map((_, i) => i)));
            results.forEach(item => { if (item.foodName) { resolveAndSetIcon(item.foodName); } });
            setModalMode("quickAddSelect");
        }
    } catch (error) { /* Handled in util */ }
    finally { setQuickAddLoading(false); setIsTextQuickAddLoading(false); }
  };

  const handleToggleQuickAddItem = useCallback((index: number) => {
    if (editingQuickAddItemIndex !== null || isActionDisabled) return;
    setSelectedQuickAddIndices(prev => { const newSet = new Set(prev); newSet.has(index) ? newSet.delete(index) : newSet.add(index); return newSet; });
  }, [editingQuickAddItemIndex, isActionDisabled]);

  const handleEditQuickAddItem = useCallback((index: number) => {
    if (editingQuickAddItemIndex !== null || isActionDisabled) return;
    const item = quickAddItems[index]; setEditingQuickAddItemIndex(index);
    setEditedFoodName(item.foodName); setEditedGrams(String(Math.round(item.estimatedWeightGrams)));
  }, [editingQuickAddItemIndex, quickAddItems, isActionDisabled]);

  const handleSaveQuickAddItemEdit = useCallback(() => {
    if (editingQuickAddItemIndex === null || isActionDisabled) return;
    const trimmedName = editedFoodName.trim(); if (!trimmedName) return Alert.alert(t('addEntryModal.alertQuickAddInvalidName'), t('addEntryModal.alertQuickAddInvalidNameMessage'));
    const numericGrams = parseFloat(editedGrams); if (!isValidNumberInput(editedGrams) || numericGrams <= 0) return Alert.alert(t('addEntryModal.alertQuickAddInvalidGrams'), t('addEntryModal.alertQuickAddInvalidGramsMessage'));
    setQuickAddItems(prev => prev.map((item, i) => i === editingQuickAddItemIndex ? { ...item, foodName: trimmedName, estimatedWeightGrams: Math.round(numericGrams) } : item));
    if (trimmedName) resolveAndSetIcon(trimmedName);
    setEditingQuickAddItemIndex(null); setEditedFoodName(""); setEditedGrams(""); Keyboard.dismiss();
  }, [editingQuickAddItemIndex, editedFoodName, editedGrams, isActionDisabled, resolveAndSetIcon, t]);

  const handleCancelQuickAddItemEdit = useCallback(() => {
    if (isActionDisabled) return; setEditingQuickAddItemIndex(null);
    setEditedFoodName(""); setEditedGrams(""); Keyboard.dismiss();
  }, [isActionDisabled]);

  const handleConfirmQuickAdd = useCallback(() => {
    Keyboard.dismiss(); if (isEditMode || isActionDisabled || editingQuickAddItemIndex !== null || selectedQuickAddIndices.size === 0) return;
    const entriesToAdd = Array.from(selectedQuickAddIndices).map(index => {
        const item = quickAddItems[index];
        const existingFood = foods.find(f => f.name.toLowerCase() === item.foodName.toLowerCase());
        const foodToAdd: Food = existingFood || { id: uuidv4(), name: item.foodName, calories: Math.round(item.calories_per_100g || 0), protein: Math.round(item.protein_per_100g || 0), carbs: Math.round(item.carbs_per_100g || 0), fat: Math.round(item.fat_per_100g || 0), createdAt: new Date().toISOString() };
        return { food: foodToAdd, grams: Math.max(1, Math.round(item.estimatedWeightGrams || 1)) };
    });
    if (entriesToAdd.length > 0) {
        parentHandleAddMultipleEntries(entriesToAdd);
        const servingsToAdd = entriesToAdd.map(e => ({ foodId: e.food.id, grams: e.grams }));
        addMultipleToRecentServings(servingsToAdd);
    }
  }, [foods, quickAddItems, selectedQuickAddIndices, editingQuickAddItemIndex, parentHandleAddMultipleEntries, isEditMode, isActionDisabled, addMultipleToRecentServings]);

  const handleQuickAddGramsChange = useCallback((text: string) => setEditedGrams(text.replace(/[^0-9]/g, "")), []);

  const handleSaveQuickAddItemToLibrary = useCallback(async (item: EstimatedFoodItem, setSavingState: (isSaving: boolean) => void) => {
    setSavingState(true);
    try {
        const foodData: Omit<Food, 'id' | 'createdAt'> = { name: item.foodName, calories: Math.round(item.calories_per_100g), protein: Math.round(item.protein_per_100g), carbs: Math.round(item.carbs_per_100g), fat: Math.round(item.fat_per_100g) };
        const existingFood = foods.find(f => f.name.toLowerCase() === item.foodName.toLowerCase());
        if (existingFood) {
            Alert.alert(t('addEntryModal.alertOverwriteFoodTitle'), t('addEntryModal.alertOverwriteFoodMessage', { foodName: item.foodName }), [
                { text: t('addEntryModal.cancel'), style: 'cancel', onPress: () => setSavingState(false) },
                { text: t('addEntryModal.overwrite'), onPress: async () => {
                    const updatedFood = await onCommitFoodToLibrary({ ...existingFood, ...foodData }, true);
                    if (updatedFood) { Toast.show({ type: 'success', text1: t('addEntryModal.toastFoodUpdatedInLibrary', { foodName: updatedFood.name }), position: 'bottom' }); resolveAndSetIcon(updatedFood.name); }
                    setSavingState(false);
                }},
            ]);
        } else {
            const newFood = await onCommitFoodToLibrary(foodData, false);
            if (newFood) { Toast.show({ type: 'success', text1: t('addEntryModal.toastFoodSavedToLibrary', { foodName: newFood.name }), position: 'bottom' }); resolveAndSetIcon(newFood.name); }
            setSavingState(false);
        }
    } catch (error) { Toast.show({ type: 'error', text1: t('addEntryModal.toastErrorSavingToLibrary'), position: 'bottom' }); setSavingState(false); }
  }, [foods, onCommitFoodToLibrary, resolveAndSetIcon, t]);

  const modalTitle = modalMode === "quickAddSelect" ? (editingQuickAddItemIndex !== null ? t('addEntryModal.titleQuickAddEdit') : quickAddLoading ? t('addEntryModal.titleQuickAddAnalyzing') : t('addEntryModal.titleQuickAddSelect'))
                    : modalMode === "quickAddText" ? t('addEntryModal.titleQuickAddFromText')
                    : isEditMode ? t('addEntryModal.titleEdit') : t('addEntryModal.titleAdd');

  const isSingleAddButtonDisabled = modalMode !== "normal" || !internalSelectedFood || !isValidNumberInput(internalGrams) || parseFloat(internalGrams) <= 0 || isActionDisabled;
  const isMultiAddButtonDisabled = modalMode !== "normal" || selectedMultipleFoods.size === 0 || !!internalSelectedFood || isEditMode || isActionDisabled;
  const isAiButtonDisabled = modalMode !== "normal" || !internalSelectedFood || !autoInput.trim() || isActionDisabled || isAiLoading;
  const isQuickAddConfirmDisabled = isEditMode || modalMode !== "quickAddSelect" || selectedQuickAddIndices.size === 0 || editingQuickAddItemIndex !== null || isActionDisabled || quickAddLoading;
  const isQuickAddImageButtonDisabled = isEditMode || isActionDisabled || quickAddLoading;
  const isQuickAddTextButtonDisabled = isEditMode || isActionDisabled || quickAddLoading;

  return (
    <Overlay isVisible={isVisible} onBackdropPress={!isActionDisabled ? toggleOverlay : undefined} animationType="slide" overlayStyle={styles.overlayContainer}>
      <KeyboardAvoidingView behavior={Platform.OS === "ios" ? "padding" : "height"} style={styles.keyboardAvoidingView} keyboardVerticalOffset={KEYBOARD_VERTICAL_OFFSET}>
        <View style={[styles.overlayStyle, { backgroundColor: theme.colors.background }]}>
          <ModalHeader title={modalTitle} isEditMode={isEditMode} modalMode={modalMode} quickAddLoading={quickAddLoading} textQuickAddLoading={isTextQuickAddLoading}
            selectedFood={internalSelectedFood} selectedMultipleFoodsSize={selectedMultipleFoods.size} selectedQuickAddIndicesSize={selectedQuickAddIndices.size}
            editingQuickAddItemIndex={editingQuickAddItemIndex} isActionDisabled={isActionDisabled} isSingleAddButtonDisabled={isSingleAddButtonDisabled}
            isMultiAddButtonDisabled={isMultiAddButtonDisabled} isQuickAddConfirmDisabled={isQuickAddConfirmDisabled} isQuickAddImageButtonDisabled={isQuickAddImageButtonDisabled}
            isQuickAddTextButtonDisabled={isQuickAddTextButtonDisabled} isAiLoading={isAiLoading} toggleOverlay={toggleOverlay} onAddOrUpdateSingleEntry={handleAddOrUpdateSingleEntry}
            onConfirmAddMultipleSelected={handleConfirmAddMultipleSelected} onConfirmQuickAdd={handleConfirmQuickAdd} onQuickAddImage={handleQuickAddImage} onQuickAddText={handleQuickAddText}
            onBackFromQuickAdd={() => { setModalMode("normal"); setQuickAddTextInput(""); }}
          />
          {modalMode === 'normal' && <View style={styles.normalModeContentContainer}><FoodSelectionList search={internalSearch} updateSearch={setInternalSearch} foods={foods} recentFoods={recentFoods} selectedFood={internalSelectedFood} handleSelectFood={setInternalSelectedFood} setGrams={setInternalGrams} setSelectedMultipleFoods={setSelectedMultipleFoods} selectedMultipleFoods={selectedMultipleFoods} handleToggleMultipleFoodSelection={handleToggleMultipleFoodSelection} foodIcons={foodIcons} onAddNewFoodRequest={onAddNewFoodRequest} isActionDisabled={isActionDisabled} isEditMode={isEditMode} recentServings={recentServings} modalMode={modalMode} />{internalSelectedFood && <AmountInputSection selectedFood={internalSelectedFood} grams={internalGrams} setGrams={setInternalGrams} unitMode={unitMode} setUnitMode={setUnitMode} autoInput={autoInput} setAutoInput={setAutoInput} handleEstimateGrams={handleEstimateGrams} isAiLoading={isAiLoading} isAiButtonDisabled={isAiButtonDisabled} isEditMode={isEditMode} servingSizeSuggestions={servingSizeSuggestions} isActionDisabled={isActionDisabled} foodGradeResult={foodGradeResult} />}</View>}
          {modalMode === 'quickAddText' && <View style={styles.quickAddTextView}><Input placeholder={t('addEntryModal.textQuickAdd.placeholder')} multiline numberOfLines={6} value={quickAddTextInput} onChangeText={setQuickAddTextInput} inputStyle={styles.quickAddTextArea} inputContainerStyle={styles.quickAddTextAreaContainer} containerStyle={{ paddingHorizontal: 0 }} autoFocus /><Button title={t('addEntryModal.textQuickAdd.analyzeButton')} onPress={handleAnalyzeText} loading={isTextQuickAddLoading} disabled={isTextQuickAddLoading || !quickAddTextInput.trim()} icon={{ name: 'brain', type: 'material-community', color: theme.colors.white }} buttonStyle={styles.analyzeButton} /></View>}
          {modalMode === 'quickAddSelect' && <QuickAddList items={quickAddItems} selectedIndices={selectedQuickAddIndices} editingIndex={editingQuickAddItemIndex} editedName={editedFoodName} editedGrams={editedGrams} onToggleItem={handleToggleQuickAddItem} onEditItem={handleEditQuickAddItem} onSaveEdit={handleSaveQuickAddItemEdit} onCancelEdit={handleCancelQuickAddItemEdit} onNameChange={setEditedFoodName} onGramsChange={handleQuickAddGramsChange} isLoading={quickAddLoading} foodIcons={foodIcons} style={styles.quickAddListStyle} onSaveItemToLibrary={handleSaveQuickAddItemToLibrary} foods={foods} />}
          <View style={{ height: Platform.OS === 'ios' ? 20 : 40 }} />
        </View>
      </KeyboardAvoidingView>
    </Overlay>
  );
};

const useStyles = makeStyles((theme) => ({
    overlayContainer: { backgroundColor: "transparent", width: "90%", maxWidth: 500, padding: 0, borderRadius: 15, shadowColor: "#000", shadowOffset: { width: 0, height: 3 }, shadowOpacity: 0.2, shadowRadius: 5, elevation: 6, overflow: "hidden", maxHeight: "90%", },
    overlayStyle: { width: "100%", height: "100%", borderRadius: 15, padding: 15, paddingBottom: 0, backgroundColor: theme.colors.background, flex: 1 },
    keyboardAvoidingView: { width: "100%", height: "100%" },
    normalModeContentContainer: { flex: 1, justifyContent: 'flex-start' },
    quickAddListStyle: { flex: 1 },
    quickAddTextView: { flex: 1, justifyContent: 'flex-start', paddingTop: 10 },
    quickAddTextAreaContainer: { height: 150, padding: 8, borderWidth: 1, borderColor: theme.colors.divider, borderRadius: 8, },
    quickAddTextArea: { textAlignVertical: 'top', color: theme.colors.text, fontSize: 16, height: '100%' },
    analyzeButton: { marginTop: 15, borderRadius: 8, backgroundColor: theme.colors.primary },
}));

export default AddEntryModal;
---------- END AddEntryModal.tsx ----------


---------- AmountInputSection.tsx ----------
// src/components/AddEntryModal/AmountInputSection.tsx
import React, { useRef, useEffect } from 'react';
import { View, ScrollView, TouchableOpacity, Keyboard } from 'react-native';
import { Text, Input, Icon, ButtonGroup, Button, useTheme, makeStyles } from '@rneui/themed';
import { Food } from '../../types/food';
import { FoodGradeResult } from '../../utils/gradingUtils';
import { isValidNumberInput } from '../../utils/validationUtils';
import { t } from '../../localization/i18n';

type UnitMode = "grams" | "auto";

interface AmountInputSectionProps {
    selectedFood: Food;
    grams: string;
    setGrams: (grams: string) => void;
    unitMode: UnitMode;
    setUnitMode: (mode: UnitMode) => void;
    autoInput: string;
    setAutoInput: (input: string) => void;
    handleEstimateGrams: () => void;
    isAiLoading: boolean;
    isAiButtonDisabled: boolean;
    isEditMode: boolean;
    servingSizeSuggestions: { label: string; value: string }[];
    isActionDisabled: boolean;
    foodGradeResult: FoodGradeResult | null;
}

const AmountInputSection: React.FC<AmountInputSectionProps> = ({
    selectedFood,
    grams,
    setGrams,
    unitMode,
    setUnitMode,
    autoInput,
    setAutoInput,
    handleEstimateGrams,
    isAiLoading,
    isAiButtonDisabled,
    isEditMode,
    servingSizeSuggestions,
    isActionDisabled,
    foodGradeResult,
}) => {
    const { theme } = useTheme();
    const styles = useStyles();
    const gramsInputRef = useRef<any>(null);

    useEffect(() => {
        if (isEditMode && unitMode === "grams") {
            const timer = setTimeout(() => {
                gramsInputRef.current?.focus();
            }, 150);
            return () => clearTimeout(timer);
        }
    }, [isEditMode, unitMode]);


    const handleGramsChange = (text: string) => {
        const cleanedText = text.replace(/[^0-9.]/g, "").replace(/(\..*?)\./g, "$1");
        setGrams(cleanedText);
    };

    return (
        <View style={styles.amountSection}>
            <View style={styles.unitSelectorContainer}>
                <View style={styles.amountLabelContainer}>
                    <Text style={styles.inputLabel}>{t('addEntryModal.amount')}</Text>
                    {foodGradeResult && (
                        <Text style={[styles.gradePill, { backgroundColor: foodGradeResult.color }]}>
                            {foodGradeResult.letter}
                        </Text>
                    )}
                </View>
                {!isEditMode && (
                    <ButtonGroup
                        buttons={[t('addEntryModal.grams'), t('addEntryModal.autoAi')]}
                        selectedIndex={unitMode === "grams" ? 0 : 1}
                        onPress={(index) => {
                            if (!isActionDisabled) {
                                setUnitMode(index === 0 ? "grams" : "auto");
                                Keyboard.dismiss();
                            }
                        }}
                        containerStyle={styles.buttonGroupContainer}
                        selectedButtonStyle={{ backgroundColor: theme.colors.primary }}
                        textStyle={styles.buttonGroupText}
                        selectedTextStyle={{ color: theme.colors.white }}
                        disabled={isActionDisabled ? [0, 1] : []}
                        disabledStyle={styles.disabledButtonGroup}
                        disabledTextStyle={{ color: theme.colors.grey3 }}
                    />
                )}
            </View>
            {unitMode === "grams" && (
                <>
                    {!isEditMode && servingSizeSuggestions.length > 0 && (
                        <View style={styles.servingSizeRow}>
                            <Text style={styles.servingSizeLabel}>{t('addEntryModal.quickAddServing')}</Text>
                            <ScrollView horizontal showsHorizontalScrollIndicator={false} contentContainerStyle={styles.servingSizeContainer} keyboardShouldPersistTaps="handled">
                                {servingSizeSuggestions.map((suggestion) => (
                                    <TouchableOpacity
                                        key={suggestion.label}
                                        style={[styles.servingSizeButton, isActionDisabled && styles.disabledOverlay]}
                                        onPress={() => {
                                            if (!isActionDisabled) {
                                                setGrams(suggestion.value);
                                                Keyboard.dismiss();
                                            }
                                        }}
                                        disabled={isActionDisabled}
                                    >
                                        <Text style={styles.servingSizeButtonTitle}>{suggestion.label}</Text>
                                    </TouchableOpacity>
                                ))}
                            </ScrollView>
                        </View>
                    )}
                    <Input
                        ref={gramsInputRef}
                        placeholder={isEditMode ? t('addEntryModal.gramsPlaceholderEdit') : t('addEntryModal.gramsPlaceholder')}
                        keyboardType="numeric"
                        value={grams}
                        onChangeText={handleGramsChange}
                        inputStyle={styles.gramInputStyle}
                        inputContainerStyle={styles.gramInputContainerStyle}
                        errorMessage={!isValidNumberInput(grams) && grams !== "" && grams !== "." ? t('addEntryModal.gramsError') : ""}
                        errorStyle={{ color: theme.colors.error }}
                        rightIcon={<Text style={styles.unitText}>g</Text>}
                        containerStyle={{ paddingHorizontal: 0 }}
                        key={`grams-input-${selectedFood.id}-${isEditMode}`}
                        disabled={isActionDisabled}
                        autoFocus={!isEditMode}
                        selectTextOnFocus={true}
                    />
                </>
            )}
            {unitMode === "auto" && !isEditMode && (
                <View style={styles.autoInputRow}>
                    <Input
                        placeholder={t('addEntryModal.autoPlaceholder')}
                        value={autoInput}
                        onChangeText={setAutoInput}
                        inputStyle={[styles.gramInputStyle, styles.autoInputField]}
                        inputContainerStyle={styles.gramInputContainerStyle}
                        containerStyle={styles.autoInputContainer}
                        multiline={false}
                        onSubmitEditing={handleEstimateGrams}
                        key={`auto-input-${selectedFood.id}`}
                        disabled={isActionDisabled}
                        autoFocus
                    />
                    <Button
                        onPress={() => { Keyboard.dismiss(); handleEstimateGrams(); }}
                        disabled={isAiButtonDisabled || isActionDisabled}
                        loading={isAiLoading}
                        buttonStyle={styles.aiButton}
                        icon={isAiLoading ? undefined : (
                            <Icon name="calculator-variant" type="material-community" size={20} color={theme.colors.white} />
                        )}
                        title={isAiLoading ? "" : ""}
                    />
                </View>
            )}
        </View>
    );
};

const useStyles = makeStyles((theme) => ({
    amountSection: {
        marginTop: 10,
        borderTopWidth: 1,
        borderTopColor: theme.colors.divider,
        paddingTop: 15,
        paddingHorizontal: 0,
    },
    unitSelectorContainer: {
        flexDirection: "row",
        alignItems: "center",
        justifyContent: "space-between",
        marginBottom: 15,
        paddingHorizontal: 5,
    },
    amountLabelContainer: {
        flexDirection: 'row',
        alignItems: 'center',
    },
    gradePill: {
        fontSize: 11,
        fontWeight: 'bold',
        color: theme.colors.white,
        paddingHorizontal: 5,
        paddingVertical: 1.5,
        borderRadius: 7,
        marginLeft: 8,
        minWidth: 18,
        textAlign: 'center',
        overflow: 'hidden',
    },
    inputLabel: {
        fontWeight: "600",
        color: theme.colors.secondary,
        fontSize: 14,
        marginRight: 0,
        textTransform: "uppercase",
        textAlign: 'left',
    },
    buttonGroupContainer: {
        flex: 0.7,
        maxWidth: 220,
        height: 35,
        borderRadius: 8,
        borderColor: theme.colors.primary,
        borderWidth: 1,
        backgroundColor: theme.colors.background,
    },
    buttonGroupText: {
        fontSize: 14,
        color: theme.colors.text,
    },
    disabledButtonGroup: {
        backgroundColor: theme.colors.grey5,
    },
    servingSizeRow: {
        flexDirection: "row",
        alignItems: "center",
        marginBottom: 12,
        paddingHorizontal: 5,
    },
    servingSizeLabel: {
        color: theme.colors.secondary,
        fontSize: 13,
        marginRight: 8,
        textAlign: 'left',
    },
    servingSizeContainer: {
        flexGrow: 0,
    },
    servingSizeButton: {
        backgroundColor: theme.colors.primaryLight,
        borderRadius: 15,
        marginRight: 8,
        paddingHorizontal: 12,
        paddingVertical: 5,
        justifyContent: "center",
        alignItems: "center",
        height: 30,
    },
    servingSizeButtonTitle: {
        color: theme.colors.primary,
        fontSize: 13,
        fontWeight: '500',
    },
    gramInputStyle: {
        color: theme.colors.text,
        fontSize: 16,
        paddingVertical: 8,
        height: 40,
        textAlign: 'left',
    },
    gramInputContainerStyle: {
        borderBottomColor: theme.colors.grey3,
        paddingHorizontal: 5,
    },
    unitText: {
        color: theme.colors.secondary,
        fontSize: 15,
        fontWeight: "500",
        paddingRight: 5,
    },
    autoInputRow: {
        flexDirection: "row",
        alignItems: "center",
        paddingHorizontal: 0,
    },
    autoInputContainer: {
        flex: 1,
        paddingHorizontal: 0,
        marginRight: 10,
    },
    autoInputField: {
        height: 40,
    },
    aiButton: {
        backgroundColor: theme.colors.secondary,
        borderRadius: 20,
        width: 40,
        height: 40,
        padding: 0,
        justifyContent: "center",
        alignItems: "center",
        minWidth: 40,
    },
    disabledOverlay: {
        opacity: 0.6,
    },
}));

export default AmountInputSection;
---------- END AmountInputSection.tsx ----------


---------- FoodSelectionList.tsx ----------
// src/components/AddEntryModal/FoodSelectionList.tsx
import React, { useMemo, useCallback, useRef, useEffect } from 'react';
import { View, FlatList, TouchableOpacity, ActivityIndicator, Platform, Keyboard, StyleSheet, I18nManager } from 'react-native';
import { Text, ListItem, Icon, Button, SearchBar, CheckBox, useTheme, makeStyles } from '@rneui/themed';
import { Food } from '../../types/food';
import { RecentServings } from '../../services/storageService';
import { t } from '../../localization/i18n';
import { findFoodsByTagSearch } from '../../utils/searchUtils';
import { getFoodIconUrl } from '../../utils/iconUtils';

const DEFAULT_GRAMS_FOR_MULTI_ADD = 100;

interface FoodSelectionListProps {
    search: string;
    updateSearch: (search: string) => void;
    foods: Food[]; // Full library
    recentFoods: Food[];
    selectedFood: Food | null;
    handleSelectFood: (food: Food | null) => void;
    setGrams: (grams: string) => void;
    setSelectedMultipleFoods: React.Dispatch<React.SetStateAction<Map<string, { food: Food; grams: number }>>>;
    selectedMultipleFoods: Map<string, { food: Food; grams: number }>;
    handleToggleMultipleFoodSelection: (food: Food, displayGrams: number) => void;
    foodIcons: { [foodName: string]: string | null }; // No 'undefined'
    onAddNewFoodRequest: () => void;
    isActionDisabled: boolean;
    isEditMode: boolean;
    recentServings: RecentServings;
    modalMode: "normal" | "quickAddSelect";
}

type DisplayFoodItem = Food & { isRecent?: boolean };

const FoodSelectionList: React.FC<FoodSelectionListProps> = ({
    search,
    updateSearch,
    foods,
    recentFoods,
    selectedFood, 
    handleSelectFood,
    setGrams,
    setSelectedMultipleFoods,
    selectedMultipleFoods,
    handleToggleMultipleFoodSelection,
    foodIcons,
    onAddNewFoodRequest,
    isActionDisabled,
    isEditMode,
    recentServings,
    modalMode,
}) => {
    const { theme } = useTheme();
    const styles = useStyles();
    const flatListRef = useRef<FlatList<DisplayFoodItem>>(null);

    const filteredFoodsForSearch = useMemo(() => {
        const lowercasedSearchTerm = search.toLowerCase().trim();
        if (!lowercasedSearchTerm) return [];
    
        // 1. Primary search: by name
        const nameMatchedFoods = foods.filter((food) =>
            food.name.toLowerCase().includes(lowercasedSearchTerm)
        );
        const nameMatchIds = new Set(nameMatchedFoods.map(f => f.id));
    
        // 2. Secondary search: by tags, excluding items already found by name
        const tagMatchedFoods = findFoodsByTagSearch(lowercasedSearchTerm, foods);
        const tagMatchedFoodsOnly = tagMatchedFoods.filter(f => !nameMatchIds.has(f.id));
    
        // 3. Combine, with name matches first to ensure priority.
        return [...nameMatchedFoods, ...tagMatchedFoodsOnly];
    }, [foods, search]);

    const listDisplayData = useMemo((): DisplayFoodItem[] => {
        // If a single food is selected, show only that item.
        if (selectedFood) {
            const isSelRecent = recentFoods.some(rf => rf.id === selectedFood.id);
            return [{ ...selectedFood, isRecent: isSelRecent }];
        }

        // If there is an active search term, show search results.
        if (search) {
            return filteredFoodsForSearch;
        }

        // Otherwise, show default list (recents + library).
        const tempCombinedList: DisplayFoodItem[] = [];
        const displayedIds = new Set<string>();

        recentFoods.forEach(rf => {
            if (!displayedIds.has(rf.id)) {
                tempCombinedList.push({ ...rf, isRecent: true });
                displayedIds.add(rf.id);
            }
        });

        const otherLibraryFoods = foods
            .filter(food => !displayedIds.has(food.id))
            .sort((a, b) => a.name.localeCompare(b.name))
            .slice(0, 10);

        otherLibraryFoods.forEach(olf => {
            tempCombinedList.push({ ...olf, isRecent: false });
        });

        return tempCombinedList;
    }, [search, recentFoods, foods, filteredFoodsForSearch, selectedFood]);

    useEffect(() => {
        if (selectedFood && flatListRef.current && listDisplayData.length > 0 && !search) {
            const index = listDisplayData.findIndex(item => item.id === selectedFood.id);
            if (index !== -1) {
                setTimeout(() => {
                    flatListRef.current?.scrollToIndex({ index, animated: true, viewPosition: 0.3 }); 
                }, 150);
            }
        }
    }, [selectedFood, listDisplayData, search]);

    const handleInternalSingleSelectFood = useCallback((item: Food | null) => {
        if (selectedMultipleFoods.size > 0 && item !== null && (!selectedFood || selectedFood.id !== item.id)) {
            Keyboard.dismiss();
            return; 
        }
        Keyboard.dismiss();
        if (selectedFood && item && selectedFood.id === item.id) {
            handleSelectFood(null);
            setGrams(""); 
            updateSearch(""); 
            setSelectedMultipleFoods(new Map()); 
        } else if (item === null) { 
            handleSelectFood(null);
            setGrams("");
        } else if (item !== null) { 
            handleSelectFood(item);
            updateSearch(""); 
            setSelectedMultipleFoods(new Map()); 
            if (!isEditMode) { 
                const lastPortion = recentServings[item.id]?.[0];
                if (lastPortion) {
                    setGrams(String(lastPortion));
                } else {
                    setGrams(String(DEFAULT_GRAMS_FOR_MULTI_ADD)); 
                }
            }
        }
    }, [
        handleSelectFood, 
        updateSearch, 
        selectedFood, 
        setGrams, 
        recentServings, 
        setSelectedMultipleFoods, 
        isEditMode,
        selectedMultipleFoods.size 
    ]);
    
    const handleSearchChange = (text: string) => {
        updateSearch(text);
        if (selectedFood && text.trim() !== "") { 
            handleInternalSingleSelectFood(null);
        }
    };

    const renderFoodItem = ({ item }: { item: DisplayFoodItem }) => {
        const foodItem = item;
        const isSingleSelectedViaState = selectedFood?.id === foodItem.id;
        const isMultiSelected = selectedMultipleFoods.has(foodItem.id);
        const iconIdentifier = getFoodIconUrl(foodItem.name);
        const displayGramsForMulti = recentServings[foodItem.id]?.[0] || DEFAULT_GRAMS_FOR_MULTI_ADD;

        const canShowCheckbox = modalMode === "normal" && !isEditMode && (selectedMultipleFoods.size > 0 || !selectedFood);
        const showSingleSelectCheckmark = isSingleSelectedViaState && selectedMultipleFoods.size === 0 && !search;

        return (
            <TouchableOpacity
                onPress={() => {
                    if (isActionDisabled) return;
                    if (selectedMultipleFoods.size > 0) {
                        handleToggleMultipleFoodSelection(foodItem, displayGramsForMulti);
                    } else {
                        handleInternalSingleSelectFood(foodItem);
                    }
                }}
                disabled={isActionDisabled}
                style={[isActionDisabled && styles.disabledOverlay]}
            >
                <ListItem
                    bottomDivider
                    containerStyle={[
                        styles.listItemContainer,
                        (showSingleSelectCheckmark || isMultiSelected) && styles.selectedListItem,
                        isMultiSelected && styles.multiSelectedListItemBorder,
                    ]}
                >
                    {canShowCheckbox && (
                        <CheckBox
                            checked={isMultiSelected}
                            onPress={() => { 
                                if (isActionDisabled) return;
                                handleToggleMultipleFoodSelection(foodItem, displayGramsForMulti);
                            }}
                            containerStyle={styles.multiSelectCheckboxContainer}
                            size={22}
                            disabled={isActionDisabled}
                        />
                    )}
                    {iconIdentifier ? (
                        <Text style={styles.foodIconEmoji}>{iconIdentifier}</Text>
                    ) : (
                        <View style={styles.defaultIconContainer}>
                            <Icon name="help-outline" type="material" size={22} color={theme.colors.grey3} />
                        </View>
                    )}
                    <ListItem.Content>
                        <ListItem.Title style={styles.listItemTitle} numberOfLines={1} ellipsizeMode="tail">
                            {foodItem.name}
                        </ListItem.Title>
                        {canShowCheckbox && (
                            <ListItem.Subtitle style={styles.listItemSubtitleSecondary}>
                                {t('addEntryModal.grams')}: {displayGramsForMulti}g
                            </ListItem.Subtitle>
                        )}
                        {foodItem.isRecent && !search && (!selectedFood || selectedFood.id !== foodItem.id) && (
                             <Text style={styles.recentBadge}>{t('addEntryModal.recent')}</Text>
                        )}
                    </ListItem.Content>
                    {showSingleSelectCheckmark && (<Icon name="checkmark-circle" type="ionicon" color={theme.colors.primary} size={24} />)}
                </ListItem>
            </TouchableOpacity>
        );
    };

    const renderEmptyOrNoResults = () => {
        if (search && filteredFoodsForSearch.length === 0) {
            return (
                <View style={styles.noResultsContainer}>
                    <Text style={styles.noFoodsText}>
                        {t('addEntryModal.noResults', { searchTerm: search })}
                    </Text>
                    <Button
                        title={t('addEntryModal.addNewFoodButton')}
                        onPress={onAddNewFoodRequest}
                        type="outline"
                        buttonStyle={styles.addNewFoodButton}
                        titleStyle={styles.addNewFoodButtonTitle}
                        icon={<Icon name="add-circle-outline" type="ionicon" size={20} color={theme.colors.primary} />}
                        disabled={isActionDisabled}
                    />
                </View>
            );
        }
        if (!search && foods.length === 0 && recentFoods.length === 0) { 
             return (
                 <View style={styles.noResultsContainer}>
                     <Text style={styles.noFoodsText}>
                         {t('addEntryModal.emptyLibraryMessage')}
                     </Text>
                     <Button
                         title={t('addEntryModal.addNewFoodButton')}
                         onPress={onAddNewFoodRequest}
                         type="outline"
                         buttonStyle={styles.addNewFoodButton}
                         titleStyle={styles.addNewFoodButtonTitle}
                         icon={<Icon name="add-circle-outline" type="ionicon" size={20} color={theme.colors.primary} />}
                         disabled={isActionDisabled}
                     />
                 </View>
             );
        }
        return null;
    };

    return (
        <View>
            <SearchBar
                placeholder={t('addEntryModal.searchPlaceholder')}
                onChangeText={handleSearchChange}
                value={search}
                platform={Platform.OS === "ios" ? "ios" : "android"}
                containerStyle={styles.searchBarContainer}
                inputContainerStyle={styles.searchBarInputContainer}
                inputStyle={styles.searchInputStyle}
                onCancel={() => { updateSearch(""); Keyboard.dismiss();}}
                showCancel={Platform.OS === "ios"}
                onClear={() => updateSearch("")}
                disabled={isActionDisabled || modalMode !== "normal"}
            />
            <FlatList
                ref={flatListRef}
                data={listDisplayData}
                renderItem={renderFoodItem}
                keyExtractor={(item) => `food-sel-${item.id}`}
                ListEmptyComponent={renderEmptyOrNoResults}
                extraData={{ selectedFoodId: selectedFood?.id, selectedMultipleFoodsSize: selectedMultipleFoods.size, search, listLength: listDisplayData.length, recentServings }}
                keyboardShouldPersistTaps="handled"
                initialNumToRender={15}
                maxToRenderPerBatch={10}
                windowSize={21} 
                removeClippedSubviews={Platform.OS === 'android'}
                style={styles.flatListContainer}
                contentContainerStyle={styles.flatListContentContainer}
                getItemLayout={(data, index) => (
                    { length: 65, offset: 65 * index, index } 
                )}
            />
        </View>
    );
};

const useStyles = makeStyles((theme) => ({
    searchBarContainer: {
        backgroundColor: "transparent",
        borderBottomColor: "transparent",
        borderTopColor: "transparent",
        paddingHorizontal: 0,
        marginBottom: 10,
    },
    searchBarInputContainer: {
        borderRadius: 25,
        backgroundColor: theme.colors.searchBg || theme.colors.grey5,
        height: 40,
    },
    searchInputStyle: {
        color: theme.colors.text,
        fontSize: 15,
        textAlign: I18nManager.isRTL ? 'right' : 'left',
    },
    flatListContainer: {
        maxHeight: "90%", 
        minHeight: 150,
    },
    flatListContentContainer: {
        paddingBottom: 10,
    },
    foodIconEmoji: {
        fontSize: 26,
        width: 35,
        height: 35,
        textAlign: 'center',
        textAlignVertical: 'center',
        marginRight: 10,
    },
    defaultIconContainer: {
        width: 35,
        height: 35,
        marginRight: 10,
        borderRadius: 17.5,
        backgroundColor: theme.colors.grey5,
        alignItems: "center",
        justifyContent: "center",
    },
    listItemContainer: {
        backgroundColor: "transparent",
        paddingVertical: 8,
        paddingHorizontal: 5,
        borderBottomColor: theme.colors.divider,
        minHeight: 65,
    },
    selectedListItem: { 
        backgroundColor: theme.colors.grey5, 
        borderRadius: 8,
    },
    multiSelectedListItemBorder: { 
        borderLeftWidth: 3, 
        borderLeftColor: theme.colors.success, 
    },
    multiSelectCheckboxContainer: { 
        padding: 10, 
        marginRight: 0, 
        marginLeft: -10, 
        backgroundColor: 'transparent',
        borderWidth: 0,
    },
    listItemTitle: {
        color: theme.colors.text,
        fontSize: 16,
        fontWeight: "500",
        textAlign: 'left',
        flexShrink: 1,
    },
    listItemSubtitleSecondary: {
        color: theme.colors.secondary,
        fontSize: 12,
        textAlign: 'left',
        marginTop: 2,
    },
    recentBadge: {
        position: 'absolute',
        top: -2,
        right: 0,
        fontSize: 10,
        color: theme.colors.primary,
        backgroundColor: theme.colors.grey5,
        paddingHorizontal: 4,
        paddingVertical: 1,
        borderRadius: 4,
        fontWeight: 'bold',
        textTransform: 'uppercase'
    },
    disabledOverlay: {
        opacity: 0.6,
    },
    noResultsContainer: {
        alignItems: 'center',
        paddingVertical: 20,
        paddingHorizontal: 10,
        minHeight: 150, 
        justifyContent: 'center',
    },
    noFoodsText: {
        color: theme.colors.grey2,
        fontStyle: "italic",
        textAlign: "center",
        marginBottom: 15,
    },
    addNewFoodButton: {
        marginTop: 10,
        borderColor: theme.colors.primary,
        paddingHorizontal: 20,
        borderRadius: 20,
    },
    addNewFoodButtonTitle: {
        color: theme.colors.primary,
        fontWeight: '600',
    },
}));

export default FoodSelectionList;
---------- END FoodSelectionList.tsx ----------


---------- ModalHeader.tsx ----------
// src/components/AddEntryModal/ModalHeader.tsx
import React from 'react';
import { View, TouchableOpacity, ActivityIndicator, StyleSheet, Keyboard } from 'react-native';
import { Text, Icon, Button, useTheme, makeStyles } from '@rneui/themed';
import { Food } from '../../types/food';
import { t } from '../../localization/i18n';

type ModalMode = 'normal' | 'quickAddSelect' | 'quickAddText';

interface ModalHeaderProps {
    title: string;
    isEditMode: boolean;
    modalMode: ModalMode;
    quickAddLoading: boolean;
    textQuickAddLoading: boolean;
    selectedFood: Food | null;
    selectedMultipleFoodsSize: number;
    selectedQuickAddIndicesSize: number;
    editingQuickAddItemIndex: number | null;
    isActionDisabled: boolean;
    isSingleAddButtonDisabled: boolean;
    isMultiAddButtonDisabled: boolean;
    isQuickAddConfirmDisabled: boolean;
    isQuickAddImageButtonDisabled: boolean;
    isQuickAddTextButtonDisabled: boolean;
    isAiLoading: boolean;
    toggleOverlay: () => void;
    onAddOrUpdateSingleEntry: () => void;
    onConfirmAddMultipleSelected: () => void;
    onConfirmQuickAdd: () => void;
    onQuickAddImage: () => void;
    onQuickAddText: () => void;
    onBackFromQuickAdd: () => void;
}

const ModalHeader: React.FC<ModalHeaderProps> = ({
    title, isEditMode, modalMode, quickAddLoading, textQuickAddLoading, selectedFood, selectedMultipleFoodsSize,
    selectedQuickAddIndicesSize, editingQuickAddItemIndex, isActionDisabled, isSingleAddButtonDisabled,
    isMultiAddButtonDisabled, isQuickAddConfirmDisabled, isQuickAddImageButtonDisabled, isQuickAddTextButtonDisabled,
    isAiLoading, toggleOverlay, onAddOrUpdateSingleEntry, onConfirmAddMultipleSelected,
    onConfirmQuickAdd, onQuickAddImage, onQuickAddText, onBackFromQuickAdd,
}) => {
    const { theme } = useTheme();
    const styles = useStyles();

    const handleClose = () => {
        Keyboard.dismiss();
        toggleOverlay();
    };

    const isBackButtonVisible = (modalMode === 'quickAddSelect' || modalMode === 'quickAddText') && editingQuickAddItemIndex === null;

    return (
        <View style={styles.header}>
            {isBackButtonVisible ? (
                <Button
                    type="clear"
                    onPress={() => { if (isActionDisabled) return; Keyboard.dismiss(); onBackFromQuickAdd(); }}
                    icon={<Icon name="arrow-back" type="ionicon" size={24} color={isActionDisabled ? theme.colors.grey3 : theme.colors.primary} />}
                    containerStyle={styles.closeIconContainer}
                    disabled={isActionDisabled}
                />
            ) : (
                <TouchableOpacity onPress={handleClose} style={styles.closeIconContainer} disabled={isActionDisabled} hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>
                    <Icon name="close" type="material" size={28} color={isActionDisabled ? theme.colors.grey3 : theme.colors.text} />
                </TouchableOpacity>
            )}

            <Text h4 h4Style={[styles.overlayTitle, isEditMode && modalMode === 'normal' && styles.editModeTitle]} numberOfLines={1} ellipsizeMode="tail">
                {title}
            </Text>

            <View style={styles.headerActionsContainer}>
                {modalMode === 'normal' && (
                    <>
                        {!isEditMode && !selectedFood && (
                            <View style={styles.quickAddIconsContainer}>
                                <TouchableOpacity onPress={onQuickAddText} disabled={isQuickAddTextButtonDisabled} style={styles.headerIcon}>
                                    {quickAddLoading && textQuickAddLoading ? (
                                        <ActivityIndicator size="small" color={theme.colors.primary} />
                                    ) : (
                                        <Icon name="text-box-search-outline" type="material-community" size={26} color={isQuickAddTextButtonDisabled ? theme.colors.grey3 : theme.colors.primary} />
                                    )}
                                </TouchableOpacity>
                                <TouchableOpacity onPress={onQuickAddImage} disabled={isQuickAddImageButtonDisabled} style={styles.headerIcon}>
                                    {quickAddLoading && !textQuickAddLoading ? (
                                        <ActivityIndicator size="small" color={theme.colors.primary} />
                                    ) : (
                                        <Icon name="camera-burst" type="material-community" size={26} color={isQuickAddImageButtonDisabled ? theme.colors.grey3 : theme.colors.primary} />
                                    )}
                                </TouchableOpacity>
                            </View>
                        )}
                        {isEditMode ? (
                            <Button title={t('addEntryModal.buttonUpdate')} onPress={onAddOrUpdateSingleEntry} disabled={isSingleAddButtonDisabled} buttonStyle={[styles.actionButton, styles.updateButton]} titleStyle={styles.buttonTitle} loading={isAiLoading && !!selectedFood} />
                        ) : selectedFood ? (
                            <Button title={t('addEntryModal.buttonAdd')} onPress={onAddOrUpdateSingleEntry} disabled={isSingleAddButtonDisabled} buttonStyle={styles.actionButton} titleStyle={styles.buttonTitle} loading={isAiLoading} />
                        ) : (
                            <Button title={t('addEntryModal.buttonAddSelected', { count: selectedMultipleFoodsSize })} onPress={onConfirmAddMultipleSelected} disabled={isMultiAddButtonDisabled} buttonStyle={[styles.actionButton, { backgroundColor: theme.colors.success }]} titleStyle={styles.buttonTitle} />
                        )}
                    </>
                )}
                {modalMode === 'quickAddSelect' && editingQuickAddItemIndex === null && (
                    <Button title={quickAddLoading ? t('addEntryModal.buttonLoading') : t('addEntryModal.buttonAddSelected', { count: selectedQuickAddIndicesSize })} onPress={onConfirmQuickAdd} disabled={isQuickAddConfirmDisabled} buttonStyle={[styles.actionButton, { backgroundColor: theme.colors.success }]} titleStyle={styles.buttonTitle} loading={quickAddLoading} />
                )}
                {modalMode === 'quickAddText' && <View style={styles.placeholderActionView} />}
                {modalMode === 'quickAddSelect' && editingQuickAddItemIndex !== null && <View style={styles.placeholderActionView} />}
            </View>
        </View>
    );
};

const useStyles = makeStyles((theme) => ({
    header: { flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: 15, paddingHorizontal: 0 },
    closeIconContainer: { padding: 5, minWidth: 40, alignItems: 'flex-start' },
    overlayTitle: { color: theme.colors.text, fontWeight: 'bold', fontSize: 20, textAlign: 'center', flex: 1, marginHorizontal: 5 },
    editModeTitle: { color: theme.colors.warning },
    headerActionsContainer: { flexDirection: 'row', alignItems: 'center', minWidth: 80, justifyContent: 'flex-end' },
    quickAddIconsContainer: { flexDirection: 'row-reverse', alignItems: 'center' },
    headerIcon: { paddingHorizontal: 6, marginHorizontal: 2 },
    actionButton: { borderRadius: 20, paddingHorizontal: 12, paddingVertical: 8, minWidth: 70, marginLeft: 5, backgroundColor: theme.colors.primary },
    updateButton: { backgroundColor: theme.colors.warning },
    buttonTitle: { color: theme.colors.white, fontWeight: '600', fontSize: 14 },
    placeholderActionView: { width: 70, marginLeft: 5 },
}));

export default ModalHeader;
---------- END ModalHeader.tsx ----------


---------- AddFoodModal.tsx ----------
// src/components/AddFoodModal.tsx
import React, { useState, useEffect, useCallback } from "react";
import {
    View,
    KeyboardAvoidingView,
    Platform,
    ActivityIndicator,
    Alert,
    ScrollView,
    StyleSheet,
} from "react-native";
import {
    Button,
    Input,
    Text,
    Overlay,
    makeStyles,
    useTheme,
    Icon,
    ButtonGroup,
} from "@rneui/themed";
import { Food } from "../types/food";
import { MaterialCommunityIcons } from "@expo/vector-icons";
import Toast from "react-native-toast-message";
import {
    getMacrosFromText,
    getMacrosForImageFile,
} from "../utils/macros";
import * as ImagePicker from "expo-image-picker";
import { ImagePickerResult } from 'expo-image-picker';
import { compressImageIfNeeded } from '../utils/imageUtils';
import FoodFormFields from "./FoodFormFields";
import { t } from '../localization/i18n';

// Use a specific type for the form data
type FoodFormData = Omit<Food, "id" | "createdAt">;
type InputMode = 'manual' | 'ai';

interface AddFoodModalProps {
    isVisible: boolean;
    toggleOverlay: () => void;
    newFood: FoodFormData;
    editFood: Food | null;
    errors: { [key: string]: string };
    handleInputChange: (
        key: keyof FoodFormData,
        value: string,
        isEdit: boolean
    ) => void;
    handleCreateFood: () => Promise<void>;
    handleUpdateFood: () => Promise<void>;
    validateFood: (food: FoodFormData | Food) => { [key: string]: string } | null;
    setErrors: React.Dispatch<React.SetStateAction<{ [key: string]: string }>>;
}

const KEYBOARD_VERTICAL_OFFSET = Platform.OS === "ios" ? 60 : 0;

const AddFoodModal: React.FC<AddFoodModalProps> = ({
    isVisible,
    toggleOverlay,
    newFood,
    editFood,
    errors,
    handleInputChange,
    handleCreateFood,
    handleUpdateFood,
    validateFood,
    setErrors,
}) => {
    const { theme } = useTheme();
    const styles = useStyles();
    const [loading, setLoading] = useState(false);
    const [inputMode, setInputMode] = useState<InputMode>('manual');
    const [ingredients, setIngredients] = useState("");
    const [aiTextLoading, setAiTextLoading] = useState(false);
    const [aiImageLoading, setAiImageLoading] = useState(false);

    useEffect(() => {
        if (isVisible) {
            setErrors({});
            setIngredients("");
            setAiTextLoading(false);
            setAiImageLoading(false);
            setLoading(false);
            setInputMode(editFood ? 'manual' : 'manual');
        }
    }, [isVisible, editFood, setErrors]);

    const getCurrentFoodData = (): Partial<FoodFormData> | Partial<Food> => {
        return editFood ? editFood : newFood;
    };

    const handleCreateOrUpdate = async () => {
        const isUpdate = !!editFood;
        const currentData = isUpdate ? editFood : newFood;
        
        const dataToValidate: Food | FoodFormData = {
            ...currentData,
            name: (currentData.name ?? "").trim(),
        };

        const validationErrors = validateFood(dataToValidate);
        if (validationErrors) {
            setErrors(validationErrors);
            Toast.show({ type: "error", text1: t('foodListScreen.fixErrors'), position: 'bottom' });
            return;
        }
        setErrors({}); setLoading(true);
        try {
            if (isUpdate) {
                await handleUpdateFood();
                Toast.show({ type: "success", text1: t('foodListScreen.foodUpdated', { foodName: dataToValidate.name }), position: 'bottom' });
            } else {
                await handleCreateFood();
                Toast.show({ type: "success", text1: t('foodListScreen.foodAdded', { foodName: dataToValidate.name }), position: 'bottom' });
            }
            toggleOverlay();
        } catch (error: any) {
            Alert.alert(t('foodListScreen.errorLoad'), error.message || t(isUpdate ? 'foodListScreen.errorUpdateMessage' : 'foodListScreen.errorCreateMessage'));
        } finally { setLoading(false); }
    };

    const handleAnalyzeText = async () => {
        const foodName = (getCurrentFoodData().name ?? "").trim();
        const textToAnalyze = ingredients.trim();
        if (!foodName && !textToAnalyze) {
            Alert.alert(t('addFoodModal.alertInputNeeded'), t('addFoodModal.alertInputNeededMessage'));
            return;
        }
    
        setAiTextLoading(true);
        try {
            const macros = await getMacrosFromText(foodName, textToAnalyze);
            const isUpdate = !!editFood;
    
            if (macros.foodName) {
                handleInputChange("name", macros.foodName, isUpdate);
            }
            handleInputChange("calories", String(Math.round(macros.calories)), isUpdate);
            handleInputChange("protein", String(Math.round(macros.protein)), isUpdate);
            handleInputChange("carbs", String(Math.round(macros.carbs)), isUpdate);
            handleInputChange("fat", String(Math.round(macros.fat)), isUpdate);
            
            setInputMode("manual");
    
            Toast.show({
                type: 'info',
                text1: foodName ? t('addFoodModal.macrosEstimatedText') : t('addFoodModal.foodIdentified'),
                text2: foodName ? undefined : t('addFoodModal.foodIdentifiedMessage', { foodName: macros.foodName }),
                position: 'bottom'
            });
        } catch (error) {
            console.error("AI Macro fetch error (text - modal):", error);
        } finally {
            setAiTextLoading(false);
        }
    };

    const handleGetImageAndAnalyze = async () => {
        if (aiImageLoading || aiTextLoading || loading) return;
        const processImage = async (pickerResult: ImagePickerResult) => {
            if (pickerResult.canceled) return;
            if (pickerResult.assets && pickerResult.assets.length > 0) {
                const originalAsset = pickerResult.assets[0]; setAiImageLoading(true);
                try {
                     const compressedResult = await compressImageIfNeeded(originalAsset);
                     const assetForAnalysis = compressedResult ? { ...originalAsset, uri: compressedResult.uri, width: compressedResult.width, height: compressedResult.height, mimeType: 'image/jpeg' } : originalAsset;
                     const result = await getMacrosForImageFile(assetForAnalysis);
                     const isUpdate = !!editFood;
                     handleInputChange("name", result.foodName, isUpdate); handleInputChange("calories", String(Math.round(result.calories)), isUpdate);
                     handleInputChange("protein", String(Math.round(result.protein)), isUpdate);
                     handleInputChange("carbs", String(Math.round(result.carbs)), isUpdate);
                     handleInputChange("fat", String(Math.round(result.fat)), isUpdate);
                     setInputMode("manual");
                     setIngredients("");
                     Toast.show({ type: 'success', text1: t('addFoodModal.foodIdentified'), text2: t('addFoodModal.foodIdentifiedMessage', { foodName: result.foodName }), position: 'bottom', });
                } catch (analysisError) { console.error("Error during image analysis (modal):", analysisError); }
                finally { setAiImageLoading(false); }
            } else { Alert.alert(t('addFoodModal.errorGetImage'), t('addEntryModal.alertQuickAddCouldNotSelect')); setAiImageLoading(false); }
        };
        Alert.alert(t('addFoodModal.errorGetImage'), t('addFoodModal.errorGetImageMessage'),
            [ { text: t('addEntryModal.cancel'), style: "cancel" },
              { text: t('addEntryModal.camera'), onPress: async () => { try { const perm = await ImagePicker.requestCameraPermissionsAsync(); if (!perm.granted) { Alert.alert(t('addFoodModal.errorPermission'), t('addFoodModal.errorCameraPermission')); return; } const res = await ImagePicker.launchCameraAsync({ quality: 1, exif: false }); await processImage(res); } catch (e) { console.error(e); Alert.alert(t('addFoodModal.errorCamera')); } } },
              { text: t('addEntryModal.gallery'), onPress: async () => { try { const perm = await ImagePicker.requestMediaLibraryPermissionsAsync(); if (!perm.granted) { Alert.alert(t('addFoodModal.errorPermission'), t('addEntryModal.alertQuickAddGalleryPermission')); return; } const res = await ImagePicker.launchImageLibraryAsync({ mediaTypes: ImagePicker.MediaTypeOptions.Images, quality: 1 }); await processImage(res); } catch (e) { console.error(e); Alert.alert(t('addFoodModal.errorGallery')); } } }, ],
            { cancelable: true }
        );
    };

    const isAnyLoading = loading || aiTextLoading || aiImageLoading;
    const combinedOverlayStyle = StyleSheet.flatten([ styles.overlayStyle, { backgroundColor: theme.colors.background } ]);

    return (
        <Overlay isVisible={isVisible} onBackdropPress={!isAnyLoading ? toggleOverlay : undefined} animationType="fade" overlayStyle={styles.overlayContainer} >
            <KeyboardAvoidingView behavior={Platform.OS === "ios" ? "padding" : "height"} style={styles.keyboardAvoidingView} keyboardVerticalOffset={KEYBOARD_VERTICAL_OFFSET} >
                <View style={combinedOverlayStyle}>
                    <View style={styles.header}>
                        <Text h4 style={styles.overlayTitle}> {editFood ? t('addFoodModal.titleEdit') : t('addFoodModal.titleAdd')} </Text>
                        <Button title={editFood ? t('addFoodModal.buttonUpdate') : t('addFoodModal.buttonAdd')} onPress={handleCreateOrUpdate}
                                buttonStyle={[ styles.button, { backgroundColor: editFood ? theme.colors.warning : theme.colors.primary } ]}
                                titleStyle={styles.buttonTitle} loading={loading} disabled={isAnyLoading} containerStyle={styles.buttonContainer} />
                        <Icon name="close" type="material" size={28} color={theme.colors.text} onPress={!isAnyLoading ? toggleOverlay : undefined}
                              containerStyle={styles.closeIcon} disabled={isAnyLoading} disabledStyle={{ backgroundColor: 'transparent' }} />
                    </View>
                    <ScrollView keyboardShouldPersistTaps="handled" contentContainerStyle={styles.scrollContentContainer}>
                        {!editFood && (
                            <ButtonGroup
                                buttons={[t('addFoodModal.manualInput'), t('addFoodModal.aiAssist')]}
                                selectedIndex={inputMode === 'manual' ? 0 : 1}
                                onPress={(index) => {
                                    if (isAnyLoading) return;
                                    setInputMode(index === 0 ? 'manual' : 'ai');
                                }}
                                containerStyle={styles.inputModeButtonGroup}
                                selectedButtonStyle={{ backgroundColor: theme.colors.card }}
                                textStyle={{ color: theme.colors.grey4 }}
                                selectedTextStyle={{ color: theme.colors.text }}
                                disabled={isAnyLoading}
                                disabledStyle={{ backgroundColor: theme.colors.grey4 }}
                            />
                        )}

                        {/* START: MODIFICATION FOR CONSISTENT HEIGHT */}
                        <View style={styles.contentContainer}>
                            {inputMode === 'manual' ? (
                                <View>
                                    <FoodFormFields
                                        values={getCurrentFoodData()}
                                        errors={errors}
                                        onInputChange={handleInputChange}
                                        isEditing={!!editFood}
                                        disabled={isAnyLoading}
                                    />
                                </View>
                            ) : (
                                <View style={styles.aiContainer}>
                                    <Input
                                        label={t('addFoodModal.ingredientsLabel')}
                                        labelStyle={styles.inputLabel}
                                        value={ingredients}
                                        onChangeText={setIngredients}
                                        multiline={true}
                                        numberOfLines={4}
                                        inputContainerStyle={[styles.inputContainerStyle, styles.multilineInputContainer]}
                                        inputStyle={[styles.inputStyle, styles.multilineInput]}
                                        placeholder={t('addFoodModal.ingredientsPlaceholder')}
                                        placeholderTextColor={theme.colors.grey3}
                                        disabled={isAnyLoading}
                                    />
                                    <Button
                                        title={t('addFoodModal.analyzeTextButton')}
                                        onPress={handleAnalyzeText}
                                        buttonStyle={[styles.aiButton, { backgroundColor: theme.colors.grey0 }]}
                                        titleStyle={styles.aiButtonTitle}
                                        loading={aiTextLoading}
                                        disabled={isAnyLoading}
                                        icon={<Icon name="text-box-search-outline" type="material-community" size={20} color="white" style={{ marginRight: 8 }} />}
                                    />
                                    <Text style={styles.orDividerText}>{t('addFoodModal.orDivider')}</Text>
                                    <Button
                                        title={t('addFoodModal.analyzeImageButton')}
                                        onPress={handleGetImageAndAnalyze}
                                        buttonStyle={[styles.aiButton, { backgroundColor: theme.colors.grey0 }]}
                                        titleStyle={styles.aiButtonTitle}
                                        loading={aiImageLoading}
                                        disabled={isAnyLoading}
                                        icon={<Icon name="camera-enhance-outline" type="material-community" size={20} color="white" style={{ marginRight: 8 }} />}
                                    />
                                </View>
                            )}
                        </View>
                        {/* END: MODIFICATION */}
                    </ScrollView>
                </View>
            </KeyboardAvoidingView>
        </Overlay>
    );
};

const useStyles = makeStyles((theme) => ({
    overlayContainer: { backgroundColor: 'transparent', width: '90%', maxWidth: 500, padding: 0, borderRadius: 15, shadowColor: "#000", shadowOffset: { width: 0, height: 2, }, shadowOpacity: 0.25, shadowRadius: 3.84, elevation: 5, overflow: 'hidden', },
    overlayStyle: { width: '100%', borderRadius: 15, padding: 20, paddingBottom: 0, maxHeight: '97%', backgroundColor: theme.colors.background },
    keyboardAvoidingView: { width: "100%", maxHeight: '100%' },
    scrollContentContainer: { paddingBottom: 20 },
    header: { flexDirection: "row", justifyContent: "space-between", alignItems: "center", marginBottom: 15, paddingBottom: 10, borderBottomWidth: 1, borderBottomColor: theme.colors.divider, },
    overlayTitle: { color: theme.colors.text, fontWeight: "bold", fontSize: 20, flexShrink: 1, marginRight: 10, textAlign: 'left' },
    closeIcon: { padding: 5, marginLeft: 10, },
    inputLabel: { color: theme.colors.text, fontWeight: '500', marginBottom: 5, fontSize: 14, textAlign: 'left' },
    inputContainerStyle: { borderBottomWidth: 1, borderBottomColor: theme.colors.grey4, marginBottom: 5, paddingBottom: 2, },
    inputStyle: { color: theme.colors.text, marginLeft: 10, fontSize: 16, textAlign: 'left' },
    multilineInputContainer: { borderWidth: 1, borderColor: theme.colors.grey4, borderRadius: 8, paddingVertical: 8, paddingHorizontal: 10, marginBottom: 10, borderBottomWidth: 1, borderBottomColor: theme.colors.grey4, minHeight: 100, },
    multilineInput: { marginLeft: 0, textAlignVertical: 'top', fontSize: 16, color: theme.colors.text, textAlign: 'left' },
    buttonContainer: { },
    button: { borderRadius: 8, paddingHorizontal: 15, paddingVertical: 10, },
    buttonTitle: { color: theme.colors.white, fontWeight: "600", fontSize: 15 },
    aiButton: { paddingVertical: 12, borderRadius: 8, },
    aiButtonTitle: { fontWeight: "600", fontSize: 15, textAlign: 'center', },
    inputModeButtonGroup: {
        marginBottom: 20,
        borderRadius: 8,
        backgroundColor: theme.colors.background
    },
    aiContainer: {
        paddingTop: 10,
    },
    orDividerText: {
        textAlign: 'center',
        marginVertical: 15,
        color: theme.colors.grey1,
        fontWeight: 'bold',
    },
    // START: ADDED STYLE FOR CONSISTENT HEIGHT
    contentContainer: {
        minHeight: 500,
        justifyContent: 'flex-start',
    },
    // END: ADDED STYLE
}));

export default AddFoodModal;
---------- END AddFoodModal.tsx ----------


---------- ConfirmationModal.tsx ----------
// src/components/ConfirmationModal.tsx
// components/ConfirmationModal.tsx
import React from 'react';
import { View, StyleSheet } from 'react-native';
import { Overlay, Button, Input, Text, useTheme } from '@rneui/themed';
import { t } from '../localization/i18n';

interface ConfirmationModalProps {
  isVisible: boolean;
  onCancel: () => void;
  onConfirm: () => void;
  confirmationText: string;
  setConfirmationText: (text: string) => void;
  title?: string;
  message?: string;
  inputPlaceholder?: string;
}

const ConfirmationModal: React.FC<ConfirmationModalProps> = ({
  isVisible,
  onCancel,
  onConfirm,
  confirmationText,
  setConfirmationText,
  title,
  message,
  inputPlaceholder
}) => {
  const { theme } = useTheme();

  const modalTitle = title || t('confirmationModal.defaultTitle');
  const modalMessage = message || t('confirmationModal.defaultMessage');
  const modalPlaceholder = inputPlaceholder || t('confirmationModal.enterTextPlaceholder');


  return (
    <Overlay
      isVisible={isVisible}
      onBackdropPress={onCancel}
      overlayStyle={[styles.overlay, { backgroundColor: theme.colors.card }]}
      backdropStyle={styles.backdrop}
    >
      <View style={styles.container}>
        <Text style={[styles.title, {color: theme.colors.text}]}>{modalTitle}</Text>
        <Text style={[styles.message, {color: theme.colors.text}]}>{modalMessage}</Text>
        <Input
          placeholder={modalPlaceholder}
          placeholderTextColor={theme.colors.grey3} // Adjusted for better visibility
          value={confirmationText}
          onChangeText={setConfirmationText}
          containerStyle={styles.inputContainer}
          inputStyle={{ color: theme.colors.text, textAlign: 'left' }}
          inputContainerStyle={{borderBottomColor: theme.colors.text}}
        />
        <View style={styles.buttonContainer}>
          <Button title={t('confirmationModal.cancel')} onPress={onCancel} type="outline" buttonStyle={styles.button} />
          <Button
            title={t('confirmationModal.confirm')}
            onPress={onConfirm}
            color="error"
            buttonStyle={styles.button}
            disabled={confirmationText === ""}
          />
        </View>
      </View>
    </Overlay>
  );
};

const styles = StyleSheet.create({
    overlay: {
        borderRadius: 10,
        width: '80%',
        padding: 0,
    },
  container: {
    padding: 20,
    borderRadius: 10,
  },
  title: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 10,
    textAlign: 'center',
  },
  message: {
    marginBottom: 15,
    textAlign: 'center'
  },
  inputContainer: {
    marginBottom: 20,
  },
  buttonContainer: {
    flexDirection: 'row',
    justifyContent: 'space-around',
  },
  button: {
    width: 100,
    padding: 10,
  },
  backdrop: {
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
  },
});

export default ConfirmationModal;
---------- END ConfirmationModal.tsx ----------


---------- DailyEntryListItem.tsx ----------
// src/components/DailyEntryListItem.tsx
import React, { useState, useEffect, useCallback, memo, useMemo } from 'react';
import { View, StyleSheet } from 'react-native';
import { ListItem, Button, Icon as RNEIcon, useTheme, makeStyles, Text } from '@rneui/themed';
import { DailyEntryItem } from '../types/dailyEntry';
import { t } from '../localization/i18n';
import { calculateDailyEntryGrade, FoodGradeResult } from '../utils/gradingUtils';
import { Settings } from '../types/settings';
import { getFoodIconUrl } from '../utils/iconUtils';


interface DailyEntryListItemProps {
    item: DailyEntryItem;
    reversedIndex: number;
    foodIcons: { [foodName: string]: string | null };
    setFoodIcons: React.Dispatch<React.SetStateAction<{ [foodName: string]: string | null }>>;
    onEdit: (item: DailyEntryItem, reversedIndex: number) => void;
    onRemove: (reversedIndex: number) => void;
    isSaving: boolean;
    dailyGoals: Settings['dailyGoals'];
}

const DailyEntryListItem = memo<DailyEntryListItemProps>(({
    item,
    reversedIndex,
    foodIcons,
    setFoodIcons,
    onEdit,
    onRemove,
    isSaving,
    dailyGoals,
}) => {
    const { theme } = useTheme();
    const styles = useStyles();

    const iconIdentifier = useMemo(() => {
        if (item?.food?.name) {
            if (foodIcons[item.food.name] !== undefined) {
                return foodIcons[item.food.name];
            }
            return getFoodIconUrl(item.food.name); // No locale needed
        }
        return null;
    }, [item.food?.name, foodIcons]);

    useEffect(() => {
        if (item?.food?.name && iconIdentifier !== undefined && foodIcons[item.food.name] === undefined) {
            setFoodIcons(prev => ({ ...prev, [item.food.name]: iconIdentifier }));
        }
    }, [item.food?.name, iconIdentifier, foodIcons, setFoodIcons]);


    const gradeResult: FoodGradeResult | null = useMemo(() => {
        if (!item || !item.food || !dailyGoals) return null;
        return calculateDailyEntryGrade(item.food, item.grams, dailyGoals);
    }, [item, dailyGoals]);


    const renderListItemIcon = () => {
        if (!item?.food) {
             return (
                 <View style={[styles.foodIcon, styles.iconPlaceholder]}>
                     <RNEIcon name="help-circle-outline" type="ionicon" size={20} color={theme.colors.grey3} />
                 </View>
             );
        }
        if (iconIdentifier) {
            return <Text style={styles.foodIconEmoji}>{iconIdentifier}</Text>;
        } else {
            return (
                <View style={[styles.foodIcon, styles.iconPlaceholder]}>
                    <RNEIcon name="fast-food-outline" type="ionicon" size={20} color={theme.colors.grey3} />
                </View>
            );
        }
    };

     if (!item || !item.food) {
         return (
             <ListItem containerStyle={styles.listItemContainer}>
                 <ListItem.Content>
                      <ListItem.Title style={[{color: theme.colors.error}, styles.textLeft]}>{t('dailyEntryScreen.invalidEntryData')}</ListItem.Title>
                 </ListItem.Content>
             </ListItem>
         );
     }

    const handleEditPress = () => { if (!isSaving) onEdit(item, reversedIndex); };
    const handleDeletePress = () => { if (!isSaving) onRemove(reversedIndex); };

    const calculatedCalories = Math.round((item.food.calories / 100) * item.grams);
    const calculatedProtein = Math.round((item.food.protein / 100) * item.grams);
    const calculatedCarbs = Math.round((item.food.carbs / 100) * item.grams);
    const calculatedFat = Math.round((item.food.fat / 100) * item.grams);

    return (
        <ListItem.Swipeable
            bottomDivider
            leftContent={(reset) => (
                <Button
                    title={t('dailyEntryScreen.edit')}
                    onPress={() => { handleEditPress(); reset(); }}
                    icon={{ name: "edit", color: theme.colors.white }}
                    buttonStyle={styles.swipeButtonEdit}
                    titleStyle={styles.swipeButtonTitle}
                    disabled={isSaving}
                />
            )}
            rightContent={(reset) => (
                <Button
                    title={t('dailyEntryScreen.delete')}
                    onPress={() => { handleDeletePress(); reset(); }}
                    icon={{ name: "delete", color: theme.colors.white }}
                    buttonStyle={styles.swipeButtonDelete}
                    titleStyle={styles.swipeButtonTitle}
                    disabled={isSaving}
                />
            )}
            containerStyle={styles.listItemContainer}
        >
            {renderListItemIcon()}
            <ListItem.Content>
                <View style={styles.titleContainer}>
                    {gradeResult && (
                        <Text style={[styles.gradePill, { backgroundColor: gradeResult.color }]}>
                            {gradeResult.letter}
                        </Text>
                    )}
                    <ListItem.Title style={styles.listItemTitle}>
                        {item.food.name}
                    </ListItem.Title>
                </View>
                <ListItem.Subtitle style={styles.listItemSubtitle}>
                    {`${item.grams}g • Cal: ${calculatedCalories} P: ${calculatedProtein} C: ${calculatedCarbs} F: ${calculatedFat}`}
                </ListItem.Subtitle>
            </ListItem.Content>
            <ListItem.Chevron color={theme.colors.grey3} />
        </ListItem.Swipeable>
    );
});

const useStyles = makeStyles((theme) => ({
    foodIcon: { width: 40, height: 40, marginRight: 15, borderRadius: 8, alignItems: 'center', justifyContent: 'center', },
    foodIconEmoji: {
        fontSize: 28,
        width: 40,
        height: 40,
        marginRight: 15,
        textAlign: 'center',
        textAlignVertical: 'center',
    },
    iconPlaceholder: { backgroundColor: theme.colors.grey5, },
    listItemContainer: { backgroundColor: theme.colors.background, paddingVertical: 12, paddingHorizontal: 15, borderBottomColor: theme.colors.divider, },
    titleContainer: { flexDirection: 'row', alignItems: 'center', marginBottom: 3, },
    gradePill: {
        fontSize: 12,
        fontWeight: 'bold',
        color: theme.colors.white,
        paddingHorizontal: 6,
        paddingVertical: 2,
        borderRadius: 8,
        marginRight: 8,
        minWidth: 20,
        textAlign: 'center',
        overflow: 'hidden',
    },
    listItemTitle: {
        color: theme.colors.text,
        fontWeight: "600",
        fontSize: 16,
        flexShrink: 1,
        textAlign: 'left',
    },
    listItemSubtitle: { color: theme.colors.secondary, fontSize: 14, textAlign: 'left', },
    swipeButtonEdit: { minHeight: "100%", backgroundColor: theme.colors.warning, justifyContent: 'center', alignItems: 'center', },
    swipeButtonDelete: { minHeight: "100%", backgroundColor: theme.colors.error, justifyContent: 'center', alignItems: 'center', },
    swipeButtonTitle: { color: theme.colors.white, fontWeight: 'bold', fontSize: 15, },
    textLeft: { textAlign: 'left'},
}));

export default DailyEntryListItem;
---------- END DailyEntryListItem.tsx ----------


---------- DailyGoalsInput.tsx ----------
// src/components/DailyGoalsInput.tsx
// components/DailyGoalsInput.tsx
import React from "react";
import { Input, Text } from "@rneui/themed";
import { MacroType } from "../types/settings";
import { useTheme, makeStyles } from "@rneui/themed"; // Import makeStyles
import { t } from '../localization/i18n';

interface DailyGoalsInputProps {
    dailyGoals: { [key in MacroType]: number };
    onGoalChange: (goalType: MacroType, value: string) => void;
}

const DailyGoalsInput: React.FC<DailyGoalsInputProps> = ({
  dailyGoals,
  onGoalChange,
}) => {
  const { theme } = useTheme();
  const styles = useStyles(); // Use styles

  const getLabel = (macro: MacroType) => {
    switch(macro) {
        case 'calories': return t('dailyGoalsInput.caloriesGoal');
        case 'protein': return t('dailyGoalsInput.proteinGoal');
        case 'carbs': return t('dailyGoalsInput.carbsGoal');
        case 'fat': return t('dailyGoalsInput.fatGoal');
        default: return macro;
    }
  }

  return (
    <>
      {(["calories", "protein", "carbs", "fat"] as MacroType[]).map((macro) => (
        <Input
          key={macro}
          label={<Text style={[styles.labelStyle, { color: theme.colors.text }]}>{getLabel(macro)}</Text>}
          keyboardType="numeric"
          value={dailyGoals?.[macro]?.toString() || ""}
          onChangeText={(value) => onGoalChange(macro, value)}
          style={[styles.inputStyle, { color: theme.colors.text }]} // Apply inputStyle
          inputContainerStyle={{ borderBottomColor: theme.colors.text }}
        />
      ))}
    </>
  );
};

// Add useStyles
const useStyles = makeStyles((theme) => ({
    labelStyle: {
        color: theme.colors.text,
        fontWeight: 'normal', // RNEUI default is bold, make it normal if needed
        textAlign: 'left',
    },
    inputStyle: {
        textAlign: 'left',
    },
}));

export default DailyGoalsInput;
---------- END DailyGoalsInput.tsx ----------


---------- DailyProgress.tsx ----------
// src/components/DailyProgress.tsx
import React from 'react';
import { View } from 'react-native';
import { Text, useTheme, makeStyles } from '@rneui/themed';
import { t } from '../localization/i18n';

interface DailyProgressProps {
  calories: number;
  protein: number;
  carbs: number;
  fat: number;
  goals: {
    calories?: number;
    protein?: number;
    carbs?: number;
    fat?: number;
  };
}

const DailyProgress: React.FC<DailyProgressProps> = ({
  calories,
  protein,
  carbs,
  fat,
  goals,
}) => {
  const { theme } = useTheme();
  const styles = useStyles();

  const calculateProgress = (current: number, goal?: number) => {
    if (!goal || goal <= 0) return 0;
    return Math.min(current / goal, 1);
  };

  const renderProgressBar = (labelKey: 'calories' | 'protein' | 'carbs' | 'fat', current: number, goal: number | undefined, color: string) => {
      const progress = calculateProgress(current, goal);
      const labelText = t(`dailyProgress.${labelKey}`);
      return (
          <View style={styles.macroContainer} key={labelKey}>
              <View style={styles.labelContainer}>
                    <Text style={[styles.macroLabel, {color: theme.colors.text}]}>{labelText}:</Text>
                    <Text style={[styles.macroValue, {color: theme.colors.text}]}>
                        {`${Math.round(current)} / ${goal || 0}`}
                    </Text>
              </View>
              <View testID="progress-bar-container" style={styles.progressBarContainer}>
                  <View style={[styles.progressBar, { width: `${progress * 100}%`, backgroundColor: color }]} />
              </View>
          </View>
      )
  }

  return (
    <View style={styles.container}>
        {renderProgressBar('calories', calories, goals.calories, theme.colors.primary)}
        {renderProgressBar('protein', protein, goals.protein, theme.colors.success)}
        {renderProgressBar('carbs', carbs, goals.carbs, theme.colors.warning)}
        {renderProgressBar('fat', fat, goals.fat, theme.colors.error)}
    </View>
  );
};

const useStyles = makeStyles((theme) => ({
  container: {
    marginBottom: 20,
    padding: 10,
    borderRadius: 8,
  },
  macroContainer: {
    marginBottom: 10,
  },
  labelContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 5,
  },
  macroLabel: {
    fontWeight: 'bold',
    textAlign: 'left',
  },
  macroValue: {
    textAlign: 'right',
  },
  progressBarContainer: {
      backgroundColor: theme.colors.grey5,
      borderRadius: 5,
      height: 10
  },
  progressBar: {
    height: 10,
    borderRadius: 5,
  },
}));

export default DailyProgress;
---------- END DailyProgress.tsx ----------


---------- DataManagementButtons.tsx ----------
// src/components/DataManagementButtons.tsx
// src/components/DataManagementButtons.tsx
import React, { useState } from "react";
import { Alert, Platform } from "react-native";
import { Button, Icon } from "@rneui/themed";
import * as DocumentPicker from "expo-document-picker";
import * as FileSystem from "expo-file-system";
import * as Sharing from 'expo-sharing';
import { formatDateISO } from "../utils/dateUtils";
import {
  clearAllData,
  loadDailyEntries,
  saveDailyEntries,
  loadFoods,
  saveFoods,
  loadSettings,
  saveSettings
} from "../services/storageService";
import ConfirmationModal from "./ConfirmationModal";
import { DailyEntry } from "../types/dailyEntry";
import { Food } from "../types/food";
import { Settings } from "../types/settings";
import { useTheme } from "@rneui/themed";
import { t } from '../localization/i18n';

interface DataManagementButtonsProps {
  onDataOperation: () => void;
}

const DataManagementButtons: React.FC<DataManagementButtonsProps> = ({
    onDataOperation
}) => {
  const [isConfirmationVisible, setIsConfirmationVisible] = useState(false);
  const [confirmationText, setConfirmationText] = useState("");
  const { theme } = useTheme();

  const handleExportData = async () => {
    try {
      const dailyEntries = await loadDailyEntries();
      const { items: foodItems } = await loadFoods(); // Correctly destructure to get the array of food items
      const settings = await loadSettings();
      
      const exportData = { dailyEntries, foods: foodItems, settings }; // Use the foodItems array
      
      const exportDataString = JSON.stringify(exportData, null, 2);
      const formattedDate = formatDateISO(new Date());
      const fileName = `macro_data_${formattedDate}.json`;
      const fileUri = FileSystem.documentDirectory + fileName;
      await FileSystem.writeAsStringAsync(fileUri, exportDataString, { encoding: FileSystem.EncodingType.UTF8, });
      if (!(await Sharing.isAvailableAsync())) {
        Alert.alert(t('dataManagement.exportError'), t('dataManagement.exportErrorNoSharing'));
        return;
      }
      await Sharing.shareAsync(fileUri, { mimeType: 'application/json', dialogTitle: t('dataManagement.exportData'), UTI: 'public.json' });
    } catch (error: any) {
      console.error("Export Error:", error);
      Alert.alert(t('dataManagement.exportFailed'), error.message || t('dataManagement.exportFailedMessage'));
    }
  };

  const handleImportData = async () => {
    try {
      const result = await DocumentPicker.getDocumentAsync({ type: ["application/json", "public.json"], copyToCacheDirectory: true });
      if (result.canceled) { console.log(t('dataManagement.importCancelled')); return; }
      if (result.assets && result.assets.length > 0) {
        const file = result.assets[0];
        if (!file.name?.toLowerCase().endsWith(".json")) { Alert.alert(t('dataManagement.importInvalidFileType'), t('dataManagement.importInvalidFileTypeMessage')); return; }
        if (file.size && file.size > 10 * 1024 * 1024) { Alert.alert(t('dataManagement.importFileTooLarge'), t('dataManagement.importFileTooLargeMessage')); return; }
        const fileContent = await FileSystem.readAsStringAsync(file.uri, { encoding: FileSystem.EncodingType.UTF8, });
        try {
          const importedData = JSON.parse(fileContent);
          if ( typeof importedData !== 'object' || importedData === null || !importedData.hasOwnProperty("dailyEntries") || !Array.isArray(importedData.dailyEntries) || !importedData.hasOwnProperty("foods") || !Array.isArray(importedData.foods) || !importedData.hasOwnProperty("settings") || typeof importedData.settings !== 'object' ) {
            Alert.alert(t('dataManagement.importFailed'), t('dataManagement.importFailedInvalidStructure')); return;
          }
          await saveDailyEntries(importedData.dailyEntries as DailyEntry[]);
          await saveFoods(importedData.foods as Food[]);
          await saveSettings(importedData.settings as Settings);
          Alert.alert(t('dataManagement.importSuccessful'), t('dataManagement.importSuccessfulMessage'));
          onDataOperation();
        } catch (parseError) {
          console.error("JSON Parse Error during import:", parseError);
          Alert.alert(t('dataManagement.importFailed'), t('dataManagement.importFailedParseError')); return;
        }
      } else {
        Alert.alert(t('dataManagement.importFailed'), t('dataManagement.importFailedAccessError'));
      }
    } catch (error: any) {
      console.error("Import Error:", error);
      if (error.code === 'NO_PERMISSIONS') { Alert.alert(t('dataManagement.importFailed'), t('dataManagement.importFailedPermissionError')); }
      else { Alert.alert(t('dataManagement.importFailed'), error.message || t('dataManagement.importFailedUnknownError')); }
    }
  };

  const handleClearData = () => { setIsConfirmationVisible(true); };

  const confirmClearData = async () => {
    if (confirmationText.trim().toUpperCase() === "CLEAR DATA") {
      try {
        await clearAllData();
        Alert.alert(t('dataManagement.clearDataSuccess'), t('dataManagement.clearDataSuccessMessage'));
        onDataOperation();
      } catch (error: any) {
        console.error("Clear Data Error:", error);
        Alert.alert(t('dataManagement.clearDataFailed'), error.message || t('dataManagement.clearDataFailedMessage'));
      } finally {
        setConfirmationText(""); setIsConfirmationVisible(false);
      }
    } else {
      Alert.alert(t('dataManagement.clearConfirmationFailed'), t('dataManagement.clearConfirmationFailedMessage'));
    }
  };

  return (
    <>
      <Button
        title={t('dataManagement.exportData')}
        onPress={handleExportData}
        buttonStyle={{ marginBottom: 10, backgroundColor: theme.colors.primary }}
        icon={<Icon name="export" type="material-community" color="white" size={20} style={{ marginRight: 8 }} />}
      />
      <Button
        title={t('dataManagement.importData')}
        onPress={handleImportData}
        buttonStyle={{ marginBottom: 10, backgroundColor: theme.colors.primary }}
        icon={<Icon name="import" type="material-community" color="white" size={20} style={{ marginRight: 8 }} />}
      />
      <Button
        title={t('dataManagement.clearAllData')}
        onPress={handleClearData}
        color="error"
        buttonStyle={{ marginBottom: 10 }}
        icon={<Icon name="trash-can-outline" type="material-community" color="white" size={20} style={{ marginRight: 8 }} />}
      />
      <ConfirmationModal
        isVisible={isConfirmationVisible}
        onCancel={() => { setIsConfirmationVisible(false); setConfirmationText(""); }}
        onConfirm={confirmClearData}
        confirmationText={confirmationText}
        setConfirmationText={setConfirmationText}
        title={t('dataManagement.confirmClearTitle')}
        message={t('dataManagement.confirmClearMessage')}
        inputPlaceholder={t('dataManagement.confirmClearInputPlaceholder')}
      />
    </>
  );
};

export default DataManagementButtons;

---------- END DataManagementButtons.tsx ----------


---------- DateNavigator.tsx ----------
// src/components/DateNavigator.tsx
import React from 'react';
import { View, TouchableOpacity, StyleSheet } from 'react-native';
import { Button, Text, Icon as RNEIcon, useTheme, makeStyles } from '@rneui/themed';
import { parseISO, isValid } from 'date-fns';
import { formatDateReadableAsync } from '../utils/dateUtils'; // Import async version
import { t } from '../localization/i18n';
import i18n from '../localization/i18n';

interface DateNavigatorProps {
    selectedDate: string;
    onPreviousDay: () => void;
    onNextDay: () => void;
    onShowDatePicker: () => void;
    isSaving: boolean;
    isLoadingData: boolean;
}

const DateNavigator: React.FC<DateNavigatorProps> = ({
    selectedDate,
    onPreviousDay,
    onNextDay,
    onShowDatePicker,
    isSaving,
    isLoadingData,
}) => {
    const { theme } = useTheme();
    const styles = useStyles();
    const [displayDate, setDisplayDate] = React.useState(t('dateNavigator.invalidDate'));

    React.useEffect(() => {
        const updateDisplayDate = async () => {
            const parsedDate = parseISO(selectedDate);
            if (isValid(parsedDate)) {
                const formatted = await formatDateReadableAsync(parsedDate);
                setDisplayDate(formatted);
            } else {
                setDisplayDate(t('dateNavigator.invalidDate'));
            }
        };
        updateDisplayDate();
    }, [selectedDate, i18n.locale]); // Re-run when selectedDate or locale changes

    const isDisabled = isSaving || isLoadingData;

    return (
        <View style={styles.dateNavigation}>
            <Button
                type="clear"
                onPress={onPreviousDay}
                icon={<RNEIcon name="chevron-back-outline" type="ionicon" color={theme.colors.primary} size={28} />}
                buttonStyle={styles.navButton}
                disabled={isDisabled}
                disabledStyle={styles.disabledButton}
            />
            <TouchableOpacity onPress={onShowDatePicker} disabled={isDisabled}>
                <Text h4 h4Style={[styles.dateText, isDisabled && styles.disabledText]}>
                    {displayDate}
                </Text>
            </TouchableOpacity>
            <Button
                type="clear"
                onPress={onNextDay}
                icon={<RNEIcon name="chevron-forward-outline" type="ionicon" color={theme.colors.primary} size={28} />}
                buttonStyle={styles.navButton}
                disabled={isDisabled}
                disabledStyle={styles.disabledButton}
            />
        </View>
    );
};

const useStyles = makeStyles((theme) => ({
    dateNavigation: {
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'space-between',
        paddingVertical: 10,
        paddingHorizontal: 10,
        backgroundColor: theme.colors.background,
    },
    navButton: {
        paddingHorizontal: 8,
    },
    dateText: {
        fontSize: 18,
        fontWeight: 'bold',
        color: theme.colors.text,
        textAlign: 'center',
        paddingVertical: 5,
    },
    disabledButton: {
        opacity: 0.5,
    },
    disabledText: {
        color: theme.colors.grey3,
    },
}));

export default DateNavigator;
---------- END DateNavigator.tsx ----------


---------- QuickAddItem.tsx ----------
// src/components/Entry/QuickAddItem.tsx
import React, { useMemo, useState } from "react";
import {
  View,
  TouchableOpacity,
  Pressable,
  ActivityIndicator,
} from "react-native";
import {
  ListItem,
  CheckBox,
  Input,
  Icon,
  Text,
  useTheme,
  makeStyles,
} from "@rneui/themed";
import { EstimatedFoodItem } from "../../types/macros";
import { Food } from "../../types/food";
import { isValidNumberInput } from "../../utils/validationUtils";
import { t } from "../../localization/i18n";
// import i18n from "../../localization/i18n"; // No longer needed here
import {
  calculateBaseFoodGrade,
  FoodGradeResult,
} from "../../utils/gradingUtils";
import { getFoodIconUrl } from "../../utils/iconUtils";


interface QuickAddItemProps {
  item: EstimatedFoodItem;
  index: number;
  isSelected: boolean;
  isEditingThisItem: boolean;
  isAnyItemEditing: boolean;
  isLoading?: boolean;
  foodIcons: { [foodName: string]: string | null };
  editedName: string;
  editedGrams: string;
  onToggleItem: (index: number) => void;
  onEditItem: (index: number) => void;
  onSaveEdit: () => void;
  onCancelEdit: () => void;
  onNameChange: (name: string) => void;
  onGramsChange: (grams: string) => void;
  onSaveToLibrary: (
    item: EstimatedFoodItem,
    setSavingState: (isSaving: boolean) => void
  ) => Promise<void>;
  foods: Food[];
}

const QuickAddItem: React.FC<QuickAddItemProps> = ({
  item,
  index,
  isSelected,
  isEditingThisItem,
  isAnyItemEditing,
  isLoading,
  foodIcons,
  editedName,
  editedGrams,
  onToggleItem,
  onEditItem,
  onSaveEdit,
  onCancelEdit,
  onNameChange,
  onGramsChange,
  onSaveToLibrary,
  foods,
}) => {
  const { theme } = useTheme();
  const styles = useStyles();
  const [isSavingToLibrary, setIsSavingToLibrary] = useState(false);

  const estimatedCalories = Math.round(
    (item.calories_per_100g / 100) * item.estimatedWeightGrams
  );

  const tempFoodForGrading: Food = useMemo(
    () => ({
      id: `temp-qa-${index}-${item.foodName}`,
      name: item.foodName,
      calories: item.calories_per_100g,
      protein: item.protein_per_100g,
      carbs: item.carbs_per_100g,
      fat: item.fat_per_100g,
      createdAt: new Date().toISOString(), // Added to satisfy the Food type
    }),
    [
      item.foodName,
      item.calories_per_100g,
      item.protein_per_100g,
      item.carbs_per_100g,
      item.fat_per_100g,
      index,
    ]
  );

  const gradeResult: FoodGradeResult | null = useMemo(
    () => calculateBaseFoodGrade(tempFoodForGrading),
    [tempFoodForGrading]
  );

  const isInLibrary = useMemo(() => {
    return foods.some(food => food.name.toLowerCase() === item.foodName.toLowerCase());
  }, [foods, item.foodName]);

  const handleSaveToLibraryPress = async () => {
    if (isSavingToLibrary || isAnyItemEditing || isLoading) return;
    await onSaveToLibrary(item, setIsSavingToLibrary);
  };

  const renderFoodIcon = (foodName: string) => {
    // Check foodIcons state first, then call getFoodIconUrl (which handles its own caching and lang detection)
    const iconIdentifier = foodIcons[foodName] ?? getFoodIconUrl(foodName);
    if (iconIdentifier) {
      return <Text style={styles.foodIconEmoji}>{iconIdentifier}</Text>;
    }
    return (
      <View style={[styles.foodIconContainer, styles.iconPlaceholder]}>
        <Icon
          name="help-outline"
          type="material"
          size={22}
          color={theme.colors.grey3}
        />
      </View>
    );
  };

  const canPerformActions =
    !isAnyItemEditing && !isLoading && !isSavingToLibrary;

  return (
    <Pressable
      onPress={() => !isEditingThisItem && onToggleItem(index)}
      disabled={
        (isAnyItemEditing && !isEditingThisItem) ||
        isLoading ||
        isSavingToLibrary
      }
    >
      <ListItem
        bottomDivider
        containerStyle={[
          styles.quickAddItemContainer,
          isEditingThisItem && styles.quickAddItemEditing,
          isSelected && !isEditingThisItem && styles.quickAddItemSelected,
          ((isAnyItemEditing && !isEditingThisItem) ||
            isLoading ||
            isSavingToLibrary) &&
            styles.disabledItem,
        ]}
      >
        {isEditingThisItem ? (
          <View style={styles.quickAddEditView}>
            <View style={styles.editIconAndNameRow}>
              {renderFoodIcon(item.foodName)}
              {gradeResult && (
                <Text
                  style={[
                    styles.gradePill,
                    {
                      backgroundColor: gradeResult.color,
                      marginLeft: 0,
                      marginRight: 8,
                    },
                  ]}
                >
                  {gradeResult.letter}
                </Text>
              )}
              <Input
                value={editedName}
                onChangeText={onNameChange}
                placeholder={t("quickAddList.foodNamePlaceholder")}
                inputContainerStyle={styles.quickEditInputContainer}
                inputStyle={styles.quickEditInput}
                containerStyle={styles.quickEditNameContainer}
                autoFocus
                selectTextOnFocus
              />
            </View>
            <View style={styles.quickEditGramsRow}>
              <Input
                value={editedGrams}
                onChangeText={onGramsChange}
                placeholder={t("quickAddList.gramsPlaceholder")}
                keyboardType="numeric"
                inputContainerStyle={styles.quickEditInputContainer}
                inputStyle={styles.quickEditInput}
                containerStyle={styles.quickEditGramsContainer}
                rightIcon={<Text style={styles.quickEditUnitText}>g</Text>}
                errorMessage={
                  !isValidNumberInput(editedGrams) && editedGrams !== ""
                    ? t("quickAddList.errorInvalidGrams")
                    : ""
                }
                errorStyle={styles.inputError}
              />
              <TouchableOpacity
                onPress={onSaveEdit}
                style={styles.quickEditActionButton}
              >
                <Icon
                  name="checkmark-circle"
                  type="ionicon"
                  color={theme.colors.success}
                  size={28}
                />
              </TouchableOpacity>
              <TouchableOpacity
                onPress={onCancelEdit}
                style={styles.quickEditActionButton}
              >
                <Icon
                  name="close-circle"
                  type="ionicon"
                  color={theme.colors.error}
                  size={28}
                />
              </TouchableOpacity>
            </View>
          </View>
        ) : (
          <>
            <CheckBox
              checked={isSelected}
              onPress={() => onToggleItem(index)}
              containerStyle={styles.quickAddCheckbox}
              checkedColor={theme.colors.primary}
              disabled={!canPerformActions}
              size={22}
            />
            {renderFoodIcon(item.foodName)}
            <ListItem.Content>
              <View style={styles.titleAndGradeContainer}>
                {gradeResult && (
                  <Text
                    style={[
                      styles.gradePill,
                      { backgroundColor: gradeResult.color },
                    ]}
                  >
                    {gradeResult.letter}
                  </Text>
                )}
                <ListItem.Title
                  style={styles.quickAddItemTitle}
                  numberOfLines={1}
                  ellipsizeMode="tail"
                >
                  {item.foodName}
                </ListItem.Title>
              </View>
              <ListItem.Subtitle style={styles.quickAddItemSubtitle}>
                {`Est: ${Math.round(
                  item.estimatedWeightGrams
                )}g • ~${estimatedCalories} kcal`}
              </ListItem.Subtitle>
            </ListItem.Content>
            <View style={styles.actionButtonsContainer}>
              {isSavingToLibrary ? (
                <ActivityIndicator
                  size="small"
                  color={theme.colors.primary}
                  style={styles.actionIconPadding}
                />
              ) : (
                <TouchableOpacity
                  onPress={handleSaveToLibraryPress}
                  disabled={!canPerformActions}
                  style={styles.actionIconPadding}
                >
                  <Icon
                    name={isInLibrary ? "bookmark" : "bookmark-plus-outline"}
                    type="material-community"
                    size={22}
                    color={
                      canPerformActions
                        ? theme.colors.primary
                        : theme.colors.grey3
                    }
                  />
                </TouchableOpacity>
              )}
              <TouchableOpacity
                onPress={() => onEditItem(index)}
                disabled={!canPerformActions}
                style={styles.actionIconPadding}
              >
                <Icon
                  name="edit"
                  type="material"
                  size={22}
                  color={
                    canPerformActions ? theme.colors.secondary : theme.colors.grey3
                  }
                />
              </TouchableOpacity>
            </View>
          </>
        )}
      </ListItem>
    </Pressable>
  );
};

const useStyles = makeStyles((theme) => ({
  quickAddItemContainer: {
    paddingVertical: 8,
    paddingHorizontal: 8,
    backgroundColor: theme.colors.background,
    borderBottomColor: theme.colors.divider,
    flexDirection: "row",
    alignItems: "center",
    minHeight: 65,
  },
  quickAddItemSelected: {
    backgroundColor: theme.colors.successLight,
    borderLeftWidth: 4,
    borderLeftColor: theme.colors.success,
  },
  quickAddItemEditing: {
    backgroundColor: theme.colors.background,
    paddingVertical: 12,
    paddingHorizontal: 10,
    borderWidth: 1.5,
    borderColor: theme.colors.primary,
    borderRadius: 8,
    marginVertical: 6,
    marginHorizontal: 2,
    shadowColor: theme.colors.black,
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.15,
    shadowRadius: 2.5,
    elevation: 4,
  },
  disabledItem: {
    opacity: 0.6,
  },
  quickAddCheckbox: {
    padding: 0,
    margin: 0,
    marginRight: 10,
    marginLeft: 0,
    backgroundColor: "transparent",
    borderWidth: 0,
  },
  foodIconContainer: {
    width: 38,
    height: 38,
    marginRight: 10,
    borderRadius: 6,
    alignItems: "center",
    justifyContent: "center",
    overflow: "hidden",
  },
  foodIconEmoji: {
    fontSize: 26,
    width: 38,
    height: 38,
    marginRight: 10,
    textAlign: 'center',
    textAlignVertical: 'center',
  },
  iconPlaceholder: {
    backgroundColor: theme.colors.grey5,
  },
  titleAndGradeContainer: {
    flexDirection: "row",
    alignItems: "center",
    marginBottom: 2,
  },
  gradePill: {
    fontSize: 11,
    fontWeight: "bold",
    color: theme.colors.white,
    paddingHorizontal: 5,
    paddingVertical: 1,
    borderRadius: 6,
    marginRight: 6,
    minWidth: 18,
    textAlign: "center",
    overflow: "hidden",
  },
  quickAddItemTitle: {
    fontWeight: "600",
    color: theme.colors.text,
    fontSize: 15,
    textAlign: "left",
    flexShrink: 1,
  },
  quickAddItemSubtitle: {
    color: theme.colors.secondary,
    fontSize: 12.5,
    textAlign: "left",
  },
  actionButtonsContainer: {
    flexDirection: "row",
    alignItems: "center",
    marginLeft: 8,
  },
  actionIconPadding: {
    paddingVertical: 8,
    paddingHorizontal: 6,
  },
  quickAddEditView: {
    flex: 1,
  },
  editIconAndNameRow: {
    flexDirection: "row",
    alignItems: "center",
    marginBottom: 8,
  },
  quickEditInputContainer: {
    borderBottomWidth: 1,
    borderBottomColor: theme.colors.primary,
    height: 38,
    paddingHorizontal: 0,
  },
  quickEditInput: {
    fontSize: 15,
    color: theme.colors.text,
    paddingVertical: 0,
    textAlign: "left",
  },
  quickEditNameContainer: {
    flex: 1,
    paddingHorizontal: 0,
  },
  quickEditGramsRow: {
    flexDirection: "row",
    alignItems: "center",
    marginTop: 5,
  },
  quickEditGramsContainer: {
    flex: 1,
    paddingHorizontal: 0,
    marginRight: 10,
  },
  quickEditUnitText: {
    color: theme.colors.grey2,
    fontSize: 14,
    fontWeight: "500",
    paddingRight: 5,
  },
  quickEditActionButton: {
    paddingHorizontal: 8,
    paddingVertical: 5,
  },
  inputError: {
    color: theme.colors.error,
    fontSize: 11,
    marginVertical: 0,
    marginLeft: 2,
    height: 14,
    textAlign: "left",
  },
}));

export default QuickAddItem;
---------- END QuickAddItem.tsx ----------


---------- FoodFormFields.tsx ----------
// src/components/FoodFormFields.tsx
import React from 'react';
import { Input, makeStyles, useTheme, Text } from '@rneui/themed'; // Add Text
import { MaterialCommunityIcons } from '@expo/vector-icons';
import { Food } from '../types/food';
import { t } from '../localization/i18n';

// The form deals with data that doesn't include id or createdAt
type FoodFormData = Omit<Food, 'id' | 'createdAt'>;
type FoodFormValues = Partial<FoodFormData>;

interface FoodFormFieldsProps {
    values: FoodFormValues;
    errors: { [key: string]: string };
    onInputChange: (key: keyof FoodFormData, value: string, isEdit: boolean) => void;
    isEditing: boolean;
    disabled: boolean;
}

const FoodFormFields: React.FC<FoodFormFieldsProps> = ({
    values,
    errors,
    onInputChange,
    isEditing,
    disabled,
}) => {
    const { theme } = useTheme();
    const styles = useStyles();

    const getValue = (key: keyof FoodFormData): string => {
         const val = values[key];
         if (typeof val === 'number') {
              if (val === 0 && !isEditing) return "";
              return String(val);
         }
         return String(val ?? "");
    };

    const getErrorText = (fieldKey: keyof FoodFormData) => {
        const errorKey = errors[fieldKey];
        if (!errorKey) return "";
        // Assuming error keys in en.json map to field names + specific error type
        // e.g., foodFormFields.errorNameRequired, foodFormFields.errorNonNegative
        // This might need adjustment based on how specific your error keys are.
        if (fieldKey === 'name' && errorKey === 'Name is required') return t('foodFormFields.errorNameRequired');
        if (['calories', 'protein', 'carbs', 'fat'].includes(fieldKey) && errorKey === 'Must be a non-negative number') {
            return t('foodFormFields.errorNonNegative');
        }
        return errorKey; // Fallback to the raw error key if no specific translation found
    };

    return (
        <>
            <Input
                label={<Text style={styles.labelStyle}>{t('foodFormFields.foodName')}</Text>}
                value={getValue("name")}
                onChangeText={(text) => onInputChange("name", text, isEditing)}
                errorMessage={getErrorText("name")}
                errorStyle={styles.errorStyle}
                inputContainerStyle={styles.inputContainerStyle}
                inputStyle={styles.inputStyle}
                leftIcon={<MaterialCommunityIcons name="food-apple" size={24} color={errors.name ? theme.colors.error : theme.colors.grey3} />}
                disabled={disabled}
                autoCapitalize="words"
            />
            <Input
                label={<Text style={styles.labelStyle}>{t('foodFormFields.calories')}</Text>}
                keyboardType="numeric" value={getValue("calories")}
                onChangeText={(text) => onInputChange("calories", text, isEditing)}
                errorMessage={getErrorText("calories")}
                errorStyle={styles.errorStyle}
                inputContainerStyle={styles.inputContainerStyle}
                inputStyle={styles.inputStyle}
                leftIcon={<MaterialCommunityIcons name="fire" size={24} color={errors.calories ? theme.colors.error : theme.colors.grey3} />}
                disabled={disabled}
            />
            <Input
                label={<Text style={styles.labelStyle}>{t('foodFormFields.protein')}</Text>}
                keyboardType="numeric" value={getValue("protein")}
                onChangeText={(text) => onInputChange("protein", text, isEditing)}
                errorMessage={getErrorText("protein")}
                errorStyle={styles.errorStyle}
                inputContainerStyle={styles.inputContainerStyle}
                inputStyle={styles.inputStyle}
                leftIcon={<MaterialCommunityIcons name="food-drumstick" size={24} color={errors.protein ? theme.colors.error : theme.colors.grey3} />}
                disabled={disabled}
            />
            <Input
                label={<Text style={styles.labelStyle}>{t('foodFormFields.carbs')}</Text>}
                keyboardType="numeric" value={getValue("carbs")}
                onChangeText={(text) => onInputChange("carbs", text, isEditing)}
                errorMessage={getErrorText("carbs")}
                errorStyle={styles.errorStyle}
                inputContainerStyle={styles.inputContainerStyle}
                inputStyle={styles.inputStyle}
                leftIcon={<MaterialCommunityIcons name="bread-slice" size={24} color={errors.carbs ? theme.colors.error : theme.colors.grey3} />}
                disabled={disabled}
            />
            <Input
                label={<Text style={styles.labelStyle}>{t('foodFormFields.fat')}</Text>}
                keyboardType="numeric" value={getValue("fat")}
                onChangeText={(text) => onInputChange("fat", text, isEditing)}
                errorMessage={getErrorText("fat")}
                errorStyle={styles.errorStyle}
                inputContainerStyle={styles.inputContainerStyle}
                inputStyle={styles.inputStyle}
                leftIcon={<MaterialCommunityIcons name="oil" size={24} color={errors.fat ? theme.colors.error : theme.colors.grey3} />}
                disabled={disabled}
            />
        </>
    );
};

const useStyles = makeStyles((theme) => ({
    labelStyle: { color: theme.colors.text, fontWeight: '500', marginBottom: 2, fontSize: 14, textAlign: 'left' },
    inputContainerStyle: { borderBottomWidth: 1, borderBottomColor: theme.colors.grey4, marginBottom: 5, paddingBottom: 2, },
    inputStyle: { color: theme.colors.text, marginLeft: 10, fontSize: 16, textAlign: 'left' },
    errorStyle: { color: theme.colors.error, textAlign: 'left' }
}));

export default FoodFormFields;
---------- END FoodFormFields.tsx ----------


---------- FoodItem.tsx ----------
// src/components/FoodItem.tsx
import React, { forwardRef, memo, useMemo, useEffect } from "react";
import { View, TouchableOpacity } from "react-native";
import { ListItem, Icon as RNEIcon, useTheme, Button, makeStyles, Text } from "@rneui/themed";
import { Food } from "../types/food";
import { t } from '../localization/i18n';
import { calculateBaseFoodGrade, FoodGradeResult } from "../utils/gradingUtils";
import { getFoodIconUrl } from "../utils/iconUtils";

interface FoodItemProps {
  food: Food;
  onEdit: (food: Food) => void;
  onDelete: (foodId: string) => void;
  onQuickAdd: (food: Food) => void;
  onShare: (food: Food) => void;
  foodIconUrl: string | null; 
  setFoodIconForName: (name: string, icon: string | null) => void;
}

const FoodItem = memo(forwardRef<any, FoodItemProps>(
  ({ food, onEdit, onDelete, onQuickAdd, onShare, foodIconUrl, setFoodIconForName }, ref) => {
    const { theme } = useTheme();
    const styles = useStyles();

    const iconIdentifier = useMemo(() => {
        if (foodIconUrl !== undefined) return foodIconUrl; 
        return getFoodIconUrl(food.name);
    }, [food.name, foodIconUrl]);

    useEffect(() => {
        if (food.name && iconIdentifier !== undefined && foodIconUrl === undefined) {
            setFoodIconForName(food.name, iconIdentifier);
        }
    }, [food.name, iconIdentifier, foodIconUrl, setFoodIconForName]);

    const gradeResult: FoodGradeResult | null = useMemo(() => {
        return calculateBaseFoodGrade(food);
    }, [food]);

    const renderIcon = () => {
        if (iconIdentifier) {
            return <Text style={styles.foodIconEmoji}>{iconIdentifier}</Text>;
        } else {
            return (
                <View style={styles.foodIconPlaceholderView}>
                    <RNEIcon name="help-outline" type="material" size={22} color={theme.colors.grey3} />
                </View>
            );
        }
    };

    return (
      <ListItem.Swipeable
        ref={ref}
        bottomDivider
        leftContent={(reset) => (
          <Button title={t('foodListScreen.edit')} onPress={() => { onEdit(food); reset(); }} icon={{ name: "edit", color: theme.colors.white }} buttonStyle={styles.swipeButtonEdit} titleStyle={styles.swipeButtonTitle} />
        )}
        rightContent={(reset) => (
          <Button title={t('foodListScreen.delete')} onPress={() => { onDelete(food.id); reset(); }} icon={{ name: "delete", color: theme.colors.white }} buttonStyle={styles.swipeButtonDelete} titleStyle={styles.swipeButtonTitle} />
        )}
        containerStyle={styles.listItemContainer}
      >
        {renderIcon()}
        <ListItem.Content>
          <View style={styles.titleContainer}>
            {gradeResult && (
                <Text style={[styles.gradePill, { backgroundColor: gradeResult.color }]}>
                    {gradeResult.letter}
                </Text>
            )}
            <ListItem.Title style={styles.title} numberOfLines={2} ellipsizeMode="tail">
                {food.name}
            </ListItem.Title>
          </View>
          <ListItem.Subtitle style={styles.subtitle}>
            {`100g: Cal: ${Math.round(food.calories)} P: ${Math.round(food.protein)} C: ${Math.round(food.carbs)} F: ${Math.round(food.fat)}`}
          </ListItem.Subtitle>
        </ListItem.Content>
        <TouchableOpacity onPress={() => onShare(food)} style={styles.actionButton} hitSlop={{ top: 10, bottom: 10, left: 5, right: 5 }}>
            <RNEIcon name="share-variant-outline" type="material-community" color={theme.colors.primary} size={24} />
        </TouchableOpacity>
        <TouchableOpacity onPress={() => onQuickAdd(food)} style={styles.actionButton} hitSlop={{ top: 10, bottom: 10, left: 5, right: 5 }}>
            <RNEIcon name="add-circle-outline" type="ionicon" color={theme.colors.primary} size={26} />
        </TouchableOpacity>
      </ListItem.Swipeable>
    );
  }
));

const useStyles = makeStyles((theme) => ({
    listItemContainer: { backgroundColor: theme.colors.background, paddingVertical: 12, paddingHorizontal: 15, borderBottomColor: theme.colors.divider, },
    titleContainer: { flexDirection: 'row', alignItems: 'center', marginBottom: 3, },
    gradePill: {
        fontSize: 12, fontWeight: 'bold', color: theme.colors.white, 
        paddingHorizontal: 6, paddingVertical: 2, borderRadius: 8,
        marginRight: 8, minWidth: 20, textAlign: 'center', overflow: 'hidden', 
    },
    title: { color: theme.colors.text, fontWeight: "600", fontSize: 16, flexShrink: 1, textAlign: 'left', }, 
    subtitle: { color: theme.colors.secondary, fontSize: 13, marginTop: 2, textAlign: 'left', },
    swipeButtonEdit: { minHeight: "100%", backgroundColor: theme.colors.warning, justifyContent: 'center', alignItems: 'center', },
    swipeButtonDelete: { minHeight: "100%", backgroundColor: theme.colors.error, justifyContent: 'center', alignItems: 'center', },
    swipeButtonTitle: { color: theme.colors.white, fontWeight: 'bold', fontSize: 15, },
    foodIconEmoji: {
        fontSize: 28, width: 40, height: 40,
        marginRight: 15, textAlign: 'center', textAlignVertical: 'center',
    },
    foodIconPlaceholderView: {
        width: 40, height: 40, marginRight: 15, borderRadius: 8, 
        alignItems: 'center', justifyContent: 'center', backgroundColor: theme.colors.grey5,
    },
    actionButton: { 
        paddingHorizontal: 8, justifyContent: 'center',
        alignItems: 'center', marginLeft: 0,
    },
}));

export default FoodItem;
---------- END FoodItem.tsx ----------


---------- QuickAddList.tsx ----------
// src/components/QuickAddList.tsx
import React from 'react';
import {
    View,
    FlatList,
    ActivityIndicator,
} from 'react-native';
import {
    Icon,
    Text,
    useTheme,
    makeStyles,
} from '@rneui/themed';
import { EstimatedFoodItem } from '../types/macros';
import { Food } from '../types/food'; // Import Food type
import { t } from '../localization/i18n';
import QuickAddItem from './Entry/QuickAddItem';

interface QuickAddListProps {
    items: EstimatedFoodItem[];
    selectedIndices: Set<number>;
    editingIndex: number | null;
    editedName: string;
    editedGrams: string;
    onToggleItem: (index: number) => void;
    onEditItem: (index: number) => void;
    onSaveEdit: () => void;
    onCancelEdit: () => void;
    onNameChange: (name: string) => void;
    onGramsChange: (grams: string) => void;
    style?: object;
    isLoading?: boolean;
    foodIcons: { [foodName: string]: string | null | undefined };
    onSaveItemToLibrary: (item: EstimatedFoodItem, setSavingState: (isSaving: boolean) => void) => Promise<void>;
    foods: Food[]; // Add foods prop
}

const QuickAddList: React.FC<QuickAddListProps> = ({
    items,
    selectedIndices,
    editingIndex,
    editedName,
    editedGrams,
    onToggleItem,
    onEditItem,
    onSaveEdit,
    onCancelEdit,
    onNameChange,
    onGramsChange,
    style,
    isLoading,
    foodIcons,
    onSaveItemToLibrary,
    foods, // Destructure foods
}) => {
    const { theme } = useTheme();
    const styles = useStyles();

    const renderItem = ({ item, index }: { item: EstimatedFoodItem; index: number }) => {
        const isSelected = selectedIndices.has(index);
        const isEditingThisItem = editingIndex === index;
        const isAnyItemEditing = editingIndex !== null;

        return (
            <QuickAddItem
                item={item}
                index={index}
                isSelected={isSelected}
                isEditingThisItem={isEditingThisItem}
                isAnyItemEditing={isAnyItemEditing}
                isLoading={isLoading}
                foodIcons={foodIcons}
                editedName={isEditingThisItem ? editedName : ''}
                editedGrams={isEditingThisItem ? editedGrams : ''}
                onToggleItem={onToggleItem}
                onEditItem={onEditItem}
                onSaveEdit={onSaveEdit}
                onCancelEdit={onCancelEdit}
                onNameChange={onNameChange}
                onGramsChange={onGramsChange}
                onSaveToLibrary={onSaveItemToLibrary}
                foods={foods} // Pass foods to QuickAddItem
            />
        );
    };

    if (isLoading && items.length === 0) {
         return (
             <View style={styles.centeredContent}>
                 <ActivityIndicator size="large" color={theme.colors.primary} />
                 <Text style={styles.loadingText}>{t('quickAddList.analyzing')}</Text>
             </View>
         );
    }

    return (
        <FlatList
            data={items}
            keyExtractor={(item, index) => `quickadd-${index}-${item.foodName}-${item.estimatedWeightGrams}`}
            renderItem={renderItem}
            ListEmptyComponent={
                !isLoading ? (
                    <View style={styles.emptyListContainer}>
                        <Icon name="image-search-outline" type="material-community" size={48} color={theme.colors.grey3} />
                        <Text style={styles.emptyListText}>{t('quickAddList.emptyMessage')}</Text>
                        <Text style={styles.emptyListSubText}>{t('quickAddList.emptyHint')}</Text>
                    </View>
                ) : null
            }
            style={[styles.listDefaults, style]}
            extraData={{ selectedIndices, editingIndex, foodIcons, isLoading, editedName, editedGrams, foodsLength: foods.length }}
            keyboardShouldPersistTaps="handled"
            contentContainerStyle={items.length === 0 && !isLoading ? styles.listContentContainerEmpty : {paddingBottom: 10}}
        />
    );
};

const useStyles = makeStyles((theme) => ({
    listDefaults: {},
    listContentContainerEmpty: { flexGrow: 1, justifyContent: 'center', },
    emptyListContainer: {
        alignItems: "center",
        justifyContent: 'center',
        paddingVertical: 40,
        paddingHorizontal: 20,
        flexGrow: 1,
    },
    emptyListText: {
        color: theme.colors.grey2,
        fontSize: 16,
        textAlign: "center",
        marginTop: 15,
        fontWeight: '500',
    },
    emptyListSubText: {
        fontSize: 14,
        color: theme.colors.grey3,
        textAlign: "center",
        marginTop: 8,
    },
    centeredContent: {
        flex: 1,
        alignItems: 'center',
        justifyContent: 'center',
        padding: 20,
        minHeight: 200,
    },
    loadingText: {
        marginTop: 12,
        color: theme.colors.text,
        fontSize: 16,
        fontWeight: "500",
    },
}));

export default QuickAddList;
---------- END QuickAddList.tsx ----------


---------- StatisticsChart.tsx ----------
// src/components/StatisticsChart.tsx
import React from "react";
import { View, StyleSheet, Platform } from "react-native";
import { WebView } from "react-native-webview";
import { Statistics, MacroType, macros as macroKeys } from "../types/settings";
import { useTheme } from "@rneui/themed";
import { t } from '../localization/i18n';
import i18n from '../localization/i18n'; // Import i18n for locale
import * as Localization from 'expo-localization'; // Import Localization

// Declare uPlot as a global variable for TypeScript, as it's loaded via CDN in the WebView
declare const uPlot: any;

// Local interface for uPlot Series configuration to help TypeScript
interface uPlotSeriesConfig {
  stroke?: string;
  width?: number;
  label?: string;
  points?: { show?: boolean; size?: number; fill?: string; stroke?: string; };
  dash?: number[];
  fill?: string;
  // Add other series properties if you use them
}

interface StatisticsChartProps {
  statistics: Statistics;
}

const StatisticsChart: React.FC<StatisticsChartProps> = ({ statistics }) => {
  const { theme } = useTheme();

  const getChartTitle = (macro: MacroType): string => {
    switch(macro) {
        case 'calories': return t('dailyProgress.calories');
        case 'protein': return t('dailyProgress.protein');
        case 'carbs': return t('dailyProgress.carbs');
        case 'fat': return t('dailyProgress.fat');
        default:
            const exhaustiveCheck: never = macro;
            return exhaustiveCheck;
    }
  };

  const chartHeightInHTML = 250;
  const chartVerticalMarginInHTML = 20;
  const totalEstimatedWebViewHeight = macroKeys.length * (chartHeightInHTML + chartVerticalMarginInHTML) + 40; // Extra padding for safety

  const generateChartHTML = () => {
    const chartData = (macroKeys as readonly MacroType[]).reduce((acc, macro) => {
      acc[macro] = statistics[macro].map((series) =>
        series.map((item) => ({ x: item.x / 1000, y: item.y })) // Ensure x is in seconds
      );
      return acc;
    }, {} as { [key in MacroType]: { x: number; y: number }[][] });

    const textColor = theme.colors.text;
    const gridColor = theme.colors.grey5;
    const fontFamily = Platform.OS === 'ios' ? "System" : "sans-serif";

    const lineColors = {
      calories: theme.colors.primary, protein: theme.colors.success,
      carbs: theme.colors.warning, fat: theme.colors.error,
    };

    return `
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="utf-8">
            <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
            <title>Macro Charts</title>
            <style>
                body { font-family: ${fontFamily}; margin: 0; padding: 0; background-color: ${theme.colors.background}; color: ${textColor}; overflow-x: hidden; }
                .chart-container { width: 95%; height: ${chartHeightInHTML}px; margin: ${chartVerticalMarginInHTML / 2}px auto; }
                .no-data-message { display: flex; align-items: center; justify-content: center; height: 100%; text-align: center; color: ${textColor}; font-size: 14px; }
                .u-legend .u-series > td { min-width: 50px; } /* Ensure legend items have some width */
            </style>
            <link rel="stylesheet" href="https://unpkg.com/uplot@1.6.27/dist/uPlot.min.css">
            <script src="https://unpkg.com/uplot@1.6.27/dist/uPlot.iife.min.js"></script>
        </head>
        <body>
            ${(macroKeys as readonly MacroType[]).map((macro) => {
                const currentMacroData = chartData[macro];
                const chartTitle = getChartTitle(macro);
                const isCalories = macro === "calories";
                
                const movingAverageLabel = t('statisticsChart.movingAverage');
                const goalLabel = t('statisticsChart.goal');

                const intakeSeries: uPlotSeriesConfig = {
                    stroke: lineColors[macro],
                    width: 2.5,
                    label: movingAverageLabel,
                    points: { show: false },
                    fill: `${lineColors[macro]}2A`,
                };
                
                const goalSeries: uPlotSeriesConfig = {
                    stroke: "#e74c3c",
                    width: 1.5,
                    dash: [10, 5],
                    label: goalLabel,
                    points: { show: false }
                };

                const seriesConfig: uPlotSeriesConfig[] = [
                    {}, // X-axis
                    intakeSeries
                ];

                if (isCalories) {
                    seriesConfig.push(goalSeries);
                }


                return `
                <div id="${macro}-chart" class="chart-container">
                    <div class="no-data-message">${t("statisticsChart.noData", { chartTitle: chartTitle })}</div>
                </div>
                <script>
                    (function() {
                        const chartElement = document.getElementById('${macro}-chart');
                        try {
                            const dataForChart = ${JSON.stringify(currentMacroData)};
                            let canRender = false;

                            let xValues = [];
                            let yValuesMovingAvg = [];
                            let yValuesGoal = [];
                            
                            // data structure: [ [daily_intake], [moving_avg], [goal]? ]
                            if (dataForChart && dataForChart.length >= 2 && dataForChart[0] && dataForChart[1] && Array.isArray(dataForChart[0]) && dataForChart[0].length >= 1) {
                                // xValues from daily data to get all date points
                                xValues = dataForChart[0].map(d => d.x);
                                // yValues from moving average data
                                yValuesMovingAvg = dataForChart[1].map(d => d.y);
                                canRender = true; 
                                
                                if (${isCalories} && dataForChart.length > 2 && dataForChart[2] && Array.isArray(dataForChart[2])) {
                                    const tempGoalMap = new Map(dataForChart[2].map(p => [p.x, p.y]));
                                    yValuesGoal = xValues.map(x => tempGoalMap.get(x) === undefined ? null : tempGoalMap.get(x));
                                }
                            }

                            if (canRender) {
                                chartElement.innerHTML = ''; // Clear "no data" message
                                const uPlotInstanceData = ${isCalories} 
                                    ? [xValues, yValuesMovingAvg, yValuesGoal] 
                                    : [xValues, yValuesMovingAvg];
                                
                                const opts = {
                                    title: "${chartTitle}",
                                    width: chartElement.offsetWidth,
                                    height: ${chartHeightInHTML},
                                    tzDate: ts => uPlot.tzDate(new Date(ts * 1000), '${Localization.getCalendars()?.[0]?.timeZone || 'UTC'}'),
                                    scales: { x: { time: true }, y: { range: (self, min, max) => [0, Math.max(10, max * 1.25)] } },
                                    axes: [
                                        { stroke: "${textColor}", font: "12px ${fontFamily}", grid: { stroke: "${gridColor}", width: 1 }, ticks: { stroke: "${gridColor}", width: 1 } },
                                        { stroke: "${textColor}", font: "12px ${fontFamily}", grid: { stroke: "${gridColor}", width: 1 }, ticks: { stroke: "${gridColor}", width: 1 }, values: (self, ticks) => ticks.map(rawValue => Math.round(rawValue)) }
                                    ],
                                    series: ${JSON.stringify(seriesConfig)},
                                    legend: { show: false },
                                    cursor: { drag: { setScale: false }, focus: { prox: 30 }, points: { size: 6, fill: (self, i) => self.series[i]._stroke, stroke: (self, i) => self.series[i]._stroke } }
                                };
                                new uPlot(opts, uPlotInstanceData, chartElement);
                            }
                        } catch (e) {
                            console.error('--- ERROR in uPlot script for ${macro} ---', e.message, e.stack);
                            chartElement.innerHTML = '<div class="no-data-message" style="color:red;">Chart Error: ' + e.message + '</div>';
                        }
                    })();
                </script>
            `;}).join("")}
        </body>
        </html>
        `;
  };

  return (
    <View style={[styles.webViewContainer, { height: totalEstimatedWebViewHeight }]}>
      <WebView
        originWhitelist={["*"]}
        source={{ html: generateChartHTML(), baseUrl: Platform.OS === 'android' ? 'file:///android_asset/' : '' }} // baseUrl for Android
        style={styles.webView}
        scalesPageToFit={Platform.OS === 'android'}
        scrollEnabled={false}
        javaScriptEnabled={true}
        domStorageEnabled={true}
        onError={(syntheticEvent) => {
          const {nativeEvent} = syntheticEvent;
          console.warn('WebView error: ', nativeEvent);
        }}
        onHttpError={(syntheticEvent) => { // Useful for 404s on resources like uPlot CSS/JS if CDN fails
            const {nativeEvent} = syntheticEvent;
            console.warn('WebView HTTP error: ', nativeEvent.url, nativeEvent.statusCode, nativeEvent.description);
        }}
        // Log messages from WebView's console.log to React Native console
        onMessage={(event) => {
            console.log("WebView Message:", event.nativeEvent.data);
        }}
        // Inject JavaScript to bridge console.log, console.error, etc.
        // Note: This basic bridge might not capture all nuances or complex objects perfectly.
        injectedJavaScript={`
            (function() {
                const originalConsoleLog = console.log;
                const originalConsoleError = console.error;
                const originalConsoleWarn = console.warn;
                const originalConsoleInfo = console.info;
                const originalConsoleDebug = console.debug;

                const rnBridgePost = (type, args) => {
                    const message = args.map(arg => {
                        if (typeof arg === 'object' || typeof arg === 'function') {
                            try {
                                return JSON.stringify(arg);
                            } catch (e) {
                                return '[Unserializable Object]';
                            }
                        }
                        return String(arg);
                    }).join(' ');
                    window.ReactNativeWebView.postMessage(JSON.stringify({ type: 'CONSOLE', level: type, message: message }));
                };

                console.log = function() { originalConsoleLog.apply(console, arguments); rnBridgePost('LOG', Array.from(arguments)); };
                console.error = function() { originalConsoleError.apply(console, arguments); rnBridgePost('ERROR', Array.from(arguments)); };
                console.warn = function() { originalConsoleWarn.apply(console, arguments); rnBridgePost('WARN', Array.from(arguments)); };
                console.info = function() { originalConsoleInfo.apply(console, arguments); rnBridgePost('INFO', Array.from(arguments)); };
                console.debug = function() { originalConsoleDebug.apply(console, arguments); rnBridgePost('DEBUG', Array.from(arguments)); };
                window.onerror = function(message, source, lineno, colno, error) {
                    rnBridgePost('GLOBAL_ERROR', [message, 'at', source + ':' + lineno + ':' + colno, error ? error.stack : '']);
                    return false; // Let default handler run.
                };
            })();
            true; // note: this is required, or you'll sometimes get silent failures
        `}
        key={`stat-chart-${theme.mode}-${i18n.locale}-${JSON.stringify(statistics).length}`}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  webViewContainer: {
    width: "100%",
    marginTop: 10,
  },
  webView: {
    flex: 1,
    backgroundColor: 'transparent',
  },
});

export default StatisticsChart;
---------- END StatisticsChart.tsx ----------


---------- ThemeSwitch.tsx ----------
// src/components/ThemeSwitch.tsx
// components/ThemeSwitch.tsx
import React from "react";
import { ListItem, Switch, useTheme } from "@rneui/themed";
import { t } from '../localization/i18n';

interface ThemeSwitchProps {
  currentTheme: 'light' | 'dark' | 'system';
  onToggle: (theme: 'light' | 'dark' | 'system') => void;
}

const ThemeSwitch: React.FC<ThemeSwitchProps> = ({ currentTheme, onToggle }) => {
  const { theme } = useTheme();

  return (
    <ListItem
      bottomDivider
      containerStyle={{ backgroundColor: theme.colors.background }}
    >
      <ListItem.Content>
        <ListItem.Title style={{ color: theme.colors.text, textAlign: 'left' }}>
          {t('themeSwitch.darkMode')}
        </ListItem.Title>
      </ListItem.Content>
      <Switch
        value={currentTheme === 'dark'}
        onValueChange={(newValue) => {
          onToggle(newValue ? 'dark' : 'light');
        }}
      />
    </ListItem>
  );
};

export default ThemeSwitch;
---------- END ThemeSwitch.tsx ----------


---------- AuthContext.tsx ----------
// src/context/AuthContext.tsx
import React, { createContext, useState, useContext, useEffect, useCallback } from 'react';
import { loadSettings, saveSettings } from '../services/storageService';
import * as authService from '../services/authService';
import { Settings, LanguageCode } from '../types/settings';
import { Token } from '../types/token';

export interface AuthState {
  authenticated: boolean;
  token: string | null;
}

export interface AuthContextType {
  authState: AuthState;
  settings: Settings;
  isLoading: boolean;
  login: (tokenData: Token) => Promise<void>;
  logout: () => Promise<void>;
  changeTheme: (theme: 'light' | 'dark' | 'system') => void;
  changeLocale: (locale: LanguageCode) => void;
}

export const AuthContext = createContext<Partial<AuthContextType>>({});

export function useAuth() {
  return useContext(AuthContext);
}

export const AuthProvider: React.FC<{children: React.ReactNode}> = ({ children }) => {
  const [authState, setAuthState] = useState<AuthState>({ authenticated: false, token: null });
  const [settings, setSettings] = useState<Settings>({
    theme: 'system',
    language: 'system',
    dailyGoals: { calories: 2000, protein: 150, carbs: 200, fat: 70 },
  });
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    const loadAuthData = async () => {
      try {
        const tokenData = await authService.getAuthToken();
        const loadedSettings = await loadSettings();
        setSettings(loadedSettings);

        if (tokenData?.access_token) {
          setAuthState({ authenticated: true, token: tokenData.access_token });
        }
      } catch (e) {
        console.error("Failed to load auth data", e);
      } finally {
        setIsLoading(false);
      }
    };

    loadAuthData();
  }, []);

  const login = async (tokenData: Token) => {
    await authService.setAuthToken(tokenData);
    setAuthState({ authenticated: true, token: tokenData.access_token });
  };

  const logout = async () => {
    await authService.logoutUser(); // This clears tokens and calls backend
    setAuthState({ authenticated: false, token: null });
  };

  const changeTheme = useCallback(async (theme: 'light' | 'dark' | 'system') => {
    const newSettings = { ...settings, theme };
    setSettings(newSettings);
    await saveSettings(newSettings);
  }, [settings]);

  const changeLocale = useCallback(async (locale: LanguageCode) => {
    const newSettings = { ...settings, language: locale };
    setSettings(newSettings);
    await saveSettings(newSettings);
  }, [settings]);

  const value: AuthContextType = {
    authState,
    settings,
    isLoading,
    login,
    logout,
    changeTheme,
    changeLocale,
  };

  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;
};
---------- END AuthContext.tsx ----------


---------- i18n.ts ----------
// src/localization/i18n.ts
import * as Localization from 'expo-localization';
import { I18n } from 'i18n-js';
import en from './languages/en.json';
import ru from './languages/ru.json';
import he from './languages/he.json';
import { Platform, I18nManager } from 'react-native';
// Import specific date-fns locales statically
import { enUS, ru as ruLocale, he as heLocale } from 'date-fns/locale';

const translations = {
  en,
  ru,
  he,
};

const i18n = new I18n(translations);

// --- Helper Type Generation for Translation Keys ---

// Helper type to recursively generate dot-notation paths including intermediate paths
type Paths<T> = T extends object ? {
    [K in keyof T]: K extends string ? 
        T[K] extends any[] ? `${K}` : // If it's an array, the key itself is a valid path to the array
        `${K}` | `${K}.${Paths<T[K]>}` 
        : never;
}[keyof T] : never;

// Flattens the union type generated by Paths (removes trailing dots)
type FlattenPath<T extends string> =
    T extends `${infer Head}.${infer Tail}` ?
        Tail extends '' ? Head : `${Head}.${FlattenPath<Tail>}` :
    T;

// Final type representing all valid translation keys
export type TranslationKey = FlattenPath<Paths<typeof en>>;

// --- End Helper Type Generation ---


// Set initial locale and handle RTL
export const setLocale = (locale: string) => {
  const languageTag = locale.split('-')[0];
  i18n.locale = languageTag;
  i18n.defaultLocale = 'en';

  const isRTL = languageTag === 'he';
  if (Platform.OS !== 'web' && I18nManager.isRTL !== isRTL) {
    I18nManager.forceRTL(isRTL);
    console.log(`RTL forced to: ${isRTL} for locale: ${languageTag}. App restart/reload may be needed for full layout update.`);
  } else if (Platform.OS === 'web') {
      document.documentElement.dir = isRTL ? 'rtl' : 'ltr';
  }
};

const deviceLocale = Localization.getLocales()?.[0]?.languageTag || 'en-US';
setLocale(deviceLocale);

// Updated t function with generic type for better type safety with `returnObjects: true`
export function t<TResult = string>(scope: TranslationKey, options?: any): TResult {
  return i18n.t(scope as string, { ...options, locale: i18n.locale }) as TResult;
}

// Function to get date-fns locale (unchanged)
export const getDateFnLocale = async () => {
  const currentLocale = i18n.locale.split('-')[0];
  switch (currentLocale) {
    case 'ru':
      return ruLocale;
    case 'he':
      return heLocale;
    case 'en':
    default:
      return enUS;
  }
};

export default i18n;
---------- END i18n.ts ----------


---------- en.json ----------
{
  "app": {
    "initializing": "Initializing...",
    "name": "MacrosVisionAI",
    "alertButtons": {
      "later": "Later",
      "restartNow": "Restart Now"
    }
  },
  "errors": {
    "estimationFailedTitle": "Estimation Failed",
    "analysisFailedTitle": "Analysis Failed",
    "aiGramsProcessingError": "The AI couldn't process the quantity. Please try phrasing it differently (e.g., '1 cup' instead of 'a cup').",
    "unexpectedError": "An unexpected error occurred. Please try again."
  },
  "forgotPasswordScreen": {
    "title": "Reset Password",
    "instructions": "Enter your account's email address and we will send you a link to reset your password.",
    "emailPlaceholder": "Email Address",
    "buttonText": "Send Reset Link",
    "backToLogin": "Back to Login",
    "alertSuccessTitle": "Check Your Email",
    "forgotPasswordLink": "Forgot Password?"
  },
  "settingsScreen": {
    "title": "Settings",
    "account": {
      "title": "Account",
      "actions": "Account Actions",
      "logout": "Logout",
      "logoutConfirmTitle": "Confirm Logout",
      "logoutConfirmMessage": "Are you sure you want to log out?"
    },
    "general": {
      "title": "General"
    },
    "dailyGoals": {
      "title": "Daily Goals"
    },
    "goals": {
      "estimateButton": "Estimate Goals"
    },
    "statistics": {
      "title": "Statistics"
    },
    "dataManagement": {
      "title": "Data Management"
    },
    "language": {
      "title": "Language",
      "system": "System Default",
      "english": "English",
      "russian": "Russian",
      "hebrew": "Hebrew",
      "restartMessage": "Language changed. Restart the app for full effect."
    }
  },
  "accountSettings": {
    "coinBalance": "Coin Balance",
    "addTestCoins": "Add 10 Coins (Test)",
    "testButtonWarning": "Note: The \"Add Coins\" button is for testing/development only and should be removed or secured for production releases.",
    "notApplicable": "N/A",
    "errorLoadCoins": "Could not load coin balance",
    "errorAddCoins": "Failed to Add Coins",
    "coinsAdded": "Coins Added!"
  },
  "themeSwitch": {
    "darkMode": "Dark Mode"
  },
  "dailyGoalsInput": {
    "caloriesGoal": "Calories Goal",
    "proteinGoal": "Protein Goal",
    "carbsGoal": "Carbs Goal",
    "fatGoal": "Fat Goal"
  },
  "dataManagement": {
    "exportData": "Export Data",
    "importData": "Import Data",
    "clearAllData": "Clear All Data",
    "exportError": "Sharing Error",
    "exportErrorNoSharing": "Sharing is not available on your platform.",
    "exportFailed": "Export Failed",
    "exportFailedMessage": "An error occurred while exporting data.",
    "importCancelled": "Import cancelled by user.",
    "importInvalidFileType": "Invalid File Type",
    "importInvalidFileTypeMessage": "Please select a valid '.json' file.",
    "importFileTooLarge": "File Too Large",
    "importFileTooLargeMessage": "The selected file is too large (max 10MB).",
    "importFailed": "Import Failed",
    "importFailedInvalidStructure": "The imported file has an invalid structure or is missing required data (dailyEntries, foods, settings).",
    "importFailedParseError": "The imported file is not valid JSON or has corrupted content.",
    "importFailedAccessError": "Could not access the selected file.",
    "importFailedPermissionError": "Storage permissions are required to import files.",
    "importFailedUnknownError": "An unknown error occurred during import.",
    "importSuccessful": "Import Successful",
    "importSuccessfulMessage": "Data imported and saved successfully.",
    "clearDataSuccess": "Data Cleared",
    "clearDataSuccessMessage": "All application data has been successfully cleared.",
    "clearDataFailed": "Clear Data Failed",
    "clearDataFailedMessage": "Failed to clear data.",
    "confirmClearTitle": "Confirm Clear All Data",
    "confirmClearMessage": "This action is irreversible and will delete all entries, foods, and settings.\n\nEnter \"CLEAR DATA\" to proceed.",
    "confirmClearInputPlaceholder": "Enter \"CLEAR DATA\"",
    "clearConfirmationFailed": "Confirmation Failed",
    "clearConfirmationFailedMessage": "Incorrect confirmation text entered. Data was not cleared.",
    "dataReloaded": "Data reloaded."
  },
  "confirmationModal": {
    "confirm": "Confirm",
    "cancel": "Cancel",
    "defaultTitle": "Confirm Action",
    "defaultMessage": "Are you sure you want to perform this action?",
    "enterTextPlaceholder": "Enter confirmation text",
    "restartRequiredTitle": "Restart Required"
  },
  "dailyEntryScreen": {
    "tabTitle": "Daily Entry",
    "todaysEntries": "Today's Entries",
    "saving": "Saving...",
    "loadingEntries": "Loading Entries...",
    "noEntries": "No entries recorded for this day.",
    "noEntriesHint": "Tap '+' to add your first meal.",
    "entryAdded": "Entry added",
    "entryUpdated": "Entry updated",
    "itemRemoved": "%{itemName} removed",
    "undo": "Tap here to undo",
    "entryRestored": "Entry restored!",
    "itemsAdded": "%{count} item(s) added",
    "toDateFormat": "to %{date}",
    "errorLoad": "Load Error",
    "errorLoadMessage": "Failed to load necessary data.",
    "errorSave": "Save Error",
    "errorSaveMessage": "Could not save changes. Please try again.",
    "errorInvalidDate": "Invalid Date",
    "errorInvalidDateMessage": "Selected date is not valid.",
    "errorEditEntry": "Edit Error",
    "errorEditEntryMessage": "Error preparing entry for edit.",
    "errorAddMultiple": "Add Multiple Error",
    "errorAddMultipleMessage": "Failed to add multiple items.",
    "invalidEntryData": "Invalid Entry Data",
    "edit": "Edit",
    "delete": "Delete"
  },
  "foodListScreen": {
    "tabTitle": "Foods",
    "searchPlaceholder": "Search Your Food Library...",
    "loadingFoods": "Loading Foods...",
    "emptyLibrary": "Your food library is empty.",
    "emptyLibraryHint": "Tap '+' to add your first food item!",
    "noResults": "No foods found matching \"%{searchTerm}\"",
    "errorLoad": "Error",
    "errorLoadMessage": "Failed to load food list.",
    "foodAdded": "%{foodName} added",
    "foodUpdated": "%{foodName} updated",
    "foodDeleted": "%{foodName} deleted",
    "foodRestored": "%{foodName} restored",
    "errorCreate": "Error",
    "errorCreateMessage": "Failed to create food.",
    "errorUpdate": "Error",
    "errorUpdateMessage": "Failed to update food.",
    "errorDelete": "Delete Error",
    "errorDeleteMessage": "Failed to delete food from storage. Restored item.",
    "fixErrors": "Please fix errors",
    "edit": "Edit",
    "delete": "Delete",
    "shareFoodTitle": "Share %{foodName}",
    "shareErrorTitle": "Share Error",
    "shareErrorMessage": "Could not share food item.",
    "deepLinkErrorTitle": "Error Opening Link",
    "deepLinkInvalidData": "The food data from the link is invalid.",
    "deepLinkParseError": "Could not read food data from the link.",
    "sortBy": "Sort by",
    "sortByName": "Name",
    "sortByNewest": "Newest",
    "sortByOldest": "Oldest"
  },
  "addEntryModal": {
    "titleAdd": "Add Entry",
    "titleEdit": "Edit Entry",
    "titleQuickAddSelect": "Select Items to Add",
    "titleQuickAddEdit": "Edit Item",
    "titleQuickAddAnalyzing": "Analyzing...",
    "titleQuickAddFromText": "Quick Add from Text",
    "searchPlaceholder": "Search Foods...",
    "recent": "Recent",
    "noResults": "No foods found matching \"%{searchTerm}\".",
    "emptyLibraryMessage": "Your food library is empty. Tap below to add your first food item!",
    "noQuickAddResults": "No food items found.",
    "amount": "Amount",
    "grams": "Grams",
    "autoAi": "Auto (AI)",
    "quickAddServing": "Quick Add:",
    "lastUsedServing": "Last: %{grams}g",
    "gramsPlaceholder": "Enter grams (e.g., 150)",
    "gramsPlaceholderEdit": "Update grams",
    "gramsError": "Enter a valid number",
    "autoPlaceholder": "Describe quantity (e.g., 1 cup cooked)",
    "buttonAdd": "Add",
    "buttonUpdate": "Update",
    "buttonBack": "Back",
    "buttonAddSelected": "Add %{count}",
    "buttonLoading": "Loading...",
    "quickAddHeader": "Select Items from Image",
    "quickAddHeaderEdit": "Editing Item Details",
    "alertInputMissing": "Input Missing",
    "alertInputMissingMessage": "Please select a food and enter a quantity description.",
    "alertGramsEstimated": "Grams Estimated",
    "alertGramsEstimatedMessage": "Estimated %{grams}g for %{foodName}",
    "alertFoodNotSelected": "Food Not Selected",
    "alertFoodNotSelectedMessage": "Please select a food item.",
    "alertInvalidAmount": "Invalid Amount",
    "alertInvalidAmountMessage": "Please enter a valid positive number for grams.",
    "alertQuickAddPermission": "Permission Required",
    "alertQuickAddCameraPermission": "Camera access needed.",
    "alertQuickAddGalleryPermission": "Gallery access needed.",
    "alertQuickAddUserCancelled": "User cancelled",
    "alertQuickAddCouldNotSelect": "Could not select image.",
    "alertQuickAddError": "Error",
    "alertQuickAddErrorMessage": "An unexpected error occurred.",
    "alertQuickAddFinishEditing": "Finish Editing",
    "alertQuickAddFinishEditingSaveOrCancel": "Please save or cancel the current edit first.",
    "alertQuickAddFromImageTitle": "Quick Add from Image",
    "alertQuickAddFromImageMessage": "Identify multiple foods from an image.",
    "alertQuickAddInvalidName": "Invalid Name",
    "alertQuickAddInvalidNameMessage": "Food name cannot be empty.",
    "alertQuickAddInvalidGrams": "Invalid Grams",
    "alertQuickAddInvalidGramsMessage": "Please enter a valid positive number.",
    "alertQuickAddNoItemsSelected": "No Items Selected",
    "alertQuickAddNoItemsSelectedMessage": "Select items to add.",
    "alertQuickAddNothingToAdd": "Nothing to Add",
    "alertQuickAddNothingToAddMessage": "No valid items were selected or prepared.",
    "alertQuickAddErrorPreparing": "Error",
    "alertQuickAddErrorPreparingMessage": "Could not prepare items to add.",
    "camera": "Camera",
    "gallery": "Gallery",
    "cancel": "Cancel",
    "addNewFoodButton": "Add New Food",
    "alertOverwriteFoodTitle": "Food Exists",
    "alertOverwriteFoodMessage": "A food named \"%{foodName}\" already exists. Overwrite with new macros?",
    "overwrite": "Overwrite",
    "toastFoodSavedToLibrary": "\"%{foodName}\" saved to library.",
    "toastFoodUpdatedInLibrary": "\"%{foodName}\" updated in library.",
    "toastErrorSavingToLibrary": "Error saving food to library.",
    "textQuickAdd": {
      "placeholder": "Describe your meal...\ne.g., '150g chicken breast, a side salad with tomatoes, and one apple'",
      "analyzeButton": "Analyze Text",
      "alertInputEmpty": "Input Empty",
      "alertInputEmptyMessage": "Please type or say what you ate to analyze."
    }
  },
  "addFoodModal": {
    "titleAdd": "Add New Food",
    "titleEdit": "Edit Food",
    "buttonAdd": "Add",
    "buttonUpdate": "Update",
    "manualInput": "Manual Input",
    "aiAssist": "AI Assist",
    "ingredientsLabel": "Food Description / Ingredients",
    "ingredientsPlaceholder": "e.g.,\n100g Chicken Breast\n50g Rice\n1 tbsp Olive Oil",
    "analyzeTextButton": "Analyze Text",
    "analyzeImageButton": "Analyze from Image",
    "orDivider": "OR",
    "macrosEstimatedText": "Macros estimated from text.",
    "foodIdentified": "Food Identified!",
    "foodIdentifiedMessage": "Identified as %{foodName}. Macros estimated.",
    "alertInputNeeded": "Input Needed",
    "alertInputNeededMessage": "Please enter a food name or ingredients to analyze.",
    "errorGetImage": "Get Image",
    "errorGetImageMessage": "Choose a source for the food image:",
    "errorCamera": "Camera Error",
    "errorGallery": "Gallery Error",
    "errorPermission": "Permission Required",
    "errorCameraPermission": "Camera access needed."
  },
  "foodFormFields": {
    "foodName": "Food Name",
    "calories": "Calories (per 100g)",
    "protein": "Protein (per 100g)",
    "carbs": "Carbs (per 100g)",
    "fat": "Fat (per 100g)",
    "errorNameRequired": "Name is required",
    "errorNonNegative": "Must be a non-negative number"
  },
  "quickAddList": {
    "foodNamePlaceholder": "Food Name",
    "gramsPlaceholder": "Grams",
    "errorInvalidGrams": "Invalid",
    "analyzing": "Analyzing...",
    "emptyMessage": "No identifiable foods found in the image.",
    "emptyHint": "Try a different image or add manually."
  },
  "dailyProgress": {
    "calories": "Calories",
    "protein": "Protein",
    "carbs": "Carbs",
    "fat": "Fat"
  },
  "dateNavigator": {
    "invalidDate": "Invalid Date"
  },
  "utils": {
    "macros": {
      "errorTitle": "AI Analysis Failed",
      "multiItemErrorTitle": "Quick Add Failed",
      "errorMessage": "Could not get a response from the AI. Please try again.",
      "invalidResponse": "The AI gave a response in an unexpected format. Please try again or rephrase your request."
    },
    "units": {
      "errorTitle": "AI Estimation Failed"
    },
    "image": {
      "alertCompressionError": "Compression Error",
      "alertCompressionErrorMessage": "Could not process the image for compression.",
      "errorFailedToRead": "Failed to read image file: %{error}"
    }
  },
  "backendService": {
    "errorInvalidClientId": "Invalid client ID. Please restart the app.",
    "errorRequestFailedParse": "The server sent an unreadable response (Status %{status}).",
    "errorRequestFailedDetailFormat": "The server sent a response with an unexpected format (Status %{status}).",
    "errorRequestFailedWithServerMsg": "The server returned an error (Status %{status}).",
    "errorAuthFailed": "Authentication with the server failed. Please restart the app.",
    "errorPermissionDenied": "Permission denied by server.",
    "errorNotFound": "The requested resource was not found on the server.",
    "errorTooManyRequests": "You're doing that too fast! Please wait a moment and try again.",
    "errorInsufficientCoins": "You don't have enough AI coins for this action. More will be available soon!",
    "errorNetwork": "Could not connect to the server.",
    "errorNetworkTimeout": "The server is taking too long to respond. Please try again in a few moments.",
    "errorNetworkConnection": " Please check your internet connection.",
    "errorNetworkDetails": " Details: %{error}",
    "errorNetworkUnknown": " An unknown network error occurred.",
    "errorEstimateGramsUnexpectedResponse": "Failed to get grams estimation due to an unexpected server response.",
    "errorAddCoinsPositive": "Amount to add must be positive."
  },
  "statisticsChart": {
    "intake": "Intake",
    "goal": "Goal",
    "noData": "No data available to display chart for %{chartTitle}.",
    "movingAverage": "7-Day Avg"
  },
  "questionnaireScreen": {
    "title": "Estimate Your Goals",
    "ageLabel": "Age (years)",
    "agePlaceholder": "e.g., 30",
    "sexLabel": "Sex",
    "sex": {
      "select": "Select Sex...",
      "male": "Male",
      "female": "Female"
    },
    "heightLabel": "Height",
    "heightPlaceholder": "e.g., 175",
    "weightLabel": "Weight",
    "weightPlaceholder": "e.g., 70",
    "activityLevelLabel": "Activity Level",
    "activityLevel": {
      "select": "Select Activity Level...",
      "sedentary": "Sedentary (little or no exercise)",
      "light": "Light (exercise 1-3 days/week)",
      "moderate": "Moderate (exercise 3-5 days/week)",
      "active": "Active (exercise 6-7 days/week)",
      "veryActive": "Very Active (hard exercise or physical job)"
    },
    "primaryGoalLabel": "Primary Goal",
    "primaryGoal": {
      "select": "Select Primary Goal...",
      "loseWeight": "Lose Weight",
      "maintainWeight": "Maintain Weight",
      "gainMuscle": "Gain Muscle"
    },
    "goalIntensityLabel": "Goal Intensity",
    "goalIntensity": {
      "select": "Select Intensity...",
      "mild": "Mild",
      "moderate": "Moderate",
      "aggressive": "Aggressive"
    },
    "calculateButton": "Calculate & Save Goals",
    "validation": {
      "invalidAge": "Enter a valid age (1-120).",
      "selectSex": "Please select your sex.",
      "invalidHeight": "Enter a valid height (50-250 cm).",
      "invalidWeight": "Enter a valid weight (20-300 kg).",
      "selectActivityLevel": "Please select your activity level.",
      "selectPrimaryGoal": "Please select your primary goal.",
      "selectGoalIntensity": "Please select your goal intensity.",
      "fixErrors": "Please fix the errors above."
    },
    "error": {
      "calculationFailedTitle": "Calculation Error",
      "calculationFailedMessage": "Could not calculate goals. Please check your inputs.",
      "genericSaveTitle": "Save Error",
      "genericSaveMessage": "Could not save the estimated goals. Please try again."
    },
    "toast": {
      "goalsCalculated": "Goals calculated and saved!",
      "minCaloriesAdjustedTitle": "Calories Adjusted",
      "minCaloriesAdjustedMessage": "Your calorie goal was adjusted to a minimum of %{calories} kcal."
    }
  },
  "foodIconTags": {
    "apple": ["apple", "red apple", "green apple", "gala", "fuji", "granny smith", "apples"],
    "banana": ["banana", "plantain", "bananas"],
    "grapes": ["grape", "grapes"],
    "strawberry": ["strawberry", "strawberries"],
    "blueberry": ["blueberry", "blueberries"],
    "orange": ["orange", "mandarin", "tangerine", "clementine", "oranges"],
    "lemonLime": ["lemon", "lime", "lemons"],
    "watermelon": ["watermelon"],
    "pineapple": ["pineapple"],
    "mango": ["mango", "mangoes"],
    "kiwi": ["kiwi", "kiwifruit"],
    "peachNectarine": ["peach", "nectarine", "peaches"],
    "cherry": ["cherry", "cherries"],
    "pear": ["pear", "pears"],
    "avocado": ["avocado", "avocados"],
    "coconut": ["coconut", "coconuts"],
    "tomato": ["tomato", "tomatoes", "roma tomato", "cherry tomato", "heirloom tomato"],
    "carrot": ["carrot", "carrots"],
    "broccoli": ["broccoli", "broccolini"],
    "leafyGreen": ["lettuce", "spinach", "kale", "greens", "leafy green", "romaine", "arugula", "swiss chard", "collard greens"],
    "cucumber": ["cucumber", "cucumbers", "pickle", "pickles", "gherkin"],
    "pepperGeneral": ["pepper", "chili", "chilli", "jalapeno", "capsicum", "pimiento"],
    "bellPepper": ["bell pepper", "green pepper", "red pepper", "yellow pepper", "orange pepper"],
    "corn": ["corn", "maize", "sweet corn", "corn on the cob"],
    "potato": ["potato", "potatoes", "sweet potato", "yam", "russet", "red potato", "yukon gold"],
    "onion": ["onion", "shallot", "spring onion", "scallion", "red onion", "yellow onion", "white onion", "onions"],
    "garlic": ["garlic", "garlic clove"],
    "eggplant": ["eggplant", "aubergine"],
    "mushroom": ["mushroom", "mushrooms", "portobello", "shiitake", "champignon", "cremini", "oyster mushroom"],
    "poultry": ["chicken", "chicken breast", "chicken thigh", "chicken leg", "drumstick", "turkey", "duck", "poultry", "roast chicken", "grilled chicken"],
    "redMeat": ["beef", "steak", "mince", "ground beef", "pork", "lamb", "veal", "red meat", "patty", "roast beef", "pork chop", "loin"],
    "bacon": ["bacon", "pancetta"],
    "processedMeat": ["ham", "sausage", "hot dog", "frankfurter", "chorizo", "salami", "pepperoni", "bologna", "bratwurst", "processed meat"],
    "fish": ["fish", "salmon", "tuna", "cod", "tilapia", "mackerel", "sardine", "halibut", "white fish", "trout", "sea bass", "grilled fish", "baked fish"],
    "shrimpPrawn": ["shrimp", "prawn", "prawns", "shellfish"],
    "lobster": ["lobster", "crayfish", "shellfish"],
    "crab": ["crab", "shellfish"],
    "sushi": ["sushi", "sashimi", "raw fish", "nigiri", "maki", "uramaki"],
    "egg": ["egg", "eggs", "scrambled eggs", "fried egg", "omelette", "boiled egg", "poached egg"],
    "milk": ["milk", "dairy milk", "cow milk", "soy milk", "almond milk", "oat milk", "plant milk", "rice milk", "coconut milk", "goat milk"],
    "cheese": ["cheese", "cheddar", "mozzarella", "parmesan", "gouda", "brie", "feta", "cottage cheese", "swiss cheese", "provolone", "blue cheese", "goat cheese", "cream cheese"],
    "butter": ["butter", "margarine"],
    "iceCream": ["ice cream", "gelato", "sorbet", "frozen yogurt", "sherbet"],
    "yogurt": ["yogurt", "yoghurt", "greek yogurt", "plain yogurt", "flavored yogurt", "dairy"],
    "bread": ["bread", "toast", "bagel", "croissant", "bun", "roll", "sourdough", "whole wheat bread", "white bread", "rye bread", "multigrain bread", "baguette"],
    "rice": ["rice", "white rice", "brown rice", "basmati rice", "jasmine rice", "wild rice", "grain"],
    "pasta": ["pasta", "spaghetti", "macaroni", "noodles", "fettuccine", "lasagna", "ramen", "penne", "linguine"],
    "cerealOats": ["cereal", "oats", "oatmeal", "granola", "muesli", "porridge", "corn flakes", "bran flakes"],
    "otherGrains": ["quinoa", "couscous", "barley", "bulgur", "farro", "spelt", "millet", "ancient grain"],
    "flatbread": ["tortilla", "wrap", "pita", "naan", "flatbread", "chapati", "roti"],
    "beansLegumes": ["beans", "black beans", "kidney beans", "chickpeas", "garbanzo beans", "lentils", "peas", "legume", "edamame", "soybeans", "lima beans", "pinto beans"],
    "peanut": ["peanut", "peanuts", "peanut butter"],
    "nuts": ["nuts", "almond", "walnut", "cashew", "pecan", "pistachio", "hazelnut", "brazil nut", "macadamia nut", "mixed nuts"],
    "seeds": ["seeds", "sunflower seeds", "pumpkin seeds", "chia seeds", "flax seeds", "sesame seeds", "hemp seeds"],
    "donut": ["donut", "doughnut", "pastry", "fritter"],
    "cookie": ["cookie", "biscuit", "shortbread", "macaroon"],
    "chocolate": ["chocolate", "chocolate bar", "dark chocolate", "milk chocolate", "white chocolate", "cocoa", "cacao"],
    "cake": ["cake", "cupcake", "muffin", "brownie", "cheesecake", "pound cake"],
    "candy": ["candy", "sweets", "gummy", "lollipop", "jelly beans", "taffy", "fudge", "marshmallow"],
    "popcorn": ["popcorn"],
    "pretzel": ["pretzel", "pretzels"],
    "friesChips": ["fries", "french fries", "chips", "potato chips", "crisps", "potato wedges", "sweet potato fries"],
    "coffee": ["coffee", "espresso", "latte", "cappuccino", "americano", "mocha", "cold brew"],
    "tea": ["tea", "green tea", "black tea", "herbal tea", "chai", "oolong tea", "white tea"],
    "softDrinkJuice": ["soda", "coke", "pepsi", "soft drink", "juice", "orange juice", "apple juice", "smoothie", "protein shake", "lemonade", "iced tea (sweetened)"],
    "water": ["water", "bottled water", "mineral water", "sparkling water", "still water"],
    "wine": ["wine", "red wine", "white wine", "rosé wine", "sparkling wine", "champagne", "alcohol"],
    "beer": ["beer", "lager", "ale", "stout", "ipa", "pilsner", "craft beer", "alcohol"],
    "cocktail": ["cocktail", "spirit", "liquor", "vodka", "gin", "rum", "whiskey", "tequila", "margarita", "martini", "alcohol"],
    "pizza": ["pizza", "margherita pizza", "pepperoni pizza", "hawaiian pizza", "vegetarian pizza", "deep dish pizza"],
    "burger": ["burger", "hamburger", "cheeseburger", "veggie burger", "chicken burger", "slider"],
    "tacoBurrito": ["taco", "burrito", "quesadilla", "fajita", "enchilada", "mexican food"],
    "sandwich": ["sandwich", "sub", "blt", "club sandwich", "panini", "grilled cheese", "wrap sandwich"],
    "soupStew": ["soup", "stew", "broth", "chowder", "pho", "consomme", "minestrone", "chili con carne"],
    "salad": ["salad", "caesar salad", "greek salad", "garden salad", "cobb salad", "fruit salad", "pasta salad", "potato salad"],
    "noodleDish": ["ramen noodles", "pho noodles", "noodle soup", "pad thai", "chow mein", "lo mein", "soba", "udon"],
    "genericFruit": ["fruit", "tropical fruit", "stone fruit", "citrus fruit", "berries"],
    "genericVegetable": ["vegetable", "veg", "root vegetable", "cruciferous", "greens"],
    "genericMeal": ["food", "meal", "dish", "plate", "entrée", "main course", "snack", "lunch", "dinner", "breakfast", "generic food", "cooked food", "leftovers"],
    "unknownFood": ["unknown", "unidentified"]
  }
}
---------- END en.json ----------


---------- he.json ----------
{
  "app": {
    "initializing": "מאתחל...",
    "name": "MacrosVisionAI",
    "alertButtons": {
      "later": "אחר כך",
      "restartNow": "הפעל מחדש כעת"
    }
  },
  "errors": {
    "estimationFailedTitle": "ההערכה נכשלה",
    "analysisFailedTitle": "הניתוח נכשל",
    "aiGramsProcessingError": "הבינה המלאכותית לא הצליחה לעבד את הכמות. אנא נסה לנסח זאת אחרת (למשל, 'כוס אחת' במקום 'כוס').",
    "unexpectedError": "אירעה שגיאה בלתי צפויה. אנא נסה שוב."
  },
  "forgotPasswordScreen": {
    "title": "איפוס סיסמה",
    "instructions": "הזן את כתובת האימייל של חשבונך ונשלח לך קישור לאיפוס הסיסמה.",
    "emailPlaceholder": "כתובת אימייל",
    "buttonText": "שלח קישור לאיפוס",
    "backToLogin": "חזרה להתחברות",
    "alertSuccessTitle": "בדוק את האימייל שלך",
    "forgotPasswordLink": "שכחת סיסמה?"
  },
  "settingsScreen": {
    "title": "הגדרות",
    "account": {
      "title": "חשבון",
      "actions": "פעולות חשבון",
      "logout": "התנתק",
      "logoutConfirmTitle": "אישור התנתקות",
      "logoutConfirmMessage": "האם אתה בטוח שברצונך להתנתק?"
    },
    "general": {
      "title": "כללי"
    },
    "dailyGoals": {
      "title": "יעדים יומיים"
    },
    "goals": {
      "estimateButton": "הערכת יעדים"
    },
    "statistics": {
      "title": "סטטיסטיקה"
    },
    "dataManagement": {
      "title": "ניהול נתונים"
    },
    "language": {
      "title": "שפה",
      "system": "ברירת מחדל של המערכת",
      "english": "אנגלית",
      "russian": "רוסית",
      "hebrew": "עברית",
      "restartMessage": "השפה שונתה. הפעל מחדש את האפליקציה להשפעה מלאה."
    }
  },
  "accountSettings": {
    "coinBalance": "מאזן מטבעות",
    "addTestCoins": "הוסף 10 מטבעות (בדיקה)",
    "testButtonWarning": "הערה: כפתור \"הוסף מטבעות\" מיועד לבדיקה/פיתוח בלבד ויש להסירו או לאבטחו בגרסאות ייצור.",
    "notApplicable": "לא זמין",
    "errorLoadCoins": "לא ניתן היה לטעון את מאזן המטבעות",
    "errorAddCoins": "נכשל בהוספת מטבעות",
    "coinsAdded": "מטבעות נוספו!"
  },
  "themeSwitch": {
    "darkMode": "מצב כהה"
  },
  "dailyGoalsInput": {
    "caloriesGoal": "יעד קלוריות",
    "proteinGoal": "יעד חלבון",
    "carbsGoal": "יעד פחמימות",
    "fatGoal": "יעד שומן"
  },
  "dataManagement": {
    "exportData": "ייצוא נתונים",
    "importData": "ייבוא נתונים",
    "clearAllData": "נקה את כל הנתונים",
    "exportError": "שגיאת שיתוף",
    "exportErrorNoSharing": "שיתוף אינו זמין בפלטפורמה שלך.",
    "exportFailed": "הייצוא נכשל",
    "exportFailedMessage": "אירעה שגיאה בעת ייצוא נתונים.",
    "importCancelled": "הייבוא בוטל על ידי המשתמש.",
    "importInvalidFileType": "סוג קובץ לא חוקי",
    "importInvalidFileTypeMessage": "אנא בחר קובץ '.json' חוקי.",
    "importFileTooLarge": "הקובץ גדול מדי",
    "importFileTooLargeMessage": "הקובץ שנבחר גדול מדי (מקסימום 10MB).",
    "importFailed": "הייבוא נכשל",
    "importFailedInvalidStructure": "לקובץ המיובא יש מבנה לא חוקי או שחסרים בו נתונים נדרשים (dailyEntries, foods, settings).",
    "importFailedParseError": "הקובץ המיובא אינו JSON חוקי או שתוכנו פגום.",
    "importFailedAccessError": "לא ניתן היה לגשת לקובץ שנבחר.",
    "importFailedPermissionError": "נדרשות הרשאות אחסון לייבוא קבצים.",
    "importFailedUnknownError": "אירעה שגיאה לא ידועה במהלך הייבוא.",
    "importSuccessful": "הייבוא הושלם בהצלחה",
    "importSuccessfulMessage": "הנתונים יובאו ונשמרו בהצלחה.",
    "clearDataSuccess": "הנתונים נוקו",
    "clearDataSuccessMessage": "כל נתוני היישום נוקו בהצלחה.",
    "clearDataFailed": "ניקוי הנתונים נכשל",
    "clearDataFailedMessage": "ניקוי הנתונים נכשל.",
    "confirmClearTitle": "אשר ניקוי כל הנתונים",
    "confirmClearMessage": "פעולה זו אינה הפיכה ותמחק את כל הרשומות, המאכלים וההגדרות.\n\nהזן \"CLEAR DATA\" כדי להמשיך.",
    "confirmClearInputPlaceholder": "הזן \"CLEAR DATA\"",
    "clearConfirmationFailed": "האישור נכשל",
    "clearConfirmationFailedMessage": "הוזן טקסט אישור שגוי. הנתונים לא נוקו.",
    "dataReloaded": "הנתונים נטענו מחדש."
  },
  "confirmationModal": {
    "confirm": "אשר",
    "cancel": "ביטול",
    "defaultTitle": "אשר פעולה",
    "defaultMessage": "האם אתה בטוח שברצונך לבצע פעולה זו?",
    "enterTextPlaceholder": "הזן טקסט אישור",
    "restartRequiredTitle": "נדרשת הפעלה מחדש"
  },
  "dailyEntryScreen": {
    "tabTitle": "יומן יומי",
    "todaysEntries": "רשומות להיום",
    "saving": "שומר...",
    "loadingEntries": "טוען רשומות...",
    "noEntries": "אין רשומות מתועדות ליום זה.",
    "noEntriesHint": "הקש '+' כדי להוסיף את הארוחה הראשונה שלך.",
    "entryAdded": "רשומה נוספה",
    "entryUpdated": "רשומה עודכנה",
    "itemRemoved": "%{itemName} הוסר",
    "undo": "הקש כאן לביטול",
    "entryRestored": "הרשומה שוחזרה!",
    "itemsAdded": "%{count} פריט(ים) נוספו",
    "toDateFormat": "לתאריך %{date}",
    "errorLoad": "שגיאת טעינה",
    "errorLoadMessage": "טעינת הנתונים הדרושים נכשלה.",
    "errorSave": "שגיאת שמירה",
    "errorSaveMessage": "לא ניתן לשמור שינויים. אנא נסה שוב.",
    "errorInvalidDate": "תאריך לא חוקי",
    "errorInvalidDateMessage": "התאריך שנבחר אינו חוקי.",
    "errorEditEntry": "שגיאת עריכה",
    "errorEditEntryMessage": "שגיאה בהכנת רשומה לעריכה.",
    "errorAddMultiple": "שגיאה בהוספה מרובה",
    "errorAddMultipleMessage": "נכשל בהוספת מספר פריטים.",
    "invalidEntryData": "נתוני רשומה לא חוקיים",
    "edit": "ערוך",
    "delete": "מחק"
  },
  "foodListScreen": {
    "tabTitle": "מאכלים",
    "searchPlaceholder": "חפש בספריית המאכלים שלך...",
    "loadingFoods": "טוען מאכלים...",
    "emptyLibrary": "ספריית המאכלים שלך ריקה.",
    "emptyLibraryHint": "הקש '+' כדי להוסיף את פריט המזון הראשון שלך!",
    "noResults": "לא נמצאו מאכלים התואמים ל-\"%{searchTerm}\"",
    "errorLoad": "שגיאה",
    "errorLoadMessage": "טעינת רשימת המאכלים נכשלה.",
    "foodAdded": "%{foodName} נוסף",
    "foodUpdated": "%{foodName} עודכן",
    "foodDeleted": "%{foodName} נמחק",
    "foodRestored": "%{foodName} שוחזר",
    "errorCreate": "שגיאה",
    "errorCreateMessage": "יצירת המאכל נכשלה.",
    "errorUpdate": "שגיאה",
    "errorUpdateMessage": "עדכון המאכל נכשל.",
    "errorDelete": "שגיאת מחיקה",
    "errorDeleteMessage": "מחיקת המאכל מהאחסון נכשלה. הפריט שוחזר.",
    "fixErrors": "אנא תקן שגיאות",
    "edit": "ערוך",
    "delete": "מחק",
    "shareFoodTitle": "שתף את %{foodName}",
    "shareErrorTitle": "שגיאת שיתוף",
    "shareErrorMessage": "לא ניתן היה לשתף את פריט המזון.",
    "deepLinkErrorTitle": "שגיאה בפתיחת הקישור",
    "deepLinkInvalidData": "נתוני המזון מהקישור אינם חוקיים.",
    "deepLinkParseError": "לא ניתן היה לקרוא את נתוני המזון מהקישור.",
    "sortBy": "מיין לפי",
    "sortByName": "שם",
    "sortByNewest": "החדש ביותר",
    "sortByOldest": "הישן ביותר"
  },
  "addEntryModal": {
    "titleAdd": "הוסף רשומה",
    "titleEdit": "ערוך רשומה",
    "titleQuickAddSelect": "בחר פריטים להוספה",
    "titleQuickAddEdit": "ערוך פריט",
    "titleQuickAddAnalyzing": "מנתח...",
    "titleQuickAddFromText": "הוספה מהירה מטקסט",
    "searchPlaceholder": "חפש מאכלים...",
    "recent": "אחרונים",
    "noResults": "לא נמצאו מאכלים התואמים ל-\"%{searchTerm}\".",
    "emptyLibraryMessage": "ספריית המאכלים שלך ריקה. לחץ למטה להוספת המאכל הראשון שלך!",
    "noQuickAddResults": "לא נמצאו פריטי מזון.",
    "amount": "כמות",
    "grams": "גרם",
    "autoAi": "אוטומטי (AI)",
    "quickAddServing": "הוספה מהירה:",
    "lastUsedServing": "אחרון: %{grams}ג",
    "gramsPlaceholder": "הזן גרמים (למשל, 150)",
    "gramsPlaceholderEdit": "עדכן גרמים",
    "gramsError": "הזן מספר חוקי",
    "autoPlaceholder": "תאר כמות (למשל, 1 כוס מבושל)",
    "buttonAdd": "הוסף",
    "buttonUpdate": "עדכן",
    "buttonBack": "חזור",
    "buttonAddSelected": "הוסף %{count}",
    "buttonLoading": "טוען...",
    "quickAddHeader": "בחר פריטים מהתמונה",
    "quickAddHeaderEdit": "עריכת פרטי פריט",
    "alertInputMissing": "קלט חסר",
    "alertInputMissingMessage": "אנא בחר מאכל והזן תיאור כמות.",
    "alertGramsEstimated": "גרמים הוערכו",
    "alertGramsEstimatedMessage": "הוערכו %{grams} גרם עבור %{foodName}",
    "alertFoodNotSelected": "מאכל לא נבחר",
    "alertFoodNotSelectedMessage": "אנא בחר פריט מזון.",
    "alertInvalidAmount": "כמות לא חוקית",
    "alertInvalidAmountMessage": "אנא הזן מספר חיובי חוקי עבור גרמים.",
    "alertQuickAddPermission": "נדרשת הרשאה",
    "alertQuickAddCameraPermission": "נדרשת גישה למצלמה.",
    "alertQuickAddGalleryPermission": "נדרשת גישה לגלריה.",
    "alertQuickAddUserCancelled": "בוטל על ידי המשתמש",
    "alertQuickAddCouldNotSelect": "לא ניתן לבחור תמונה.",
    "alertQuickAddError": "שגיאה",
    "alertQuickAddErrorMessage": "אירעה שגיאה בלתי צפויה.",
    "alertQuickAddFinishEditing": "סיים עריכה",
    "alertQuickAddFinishEditingSaveOrCancel": "אנא שמור או בטל את העריכה הנוכחית תחילה.",
    "alertQuickAddFromImageTitle": "הוספה מהירה מתמונה",
    "alertQuickAddFromImageMessage": "זהה מספר מאכלים מתמונה.",
    "alertQuickAddInvalidName": "שם לא חוקי",
    "alertQuickAddInvalidNameMessage": "שם המאכל אינו יכול להיות ריק.",
    "alertQuickAddInvalidGrams": "גרמים לא חוקיים",
    "alertQuickAddInvalidGramsMessage": "אנא הזן מספר חיובי חוקי.",
    "alertQuickAddNoItemsSelected": "לא נבחרו פריטים",
    "alertQuickAddNoItemsSelectedMessage": "בחר פריטים להוספה.",
    "alertQuickAddNothingToAdd": "אין מה להוסיף",
    "alertQuickAddNothingToAddMessage": "לא נבחרו או הוכנו פריטים חוקיים.",
    "alertQuickAddErrorPreparing": "שגיאה",
    "alertQuickAddErrorPreparingMessage": "לא ניתן היה להכין פריטים להוספה.",
    "camera": "מצלמה",
    "gallery": "גלריה",
    "cancel": "ביטול",
    "addNewFoodButton": "הוסף מאכל חדש",
    "alertOverwriteFoodTitle": "מאכל קיים",
    "alertOverwriteFoodMessage": "מאכל בשם \"%{foodName}\" כבר קיים. האם להחליף עם הנתונים החדשים?",
    "overwrite": "החלף",
    "toastFoodSavedToLibrary": "\"%{foodName}\" נשמר לספרייה.",
    "toastFoodUpdatedInLibrary": "\"%{foodName}\" עודכן בספרייה.",
    "toastErrorSavingToLibrary": "שגיאה בשמירת המאכל לספרייה.",
    "textQuickAdd": {
      "placeholder": "תאר את הארוחה שלך...\nלמשל, '150ג חזה עוף, סלט קטן עם עגבניות, ותפוח אחד'",
      "analyzeButton": "נתח טקסט",
      "alertInputEmpty": "קלט ריק",
      "alertInputEmptyMessage": "אנא הקלד או אמור מה אכלת לצורך הניתוח."
    }
  },
  "addFoodModal": {
    "titleAdd": "הוסף מאכל חדש",
    "titleEdit": "ערוך מאכל",
    "buttonAdd": "הוסף",
    "buttonUpdate": "עדכן",
    "manualInput": "הזנה ידנית",
    "aiAssist": "עזרת AI",
    "ingredientsLabel": "תיאור המאכל / רכיבים",
    "ingredientsPlaceholder": "למשל,\n100ג חזה עוף\n50ג אורז\n1 כף שמן זית",
    "analyzeTextButton": "ניתוח טקסט",
    "analyzeImageButton": "ניתוח מתמונה",
    "orDivider": "או",
    "macrosEstimatedText": "מאקרואים הוערכו מטקסט.",
    "foodIdentified": "מאכל זוהה!",
    "foodIdentifiedMessage": "זוהה כ-%{foodName}. מאקרואים הוערכו.",
    "alertInputNeeded": "נדרש קלט",
    "alertInputNeededMessage": "אנא הזן שם מאכל או רכיבים לניתוח.",
    "errorGetImage": "קבל תמונה",
    "errorGetImageMessage": "בחר מקור לתמונת המאכל:",
    "errorCamera": "שגיאת מצלמה",
    "errorGallery": "שגיאת גלריה",
    "errorPermission": "נדרשת הרשאה",
    "errorCameraPermission": "נדרשת גישה למצלמה."
  },
  "foodFormFields": {
    "foodName": "שם המאכל",
    "calories": "קלוריות (ל-100 גרם)",
    "protein": "חלבון (ל-100 גרם)",
    "carbs": "פחמימות (ל-100 גרם)",
    "fat": "שומן (ל-100 גרם)",
    "errorNameRequired": "שם הוא שדה חובה",
    "errorNonNegative": "חייב להיות מספר אי-שלילי"
  },
  "quickAddList": {
    "foodNamePlaceholder": "שם המאכל",
    "gramsPlaceholder": "גרמים",
    "errorInvalidGrams": "לא חוקי",
    "analyzing": "מנתח...",
    "emptyMessage": "לא נמצאו מאכלים הניתנים לזיהוי בתמונה.",
    "emptyHint": "נסה תמונה אחרת או הוסף ידנית."
  },
  "dailyProgress": {
    "calories": "קלוריות",
    "protein": "חלבון",
    "carbs": "פחמימות",
    "fat": "שומן"
  },
  "dateNavigator": {
    "invalidDate": "תאריך לא חוקי"
  },
  "utils": {
    "macros": {
      "errorTitle": "ניתוח AI נכשל",
      "multiItemErrorTitle": "הוספה מהירה נכשלה",
      "errorMessage": "לא ניתן היה לקבל תגובה מה-AI. אנא נסה שוב.",
      "invalidResponse": "ה-AI נתן תגובה בפורמט לא צפוי. אנא נסה שוב או נסח מחדש את בקשתך."
    },
    "units": {
      "errorTitle": "הערכת AI נכשלה"
    },
    "image": {
      "alertCompressionError": "שגיאת דחיסה",
      "alertCompressionErrorMessage": "לא ניתן היה לעבד את התמונה לדחיסה.",
      "errorFailedToRead": "קריאת קובץ התמונה נכשלה: %{error}"
    }
  },
  "backendService": {
    "errorInvalidClientId": "מזהה לקוח לא חוקי. אנא הפעל מחדש את האפליקציה.",
    "errorRequestFailedParse": "השרת שלח תגובה לא קריאה (סטטוס %{status}).",
    "errorRequestFailedDetailFormat": "השרת שלח תגובה בפורמט לא צפוי (סטטוס %{status}).",
    "errorRequestFailedWithServerMsg": "השרת החזיר שגיאה (סטטוס %{status}).",
    "errorAuthFailed": "האימות מול השרת נכשל. אנא הפעל מחדש את האפליקציה.",
    "errorPermissionDenied": "הגישה נדחתה על ידי השרת.",
    "errorNotFound": "המשאב המבוקש לא נמצא בשרת.",
    "errorTooManyRequests": "אתה מבצע זאת מהר מדי! אנא המתן רגע ונסה שוב.",
    "errorInsufficientCoins": "אין לך מספיק מטבעות AI לפעולה זו. עוד יהיו זמינים בקרוב!",
    "errorNetwork": "לא ניתן להתחבר לשרת.",
    "errorNetworkTimeout": "לשרת לוקח יותר מדי זמן להגיב. אנא נסה שוב בעוד מספר רגעים.",
    "errorNetworkConnection": " אנא בדוק את חיבור הרשת שלך.",
    "errorNetworkDetails": " פרטים: %{error}",
    "errorNetworkUnknown": " אירעה שגיאת רשת לא ידועה.",
    "errorEstimateGramsUnexpectedResponse": "קבלת הערכת גרמים נכשלה עקב תגובת שרת לא צפויה.",
    "errorAddCoinsPositive": "הסכום להוספה חייב להיות חיובי."
  },
  "statisticsChart": {
    "intake": "צריכה",
    "goal": "יעד",
    "noData": "אין נתונים זמינים להצגת תרשים עבור %{chartTitle}.",
    "movingAverage": "ממוצע 7 ימים"
  },
  "questionnaireScreen": {
    "title": "הערכת היעדים שלך",
    "ageLabel": "גיל (שנים)",
    "agePlaceholder": "לדוגמה, 30",
    "sexLabel": "מין",
    "sex": {
      "select": "בחר מין...",
      "male": "זכר",
      "female": "נקבה"
    },
    "heightLabel": "גובה",
    "heightPlaceholder": "לדוגמה, 175",
    "weightLabel": "משקל",
    "weightPlaceholder": "לדוגמה, 70",
    "activityLevelLabel": "רמת פעילות",
    "activityLevel": {
      "select": "בחר רמת פעילות...",
      "sedentary": "יושבני (מעט או ללא פעילות גופנית)",
      "light": "קל (פעילות 1-3 ימים בשבוע)",
      "moderate": "בינוני (פעילות 3-5 ימים בשבוע)",
      "active": "פעיל (פעילות 6-7 ימים בשבוע)",
      "veryActive": "פעיל מאוד (פעילות מאומצת או עבודה פיזית)"
    },
    "primaryGoalLabel": "מטרה עיקרית",
    "primaryGoal": {
      "select": "בחר מטרה עיקרית...",
      "loseWeight": "ירידה במשקל",
      "maintainWeight": "שמירה על המשקל",
      "gainMuscle": "עלייה במסת שריר"
    },
    "goalIntensityLabel": "עצימות המטרה",
    "goalIntensity": {
      "select": "בחר עצימות...",
      "mild": "מתונה",
      "moderate": "בינונית",
      "aggressive": "אגרסיבית"
    },
    "calculateButton": "חשב ושמור יעדים",
    "validation": {
      "invalidAge": "הזן גיל תקין (1-120).",
      "selectSex": "אנא בחר את מינך.",
      "invalidHeight": "הזן גובה תקין (50-250 ס\"מ).",
      "invalidWeight": "הזן משקל תקין (20-300 ק\"ג).",
      "selectActivityLevel": "אנא בחר את רמת הפעילות שלך.",
      "selectPrimaryGoal": "אנא בחר את המטרה העיקרית שלך.",
      "selectGoalIntensity": "אנא בחר את עצימות המטרה שלך.",
      "fixErrors": "אנא תקן את השגיאות למעלה."
    },
    "error": {
      "calculationFailedTitle": "שגיאת חישוב",
      "calculationFailedMessage": "לא ניתן היה לחשב את היעדים. אנא בדוק את הקלט שלך.",
      "genericSaveTitle": "שגיאת שמירה",
      "genericSaveMessage": "לא ניתן היה לשמור את היעדים המוערכים. אנא נסה שוב."
    },
    "toast": {
      "goalsCalculated": "היעדים חושבו ונשמרו!",
      "minCaloriesAdjustedTitle": "הקלוריות עודכנו",
      "minCaloriesAdjustedMessage": "יעד הקלוריות שלך עודכן למינימום של %{calories} קק\"ל."
    }
  },
  "foodIconTags": {
    "apple": ["תפוח", "תפוח עץ", "תפוח אדום", "תפוח ירוק", "גאלה", "פוג'י", "גרני סמית", "תפוחים"],
    "banana": ["בננה", "בננות"],
    "grapes": ["ענב", "ענבים"],
    "strawberry": ["תות", "תות שדה", "תותים"],
    "blueberry": ["אוכמנית", "אוכמניות"],
    "orange": ["תפוז", "מנדרינה", "קלמנטינה", "תפוזים"],
    "lemonLime": ["לימון", "ליים", "לימונים"],
    "watermelon": ["אבטיח"],
    "pineapple": ["אננס"],
    "mango": ["מנגו"],
    "kiwi": ["קיווי"],
    "peachNectarine": ["אפרסק", "נקטרינה", "אפרסקים"],
    "cherry": ["דובדבן", "דובדבנים", "גודגדן"],
    "pear": ["אגס", "אגסים"],
    "avocado": ["אבוקדו"],
    "coconut": ["קוקוס"],
    "tomato": ["עגבניה", "עגבניות", "עגבניית שרי", "עגבניית תמר"],
    "carrot": ["גזר", "גזרים"],
    "broccoli": ["ברוקולי"],
    "leafyGreen": ["חסה", "תרד", "קייל", "עלים ירוקים", "רומית", "אורוגולה", "מנגולד", "עלי בייבי"],
    "cucumber": ["מלפפון", "מלפפונים", "חמוץ", "חמוצים", "קפונאטה"],
    "pepperGeneral": ["פלפל", "צ'ילי", "חריף", "חלפיניו", "שיפקה"],
    "bellPepper": ["גמבה", "פלפל ירוק", "פלפל אדום", "פלפל צהוב", "פלפל כתום"],
    "corn": ["תירס", "קלחי תירס"],
    "potato": ["תפוח אדמה", "תפוחי אדמה", "בטטה", "יאם", "תפוד"],
    "onion": ["בצל", "שאלוט", "בצל ירוק", "בצלים", "עירית"],
    "garlic": ["שום", "שן שום"],
    "eggplant": ["חציל", "חצילים"],
    "mushroom": ["פטרייה", "פטריות", "פורטובלו", "שיטאקי", "שמפיניון", "ירדן"],
    "poultry": ["עוף", "חזה עוף", "כרע עוף", "שוק עוף", "פולקע", "הודו", "ברווז", "עוף בגריל", "עוף צלוי", "פרגית"],
    "redMeat": ["בקר", "סטייק", "בשר טחון", "קציצה", "חזיר", "טלה", "עגל", "בשר אדום", "צלעות", "אנטריקוט", "סינטה"],
    "bacon": ["בייקון", "פנצ'טה"],
    "processedMeat": ["נקניק", "נקניקיה", "פסטרמה", "קבנוס", "סלמי", "פפרוני", "בשר מעובד", "האם"],
    "fish": ["דג", "סלמון", "טונה", "בקלה", "אמנון", "מקרל", "סרדין", "הליבוט", "דג לבן", "פורל", "דג בגריל", "דג אפוי", "לברק", "מוסר"],
    "shrimpPrawn": ["שרימפס", "חסילון", "פירות ים", "פרוון"],
    "lobster": ["לובסטר", "סרטן נהרות", "פירות ים"],
    "crab": ["סרטן", "פירות ים"],
    "sushi": ["סושי", "סשימי", "דג נא", "ניגירי", "מאקי", "רול"],
    "egg": ["ביצה", "ביצים", "ביצה מקושקשת", "ביצת עין", "אומלט", "ביצה קשה", "חביתה"],
    "milk": ["חלב", "חלב פרה", "חלב סויה", "חלב שקדים", "חלב שיבולת שועל", "חלב צמחי", "חלב אורז", "חלב קוקוס", "חלב עיזים"],
    "cheese": ["גבינה", "צ'דר", "מוצרלה", "פרמזן", "גאודה", "ברי", "פטה", "קוטג'", "גבינה שוויצרית", "גבינה כחולה", "גבינת עיזים", "גבינת שמנת", "צפתית", "בולגרית"],
    "butter": ["חמאה", "מרגרינה"],
    "iceCream": ["גלידה", "ג'לאטו", "סורבה", "יוגורט קפוא", "ארטיק"],
    "yogurt": ["יוגורט", "יוגורט יווני", "יוגורט טבעי", "מעדן חלב", "לבן", "אשל"],
    "bread": ["לחם", "טוסט", "בייגל", "קרואסון", "לחמניה", "גליל", "לחם מחמצת", "לחם מלא", "לחם לבן", "לחם שיפון", "באגט", "חלה"],
    "rice": ["אורז", "אורז לבן", "אורז חום", "אורז בסמטי", "אורז יסמין", "אורז בר", "דגן", "אורז מלא"],
    "pasta": ["פסטה", "ספגטי", "מקרוני", "אטריות", "פטוצ'יני", "לזניה", "ראמן", "פנה", "רביולי"],
    "cerealOats": ["דגני בוקר", "שיבולת שועל", "דייסה", "גרנולה", "מוזלי", "קורנפלקס", "ברנפלקס"],
    "otherGrains": ["קינואה", "קוסקוס", "שעורה", "בורגול", "פארו", "כוסמין", "דוחן", "גריסים"],
    "flatbread": ["טורטיה", "לאפה", "פיתה", "נאן", "צ'פאטי", "רוטי", "מצה"],
    "beansLegumes": ["שעועית", "שעועית שחורה", "שעועית אדומה", "חומוס", "גרגרי חומוס", "עדשים", "אפונה", "קטניות", "אדממה", "פולי סויה", "פול"],
    "peanut": ["בוטן", "בוטנים", "חמאת בוטנים"],
    "nuts": ["אגוזים", "שקד", "אגוז מלך", "קשיו", "פקאן", "פיסטוק", "אגוז לוז", "אגוז ברזיל", "אגוזי מקדמיה", "ערמונים"],
    "seeds": ["זרעים", "גרעיני חמניה", "גרעיני דלעת", "זרעי צ'יה", "זרעי פשתן", "שומשום", "זרעי המפ", "גרעינים"],
    "donut": ["סופגניה", "דונאט", "מאפה"],
    "cookie": ["עוגיה", "ביסקוויט", "מקרון", "עוגיות"],
    "chocolate": ["שוקולד", "חטיף שוקולד", "שוקולד מריר", "שוקולד חלב", "שוקולד לבן", "קקאו"],
    "cake": ["עוגה", "קאפקייק", "מאפין", "בראוני", "עוגת גבינה", "רולדה"],
    "candy": ["ממתק", "ממתקים", "סוכריה", "סוכריות גומי", "סוכריה על מקל", "מרשמלו", "טופי"],
    "popcorn": ["פופקורן"],
    "pretzel": ["בייגלה", "פרעצל"],
    "friesChips": ["צ'יפס", "טוגנים", "תפוצ'יפס", "חטיף תפוחי אדמה", "פוטטו"],
    "coffee": ["קפה", "אספרסו", "לאטה", "קפוצ'ינו", "אמריקנו", "מוקה", "קפה קר", "נס קפה"],
    "tea": ["תה", "תה ירוק", "תה שחור", "תה צמחים", "צ'אי", "חליטת צמחים"],
    "softDrinkJuice": ["משקה קל", "קולה", "סודה", "מיץ", "מיץ תפוזים", "מיץ תפוחים", "שייק", "שייק חלבון", "לימונדה", "אייס טי", "משקה מוגז"],
    "water": ["מים", "מים מינרליים", "סודה (מים)"],
    "wine": ["יין", "יין אדום", "יין לבן", "רוזה", "יין מבעבע", "שמפניה", "אלכוהול"],
    "beer": ["בירה", "לאגר", "אייל", "סטאוט", "אלכוהול"],
    "cocktail": ["קוקטייל", "משקה חריף", "ליקר", "וודקה", "ג'ין", "רום", "וויסקי", "טקילה", "מרגריטה", "אלכוהול"],
    "pizza": ["פיצה", "פיצה מרגריטה", "פיצה פפרוני"],
    "burger": ["המבורגר", "בורגר", "צ'יזבורגר", "בורגר צמחוני", "קציצת המבורגר"],
    "tacoBurrito": ["טאקו", "בוריטו", "קסאדייה", "פاهיטה", "אנצ'ילדה", "אוכל מקסיקני"],
    "sandwich": ["כריך", "סנדוויץ'", "טוסט", "באגט"],
    "soupStew": ["מרק", "נזיד", "ציר", "צ'אודר", "פו", "מרק ירקות", "מרק עוף"],
    "salad": ["סלט", "סלט קיסר", "סלט יווני", "סלט ירקות", "סלט פירות", "סלט טונה"],
    "noodleDish": ["ראמן", "אטריות פו", "מרק אטריות", "פאד תאי", "נודלס מוקפץ", "אטריות אורז", "אטריות ביצים"],
    "genericFruit": ["פרי", "פירות", "פירות יער", "פירות הדר", "פירות טרופיים"],
    "genericVegetable": ["ירק", "ירקות", "ירקות שורש", "ירקות עלים", "ירוקים"],
    "genericMeal": ["אוכל", "ארוחה", "מנה", "צלחת", "מנה עיקרית", "חטיף", "ארוחת צהריים", "ארוחת ערב", "ארוחת בוקר", "אוכל כללי", "אוכל מבושל", "שאריות", "תבשיל"],
    "unknownFood": ["לא ידוע", "לא מזוהה", "אחר"]
  }
}

---------- END he.json ----------


---------- ru.json ----------
{
  "app": {
    "initializing": "Инициализация...",
    "name": "MacrosVisionAI",
    "alertButtons": {
      "later": "Позже",
      "restartNow": "Перезапустить сейчас"
    }
  },
  "errors": {
    "estimationFailedTitle": "Ошибка оценки",
    "analysisFailedTitle": "Ошибка анализа",
    "aiGramsProcessingError": "ИИ не смог обработать количество. Попробуйте перефразировать (например, '1 чашка' вместо 'чашка').",
    "unexpectedError": "Произошла непредвиденная ошибка. Пожалуйста, попробуйте еще раз."
  },
  "forgotPasswordScreen": {
    "title": "Сброс пароля",
    "instructions": "Введите адрес электронной почты вашей учетной записи, и мы вышлем вам ссылку для сброса пароля.",
    "emailPlaceholder": "Адрес электронной почты",
    "buttonText": "Отправить ссылку для сброса",
    "backToLogin": "Назад ко входу",
    "alertSuccessTitle": "Проверьте вашу почту",
    "forgotPasswordLink": "Забыли пароль?"
  },
  "settingsScreen": {
    "title": "Настройки",
    "account": {
      "title": "Аккаунт",
      "actions": "Действия с аккаунтом",
      "logout": "Выйти",
      "logoutConfirmTitle": "Подтвердите выход",
      "logoutConfirmMessage": "Вы уверены, что хотите выйти?"
    },
    "general": {
      "title": "Общие"
    },
    "dailyGoals": {
      "title": "Дневные цели"
    },
    "goals": {
      "estimateButton": "Рассчитать цели"
    },
    "statistics": {
      "title": "Статистика"
    },
    "dataManagement": {
      "title": "Управление данными"
    },
    "language": {
      "title": "Язык",
      "system": "Системный",
      "english": "Английский",
      "russian": "Русский",
      "hebrew": "Иврит",
      "restartMessage": "Язык изменен. Перезапустите приложение для полного эффекта."
    }
  },
  "accountSettings": {
    "coinBalance": "Баланс монет",
    "addTestCoins": "Добавить 10 монет (Тест)",
    "testButtonWarning": "Примечание: Кнопка \"Добавить монеты\" предназначена только для тестирования/разработки и должна быть удалена или защищена в релизных версиях.",
    "notApplicable": "Н/Д",
    "errorLoadCoins": "Не удалось загрузить баланс монет",
    "errorAddCoins": "Не удалось добавить монеты",
    "coinsAdded": "Монеты добавлены!"
  },
  "themeSwitch": {
    "darkMode": "Темный режим"
  },
  "dailyGoalsInput": {
    "caloriesGoal": "Цель калорий",
    "proteinGoal": "Цель белков",
    "carbsGoal": "Цель углеводов",
    "fatGoal": "Цель жиров"
  },
  "dataManagement": {
    "exportData": "Экспорт данных",
    "importData": "Импорт данных",
    "clearAllData": "Очистить все данные",
    "exportError": "Ошибка экспорта",
    "exportErrorNoSharing": "Экспорт недоступен на вашей платформе.",
    "exportFailed": "Экспорт не удался",
    "exportFailedMessage": "Произошла ошибка при экспорте данных.",
    "importCancelled": "Импорт отменен пользователем.",
    "importInvalidFileType": "Неверный тип файла",
    "importInvalidFileTypeMessage": "Пожалуйста, выберите действительный файл '.json'.",
    "importFileTooLarge": "Файл слишком большой",
    "importFileTooLargeMessage": "Выбранный файл слишком большой (макс. 10 МБ).",
    "importFailed": "Импорт не удался",
    "importFailedInvalidStructure": "Импортированный файл имеет неверную структуру или отсутствуют необходимые данные (dailyEntries, foods, settings).",
    "importFailedParseError": "Импортированный файл не является действительным JSON или имеет поврежденное содержимое.",
    "importFailedAccessError": "Не удалось получить доступ к выбранному файлу.",
    "importFailedPermissionError": "Для импорта файлов требуются разрешения на доступ к хранилищу.",
    "importFailedUnknownError": "Во время импорта произошла неизвестная ошибка.",
    "importSuccessful": "Импорт успешен",
    "importSuccessfulMessage": "Данные успешно импортированы и сохранены.",
    "clearDataSuccess": "Данные очищены",
    "clearDataSuccessMessage": "Все данные приложения были успешно очищены.",
    "clearDataFailed": "Не удалось очистить данные",
    "clearDataFailedMessage": "Не удалось очистить данные.",
    "confirmClearTitle": "Подтвердить очистку всех данных",
    "confirmClearMessage": "Это действие необратимо и удалит все записи, продукты и настройки.\n\nВведите \"CLEAR DATA\" для продолжения.",
    "confirmClearInputPlaceholder": "Введите \"CLEAR DATA\"",
    "clearConfirmationFailed": "Подтверждение не удалось",
    "clearConfirmationFailedMessage": "Введен неверный текст подтверждения. Данные не были очищены.",
    "dataReloaded": "Данные перезагружены."
  },
  "confirmationModal": {
    "confirm": "Подтвердить",
    "cancel": "Отмена",
    "defaultTitle": "Подтвердите действие",
    "defaultMessage": "Вы уверены, что хотите выполнить это действие?",
    "enterTextPlaceholder": "Введите текст подтверждения",
    "restartRequiredTitle": "Требуется перезапуск"
  },
  "dailyEntryScreen": {
    "tabTitle": "Дневник",
    "todaysEntries": "Записи за сегодня",
    "saving": "Сохранение...",
    "loadingEntries": "Загрузка записей...",
    "noEntries": "Записей за этот день нет.",
    "noEntriesHint": "Нажмите '+', чтобы добавить первую запись о еде.",
    "entryAdded": "Запись добавлена",
    "entryUpdated": "Запись обновлена",
    "itemRemoved": "%{itemName} удалено",
    "undo": "Нажмите, чтобы отменить",
    "entryRestored": "Запись восстановлена!",
    "itemsAdded": "%{count} элемент(ов) добавлено",
    "toDateFormat": "к %{date}",
    "errorLoad": "Ошибка загрузки",
    "errorLoadMessage": "Не удалось загрузить необходимые данные.",
    "errorSave": "Ошибка сохранения",
    "errorSaveMessage": "Не удалось сохранить изменения. Пожалуйста, попробуйте еще раз.",
    "errorInvalidDate": "Неверная дата",
    "errorInvalidDateMessage": "Выбранная дата недействительна.",
    "errorEditEntry": "Ошибка редактирования",
    "errorEditEntryMessage": "Ошибка подготовки записи к редактированию.",
    "errorAddMultiple": "Ошибка добавления нескольких",
    "errorAddMultipleMessage": "Не удалось добавить несколько элементов.",
    "invalidEntryData": "Неверные данные записи",
    "edit": "Изменить",
    "delete": "Удалить"
  },
  "foodListScreen": {
    "tabTitle": "Продукты",
    "searchPlaceholder": "Поиск в вашей библиотеке продуктов...",
    "loadingFoods": "Загрузка продуктов...",
    "emptyLibrary": "Ваша библиотека продуктов пуста.",
    "emptyLibraryHint": "Нажмите '+', чтобы добавить первый продукт!",
    "noResults": "Продукты, соответствующие \"%{searchTerm}\", не найдены",
    "errorLoad": "Ошибка",
    "errorLoadMessage": "Не удалось загрузить список продуктов.",
    "foodAdded": "%{foodName} добавлено",
    "foodUpdated": "%{foodName} обновлено",
    "foodDeleted": "%{foodName} удалено",
    "foodRestored": "%{foodName} восстановлено",
    "errorCreate": "Ошибка",
    "errorCreateMessage": "Не удалось создать продукт.",
    "errorUpdate": "Ошибка",
    "errorUpdateMessage": "Не удалось обновить продукт.",
    "errorDelete": "Ошибка удаления",
    "errorDeleteMessage": "Не удалось удалить продукт из хранилища. Элемент восстановлен.",
    "fixErrors": "Пожалуйста, исправьте ошибки",
    "edit": "Изменить",
    "delete": "Удалить",
    "shareFoodTitle": "Поделиться %{foodName}",
    "shareErrorTitle": "Ошибка",
    "shareErrorMessage": "Не удалось поделиться продуктом.",
    "deepLinkErrorTitle": "Ошибка открытия ссылки",
    "deepLinkInvalidData": "Данные о продукте из ссылки недействительны.",
    "deepLinkParseError": "Не удалось прочитать данные о продукте из ссылки.",
    "sortBy": "Сортировать по",
    "sortByName": "Имени",
    "sortByNewest": "Новые",
    "sortByOldest": "Старые"
  },
  "addEntryModal": {
    "titleAdd": "Добавить запись",
    "titleEdit": "Изменить запись",
    "titleQuickAddSelect": "Выберите элементы для добавления",
    "titleQuickAddEdit": "Изменить элемент",
    "titleQuickAddAnalyzing": "Анализ...",
    "titleQuickAddFromText": "Быстрое добавление по тексту",
    "searchPlaceholder": "Поиск продуктов...",
    "recent": "Недавние",
    "noResults": "Продукты, соответствующие \"%{searchTerm}\", не найдены.",
    "emptyLibraryMessage": "Ваша библиотека продуктов пуста. Нажмите ниже, чтобы добавить первый продукт!",
    "noQuickAddResults": "Продукты не найдены.",
    "amount": "Количество",
    "grams": "Граммы",
    "autoAi": "Авто (ИИ)",
    "quickAddServing": "Быстрое добавление:",
    "lastUsedServing": "Пред.: %{grams}г",
    "gramsPlaceholder": "Введите граммы (например, 150)",
    "gramsPlaceholderEdit": "Обновить граммы",
    "gramsError": "Введите действительное число",
    "autoPlaceholder": "Опишите количество (например, 1 чашка приготовленного)",
    "buttonAdd": "Добавить",
    "buttonUpdate": "Обновить",
    "buttonBack": "Назад",
    "buttonAddSelected": "Добавить %{count}",
    "buttonLoading": "Загрузка...",
    "quickAddHeader": "Выберите элементы с изображения",
    "quickAddHeaderEdit": "Редактирование сведений об элементе",
    "alertInputMissing": "Отсутствует ввод",
    "alertInputMissingMessage": "Пожалуйста, выберите продукт и введите описание количества.",
    "alertGramsEstimated": "Граммы оценены",
    "alertGramsEstimatedMessage": "Оценено %{grams}г для %{foodName}",
    "alertFoodNotSelected": "Продукт не выбран",
    "alertFoodNotSelectedMessage": "Пожалуйста, выберите продукт.",
    "alertInvalidAmount": "Неверное количество",
    "alertInvalidAmountMessage": "Пожалуйста, введите действительное положительное число для граммов.",
    "alertQuickAddPermission": "Требуется разрешение",
    "alertQuickAddCameraPermission": "Необходим доступ к камере.",
    "alertQuickAddGalleryPermission": "Необходим доступ к галерее.",
    "alertQuickAddUserCancelled": "Отменено пользователем",
    "alertQuickAddCouldNotSelect": "Не удалось выбрать изображение.",
    "alertQuickAddError": "Ошибка",
    "alertQuickAddErrorMessage": "Произошла непредвиденная ошибка.",
    "alertQuickAddFinishEditing": "Завершите редактирование",
    "alertQuickAddFinishEditingSaveOrCancel": "Пожалуйста, сначала сохраните или отмените текущее редактирование.",
    "alertQuickAddFromImageTitle": "Быстрое добавление с изображения",
    "alertQuickAddFromImageMessage": "Определите несколько продуктов с изображения.",
    "alertQuickAddInvalidName": "Неверное имя",
    "alertQuickAddInvalidNameMessage": "Название продукта не может быть пустым.",
    "alertQuickAddInvalidGrams": "Неверные граммы",
    "alertQuickAddInvalidGramsMessage": "Пожалуйста, введите действительное положительное число.",
    "alertQuickAddNoItemsSelected": "Элементы не выбраны",
    "alertQuickAddNoItemsSelectedMessage": "Выберите элементы для добавления.",
    "alertQuickAddNothingToAdd": "Нечего добавлять",
    "alertQuickAddNothingToAddMessage": "Не выбрано или не подготовлено ни одного действительного элемента.",
    "alertQuickAddErrorPreparing": "Ошибка",
    "alertQuickAddErrorPreparingMessage": "Не удалось подготовить элементы для добавления.",
    "camera": "Камера",
    "gallery": "Галерея",
    "cancel": "Отмена",
    "addNewFoodButton": "Добавить новый продукт",
    "alertOverwriteFoodTitle": "Продукт существует",
    "alertOverwriteFoodMessage": "Продукт с названием \"%{foodName}\" уже существует. Перезаписать новыми данными?",
    "overwrite": "Перезаписать",
    "toastFoodSavedToLibrary": "\"%{foodName}\" сохранено в библиотеку.",
    "toastFoodUpdatedInLibrary": "\"%{foodName}\" обновлено в библиотеке.",
    "toastErrorSavingToLibrary": "Ошибка сохранения продукта в библиотеку.",
    "textQuickAdd": {
      "placeholder": "Опишите ваш прием пищи...\nнапример, '150г куриной грудки, небольшой салат с помидорами и одно яблоко'",
      "analyzeButton": "Анализировать текст",
      "alertInputEmpty": "Пустое поле",
      "alertInputEmptyMessage": "Пожалуйста, напишите или произнесите, что вы съели, для анализа."
    }
  },
  "addFoodModal": {
    "titleAdd": "Добавить новый продукт",
    "titleEdit": "Изменить продукт",
    "buttonAdd": "Добавить",
    "buttonUpdate": "Обновить",
    "manualInput": "Ручной ввод",
    "aiAssist": "ИИ-помощник",
    "ingredientsLabel": "Описание / Ингредиенты",
    "ingredientsPlaceholder": "например,\n100г куриной грудки\n50г риса\n1 ст.л. оливкового масла",
    "analyzeTextButton": "Анализ текста",
    "analyzeImageButton": "Анализ по изображению",
    "orDivider": "ИЛИ",
    "macrosEstimatedText": "Макросы оценены по тексту.",
    "foodIdentified": "Продукт определен!",
    "foodIdentifiedMessage": "Определено как %{foodName}. Макросы оценены.",
    "alertInputNeeded": "Требуется ввод",
    "alertInputNeededMessage": "Пожалуйста, введите название продукта или ингредиенты для анализа.",
    "errorGetImage": "Получить изображение",
    "errorGetImageMessage": "Выберите источник изображения продукта:",
    "errorCamera": "Ошибка камеры",
    "errorGallery": "Ошибка галереи",
    "errorPermission": "Требуется разрешение",
    "errorCameraPermission": "Необходим доступ к камере."
  },
  "foodFormFields": {
    "foodName": "Название продукта",
    "calories": "Калории (на 100г)",
    "protein": "Белки (на 100г)",
    "carbs": "Углеводы (на 100г)",
    "fat": "Жиры (на 100г)",
    "errorNameRequired": "Название обязательно",
    "errorNonNegative": "Должно быть неотрицательным числом"
  },
  "quickAddList": {
    "foodNamePlaceholder": "Название продукта",
    "gramsPlaceholder": "Граммы",
    "errorInvalidGrams": "Неверно",
    "analyzing": "Анализ...",
    "emptyMessage": "На изображении не найдено опознаваемых продуктов.",
    "emptyHint": "Попробуйте другое изображение или добавьте вручную."
  },
  "dailyProgress": {
    "calories": "Калории",
    "protein": "Белки",
    "carbs": "Углеводы",
    "fat": "Жиры"
  },
  "dateNavigator": {
    "invalidDate": "Неверная дата"
  },
  "utils": {
    "macros": {
      "errorTitle": "Ошибка анализа ИИ",
      "multiItemErrorTitle": "Ошибка быстрого добавления",
      "errorMessage": "Не удалось получить ответ от ИИ. Пожалуйста, попробуйте еще раз.",
      "invalidResponse": "ИИ дал ответ в неожиданном формате. Пожалуйста, попробуйте еще раз или перефразируйте свой запрос."
    },
    "units": {
      "errorTitle": "Ошибка оценки ИИ"
    },
    "image": {
      "alertCompressionError": "Ошибка сжатия",
      "alertCompressionErrorMessage": "Не удалось обработать изображение для сжатия.",
      "errorFailedToRead": "Не удалось прочитать файл изображения: %{error}"
    }
  },
  "backendService": {
    "errorInvalidClientId": "Неверный идентификатор клиента. Пожалуйста, перезапустите приложение.",
    "errorRequestFailedParse": "Сервер отправил нечитаемый ответ (Статус %{status}).",
    "errorRequestFailedDetailFormat": "Сервер отправил ответ в неожиданном формате (Статус %{status}).",
    "errorRequestFailedWithServerMsg": "Сервер вернул ошибку (Статус %{status}).",
    "errorAuthFailed": "Ошибка аутентификации на сервере. Пожалуйста, перезапустите приложение.",
    "errorPermissionDenied": "Доступ запрещен сервером.",
    "errorNotFound": "Запрошенный ресурс не найден на сервере.",
    "errorTooManyRequests": "Вы делаете это слишком быстро! Пожалуйста, подождите немного и попробуйте снова.",
    "errorInsufficientCoins": "У вас недостаточно монет ИИ для этого действия. Скоро будет больше!",
    "errorNetwork": "Не удалось подключиться к серверу.",
    "errorNetworkTimeout": "Сервер слишком долго отвечает. Пожалуйста, повторите попытку через несколько секунд.",
    "errorNetworkConnection": " Пожалуйста, проверьте ваше интернет-соединение.",
    "errorNetworkDetails": " Детали: %{error}",
    "errorNetworkUnknown": " Произошла неизвестная сетевая ошибка.",
    "errorEstimateGramsUnexpectedResponse": "Не удалось оценить граммы из-за неожиданного ответа сервера.",
    "errorAddCoinsPositive": "Сумма для добавления должна быть положительной."
  },
  "statisticsChart": {
    "intake": "Потребление",
    "goal": "Цель",
    "noData": "Нет данных для отображения графика для %{chartTitle}.",
    "movingAverage": "Среднее за 7 дн."
  },
  "questionnaireScreen": {
    "title": "Оценка ваших целей",
    "ageLabel": "Возраст (лет)",
    "agePlaceholder": "например, 30",
    "sexLabel": "Пол",
    "sex": {
      "select": "Выберите пол...",
      "male": "Мужской",
      "female": "Женский"
    },
    "heightLabel": "Рост",
    "heightPlaceholder": "например, 175",
    "weightLabel": "Вес",
    "weightPlaceholder": "например, 70",
    "activityLevelLabel": "Уровень активности",
    "activityLevel": {
      "select": "Выберите уровень активности...",
      "sedentary": "Сидячий (мало или нет упражнений)",
      "light": "Легкий (упражнения 1-3 раза/нед)",
      "moderate": "Умеренный (упражнения 3-5 раз/нед)",
      "active": "Активный (упражнения 6-7 раз/нед)",
      "veryActive": "Очень активный (тяжелые упражнения или физическая работа)"
    },
    "primaryGoalLabel": "Основная цель",
    "primaryGoal": {
      "select": "Выберите основную цель...",
      "loseWeight": "Сбросить вес",
      "maintainWeight": "Поддерживать вес",
      "gainMuscle": "Набрать мышечную массу"
    },
    "goalIntensityLabel": "Интенсивность цели",
    "goalIntensity": {
      "select": "Выберите интенсивность...",
      "mild": "Легкая",
      "moderate": "Умеренная",
      "aggressive": "Агрессивная"
    },
    "calculateButton": "Рассчитать и сохранить цели",
    "validation": {
      "invalidAge": "Введите действительный возраст (1-120).",
      "selectSex": "Пожалуйста, выберите ваш пол.",
      "invalidHeight": "Введите действительный рост (50-250 см).",
      "invalidWeight": "Введите действительный вес (20-300 кг).",
      "selectActivityLevel": "Пожалуйста, выберите ваш уровень активности.",
      "selectPrimaryGoal": "Пожалуйста, выберите вашу основную цель.",
      "selectGoalIntensity": "Пожалуйста, выберите интенсивность цели.",
      "fixErrors": "Пожалуйста, исправьте ошибки выше."
    },
    "error": {
      "calculationFailedTitle": "Ошибка расчета",
      "calculationFailedMessage": "Не удалось рассчитать цели. Пожалуйста, проверьте введенные данные.",
      "genericSaveTitle": "Ошибка сохранения",
      "genericSaveMessage": "Не удалось сохранить рассчитанные цели. Пожалуйста, попробуйте еще раз."
    },
    "toast": {
      "goalsCalculated": "Цели рассчитаны и сохранены!",
      "minCaloriesAdjustedTitle": "Калории скорректированы",
      "minCaloriesAdjustedMessage": "Ваша цель по калориям была скорректирована до минимума в %{calories} ккал."
    }
  },
  "foodIconTags": {
    "apple": ["яблоко", "красное яблоко", "зеленое яблоко", "гала", "фуджи", "гренни смит", "яблоки"],
    "banana": ["банан", "бананы"],
    "grapes": ["виноград"],
    "strawberry": ["клубника", "земляника"],
    "blueberry": ["голубика", "черника"],
    "orange": ["апельсин", "мандарин", "клементин", "апельсины"],
    "lemonLime": ["лимон", "лайм", "лимоны"],
    "watermelon": ["арбуз"],
    "pineapple": ["ананас"],
    "mango": ["манго"],
    "kiwi": ["киви"],
    "peachNectarine": ["персик", "нектарин", "персики"],
    "cherry": ["вишня", "черешня"],
    "pear": ["груша", "груши"],
    "avocado": ["авокадо"],
    "coconut": ["кокос", "кокосы"],
    "tomato": ["помидор", "томат", "помидоры", "томаты", "черри", "сливка"],
    "carrot": ["морковь", "морковка"],
    "broccoli": ["брокколи"],
    "leafyGreen": ["салат", "шпинат", "капуста кале", "зелень", "листовая зелень", "руккола", "мангольд", "айсберг"],
    "cucumber": ["огурец", "огурцы", "соленый огурец", "маринованный огурец", "корнишон"],
    "pepperGeneral": ["перец", "чили", "халапеньо", "паприка", "острый перец"],
    "bellPepper": ["сладкий перец", "болгарский перец", "зеленый перец", "красный перец", "желтый перец", "оранжевый перец"],
    "corn": ["кукуруза", "зерно кукурузы", "кукурузный початок"],
    "potato": ["картофель", "картошка", "батат", "ямс"],
    "onion": ["лук", "репчатый лук", "зеленый лук", "лук-шалот", "порей"],
    "garlic": ["чеснок", "зубчик чеснока"],
    "eggplant": ["баклажан", "баклажаны"],
    "mushroom": ["гриб", "грибы", "шампиньон", "портобелло", "шиитаке", "вешенка", "белый гриб", "лисичка"],
    "poultry": ["курица", "куриная грудка", "куриное бедро", "куриная ножка", "индейка", "утка", "птица", "жареная курица", "курица гриль", "филе курицы"],
    "redMeat": ["говядина", "стейк", "фарш", "свинина", "баранина", "телятина", "красное мясо", "котлета", "жаркое", "свиная отбивная", "вырезка"],
    "bacon": ["бекон", "грудинка"],
    "processedMeat": ["ветчина", "колбаса", "сосиска", "сарделька", "чоризо", "салями", "пепперони", "сервелат", "мясные деликатесы", "буженина"],
    "fish": ["рыба", "лосось", "тунец", "треска", "тилапия", "скумбрия", "сельдь", "сардина", "палтус", "белая рыба", "форель", "морской окунь", "жареная рыба", "запеченная рыба", "хек", "минтай"],
    "shrimpPrawn": ["креветка", "креветки", "морепродукты", "королевская креветка"],
    "lobster": ["лобстер", "омар", "рак", "морепродукты"],
    "crab": ["краб", "морепродукты", "крабовое мясо"],
    "sushi": ["суши", "роллы", "сашими", "сырая рыба", "нигири", "маки", "Филадельфия", "Калифорния"],
    "egg": ["яйцо", "яйца", "яичница", "омлет", "вареное яйцо", "яйцо пашот"],
    "milk": ["молоко", "коровье молоко", "соевое молоко", "миндальное молоко", "овсяное молоко", "растительное молоко", "рисовое молоко", "кокосовое молоко", "козье молоко", "кефир", "ряженка", "простокваша"],
    "cheese": ["сыр", "чеддер", "моцарелла", "пармезан", "гауда", "бри", "фета", "творог", "швейцарский сыр", "проволоне", "голубой сыр", "козий сыр", "сливочный сыр", "российский сыр", "адыгейский сыр"],
    "butter": ["масло сливочное", "маргарин", "спред"],
    "iceCream": ["мороженое", "джелато", "сорбет", "замороженный йогурт", "пломбир", "эскимо"],
    "yogurt": ["йогурт", "греческий йогурт", "натуральный йогурт", "питьевой йогурт", "биойогурт"],
    "bread": ["хлеб", "тост", "бублик", "круассан", "булка", "булочка", "лаваш", "цельнозерновой хлеб", "белый хлеб", "ржаной хлеб", "багет", "батон", "чиабатта"],
    "rice": ["рис", "белый рис", "коричневый рис", "рис басмати", "рис жас민", "дикий рис", "крупа", "бурый рис"],
    "pasta": ["макароны", "паста", "спагетти", "лапша", "фетучини", "лазанья", "рамен", "вермишель", "рожки", "перья"],
    "cerealOats": ["хлопья", "овсянка", "овсяные хлопья", "гранола", "мюсли", "каша", "кукурузные хлопья", "гречка"],
    "otherGrains": ["киноа", "кус-кус", "ячмень", "булгур", "полба", "пшено", "крупы", "перловка"],
    "flatbread": ["тортилья", "лаваш", "пита", "наан", "лепешка", "чапати", "роти", "маца"],
    "beansLegumes": ["фасоль", "черная фасоль", "красная фасоль", "нут", "чечевица", "горох", "бобовые", "эдамаме", "соевые бобы", "маш"],
    "peanut": ["арахис", "арахисовая паста", "земляной орех"],
    "nuts": ["орехи", "миндаль", "грецкий орех", "кешью", "пекан", "фисташки", "фундук", "бразильский орех", "макадамия", "смесь орехов", "кедровый орех"],
    "seeds": ["семечки", "семена подсолнечника", "тыквенные семечки", "семена чиа", "семена льна", "кунжут", "конопляные семена"],
    "donut": ["пончик", "пышка", "выпечка", "донат"],
    "cookie": ["печенье", "бисквит", "галета", "макарун", "овсяное печенье", "пряник"],
    "chocolate": ["шоколад", "шоколадная плитка", "темный шоколад", "молочный шоколад", "белый шоколад", "какао", "шоколадка"],
    "cake": ["торт", "пирожное", "кекс", "маффин", "брауни", "чизкейк", "рулет"],
    "candy": ["конфета", "конфеты", "сладости", "леденец", "мармелад", "ирис", "зефир", "пастила", "карамель"],
    "popcorn": ["попкорн", "воздушная кукуруза"],
    "pretzel": ["крендель", "соломка", "брецель"],
    "friesChips": ["картофель фри", "картошка фри", "чипсы", "картофельные чипсы", "картофельные дольки", "наггетсы (картофельные)"],
    "coffee": ["кофе", "эспрессо", "латте", "капучино", "американо", "мокко", "холодный кофе", "растворимый кофе"],
    "tea": ["чай", "зеленый чай", "черный чай", "травяной чай", "чай масала", "улун", "белый чай", "каркаде", "пуэр"],
    "softDrinkJuice": ["газировка", "лимонад", "кола", "пепси", "безалкогольный напиток", "сок", "апельсиновый сок", "яблочный сок", "смузи", "протеиновый коктейль", "холодный чай (сладкий)", "морс", "компот"],
    "water": ["вода", "бутилированная вода", "минеральная вода", "газированная вода", "негазированная вода", "питьевая вода"],
    "wine": ["вино", "красное вино", "белое вино", "розовое вино", "игристое вино", "шампанское", "алкоголь"],
    "beer": ["пиво", "лагер", "эль", "стаут", "алкоголь", "крафтовое пиво"],
    "cocktail": ["коктейль", "спиртное", "ликер", "водка", "джин", "ром", "виски", "текила", "маргарита", "мартини", "алкоголь", "напиток алкогольный"],
    "pizza": ["пицца", "маргарита", "пепперони", "гавайская пицца"],
    "burger": ["бургер", "гамбургер", "чизбургер", "вегетарианский бургер", "куриный бургер", "сэндвич с котлетой"],
    "tacoBurrito": ["тако", "буррито", "кесадилья", "фахита", "энчилада", "мексиканская еда", "шаурма"],
    "sandwich": ["сэндвич", "бутерброд", "панини", "горячий бутерброд", "тост с начинкой", "клаб сэндвич"],
    "soupStew": ["суп", "рагу", "бульон", "похлебка", "борщ", "щи", "солянка", "гуляш", "харчо", "уха"],
    "salad": ["салат", "цезарь", "греческий салат", "овощной салат", "фруктовый салат", "оливье", "винегрет", "салат с тунцом"],
    "noodleDish": ["лапша рамен", "суп фо", "суп с лапшой", "пад тай", "вок", "удон", "соба", "фунчоза"],
    "genericFruit": ["фрукт", "фрукты", "ягода", "ягоды", "цитрус", "цитрусовые", "экзотический фрукт"],
    "genericVegetable": ["овощ", "овощи", "корнеплод", "зелень листовая", "огородные овощи"],
    "genericMeal": ["еда", "блюдо", "обед", "ужин", "завтрак", "перекус", "готовое блюдо", "остатки еды", "пища", "кушанье", "трапеза"],
    "unknownFood": ["неизвестно", "неопознано", "другое", "прочее"]
  }
}
---------- END ru.json ----------


---------- AppNavigator.tsx ----------
// src/navigation/AppNavigator.tsx
import React from 'react';
import { Platform, useColorScheme, Alert, DevSettings, I18nManager, Text, View } from 'react-native';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import { createNativeStackNavigator, NativeStackNavigationOptions, NativeStackScreenProps } from '@react-navigation/native-stack';
import { NavigationContainer, DefaultTheme, DarkTheme, RouteProp } from '@react-navigation/native';
import { Icon, useTheme, ThemeProvider, createTheme } from '@rneui/themed';
import { SafeAreaView } from 'react-native-safe-area-context';
import { StatusBar } from 'expo-status-bar';
import * as Linking from 'expo-linking';
import * as Localization from 'expo-localization';

import DailyEntryScreen from '../screens/DailyEntryScreen';
import FoodListScreen from '../screens/FoodListScreen';
import SettingsScreen from '../screens/SettingsScreen';
import QuestionnaireScreen from '../screens/QuestionnaireScreen';
import LoginScreen from '../screens/LoginScreen';
import RegisterScreen from '../screens/RegisterScreen';
import ForgotPasswordScreen from '../screens/ForgotPasswordScreen';

import { useAuth, AuthContextType } from '../context/AuthContext';
import { LanguageCode } from '../types/settings';
import i18n, { setLocale, t } from '../localization/i18n';
import { Food } from '../types/food';
import { setLogoutListener } from '../services/authService';

// Define ParamLists
export type MainTabParamList = {
  DailyEntryRoute: { quickAddFood?: Food };
  FoodListRoute: { openAddFoodModal?: boolean, foodData?: string };
  SettingsStackRoute: undefined;
};

export type SettingsStackParamList = {
  SettingsHome: undefined;
  Questionnaire: undefined;
};

export type AuthStackParamList = {
  Login: undefined;
  Register: undefined;
  ForgotPassword: undefined;
};

export type RootStackParamList = {
  Auth: undefined;
  Main: undefined;
};

// Create Navigators
const Tab = createBottomTabNavigator<MainTabParamList>();
const SettingsStackNav = createNativeStackNavigator<SettingsStackParamList>();
const AuthStack = createNativeStackNavigator<AuthStackParamList>();
const RootStack = createNativeStackNavigator<RootStackParamList>();

// Linking configuration
const linking = {
  prefixes: [Linking.createURL('/')],
  config: {
    screens: {
      Main: {
          path: '', 
          screens: {
              FoodListRoute: 'open-add-food-modal', 
          }
      },
    }
  },
};

// Theming
declare module "@rneui/themed" {
  export interface Colors { text: string; card: string; successLight: string; primaryLight: string; }
}
const lightThemeColors = { primary: "#2e86de", secondary: "#6c757d", background: "#f8f9fa", grey5: "#e9ecef", white: "#ffffff", grey4: "#ced4da", success: "#28a745", successLight: "#d4edda", black: "#000000", text: "#212529", card: "#ffffff", error: "#dc3545", warning: "#ffc107", disabled: "#6c757d", divider: "#ced4da", platform: { ios: {}, android: {}, web: {}, default: {} } as any, grey0: "#f8f9fa", grey1: "#e9ecef", grey2: "#dee2e6", grey3: "#ced4da", greyOutline: "#adb5bd", searchBg: "#ffffff", primaryLight: '#eaf5fd' };
const darkThemeColors = { primary: "#2e86de", secondary: "#adb5bd", background: "#121212", grey5: "#2c2c2c", white: "#ffffff", grey4: "#343a40", success: "#28a745", successLight: "#1f5139", black: "#000000", text: "#f8f9fa", card: "#1e1e1e", error: "#dc3545", warning: "#ffc107", disabled: "#495057", divider: "#343a40", platform: { ios: {}, android: {}, web: {}, default: {} } as any, grey0: "#212529", grey1: "#2c2c2c", grey2: "#343a40", grey3: "#8899a6", greyOutline: "#8899a6", searchBg: "#1e1e1e", primaryLight: '#2a3b4c' };

// Settings Stack Navigator Component
function SettingsStackNavigatorComponent({ onThemeChange, onLocaleChange, onDataOperation, onLogout }: { onThemeChange: (theme: 'light' | 'dark' | 'system') => void; onLocaleChange: (locale: LanguageCode) => void; onDataOperation: () => void; onLogout: () => void; }) {
  const { theme } = useTheme();
  return (
    <SettingsStackNav.Navigator screenOptions={{ headerStyle: { backgroundColor: theme.colors.background }, headerTitleStyle: { color: theme.colors.text }, headerTintColor: theme.colors.primary, headerTitleAlign: 'center' }}>
      <SettingsStackNav.Screen name="SettingsHome" options={{ title: t('settingsScreen.title') }}>
        {(props: NativeStackScreenProps<SettingsStackParamList, 'SettingsHome'>) => <SettingsScreen {...props} onThemeChange={onThemeChange} onLocaleChange={onLocaleChange} onDataOperation={onDataOperation} onLogout={onLogout} />}
      </SettingsStackNav.Screen>
      <SettingsStackNav.Screen name="Questionnaire" component={QuestionnaireScreen} options={{ title: t('questionnaireScreen.title') }} />
    </SettingsStackNav.Navigator>
  );
}

// Main Tab Navigator Component
function MainTabNavigator({ onThemeChange, onLocaleChange, onLogout }: { onThemeChange: (theme: 'light' | 'dark' | 'system') => void; onLocaleChange: (locale: LanguageCode) => void; onLogout: () => void; }) {
  const { theme } = useTheme();
  const [foodListRefresh, setFoodListRefresh] = React.useState(false);
  const handleFoodChange = React.useCallback(() => setFoodListRefresh(prev => !prev), []);

  return (
    <Tab.Navigator
      screenOptions={({ route }: { route: RouteProp<MainTabParamList, keyof MainTabParamList> }) => ({
        tabBarIcon: ({ focused, color, size }: { focused: boolean; color: string; size: number }) => {
          let iconName: string = '';
          if (route.name === 'DailyEntryRoute') iconName = focused ? 'calendar' : 'calendar-outline';
          else if (route.name === 'FoodListRoute') iconName = focused ? 'fast-food' : 'fast-food-outline';
          else if (route.name === 'SettingsStackRoute') iconName = focused ? 'settings' : 'settings-outline';
          return <Icon name={iconName} type='ionicon' size={size} color={color} />;
        },
        tabBarActiveTintColor: theme.colors.primary,
        tabBarInactiveTintColor: theme.colors.secondary,
        headerShown: false,
        tabBarStyle: { backgroundColor: theme.colors.background, borderTopColor: theme.colors.divider },
        tabBarLabelStyle: { fontWeight: 'bold' }
      })}
    >
      <Tab.Screen name="DailyEntryRoute" options={{ title: t('dailyEntryScreen.tabTitle') }}>
        {() => <DailyEntryScreen key={`${foodListRefresh}-${i18n.locale}`} />}
      </Tab.Screen>
      <Tab.Screen name="FoodListRoute" options={{ title: t('foodListScreen.tabTitle') }}>
        {() => <FoodListScreen onFoodChange={handleFoodChange} key={`${foodListRefresh}-${i18n.locale}`} />}
      </Tab.Screen>
      <Tab.Screen name="SettingsStackRoute" options={{ title: t('settingsScreen.title') }}>
        {() => <SettingsStackNavigatorComponent onThemeChange={onThemeChange} onLocaleChange={onLocaleChange} onDataOperation={handleFoodChange} onLogout={onLogout} />}
      </Tab.Screen>
    </Tab.Navigator>
  );
}

// Auth Stack Navigator Component
function AuthNavigator() {
    const { theme } = useTheme();
    const screenOptions: NativeStackNavigationOptions = {
        headerShown: false,
        contentStyle: { backgroundColor: theme.colors.background }
    };
    return (
        <AuthStack.Navigator screenOptions={screenOptions}>
            <AuthStack.Screen name="Login" component={LoginScreen} />
            <AuthStack.Screen name="Register" component={RegisterScreen} />
            <AuthStack.Screen name="ForgotPassword" component={ForgotPasswordScreen} />
        </AuthStack.Navigator>
    )
}

// App Content - Determines which stack to show
function AppContent() {
  const { authState, settings, changeTheme, changeLocale, logout } = useAuth() as AuthContextType;
  const colorScheme = useColorScheme();

  React.useEffect(() => {
    if (logout) {
      setLogoutListener(logout);
    }
    return () => setLogoutListener(null); // Cleanup on unmount
  }, [logout]);

  const themeMode = settings.theme;
  const currentThemeConfig = React.useMemo(() => {
    const isDark = themeMode === 'system' ? colorScheme === 'dark' : themeMode === 'dark';
    return isDark ? { mode: 'dark' as const, colors: darkThemeColors } : { mode: 'light' as const, colors: lightThemeColors };
  }, [themeMode, colorScheme]);

  const navigationTheme = React.useMemo(() => ({
    dark: { ...DarkTheme, colors: { ...DarkTheme.colors, primary: currentThemeConfig.colors.primary, background: currentThemeConfig.colors.background, card: currentThemeConfig.colors.card, text: currentThemeConfig.colors.text, border: currentThemeConfig.colors.divider, notification: currentThemeConfig.colors.successLight, }, },
    light: { ...DefaultTheme, colors: { ...DefaultTheme.colors, primary: currentThemeConfig.colors.primary, background: currentThemeConfig.colors.background, card: currentThemeConfig.colors.card, text: currentThemeConfig.colors.text, border: currentThemeConfig.colors.divider, notification: currentThemeConfig.colors.success, }, },
  }), [currentThemeConfig]);
  
  const handleLocaleChange = (newLocale: LanguageCode) => {
    const oldLocale = settings.language === 'system' ? (Localization.getLocales()?.[0]?.languageTag || 'en-US').split('-')[0] : settings.language;
    changeLocale(newLocale);
    const newEffectiveLocale = newLocale === 'system' ? (Localization.getLocales()?.[0]?.languageTag || 'en-US').split('-')[0] : newLocale;

    const oldIsRTL = oldLocale === 'he';
    const newIsRTL = newEffectiveLocale === 'he';

    if (oldIsRTL !== newIsRTL && Platform.OS !== 'web') {
        Alert.alert( t('confirmationModal.restartRequiredTitle'), t('settingsScreen.language.restartMessage'),
            [ { text: t('app.alertButtons.later'), style: "cancel" },
              { text: t('app.alertButtons.restartNow'), onPress: () => DevSettings.reload() } ]
        );
    } else if (Platform.OS === 'web' && oldIsRTL !== newIsRTL) {
        window.location.reload();
    }
  };

  const LoadingFallback = () => (
      <View style={{flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: currentThemeConfig.colors.background}}>
          <Text style={{color: currentThemeConfig.colors.text}}>Loading...</Text>
      </View>
  )

  return (
    <ThemeProvider theme={createTheme(currentThemeConfig)}>
        <SafeAreaView style={{ flex: 1, backgroundColor: currentThemeConfig.colors.background }}>
            <StatusBar style={currentThemeConfig.mode === "dark" ? "light" : "dark"} backgroundColor={currentThemeConfig.colors.background} />
            <NavigationContainer 
                linking={linking} 
                theme={currentThemeConfig.mode === 'dark' ? navigationTheme.dark : navigationTheme.light} 
                fallback={<LoadingFallback />}
            >
                <RootStack.Navigator screenOptions={{ headerShown: false }}>
                    {authState.authenticated ? (
                         <RootStack.Screen name="Main">
                             {() => <MainTabNavigator onThemeChange={changeTheme} onLocaleChange={handleLocaleChange} onLogout={logout!} />}
                         </RootStack.Screen>
                    ) : (
                        <RootStack.Screen name="Auth" component={AuthNavigator} />
                    )}
                </RootStack.Navigator>
            </NavigationContainer>
        </SafeAreaView>
    </ThemeProvider>
  );
}

// Main AppNavigator export
export default function AppNavigator() {
    const { isLoading, settings } = useAuth() as AuthContextType;
    
    React.useEffect(() => {
        if (settings) {
            const lang = settings.language === 'system' ? (Localization.getLocales()?.[0]?.languageTag || 'en-US') : settings.language;
            setLocale(lang);
        }
    }, [settings]);

    if (isLoading) {
        return (
            <SafeAreaView style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>
                <Text>Initializing App...</Text>
            </SafeAreaView>
        )
    }

    return <AppContent />;
}
---------- END AppNavigator.tsx ----------


---------- DailyEntryScreen.tsx ----------
// src/screens/DailyEntryScreen.tsx
import React, { useState, useEffect, useCallback, useMemo, useRef } from "react";
import { View, FlatList, Alert, Platform, StyleSheet, ActivityIndicator, I18nManager } from "react-native";
import { DailyEntry, DailyEntryItem } from "../types/dailyEntry";
import { Food } from "../types/food";
import { getFoods, createFood, updateFood as updateFoodService } from "../services/foodService";
import { saveDailyEntries, loadDailyEntries, loadSettings } from "../services/storageService";
import { getTodayDateString, formatDateISO, formatDateReadableAsync } from "../utils/dateUtils";
// isValidNumberInput is not directly used in this file after changes
import DailyProgress from "../components/DailyProgress";
import { Text, FAB, makeStyles, useTheme, Divider, Icon as RNEIcon } from "@rneui/themed";
import DateTimePicker, { DateTimePickerEvent } from "@react-native-community/datetimepicker";
import { addDays, subDays, parseISO, formatISO, isValid } from "date-fns";
import { SafeAreaView } from "react-native-safe-area-context";
import AddEntryModal from "../components/AddEntryModal/AddEntryModal";
import "react-native-get-random-values";
import Toast from "react-native-toast-message";
import { useFocusEffect, useNavigation, useRoute, RouteProp } from "@react-navigation/native";
import { getFoodIconUrl } from "../utils/iconUtils";
import DateNavigator from "../components/DateNavigator";
import DailyEntryListItem from "../components/DailyEntryListItem";
import { t } from '../localization/i18n';
import i18n from '../localization/i18n';
import { Settings as AppSettings } from "../types/settings";
import { BottomTabNavigationProp } from '@react-navigation/bottom-tabs';
import { MainTabParamList } from "../navigation/AppNavigator";

type DailyEntryScreenNavigationProp = BottomTabNavigationProp<MainTabParamList, 'DailyEntryRoute'>;
type DailyEntryScreenRouteProp = RouteProp<MainTabParamList, 'DailyEntryRoute'>;

const DailyEntryScreen: React.FC = () => {
  const [dailyEntries, setDailyEntries] = useState<DailyEntry[]>([]);
  const [selectedDate, setSelectedDate] = useState<string>(getTodayDateString());
  const [foods, setFoods] = useState<Food[]>([]);
  
  const [isOverlayVisible, setIsOverlayVisible] = useState(false);
  const [showDatePicker, setShowDatePicker] = useState(false);
  const [dailyGoals, setDailyGoals] = useState<AppSettings['dailyGoals']>({ calories: 2000, protein: 150, carbs: 200, fat: 70 });
  
  const [editIndex, setEditIndex] = useState<number | null>(null); // This is reversedIndex
  const [initialGramsForEdit, setInitialGramsForEdit] = useState<string | undefined>(undefined);
  const [foodForEditModal, setFoodForEditModal] = useState<Food | null>(null);

  const [foodIcons, setFoodIcons] = useState<{ [foodName: string]: string | null; }>({});
  const [isLoadingData, setIsLoadingData] = useState(true);
  const [isSaving, setIsSaving] = useState(false);
  const [readableDate, setReadableDate] = useState('');
  const [pendingQuickAddFood, setPendingQuickAddFood] = useState<Food | null>(null);

  const { theme } = useTheme();
  const styles = useStyles();

  const navigation = useNavigation<DailyEntryScreenNavigationProp>();
  const route = useRoute<DailyEntryScreenRouteProp>();

  useEffect(() => {
    const updateDateForToast = async () => {
      const parsedDate = parseISO(selectedDate);
      if (isValid(parsedDate)) {
        const formatted = await formatDateReadableAsync(parsedDate);
        setReadableDate(formatted);
      } else {
        setReadableDate(t('dateNavigator.invalidDate'));
      }
    };
    updateDateForToast();
  }, [selectedDate, i18n.locale, t]);

  const resolveAndSetIcon = useCallback((foodName: string) => {
    if (!foodName) return;
    if (foodIcons[foodName] === undefined) {
      const icon = getFoodIconUrl(foodName);
      setFoodIcons(prev => ({ ...prev, [foodName]: icon }));
    }
  }, [foodIcons]);

  const triggerIconPrefetch = useCallback((entries: DailyEntry[], currentSelectedDate: string) => {
    const uniqueFoodNames = new Set<string>();
    entries.forEach(entry => { 
      if (entry.date === currentSelectedDate && entry.items) { 
        entry.items.forEach(item => { 
          if (item.food?.name) uniqueFoodNames.add(item.food.name); 
        }); 
      } 
    });

    if (uniqueFoodNames.size > 0) {
      const newIconsStateBatch: { [key: string]: string | null } = {};
      Array.from(uniqueFoodNames).forEach(name => {
        if (foodIcons[name] === undefined) {
           newIconsStateBatch[name] = getFoodIconUrl(name);
        }
      });
      if (Object.keys(newIconsStateBatch).length > 0) {
          setFoodIcons(prev => ({ ...prev, ...newIconsStateBatch }));
      }
    }
  }, [foodIcons]);

  const loadData = useCallback(async () => {
    setIsLoadingData(true);
    try {
      const [foodsResult, loadedEntries, loadedSettings] = await Promise.all([
        getFoods(),
        loadDailyEntries(),
        loadSettings(),
      ]);

      const loadedFoodsArray = foodsResult.items;

      setDailyGoals(loadedSettings?.dailyGoals ?? { calories: 2000, protein: 150, carbs: 200, fat: 70 });
      loadedFoodsArray.sort((a, b) => a.name.localeCompare(b.name));
      setFoods(loadedFoodsArray);
      setDailyEntries(loadedEntries);
      triggerIconPrefetch(loadedEntries, selectedDate);
    } catch (error) {
      console.error("Error in DailyEntryScreen loadData:", error);
      Alert.alert(t('dailyEntryScreen.errorLoad'), t('dailyEntryScreen.errorLoadMessage'));
      setFoods([]); setDailyEntries([]); setDailyGoals({ calories: 0, protein: 0, carbs: 0, fat: 0 });
    } finally {
      setIsLoadingData(false);
    }
  }, [selectedDate, triggerIconPrefetch, t]);

  useEffect(() => {
    const quickAddFoodParam = route.params?.quickAddFood;
    if (quickAddFoodParam) {
      setPendingQuickAddFood(quickAddFoodParam);
      navigation.setParams({ quickAddFood: undefined }); 
    }
  }, [route.params, navigation]);

  useEffect(() => {
    if (pendingQuickAddFood && !isLoadingData && !isOverlayVisible && foods.length > 0) {
      const foodExistsInLibrary = foods.find(f => f.id === pendingQuickAddFood.id);
      const foodToUse = foodExistsInLibrary || pendingQuickAddFood;
  
      setFoodForEditModal(foodToUse);
      setInitialGramsForEdit("");    
      setEditIndex(null);            
  
      if (foodToUse.name) resolveAndSetIcon(foodToUse.name);
      setIsOverlayVisible(true);      
      setPendingQuickAddFood(null);   
    }
  }, [pendingQuickAddFood, isLoadingData, isOverlayVisible, foods, resolveAndSetIcon]);

  useFocusEffect(
    useCallback(() => {
      loadData();
      return () => {};
    }, [loadData]) 
  );

  const currentEntryItems = useMemo(() => {
    const entry = dailyEntries.find((e) => e.date === selectedDate);
    return entry ? [...entry.items].reverse() : [];
  }, [dailyEntries, selectedDate]);

  const getOriginalIndex = useCallback((reversedIndex: number): number => {
    const entry = dailyEntries.find((e) => e.date === selectedDate);
    if (!entry || reversedIndex < 0 || reversedIndex >= entry.items.length) return -1;
    return entry.items.length - 1 - reversedIndex;
  }, [dailyEntries, selectedDate]);

  const updateAndSaveEntries = useCallback(async (updaterOrNewEntries: DailyEntry[] | ((prevEntries: DailyEntry[]) => DailyEntry[])) => {
    setIsSaving(true);
    const previousEntriesState = dailyEntries; // Capture current state for potential rollback

    let newEntriesForStateAndSave: DailyEntry[];
    if (typeof updaterOrNewEntries === 'function') {
        newEntriesForStateAndSave = updaterOrNewEntries(previousEntriesState);
    } else {
        newEntriesForStateAndSave = updaterOrNewEntries;
    }

    setDailyEntries(newEntriesForStateAndSave); // Update React state

    try {
      await saveDailyEntries(newEntriesForStateAndSave); // Save the determined new state
    } catch (error) {
      Alert.alert(t('dailyEntryScreen.errorSave'), t('dailyEntryScreen.errorSaveMessage'));
      setDailyEntries(previousEntriesState); // Rollback React state
    } finally {
      setIsSaving(false);
    }
  }, [dailyEntries, t]);

  const handleSingleEntryActionFinal = useCallback(async (foodToAdd: Food, gramsToAdd: number) => {
    if (isSaving) return;
    const entryItem: DailyEntryItem = { food: foodToAdd, grams: gramsToAdd };
    const isEditingThisAction = editIndex !== null;
    
    await updateAndSaveEntries((prevDailyEntries) => {
        const existingEntryIndex = prevDailyEntries.findIndex((entry) => entry.date === selectedDate);
        let updatedEntriesArray: DailyEntry[];
        if (existingEntryIndex > -1) {
            const existingEntry = prevDailyEntries[existingEntryIndex];
            let updatedItems: DailyEntryItem[];
            if (isEditingThisAction && editIndex !== null) { // Ensure editIndex is not null
                const originalEditIndex = getOriginalIndex(editIndex);
                if (originalEditIndex === -1) {
                    console.error("Edit error: original index not found for reversed index:", editIndex);
                    return prevDailyEntries; // Return previous state if error
                }
                updatedItems = existingEntry.items.map((item, index) => index === originalEditIndex ? entryItem : item);
            } else {
                updatedItems = [entryItem, ...(existingEntry.items ?? [])];
            }
            const updatedEntry = { ...existingEntry, items: updatedItems };
            updatedEntriesArray = prevDailyEntries.map((entry, index) => index === existingEntryIndex ? updatedEntry : entry);
        } else {
            if (isEditingThisAction) {
                console.error("Edit error: entry to edit not found for date:", selectedDate);
                return prevDailyEntries; // Return previous state if error
            }
            const newDailyEntry: DailyEntry = { date: selectedDate, items: [entryItem] };
            updatedEntriesArray = [...prevDailyEntries, newDailyEntry];
            updatedEntriesArray.sort((a, b) => a.date.localeCompare(b.date));
        }
        return updatedEntriesArray;
    });

    if (foodToAdd?.name) resolveAndSetIcon(foodToAdd.name);
    
    setIsOverlayVisible(false);
    setEditIndex(null);
    setInitialGramsForEdit(undefined);
    setFoodForEditModal(null);

    Toast.show({ type: "success", text1: t(isEditingThisAction ? 'dailyEntryScreen.entryUpdated' : 'dailyEntryScreen.entryAdded'), position: "bottom", visibilityTime: 2000, });
  }, [ isSaving, editIndex, selectedDate, getOriginalIndex, updateAndSaveEntries, resolveAndSetIcon, t ]);


  const handleAddMultipleEntriesFinal = useCallback(async (entriesToAdd: { food: Food; grams: number }[]) => {
    if (isSaving) return;
    try {
      if (!entriesToAdd || entriesToAdd.length === 0) return;
      const newItems: DailyEntryItem[] = entriesToAdd.map((entry) => ({ food: entry.food, grams: entry.grams }));
      
      await updateAndSaveEntries((prevDailyEntries) => {
          const existingEntryIndex = prevDailyEntries.findIndex((entry) => entry.date === selectedDate);
          let updatedEntriesArray: DailyEntry[];
          if (existingEntryIndex > -1) {
            const existingEntry = prevDailyEntries[existingEntryIndex];
            const updatedItems = [...newItems, ...(existingEntry.items ?? [])];
            const updatedEntry = { ...existingEntry, items: updatedItems };
            updatedEntriesArray = prevDailyEntries.map((entry, index) => index === existingEntryIndex ? updatedEntry : entry);
          } else {
            const newDailyEntry: DailyEntry = { date: selectedDate, items: newItems };
            updatedEntriesArray = [...prevDailyEntries, newDailyEntry];
            updatedEntriesArray.sort((a, b) => a.date.localeCompare(b.date));
          }
          return updatedEntriesArray;
      });

      newItems.forEach(item => { if (item.food?.name) resolveAndSetIcon(item.food.name); });
      
      Toast.show({ type: "success", text1: t('dailyEntryScreen.itemsAdded', { count: entriesToAdd.length }), text2: t('dailyEntryScreen.toDateFormat', { date: readableDate }), position: "bottom", visibilityTime: 3000, });
      
      setIsOverlayVisible(false); 
      setEditIndex(null);
      setInitialGramsForEdit(undefined);
      setFoodForEditModal(null);
    } catch (error) { Alert.alert(t('dailyEntryScreen.errorAddMultiple'), t('dailyEntryScreen.errorAddMultipleMessage')); setIsOverlayVisible(false); }
  }, [selectedDate, isSaving, updateAndSaveEntries, readableDate, resolveAndSetIcon, t]);


  const handleUndoRemoveEntry = useCallback(async (itemToRestore: DailyEntryItem, entryDate: string, originalIndexToRestoreAt: number) => {
    if (isSaving) return;
    Toast.hide(); 
    await updateAndSaveEntries((prevDailyEntries) => {
        const entryIdx = prevDailyEntries.findIndex(e => e.date === entryDate);
        let finalEntries: DailyEntry[];
        if (entryIdx > -1) {
            const entryToUpdate = prevDailyEntries[entryIdx];
            const currentItems = [...entryToUpdate.items];
            currentItems.splice(originalIndexToRestoreAt, 0, itemToRestore);
            const restoredEntry = { ...entryToUpdate, items: currentItems };
            finalEntries = prevDailyEntries.map((entry, i) => i === entryIdx ? restoredEntry : entry);
        } else {
            const newDailyEntry: DailyEntry = { date: entryDate, items: [itemToRestore] };
            finalEntries = [...prevDailyEntries, newDailyEntry];
            finalEntries.sort((a, b) => a.date.localeCompare(b.date));
        }
        return finalEntries;
    });
    Toast.show({ type: "success", text1: t('dailyEntryScreen.entryRestored'), visibilityTime: 1500, position: "bottom" });
  }, [isSaving, updateAndSaveEntries, t]);

  const undoHandlerRef = useRef(handleUndoRemoveEntry);
  useEffect(() => { undoHandlerRef.current = handleUndoRemoveEntry; }, [handleUndoRemoveEntry]);

  const handleRemoveEntry = useCallback(async (reversedItemIndex: number) => {
    if (isSaving) return;
    const originalItemIndex = getOriginalIndex(reversedItemIndex);
    if (originalItemIndex === -1) {
      console.error("handleRemoveEntry: Original index not found for reversed index:", reversedItemIndex);
      return;
    }

    const entryForToast = dailyEntries.find((e) => e.date === selectedDate);
    const itemToRemoveForToast = entryForToast?.items[originalItemIndex];

    if (!itemToRemoveForToast) {
      console.error("handleRemoveEntry: Item to remove not found in current state for Toast.");
      return;
    }

    await updateAndSaveEntries((prevDailyEntries) => {
      const currentEntryIndex = prevDailyEntries.findIndex((e) => e.date === selectedDate);
      if (currentEntryIndex === -1) {
        console.warn("handleRemoveEntry (updater): Entry not found for date:", selectedDate);
        return prevDailyEntries;
      }
      const currentEntry = prevDailyEntries[currentEntryIndex];
      if (originalItemIndex < 0 || originalItemIndex >= currentEntry.items.length) {
        console.warn("handleRemoveEntry (updater): Original item index out of bounds.");
        return prevDailyEntries;
      }
      
      const updatedItems = currentEntry.items.filter((_, i) => i !== originalItemIndex);
      
      if (updatedItems.length === 0) {
        return prevDailyEntries.filter((entry) => entry.date !== selectedDate);
      } else {
        const updatedEntry = { ...currentEntry, items: updatedItems };
        return prevDailyEntries.map((entry, i) => i === currentEntryIndex ? updatedEntry : entry);
      }
    });

    Toast.show({
        type: "info",
        text1: t('dailyEntryScreen.itemRemoved', { itemName: itemToRemoveForToast.food.name }),
        text2: t('dailyEntryScreen.undo'),
        position: "bottom",
        bottomOffset: 80,
        visibilityTime: 4000,
        onPress: () => undoHandlerRef.current(itemToRemoveForToast, selectedDate, originalItemIndex),
    });
  }, [dailyEntries, selectedDate, isSaving, getOriginalIndex, updateAndSaveEntries, t]);


  const toggleOverlay = useCallback((itemToEdit: DailyEntryItem | null = null, reversedItemIndex: number | null = null) => {
    if (isSaving) return;
    
    if (itemToEdit && reversedItemIndex !== null) {
      setFoodForEditModal(itemToEdit.food); 
      setInitialGramsForEdit(String(itemToEdit.grams));
      setEditIndex(reversedItemIndex); // Store reversedIndex
      if (itemToEdit.food.name) resolveAndSetIcon(itemToEdit.food.name); 
    } else {
      setFoodForEditModal(null);
      setInitialGramsForEdit(undefined);
      setEditIndex(null);
    }
    setIsOverlayVisible((current) => !current);
  }, [isSaving, resolveAndSetIcon]);

  const handleAddNewFoodRequestFromModal = useCallback(() => {
    if (isSaving) return;
    setIsOverlayVisible(false); 
    setFoodForEditModal(null);
    setInitialGramsForEdit(undefined);
    setEditIndex(null);
    navigation.navigate('FoodListRoute', { openAddFoodModal: true });
  }, [isSaving, navigation]);


  const handleCommitFoodItemToMainLibrary = useCallback(async (
    foodData: Omit<Food, 'id' | 'createdAt'> | Food,
    isUpdate: boolean
  ): Promise<Food | null> => {
    if (isSaving) return null;
    setIsSaving(true);
    try {
      let committedFood: Food;
      if (isUpdate && 'id' in foodData) { // Ensure it's a Food object for update
        committedFood = await updateFoodService(foodData as Food);
        setFoods(prevFoods =>
          prevFoods.map(f => (f.id === committedFood.id ? committedFood : f)).sort((a, b) => a.name.localeCompare(b.name))
        );
      } else if (!isUpdate && !('id' in foodData)) { // Ensure it's Omit<Food, 'id'> for create
        committedFood = await createFood(foodData as Omit<Food, 'id' | 'createdAt'>);
        setFoods(prevFoods => [...prevFoods, committedFood].sort((a, b) => a.name.localeCompare(b.name)));
      } else {
        throw new Error("Invalid data for commitFoodItemToMainLibrary");
      }
      if(committedFood.name) resolveAndSetIcon(committedFood.name);
      return committedFood;
    } catch (error) {
      console.error("Error committing food to library:", error);
      Alert.alert( t('foodListScreen.errorLoad'), error instanceof Error ? error.message : t(isUpdate ? 'foodListScreen.errorUpdateMessage' : 'foodListScreen.errorCreateMessage') );
      return null;
    } finally {
      setIsSaving(false);
    }
  }, [isSaving, resolveAndSetIcon, t]);


  const handleEditEntryViaModal = (item: DailyEntryItem, reversedIndex: number) => toggleOverlay(item, reversedIndex);

  const handleDateChange = useCallback((event: DateTimePickerEvent, selectedDateValue?: Date) => {
    const isAndroidDismiss = Platform.OS === "android" && event.type === "dismissed";
    setShowDatePicker(Platform.OS === "ios"); // Keep open on iOS until done
    if (!isAndroidDismiss && event.type === "set" && selectedDateValue) {
      if (isValid(selectedDateValue)) {
        const formattedDate = formatISO(selectedDateValue, { representation: "date" });
        if (formattedDate !== selectedDate) {
           setSelectedDate(formattedDate);
           setEditIndex(null); // Reset edit index when date changes
        }
      } else {
        Alert.alert(t('dailyEntryScreen.errorInvalidDate'), t('dailyEntryScreen.errorInvalidDateMessage'));
      }
    }
    // For Android, dismiss after selection or if explicitly dismissed
    if (Platform.OS === "android") {
        setShowDatePicker(false);
    }
  }, [selectedDate, t]);

  const handlePreviousDay = useCallback(() => {
    if (isSaving || isLoadingData) return;
    try {
      const currentDateObj = parseISO(selectedDate);
      if (!isValid(currentDateObj)) {
          console.warn("PreviousDay: Invalid current selectedDate:", selectedDate);
          return;
      }
      const newDate = subDays(currentDateObj, 1);
      const newDateString = formatISO(newDate, { representation: "date" });
      setSelectedDate(newDateString);
      setEditIndex(null);
    } catch (e) { console.error("DateNav Error (Prev):", e); }
  }, [selectedDate, isSaving, isLoadingData]);

  const handleNextDay = useCallback(() => {
    if (isSaving || isLoadingData) return;
    try {
      const currentDateObj = parseISO(selectedDate);
      if (!isValid(currentDateObj)) {
          console.warn("NextDay: Invalid current selectedDate:", selectedDate);
          return;
      }
      const newDate = addDays(currentDateObj, 1);
      const newDateString = formatISO(newDate, { representation: "date" });
      setSelectedDate(newDateString);
      setEditIndex(null);
    } catch (e) { console.error("DateNav Error (Next):", e); }
  }, [selectedDate, isSaving, isLoadingData]);

  const calculateTotals = useMemo(() => {
    const currentOriginalEntry = dailyEntries.find((entry) => entry.date === selectedDate);
    let totals = { totalCalories: 0, totalProtein: 0, totalCarbs: 0, totalFat: 0 };
    if (currentOriginalEntry) {
      currentOriginalEntry.items.forEach((item) => {
        if (item.food && typeof item.food.calories === "number" && typeof item.food.protein === "number" && typeof item.food.carbs === "number" && typeof item.food.fat === "number" && typeof item.grams === "number" && item.grams > 0) {
          const factor = item.grams / 100; totals.totalCalories += item.food.calories * factor; totals.totalProtein += item.food.protein * factor; totals.totalCarbs += item.food.carbs * factor; totals.totalFat += item.food.fat * factor;
        }
      });
    } return { totalCalories: Math.round(totals.totalCalories), totalProtein: Math.round(totals.totalProtein), totalCarbs: Math.round(totals.totalCarbs), totalFat: Math.round(totals.totalFat), };
  }, [dailyEntries, selectedDate]);

  return (
    <SafeAreaView style={styles.container} edges={["top", "left", "right"]}>
      <DateNavigator selectedDate={selectedDate} onPreviousDay={handlePreviousDay} onNextDay={handleNextDay} onShowDatePicker={() => !isSaving && !isLoadingData && setShowDatePicker(true)} isSaving={isSaving} isLoadingData={isLoadingData} />
      {showDatePicker && (<DateTimePicker value={isValid(parseISO(selectedDate)) ? parseISO(selectedDate) : new Date()} mode="date" display={Platform.OS === "ios" ? "spinner" : "default"} onChange={handleDateChange} />)}
      <View style={styles.progressContainer}><DailyProgress calories={calculateTotals.totalCalories} protein={calculateTotals.totalProtein} carbs={calculateTotals.totalCarbs} fat={calculateTotals.totalFat} goals={dailyGoals} /></View>
      <Divider style={styles.divider} />
      {isSaving && (<View style={styles.savingIndicator}><ActivityIndicator size="small" color={theme.colors.primary} /><Text style={styles.savingText}>{t('dailyEntryScreen.saving')}</Text></View>)}
      <Text style={styles.sectionTitle}>{t('dailyEntryScreen.todaysEntries')}</Text>
      {isLoadingData ? (<View style={styles.centeredLoader}><ActivityIndicator size="large" color={theme.colors.primary} /><Text style={styles.loadingText}>{t('dailyEntryScreen.loadingEntries')}</Text></View>
      ) : (
        <FlatList
          data={currentEntryItems}
          keyExtractor={(item, index) => `entry-${item?.food?.id ?? "unknown"}-${getOriginalIndex(index)}-${item?.grams ?? index}-${selectedDate}-${index}`}
          renderItem={({ item, index }) => (
            <DailyEntryListItem
              item={item}
              reversedIndex={index} // This is the index in the reversed currentEntryItems
              foodIcons={foodIcons}
              setFoodIcons={setFoodIcons}
              onEdit={handleEditEntryViaModal}
              onRemove={handleRemoveEntry}
              isSaving={isSaving}
              dailyGoals={dailyGoals} />
          )}
          ListEmptyComponent={<View style={styles.emptyListContainer}><RNEIcon name="reader-outline" type="ionicon" size={50} color={theme.colors.grey3} /><Text style={styles.emptyListText}>{t('dailyEntryScreen.noEntries')}</Text><Text style={styles.emptyListSubText}>{t('dailyEntryScreen.noEntriesHint')}</Text></View>}
          initialNumToRender={10}
          maxToRenderPerBatch={5}
          windowSize={11}
          contentContainerStyle={styles.listContentContainer}
          keyboardShouldPersistTaps="handled"
          extraData={{ foodIcons, isSaving, dailyGoals, selectedDate, itemsLength: currentEntryItems.length }}
        />
      )}
      <FAB icon={<RNEIcon name="add" color="white" />} color={theme.colors.primary} onPress={() => !isSaving && toggleOverlay()} placement="right" size="large" style={styles.fab} disabled={isSaving || isLoadingData} />
      
      {isOverlayVisible && (
          <AddEntryModal
            isVisible={isOverlayVisible}
            toggleOverlay={toggleOverlay}
            handleAddEntry={handleSingleEntryActionFinal}
            handleAddMultipleEntries={handleAddMultipleEntriesFinal}
            foods={foods} 
            isEditMode={editIndex !== null}
            initialGrams={initialGramsForEdit}
            initialSelectedFoodForEdit={foodForEditModal}
            onAddNewFoodRequest={handleAddNewFoodRequestFromModal}
            onCommitFoodToLibrary={handleCommitFoodItemToMainLibrary}
            dailyGoals={dailyGoals}
          />
      )}
    </SafeAreaView>
  );
};

const useStyles = makeStyles((theme) => ({
  container: { flex: 1, backgroundColor: theme.colors.background },
  progressContainer: { paddingHorizontal: 15, paddingTop: 10 },
  divider: { marginVertical: 0, height: StyleSheet.hairlineWidth, backgroundColor: theme.colors.divider, },
  sectionTitle: { marginTop: 15, marginBottom: 10, paddingHorizontal: 15, fontWeight: "bold", fontSize: 18, color: theme.colors.text, textAlign: I18nManager.isRTL ? 'right' : 'left' },
  fab: { position: "absolute", margin: 16, right: I18nManager.isRTL ? undefined : 10, left: I18nManager.isRTL ? 10 : undefined, bottom: 10 },
  emptyListContainer: { flex: 1, alignItems: "center", justifyContent: "center", padding: 30, marginTop: 50, },
  emptyListText: { fontSize: 17, color: theme.colors.grey2, textAlign: "center", marginTop: 15, },
  emptyListSubText: { fontSize: 14, color: theme.colors.grey3, textAlign: "center", marginTop: 8, },
  centeredLoader: { flex: 1, justifyContent: "center", alignItems: "center", paddingBottom: 50, },
  loadingText: { marginTop: 10, color: theme.colors.grey2, fontSize: 16 },
  savingIndicator: { flexDirection: "row", alignItems: "center", justifyContent: "center", paddingVertical: 5, backgroundColor: theme.colors.grey5, },
  savingText: { marginLeft: 8, color: theme.colors.primary, fontSize: 14, fontStyle: "italic", },
  listContentContainer: { paddingBottom: 80 },
}));

export default DailyEntryScreen;
---------- END DailyEntryScreen.tsx ----------


---------- FoodListScreen.tsx ----------
// src/screens/FoodListScreen.tsx
import React, { useState, useEffect, useCallback, useMemo, useRef } from "react";
import { View, FlatList, Alert, Platform, ActivityIndicator, StyleSheet, I18nManager, Share, LayoutAnimation, UIManager, TouchableOpacity } from "react-native";
import { createFood, getFoods, updateFood, deleteFood as deleteFoodService } from "../services/foodService";
import { Food, SharedFoodData } from "../types/food";
import { isNotEmpty } from "../utils/validationUtils";
import FoodItem from "../components/FoodItem";
import { SearchBar, useTheme, makeStyles, Text, Icon as RNEIcon, Overlay } from "@rneui/themed";
import { FAB } from "@rneui/base";
import { SafeAreaView } from "react-native-safe-area-context";
import AddFoodModal from "../components/AddFoodModal";
import Toast from "react-native-toast-message";
import { useFocusEffect, useNavigation, useRoute, RouteProp } from "@react-navigation/native";
import { getFoodIconUrl } from "../utils/iconUtils";
import { t } from '../localization/i18n';
import { BottomTabNavigationProp } from '@react-navigation/bottom-tabs';
import { MainTabParamList } from "../navigation/AppNavigator";
import Constants from 'expo-constants';
import { findFoodsByTagSearch } from "../utils/searchUtils";

if (Platform.OS === 'android' && UIManager.setLayoutAnimationEnabledExperimental) {
  UIManager.setLayoutAnimationEnabledExperimental(true);
}

// Polyfill for atob/btoa if not available, crucial for deep link data decoding.
if (typeof atob === 'undefined') {
  global.atob = (str: string): string => {
    try {
      const { Buffer } = require('buffer');
      return Buffer.from(str, 'base64').toString('binary');
    } catch (e) {
      console.error("Failed to polyfill atob:", e);
      return '';
    }
  };
}
if (typeof btoa === 'undefined') {
  global.btoa = (str: string): string => {
     try {
       const { Buffer } = require('buffer');
       return Buffer.from(str, 'binary').toString('base64');
     } catch (e) {
       console.error("Failed to polyfill btoa:", e);
       return '';
     }
  };
}

interface FoodListScreenProps { onFoodChange?: () => void; }

type SortOptionValue = 'name' | 'newest' | 'oldest';

type FoodListScreenNavigationProp = BottomTabNavigationProp<MainTabParamList, 'FoodListRoute'>;
type FoodListScreenRouteProp = RouteProp<MainTabParamList, 'FoodListRoute'>;

const getBackendShareBaseUrl = (): string => {
    const envUrl = process.env.EXPO_PUBLIC_BACKEND_URL_PRODUCTION;
    const appJsonUrl = Constants.expoConfig?.extra?.env?.BACKEND_URL_PRODUCTION;
    let chosenUrl: string;

    if (envUrl) {
        chosenUrl = envUrl;
    } else if (appJsonUrl) {
        chosenUrl = appJsonUrl;
    } else {
        chosenUrl = "https://macros-vision-ai.xyz";
        console.warn(
            `Share Link WARNING: Production backend URL is not configured. Falling back to default: ${chosenUrl}.`
        );
    }
    return String(chosenUrl).replace(/\/api\/v1$/, '').replace(/\/$/, '');
};

const FoodListScreen: React.FC<FoodListScreenProps> = ({ onFoodChange }) => {
    const [masterFoods, setMasterFoods] = useState<Food[]>([]);
    const [foodIcons, setFoodIcons] = useState<{ [foodName: string]: string | null }>({});
    const [isLoading, setIsLoading] = useState(true);
    const [isOverlayVisible, setIsOverlayVisible] = useState(false);
    const [search, setSearch] = useState("");
    const [sortOption, setSortOption] = useState<SortOptionValue>('name');
    const [sortIndex, setSortIndex] = useState(0);
    const [newFood, setNewFood] = useState<Omit<Food, "id" | "createdAt">>({ name: "", calories: 0, protein: 0, carbs: 0, fat: 0, });
    const [editFood, setEditFood] = useState<Food | null>(null);
    const [errors, setErrors] = useState<{ [key: string]: string }>({});
    const [isSaving, setIsSaving] = useState(false);
    const [isSortMenuVisible, setIsSortMenuVisible] = useState(false);
    
    const { theme } = useTheme();
    const styles = useStyles();
    const deleteTimeoutRef = useRef<NodeJS.Timeout | null>(null);
    const sortButtonRef = useRef<View | null>(null);
    const [sortButtonPosition, setSortButtonPosition] = useState({ x: 0, y: 0, width: 0, height: 0 });


    const route = useRoute<FoodListScreenRouteProp>();
    const navigation = useNavigation<FoodListScreenNavigationProp>();

    const sortOptions = useMemo<{label: string, value: SortOptionValue}[]>(() => [
        { label: t('foodListScreen.sortByName'), value: 'name' },
        { label: t('foodListScreen.sortByNewest'), value: 'newest' },
        { label: t('foodListScreen.sortByOldest'), value: 'oldest' },
    ], [t]);

    const handleSortChange = (index: number) => {
        if (isLoading || isSaving) return;
        setSortIndex(index);
        setSortOption(sortOptions[index].value);
        setIsSortMenuVisible(false);
    };
    
    const toggleSortMenu = () => {
        sortButtonRef.current?.measure((_fx: number, _fy: number, width: number, height: number, px: number, py: number) => {
            setSortButtonPosition({ x: px, y: py, width, height });
            setIsSortMenuVisible(!isSortMenuVisible);
        });
    };

    const triggerIconPrefetch = useCallback((foodsToFetch: Food[]) => {
        if (!foodsToFetch || foodsToFetch.length === 0) return;
        const iconsToResolve: { [key: string]: string | null } = {};
        foodsToFetch.forEach(food => {
            if (food.name && foodIcons[food.name] === undefined) {
                iconsToResolve[food.name] = getFoodIconUrl(food.name);
            }
        });
        if (Object.keys(iconsToResolve).length > 0) {
            setFoodIcons(prevIcons => ({ ...prevIcons, ...iconsToResolve }));
        }
    }, [foodIcons]);

    useFocusEffect(
      useCallback(() => {
        let isActive = true;
        const loadAllFoods = async () => {
          setIsLoading(true);
          try {
            const { items } = await getFoods();
            if (isActive) {
              setMasterFoods(items);
              triggerIconPrefetch(items);
            }
          } catch (error) {
            if (isActive) Alert.alert(t('foodListScreen.errorLoad'), t('foodListScreen.errorLoadMessage'));
          } finally {
            if (isActive) setIsLoading(false);
          }
        };
        loadAllFoods();
        return () => { isActive = false; };
      }, [triggerIconPrefetch, t])
    );

    const displayedFoods = useMemo(() => {
        let items: Food[];
        const lowercasedSearchTerm = search.toLowerCase().trim();
    
        if (lowercasedSearchTerm) {
            const combined = new Map<string, Food>();
    
            // 1. Primary search: by name
            const nameMatchedFoods = masterFoods.filter(food =>
                food.name.toLowerCase().includes(lowercasedSearchTerm)
            );
            nameMatchedFoods.forEach(food => combined.set(food.id, food));
    
            // 2. Secondary search: by tags
            const tagMatchedFoods = findFoodsByTagSearch(lowercasedSearchTerm, masterFoods);
            tagMatchedFoods.forEach(food => combined.set(food.id, food));
            
            items = Array.from(combined.values());
        } else {
            items = [...masterFoods];
        }
        
        // Apply sorting to the final list
        if (sortOption === 'name') {
            items.sort((a, b) => a.name.localeCompare(b.name));
        } else {
            const fallbackDate = '2020-01-01T00:00:00.000Z';
            items.sort((a, b) => {
                const dateA = new Date(a.createdAt || fallbackDate).getTime();
                const dateB = new Date(b.createdAt || fallbackDate).getTime();
                return sortOption === 'newest' ? dateB - dateA : dateA - dateB;
            });
        }
        return items;
    }, [masterFoods, search, sortOption]);

    const toggleOverlay = useCallback((foodToEdit?: Food) => {
        if (isSaving) return;
        if (foodToEdit) {
            setEditFood({ ...foodToEdit });
            setNewFood({ name: "", calories: 0, protein: 0, carbs: 0, fat: 0 });
        } else {
            setEditFood(null);
            setNewFood({ name: "", calories: 0, protein: 0, carbs: 0, fat: 0 });
        }
        setErrors({});
        setIsOverlayVisible(prev => !prev);
    }, [isSaving]);

    useEffect(() => {
      const params = route.params;
      if (params) {
        if (params.openAddFoodModal && !isOverlayVisible) {
          toggleOverlay();
          navigation.setParams({ openAddFoodModal: undefined });
        }
        if (params.foodData && typeof params.foodData === 'string') {
          try {
            // URL-safe Base64 decoding
            let b64 = params.foodData.replace(/-/g, '+').replace(/_/g, '/');
            const binaryString = atob(b64);
            const utf8Bytes = new Uint8Array(binaryString.length);
            for (let i = 0; i < binaryString.length; i++) utf8Bytes[i] = binaryString.charCodeAt(i);
            const decodedJson = new TextDecoder().decode(utf8Bytes);
            const potentialFood: any = JSON.parse(decodedJson);
            
            // **SECURITY IMPLEMENTATION: Sanitize and validate incoming data**
            const sanitizedFood: Omit<Food, "id" | "createdAt"> = {
                name: String(potentialFood.name || "").substring(0, 100).trim(),
                calories: Math.max(0, Number(potentialFood.calories) || 0),
                protein: Math.max(0, Number(potentialFood.protein) || 0),
                carbs: Math.max(0, Number(potentialFood.carbs) || 0),
                fat: Math.max(0, Number(potentialFood.fat) || 0),
            };

            if (sanitizedFood.name) {
              setNewFood(sanitizedFood);
              setEditFood(null); 
              setIsOverlayVisible(true);
            } else { 
              Alert.alert(t('foodListScreen.deepLinkErrorTitle'), t('foodListScreen.deepLinkInvalidData')); 
            }
          } catch (e) { 
            Alert.alert(t('foodListScreen.deepLinkErrorTitle'), t('foodListScreen.deepLinkParseError'));
          } finally { 
            navigation.setParams({ foodData: undefined }); 
          }
        }
      }
    }, [route.params, isOverlayVisible, toggleOverlay, navigation, t]);

    const handleUndoDelete = useCallback((foodToRestore: Food) => {
        Toast.hide();
        if (deleteTimeoutRef.current) { 
            clearTimeout(deleteTimeoutRef.current); 
            deleteTimeoutRef.current = null; 
        }
        
        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);
        setMasterFoods(prev => [...prev, foodToRestore]);
        Toast.show({
            type: 'success', 
            text1: t('foodListScreen.foodRestored', { foodName: foodToRestore.name }),
            position: 'bottom', 
            visibilityTime: 2000,
        });
    }, [t]);

    const handleDeleteFood = useCallback((foodId: string) => {
        const foodToDelete = masterFoods.find(f => f.id === foodId);
        if (!foodToDelete) return;
        
        if (deleteTimeoutRef.current) clearTimeout(deleteTimeoutRef.current);
        
        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);
        setMasterFoods(prev => prev.filter(f => f.id !== foodId));

        deleteTimeoutRef.current = setTimeout(() => {
            deleteFoodService(foodId)
              .then(() => { 
                  onFoodChange?.(); 
                  console.log(`Permanently deleted ${foodId}`); 
              })
              .catch(error => {
                  Alert.alert(t('foodListScreen.errorDelete'), t('foodListScreen.errorDeleteMessage'));
                  setMasterFoods(prev => [...prev, foodToDelete]);
              });
        }, 4000);

        Toast.show({
            type: 'info', 
            text1: t('foodListScreen.foodDeleted', { foodName: foodToDelete.name }),
            text2: t('dailyEntryScreen.undo'), 
            position: 'bottom', 
            visibilityTime: 4000,
            onPress: () => handleUndoDelete(foodToDelete), 
            bottomOffset: 80,
        });
    }, [masterFoods, onFoodChange, t, handleUndoDelete]);

    const handleQuickAdd = useCallback((foodToQuickAdd: Food) => {
        navigation.navigate('DailyEntryRoute', { quickAddFood: foodToQuickAdd });
    }, [navigation]);

    const validateFood = (foodToValidate: Omit<Food, "id" | "createdAt"> | Food): { [key: string]: string } | null => {
        const newErrors: { [key: string]: string } = {};
        if (!isNotEmpty(foodToValidate.name)) newErrors.name = "Name is required";
        if (isNaN(foodToValidate.calories) || foodToValidate.calories < 0) newErrors.calories = "Must be a non-negative number";
        if (isNaN(foodToValidate.protein) || foodToValidate.protein < 0) newErrors.protein = "Must be a non-negative number";
        if (isNaN(foodToValidate.carbs) || foodToValidate.carbs < 0) newErrors.carbs = "Must be a non-negative number";
        if (isNaN(foodToValidate.fat) || foodToValidate.fat < 0) newErrors.fat = "Must be a non-negative number";
        return Object.keys(newErrors).length === 0 ? null : newErrors;
    };

    const handleCreateFood = async () => {
        const trimmedFood = { ...newFood, name: newFood.name.trim() };
        if (validateFood(trimmedFood)) { Toast.show({ type: 'error', text1: t('foodListScreen.fixErrors'), position: 'bottom' }); return; }
        setIsSaving(true);
        try {
            const created = await createFood(trimmedFood);
            LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);
            setMasterFoods(prev => [...prev, created]);
            setIsOverlayVisible(false); onFoodChange?.();
            Toast.show({ type: 'success', text1: t('foodListScreen.foodAdded', { foodName: created.name }), position: 'bottom' });
            setNewFood({ name: "", calories: 0, protein: 0, carbs: 0, fat: 0 });
        } catch (error: any) { Alert.alert(t('foodListScreen.errorCreate'), error.message || t('foodListScreen.errorCreateMessage'));
        } finally { setIsSaving(false); }
    };

    const handleUpdateFood = async () => {
        if (!editFood) return;
        const trimmedFood = { ...editFood, name: editFood.name.trim() };
        if (validateFood(trimmedFood)) { Toast.show({ type: 'error', text1: t('foodListScreen.fixErrors'), position: 'bottom' }); return; }
        setIsSaving(true);
        try {
            const updated = await updateFood(trimmedFood);
            LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);
            setMasterFoods(prev => prev.map(f => (f.id === updated.id ? updated : f)));
            setIsOverlayVisible(false); onFoodChange?.();
            Toast.show({ type: 'success', text1: t('foodListScreen.foodUpdated', { foodName: updated.name }), position: 'bottom' });
            setEditFood(null);
        } catch (error: any) { Alert.alert(t('foodListScreen.errorUpdate'), error.message || t('foodListScreen.errorUpdateMessage'));
        } finally { setIsSaving(false); }
    };
    
    const handleShareFood = useCallback(async (foodToShare: Food) => {
        const foodDataPayload: SharedFoodData = {
            name: foodToShare.name, calories: foodToShare.calories, protein: foodToShare.protein,
            carbs: foodToShare.carbs, fat: foodToShare.fat,
        };
        try {
            const jsonString = JSON.stringify(foodDataPayload);
            const utf8Bytes = new TextEncoder().encode(jsonString);
            let binaryString = '';
            utf8Bytes.forEach((byte) => { binaryString += String.fromCharCode(byte); });
            const base64Data = btoa(binaryString).replace(/\+/g, '-').replace(/\//g, '_').replace(/=/g, '');
            const backendBaseUrl = getBackendShareBaseUrl();
            const shareUrl = `${backendBaseUrl}/share/food?data=${base64Data}`;
            await Share.share({ message: shareUrl, title: t('foodListScreen.shareFoodTitle', {foodName: foodToShare.name}), });
        } catch (error) { Alert.alert(t('foodListScreen.shareErrorTitle'), t('foodListScreen.shareErrorMessage')); }
    }, [t]);

    const handleInputChange = (key: keyof Omit<Food, "id" | "createdAt">, value: string, isEdit: boolean) => {
        const numericKeys: (keyof Omit<Food, "id" | "createdAt">)[] = ['calories', 'protein', 'carbs', 'fat'];
        let processedValue: string | number = value;
        if (numericKeys.includes(key)) {
            if (value === "" || value === ".") { processedValue = value; }
            else { const cleaned = value.replace(/[^0-9.]/g, "").replace(/(\..*)\./g, "$1");
                   if (cleaned === "" || !isNaN(parseFloat(cleaned))) processedValue = cleaned; else return; }
        }
        const updateState = (prevState: any) => {
            let finalValue: string | number = numericKeys.includes(key) ? ((processedValue === "" || processedValue === ".") ? 0 : parseFloat(processedValue as string) || 0) : processedValue;
            return { ...prevState, [key]: finalValue };
        };
        if (isEdit) setEditFood(updateState); else setNewFood(updateState);
    };
    
    const setFoodIconForName = useCallback((name: string, icon: string | null) => {
        setFoodIcons(prev => {
            if (prev[name] === icon) return prev;
            return { ...prev, [name]: icon };
        });
    }, []);

    if (isLoading) {
        return (
            <SafeAreaView style={styles.centeredLoader} edges={['top', 'left', 'right']}>
                <ActivityIndicator size="large" color={theme.colors.primary} />
                <Text style={styles.loadingText}>{t('foodListScreen.loadingFoods')}</Text>
            </SafeAreaView>
        );
    }
    
    return (
        <SafeAreaView style={styles.container} edges={['top', 'left', 'right']}>
            <SearchBar
                placeholder={t('foodListScreen.searchPlaceholder')}
                onChangeText={setSearch}
                value={search}
                platform="default"
                containerStyle={styles.searchBarContainer}
                inputContainerStyle={styles.searchBarInputContainer}
                inputStyle={styles.searchInputStyle}
                onClear={() => setSearch('')}
                lightTheme={theme.mode === 'light'}
                round
            />
            <View style={styles.controlsContainer}>
                <Text style={styles.resultsCount}>{`${displayedFoods.length} foods`}</Text>
                
                <TouchableOpacity ref={sortButtonRef} style={styles.sortButton} onPress={toggleSortMenu}>
                    <RNEIcon name="sort" type="material-community" size={18} color={theme.colors.primary} />
                    <Text style={styles.sortButtonText}>{sortOptions[sortIndex].label}</Text>
                </TouchableOpacity>

                <Overlay
                    isVisible={isSortMenuVisible}
                    onBackdropPress={toggleSortMenu}
                    overlayStyle={[styles.sortOverlay, { top: sortButtonPosition.y + sortButtonPosition.height, left: I18nManager.isRTL ? undefined : sortButtonPosition.x, right: I18nManager.isRTL ? (StyleSheet.absoluteFillObject.right || 0) + 15 : undefined }]}
                >
                    <View>
                        {sortOptions.map((option, index) => (
                            <TouchableOpacity key={option.value} style={styles.sortMenuItem} onPress={() => handleSortChange(index)}>
                                <Text style={styles.sortMenuText}>{option.label}</Text>
                                {sortIndex === index && <RNEIcon name="check" type="material-community" size={20} color={theme.colors.primary} />}
                            </TouchableOpacity>
                        ))}
                    </View>
                </Overlay>

            </View>
            <FlatList
                data={displayedFoods}
                keyExtractor={(item) => item.id}
                renderItem={({ item }) => (
                    <FoodItem
                        food={item}
                        onEdit={toggleOverlay}
                        onDelete={handleDeleteFood}
                        onQuickAdd={handleQuickAdd}
                        onShare={handleShareFood}
                        foodIconUrl={foodIcons[item.name]}
                        setFoodIconForName={setFoodIconForName}
                    />
                )}
                ListEmptyComponent={
                    <View style={styles.emptyListContainer}>
                        <RNEIcon name="nutrition-outline" type="ionicon" size={50} color={theme.colors.grey3} />
                        <Text style={styles.emptyListText}>
                            {search.trim() ? t('foodListScreen.noResults', { searchTerm: search.trim() }) : t('foodListScreen.emptyLibrary')}
                        </Text>
                        {!search.trim() && <Text style={styles.emptyListSubText}>{t('foodListScreen.emptyLibraryHint')}</Text>}
                    </View>
                }
                contentContainerStyle={displayedFoods.length === 0 ? styles.listContentContainerEmpty : styles.listContentContainer}
                keyboardShouldPersistTaps="handled"
                extraData={{ foodIcons, masterFoodsLength: masterFoods.length, sortOption }}
            />
            <FAB
                icon={<RNEIcon name="add" color={theme.colors.white} />}
                color={theme.colors.primary}
                onPress={() => !isSaving && toggleOverlay()}
                placement="right"
                size="large"
                style={styles.fab}
                disabled={isSaving}
            />
            {isOverlayVisible && <AddFoodModal
                isVisible={isOverlayVisible}
                toggleOverlay={() => !isSaving && setIsOverlayVisible(false)} 
                newFood={newFood}
                editFood={editFood}
                errors={errors}
                handleInputChange={handleInputChange}
                handleCreateFood={handleCreateFood}
                handleUpdateFood={handleUpdateFood}
                validateFood={validateFood}
                setErrors={setErrors}
            />}
        </SafeAreaView>
    );
};

const useStyles = makeStyles((theme) => ({
    container: { flex: 1, backgroundColor: theme.colors.background, },
    centeredLoader: { flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: theme.colors.background, },
    loadingText: { marginTop: 15, color: theme.colors.grey1, fontSize: 16, },
    emptyListContainer: { flex: 1, alignItems: 'center', justifyContent: 'center', padding: 30, marginTop: 20, },
    emptyListText: { fontSize: 17, color: theme.colors.grey2, textAlign: 'center', marginTop: 15, },
    emptyListSubText: { fontSize: 14, color: theme.colors.grey3, textAlign: 'center', marginTop: 8, },
    searchBarContainer: {
        backgroundColor: 'transparent', borderBottomColor: 'transparent', borderTopColor: 'transparent',
        paddingHorizontal: 10, paddingTop: 8, paddingBottom: 5,
    },
    searchBarInputContainer: { backgroundColor: theme.colors.searchBg || theme.colors.grey5, },
    searchInputStyle: { color: theme.colors.text, fontSize: 15, textAlign: I18nManager.isRTL ? 'right' : 'left', },
    controlsContainer: {
        flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between', paddingHorizontal: 15,
        paddingBottom: 12, borderBottomWidth: StyleSheet.hairlineWidth, borderBottomColor: theme.colors.divider,
    },
    resultsCount: { color: theme.colors.grey2, fontWeight: '600', fontSize: 14, },
    sortButton: {
        flexDirection: 'row',
        alignItems: 'center',
        paddingVertical: 6,
        paddingHorizontal: 12,
        borderRadius: 20,
        backgroundColor: theme.colors.primaryLight,
    },
    sortButtonText: {
        color: theme.colors.primary,
        fontWeight: 'bold',
        fontSize: 14,
        marginLeft: 6,
    },
    sortOverlay: {
        position: 'absolute',
        borderRadius: 8,
        padding: 0,
        backgroundColor: theme.colors.card,
        elevation: 5,
        shadowColor: theme.colors.black,
        shadowOpacity: 0.2,
        shadowRadius: 5,
        shadowOffset: { width: 0, height: 3 },
    },
    sortMenuItem: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        paddingVertical: 12,
        paddingHorizontal: 16,
        borderBottomWidth: StyleSheet.hairlineWidth,
        borderBottomColor: theme.colors.divider,
        minWidth: 150,
    },
    sortMenuText: {
        color: theme.colors.text,
        fontSize: 16,
    },
    listContentContainer: { paddingBottom: 80, },
    listContentContainerEmpty: { flexGrow: 1, justifyContent: 'center', },
    fab: {
        position: 'absolute', margin: 16, right: I18nManager.isRTL ? undefined : 10,
        left: I18nManager.isRTL ? 10 : undefined, bottom: 10,
    },
}));

export default FoodListScreen;
---------- END FoodListScreen.tsx ----------


---------- ForgotPasswordScreen.tsx ----------
// src/screens/ForgotPasswordScreen.tsx
import React, { useState } from 'react';
import { View, StyleSheet, Alert, TouchableOpacity, SafeAreaView } from 'react-native';
import { Input, Button, Text, Icon, useTheme } from '@rneui/themed';
import { useNavigation } from '@react-navigation/native';
import { NativeStackNavigationProp } from '@react-navigation/native-stack';
import { AuthStackParamList } from '../navigation/AppNavigator';
import { requestPasswordReset } from '../services/authService';
import { t } from '../localization/i18n';

type ForgotPasswordScreenNavigationProp = NativeStackNavigationProp<AuthStackParamList, 'ForgotPassword'>;

const ForgotPasswordScreen: React.FC = () => {
    const [email, setEmail] = useState('');
    const [isLoading, setIsLoading] = useState(false);
    const navigation = useNavigation<ForgotPasswordScreenNavigationProp>();
    const { theme } = useTheme();

    const handleSendLink = async () => {
        if (!email.trim()) {
            Alert.alert('Email Required', 'Please enter your email address.');
            return;
        }
        setIsLoading(true);
        try {
            const response = await requestPasswordReset(email);
            Alert.alert(
                t('forgotPasswordScreen.alertSuccessTitle'),
                response.message,
                [{ text: 'OK', onPress: () => navigation.goBack() }]
            );
        } catch (error: any) {
            // Error is handled and alerted by the authService
        } finally {
            setIsLoading(false);
        }
    };

    return (
        <SafeAreaView style={[styles.container, { backgroundColor: theme.colors.background }]}>
            <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>
                <Icon name="arrow-left" type="material-community" color={theme.colors.text} size={28} />
            </TouchableOpacity>
            <View style={styles.content}>
                <Text h3 style={[styles.title, { color: theme.colors.text }]}>
                    {t('forgotPasswordScreen.title')}
                </Text>
                <Text style={[styles.instructions, { color: theme.colors.grey2 }]}>
                    {t('forgotPasswordScreen.instructions')}
                </Text>
                <Input
                    placeholder={t('forgotPasswordScreen.emailPlaceholder')}
                    leftIcon={<Icon name="envelope" type="font-awesome" size={20} color={theme.colors.grey3} />}
                    onChangeText={setEmail}
                    value={email}
                    keyboardType="email-address"
                    autoCapitalize="none"
                    autoFocus={true}
                    containerStyle={styles.inputContainer}
                    inputStyle={{ color: theme.colors.text }}
                />
                <Button
                    title={t('forgotPasswordScreen.buttonText')}
                    onPress={handleSendLink}
                    loading={isLoading}
                    buttonStyle={styles.button}
                    containerStyle={styles.buttonContainer}
                />
                 <TouchableOpacity onPress={() => navigation.navigate('Login')}>
                    <Text style={[styles.switchText, { color: theme.colors.primary }]}>
                        {t('forgotPasswordScreen.backToLogin')}
                    </Text>
                </TouchableOpacity>
            </View>
        </SafeAreaView>
    );
};

const styles = StyleSheet.create({
    container: {
        flex: 1,
    },
    backButton: {
        position: 'absolute',
        top: 60,
        left: 20,
        zIndex: 1,
    },
    content: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        padding: 20,
    },
    title: {
        marginBottom: 15,
        textAlign: 'center',
    },
    instructions: {
        marginBottom: 30,
        textAlign: 'center',
        fontSize: 16,
        paddingHorizontal: 10,
    },
    inputContainer: {
        width: '100%',
        marginBottom: 10,
    },
    button: {
        height: 50,
        borderRadius: 8,
    },
    buttonContainer: {
        width: '100%',
        marginTop: 20,
    },
    switchText: {
        marginTop: 20,
        textDecorationLine: 'underline',
    },
});

export default ForgotPasswordScreen;
---------- END ForgotPasswordScreen.tsx ----------


---------- LoginScreen.tsx ----------
// src/screens/LoginScreen.tsx
import React, { useState } from 'react';
import { View, StyleSheet, Alert, TouchableOpacity, SafeAreaView } from 'react-native';
import { Input, Button, Text, Icon, useTheme } from '@rneui/themed';
import { useNavigation } from '@react-navigation/native';
import { NativeStackNavigationProp } from '@react-navigation/native-stack';
import { AuthStackParamList } from '../navigation/AppNavigator';
import { useAuth, AuthContextType } from '../context/AuthContext';
import { loginUser } from '../services/authService';
import { t } from '../localization/i18n';

type LoginScreenNavigationProp = NativeStackNavigationProp<AuthStackParamList, 'Login'>;

const LoginScreen: React.FC = () => {
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [isLoading, setIsLoading] = useState(false);
    const [isPasswordVisible, setIsPasswordVisible] = useState(false);
    const navigation = useNavigation<LoginScreenNavigationProp>();
    const { login } = useAuth() as AuthContextType;
    const { theme } = useTheme();

    const handleLogin = async () => {
        if (!email || !password) {
            Alert.alert('Missing Fields', 'Please enter both email and password.');
            return;
        }
        setIsLoading(true);
        try {
            const response = await loginUser(email, password);
            if (response.access_token) {
                await login(response);
            }
        } catch (error: any) {
            // Error is handled and alerted by the authService
        } finally {
            setIsLoading(false);
        }
    };

    return (
        <SafeAreaView style={[styles.container, { backgroundColor: theme.colors.background }]}>
            <Text h2 style={[styles.title, { color: theme.colors.text }]}>Welcome Back</Text>
            <Input
                placeholder="Email"
                leftIcon={<Icon name="envelope" type="font-awesome" size={20} color={theme.colors.grey3} />}
                onChangeText={setEmail}
                value={email}
                keyboardType="email-address"
                autoCapitalize="none"
                containerStyle={styles.inputContainer}
                inputStyle={{ color: theme.colors.text }}
            />
            <Input
                placeholder="Password"
                leftIcon={<Icon name="lock" type="font-awesome" size={24} color={theme.colors.grey3} />}
                rightIcon={
                    <Icon 
                        name={isPasswordVisible ? 'eye-slash' : 'eye'} 
                        type="font-awesome" 
                        color={theme.colors.grey3}
                        onPress={() => setIsPasswordVisible(!isPasswordVisible)}
                    />
                }
                onChangeText={setPassword}
                value={password}
                secureTextEntry={!isPasswordVisible}
                containerStyle={styles.inputContainer}
                inputStyle={{ color: theme.colors.text }}
            />
            <Button
                title="Login"
                onPress={handleLogin}
                loading={isLoading}
                buttonStyle={styles.button}
                containerStyle={styles.buttonContainer}
            />
            <TouchableOpacity onPress={() => navigation.navigate('ForgotPassword')}>
                <Text style={[styles.forgotPassword, { color: theme.colors.secondary }]}>
                    {t('forgotPasswordScreen.forgotPasswordLink')}
                </Text>
            </TouchableOpacity>
            <TouchableOpacity onPress={() => navigation.navigate('Register')}>
                <Text style={[styles.switchText, { color: theme.colors.primary }]}>Don't have an account? Sign Up</Text>
            </TouchableOpacity>
        </SafeAreaView>
    );
};

const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        padding: 20,
    },
    title: {
        marginBottom: 30,
    },
    inputContainer: {
        width: '100%',
        marginBottom: 10,
    },
    button: {
        height: 50,
        borderRadius: 8,
    },
    buttonContainer: {
        width: '100%',
        marginTop: 20,
    },
    forgotPassword: {
        marginTop: 15,
        textAlign: 'center'
    },
    switchText: {
        marginTop: 20,
        textDecorationLine: 'underline',
    },
});

export default LoginScreen;
---------- END LoginScreen.tsx ----------


---------- QuestionnaireScreen.tsx ----------
// src/screens/QuestionnaireScreen.tsx
import React, { useState, useCallback, useMemo } from 'react';
import { View, ScrollView, Alert, StyleSheet, I18nManager, Platform } from 'react-native';
import { Input, Button, Text, useTheme, makeStyles, CheckBox } from '@rneui/themed';
import { Picker } from '@react-native-picker/picker';
import { useNavigation } from '@react-navigation/native';
import { NativeStackNavigationProp } from '@react-navigation/native-stack';
import { QuestionnaireFormData, Sex, ActivityLevel, PrimaryGoal, GoalIntensity, CalculatedGoals } from '../types/questionnaire';
import { MacroType, Settings } from '../types/settings';
import { loadSettings, saveSettings } from '../services/storageService';
import i18n, { t } from '../localization/i18n';
import Toast from 'react-native-toast-message';

type SettingsStackParamList = {
  SettingsScreen: undefined;
  QuestionnaireScreen: undefined;
};

type QuestionnaireNavigationProp = NativeStackNavigationProp<SettingsStackParamList, 'QuestionnaireScreen'>;

const QuestionnaireScreen: React.FC = () => {
  const { theme } = useTheme();
  const styles = useStyles();
  const navigation = useNavigation<QuestionnaireNavigationProp>();

  const [formData, setFormData] = useState<QuestionnaireFormData>({
    age: '',
    sex: '',
    height: '',
    weight: '',
    activityLevel: '',
    primaryGoal: '',
    goalIntensity: GoalIntensity.MODERATE, // Default intensity
  });

  const [errors, setErrors] = useState<Partial<Record<keyof QuestionnaireFormData, string>>>({});
  const [isCalculating, setIsCalculating] = useState(false);

  const activityLevelOptions = useMemo(() => [
    { label: t('questionnaireScreen.activityLevel.select'), value: '' },
    { label: t('questionnaireScreen.activityLevel.sedentary'), value: ActivityLevel.SEDENTARY },
    { label: t('questionnaireScreen.activityLevel.light'), value: ActivityLevel.LIGHT },
    { label: t('questionnaireScreen.activityLevel.moderate'), value: ActivityLevel.MODERATE },
    { label: t('questionnaireScreen.activityLevel.active'), value: ActivityLevel.ACTIVE },
    { label: t('questionnaireScreen.activityLevel.veryActive'), value: ActivityLevel.VERY_ACTIVE },
  ], [i18n.locale]);

  const sexOptions = useMemo(() => [
    { label: t('questionnaireScreen.sex.select'), value: '' },
    { label: t('questionnaireScreen.sex.male'), value: Sex.MALE },
    { label: t('questionnaireScreen.sex.female'), value: Sex.FEMALE },
  ], [i18n.locale]);

  const primaryGoalOptions = useMemo(() => [
    { label: t('questionnaireScreen.primaryGoal.select'), value: '' },
    { label: t('questionnaireScreen.primaryGoal.loseWeight'), value: PrimaryGoal.LOSE_WEIGHT },
    { label: t('questionnaireScreen.primaryGoal.maintainWeight'), value: PrimaryGoal.MAINTAIN_WEIGHT },
    { label: t('questionnaireScreen.primaryGoal.gainMuscle'), value: PrimaryGoal.GAIN_MUSCLE },
  ], [i18n.locale]);

  const goalIntensityOptions = useMemo(() => [
    { label: t('questionnaireScreen.goalIntensity.mild'), value: GoalIntensity.MILD },
    { label: t('questionnaireScreen.goalIntensity.moderate'), value: GoalIntensity.MODERATE },
    { label: t('questionnaireScreen.goalIntensity.aggressive'), value: GoalIntensity.AGGRESSIVE },
  ], [i18n.locale]);


  const handleInputChange = (field: keyof QuestionnaireFormData, value: any) => {
    setFormData(prev => ({ ...prev, [field]: value }));
    if (errors[field]) {
      setErrors(prev => ({ ...prev, [field]: undefined }));
    }
  };

  const validateForm = (): boolean => {
    const newErrors: Partial<Record<keyof QuestionnaireFormData, string>> = {};
    const ageNum = parseFloat(formData.age);
    const heightNum = parseFloat(formData.height);
    const weightNum = parseFloat(formData.weight);

    if (!formData.age.trim() || isNaN(ageNum) || ageNum <= 0 || ageNum > 120) {
      newErrors.age = t('questionnaireScreen.validation.invalidAge');
    }
    if (formData.sex === '') {
      newErrors.sex = t('questionnaireScreen.validation.selectSex');
    }
    if (!formData.height.trim() || isNaN(heightNum) || heightNum <= 50 || heightNum > 250) {
      newErrors.height = t('questionnaireScreen.validation.invalidHeight');
    }
    if (!formData.weight.trim() || isNaN(weightNum) || weightNum <= 20 || weightNum > 300) {
      newErrors.weight = t('questionnaireScreen.validation.invalidWeight');
    }
    if (formData.activityLevel === '') {
      newErrors.activityLevel = t('questionnaireScreen.validation.selectActivityLevel');
    }
    if (formData.primaryGoal === '') {
      newErrors.primaryGoal = t('questionnaireScreen.validation.selectPrimaryGoal');
    }
    if (formData.primaryGoal !== PrimaryGoal.MAINTAIN_WEIGHT && !formData.goalIntensity) {
        newErrors.goalIntensity = t('questionnaireScreen.validation.selectGoalIntensity');
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const calculateGoals = (): CalculatedGoals | null => {
    const age = parseFloat(formData.age);
    const height = parseFloat(formData.height);
    const weight = parseFloat(formData.weight);

    // BMR (Mifflin-St Jeor)
    let bmr: number;
    if (formData.sex === Sex.MALE) {
      bmr = 10 * weight + 6.25 * height - 5 * age + 5;
    } else {
      bmr = 10 * weight + 6.25 * height - 5 * age - 161;
    }

    // TDEE
    let activityMultiplier = 1.2;
    switch (formData.activityLevel) {
      case ActivityLevel.SEDENTARY: activityMultiplier = 1.2; break;
      case ActivityLevel.LIGHT: activityMultiplier = 1.375; break;
      case ActivityLevel.MODERATE: activityMultiplier = 1.55; break;
      case ActivityLevel.ACTIVE: activityMultiplier = 1.725; break;
      case ActivityLevel.VERY_ACTIVE: activityMultiplier = 1.9; break;
    }
    const tdee = bmr * activityMultiplier;

    // Calorie Goal
    let calorieAdjustment = 0;
    if (formData.primaryGoal !== PrimaryGoal.MAINTAIN_WEIGHT) {
      switch (formData.goalIntensity) {
        case GoalIntensity.MILD: calorieAdjustment = (formData.primaryGoal === PrimaryGoal.LOSE_WEIGHT ? -300 : 250); break;
        case GoalIntensity.MODERATE: calorieAdjustment = (formData.primaryGoal === PrimaryGoal.LOSE_WEIGHT ? -500 : 400); break;
        case GoalIntensity.AGGRESSIVE: calorieAdjustment = (formData.primaryGoal === PrimaryGoal.LOSE_WEIGHT ? -700 : 600); break;
      }
    }
    let calorieGoal = tdee + calorieAdjustment;

    // Ensure calorie goal is not below minimums
    const minCalories = formData.sex === Sex.FEMALE ? 1200 : 1500;
    if (calorieGoal < minCalories) {
        calorieGoal = minCalories;
        Toast.show({ type: 'info', text1: t('questionnaireScreen.toast.minCaloriesAdjustedTitle'), text2: t('questionnaireScreen.toast.minCaloriesAdjustedMessage', { calories: minCalories }), position: 'bottom' });
    }
    if (formData.primaryGoal === PrimaryGoal.LOSE_WEIGHT && calorieGoal >= tdee) {
        calorieGoal = tdee - 100; // Ensure at least a small deficit
    }
    if (formData.primaryGoal === PrimaryGoal.GAIN_MUSCLE && calorieGoal <= tdee) {
        calorieGoal = tdee + 100; // Ensure at least a small surplus
    }


    // Macros
    let proteinPerKg = 1.8;
    if (formData.primaryGoal === PrimaryGoal.GAIN_MUSCLE) proteinPerKg = 2.0;
    if (age > 65) proteinPerKg = Math.max(1.2, proteinPerKg - 0.4); // Adjust for older adults

    const proteinGrams = proteinPerKg * weight;
    const proteinCalories = proteinGrams * 4;

    const fatPercentage = 0.25; // 25% of calories from fat
    const fatCalories = calorieGoal * fatPercentage;
    const fatGrams = fatCalories / 9;

    const carbCalories = calorieGoal - proteinCalories - fatCalories;
    const carbGrams = carbCalories / 4;

    return {
      calories: Math.round(calorieGoal),
      protein: Math.round(proteinGrams),
      carbs: Math.round(carbGrams),
      fat: Math.round(fatGrams),
    };
  };

  const handleSubmit = async () => {
    if (!validateForm()) {
      Toast.show({ type: 'error', text1: t('questionnaireScreen.validation.fixErrors'), position: 'bottom' });
      return;
    }
    setIsCalculating(true);
    try {
      const calculated = calculateGoals();
      if (calculated) {
        const currentSettings = await loadSettings();
        const updatedSettings: Settings = {
          ...currentSettings,
          dailyGoals: calculated,
        };
        await saveSettings(updatedSettings);
        Toast.show({ type: 'success', text1: t('questionnaireScreen.toast.goalsCalculated'), position: 'bottom' });
        navigation.goBack();
      } else {
        Alert.alert(t('questionnaireScreen.error.calculationFailedTitle'), t('questionnaireScreen.error.calculationFailedMessage'));
      }
    } catch (error) {
      console.error("Error saving estimated goals:", error);
      Alert.alert(t('questionnaireScreen.error.genericSaveTitle'), t('questionnaireScreen.error.genericSaveMessage'));
    } finally {
      setIsCalculating(false);
    }
  };

  const renderPicker = (
    label: string,
    selectedValue: string | number,
    onValueChange: (itemValue: any, itemIndex: number) => void,
    items: { label: string, value: string | number }[],
    error?: string
  ) => (
    <View style={styles.inputContainer}>
      <Text style={styles.label}>{label}</Text>
      <View style={[styles.pickerWrapper, error ? styles.errorBorder : {}]}>
        <Picker
          selectedValue={selectedValue}
          onValueChange={onValueChange}
          style={[styles.picker, Platform.OS === 'android' ? { color: theme.colors.text, backgroundColor: theme.colors.background } : {}]}
          itemStyle={[styles.pickerItem, Platform.OS === 'ios' ? {color: theme.colors.text} : {}]}
          dropdownIconColor={theme.colors.text}
        >
          {items.map(item => <Picker.Item key={item.value.toString()} label={item.label} value={item.value} />)}
        </Picker>
      </View>
      {error && <Text style={styles.errorText}>{error}</Text>}
    </View>
  );

  return (
    <ScrollView style={styles.container} contentContainerStyle={styles.scrollContentContainer} keyboardShouldPersistTaps="handled">
      <Text h4 style={styles.title}>{t('questionnaireScreen.title')}</Text>

      <Input
        label={t('questionnaireScreen.ageLabel')}
        placeholder={t('questionnaireScreen.agePlaceholder')}
        keyboardType="numeric"
        value={formData.age}
        onChangeText={val => handleInputChange('age', val)}
        errorMessage={errors.age}
        inputStyle={{ textAlign: I18nManager.isRTL ? 'right' : 'left', color: theme.colors.text}}
        labelStyle={styles.label}
        errorStyle={styles.errorText}
        containerStyle={styles.inputContainer}
      />

      {renderPicker(t('questionnaireScreen.sexLabel'), formData.sex, (val) => handleInputChange('sex', val), sexOptions, errors.sex)}

      <Input
        label={t('questionnaireScreen.heightLabel')}
        placeholder={t('questionnaireScreen.heightPlaceholder')}
        keyboardType="numeric"
        value={formData.height}
        onChangeText={val => handleInputChange('height', val)}
        errorMessage={errors.height}
        rightIcon={<Text style={styles.unitText}>cm</Text>}
        inputStyle={{ textAlign: I18nManager.isRTL ? 'right' : 'left', color: theme.colors.text}}
        labelStyle={styles.label}
        errorStyle={styles.errorText}
        containerStyle={styles.inputContainer}
      />

      <Input
        label={t('questionnaireScreen.weightLabel')}
        placeholder={t('questionnaireScreen.weightPlaceholder')}
        keyboardType="numeric"
        value={formData.weight}
        onChangeText={val => handleInputChange('weight', val)}
        errorMessage={errors.weight}
        rightIcon={<Text style={styles.unitText}>kg</Text>}
        inputStyle={{ textAlign: I18nManager.isRTL ? 'right' : 'left', color: theme.colors.text}}
        labelStyle={styles.label}
        errorStyle={styles.errorText}
        containerStyle={styles.inputContainer}
      />

      {renderPicker(t('questionnaireScreen.activityLevelLabel'), formData.activityLevel, (val) => handleInputChange('activityLevel', val), activityLevelOptions, errors.activityLevel)}
      {renderPicker(t('questionnaireScreen.primaryGoalLabel'), formData.primaryGoal, (val) => handleInputChange('primaryGoal', val), primaryGoalOptions, errors.primaryGoal)}

      {formData.primaryGoal && formData.primaryGoal !== PrimaryGoal.MAINTAIN_WEIGHT && (
        renderPicker(t('questionnaireScreen.goalIntensityLabel'), formData.goalIntensity || '', (val) => handleInputChange('goalIntensity', val), goalIntensityOptions, errors.goalIntensity)
      )}

      <Button
        title={t('questionnaireScreen.calculateButton')}
        onPress={handleSubmit}
        buttonStyle={styles.button}
        loading={isCalculating}
        disabled={isCalculating}
      />
    </ScrollView>
  );
};

const useStyles = makeStyles((theme) => ({
  container: {
    flex: 1,
    backgroundColor: theme.colors.background,
  },
  scrollContentContainer: {
    padding: 20,
    paddingBottom: 40,
  },
  title: {
    marginBottom: 20,
    textAlign: 'center',
    color: theme.colors.text,
  },
  inputContainer: {
    marginBottom: 15,
  },
  label: {
    color: theme.colors.secondary,
    fontWeight: 'bold',
    marginBottom: 5,
    fontSize: 16,
    textAlign: I18nManager.isRTL ? 'right' : 'left',
  },
  unitText: {
    color: theme.colors.secondary,
    fontSize: 16,
  },
  pickerWrapper: {
    borderColor: theme.colors.grey3,
    borderWidth: 1,
    borderRadius: 5,
    backgroundColor: theme.colors.background, // Ensure picker background matches
  },
  picker: {
    height: Platform.OS === 'ios' ? 120 : 50,
    width: '100%',
  },
  pickerItem: {
     // For iOS, text color is set here. Android uses picker's color prop.
     textAlign: I18nManager.isRTL ? 'right' : 'left',
  },
  errorText: {
    color: theme.colors.error,
    marginTop: 3,
    fontSize: 12,
    textAlign: I18nManager.isRTL ? 'right' : 'left',
  },
  errorBorder: {
    borderColor: theme.colors.error,
  },
  button: {
    marginTop: 20,
    backgroundColor: theme.colors.primary,
    borderRadius: 8,
  },
}));

export default QuestionnaireScreen;
---------- END QuestionnaireScreen.tsx ----------


---------- RegisterScreen.tsx ----------
// src/screens/RegisterScreen.tsx
import React, { useState } from 'react';
import { View, StyleSheet, Alert, TouchableOpacity, SafeAreaView } from 'react-native';
import { Input, Button, Text, Icon, useTheme } from '@rneui/themed';
import { useNavigation } from '@react-navigation/native';
import { NativeStackNavigationProp } from '@react-navigation/native-stack';
import { AuthStackParamList } from '../navigation/AppNavigator';
import { registerUser } from '../services/authService';

type RegisterScreenNavigationProp = NativeStackNavigationProp<AuthStackParamList, 'Register'>;

const RegisterScreen: React.FC = () => {
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [isLoading, setIsLoading] = useState(false);
    const navigation = useNavigation<RegisterScreenNavigationProp>();
    const { theme } = useTheme();

    const handleRegister = async () => {
        if (!email || !password) {
            Alert.alert('Missing Fields', 'Please fill in all fields.');
            return;
        }
        if (password.length < 8) {
            Alert.alert('Password Too Short', 'Password must be at least 8 characters long.');
            return;
        }
        setIsLoading(true);
        try {
            const response = await registerUser(email, password);
            Alert.alert(
                'Check Your Email',
                response.message,
                [{ text: 'OK', onPress: () => navigation.navigate('Login') }]
            );
        } catch (error: any) {
            // Error is handled and alerted by the authService
        } finally {
            setIsLoading(false);
        }
    };

    return (
        <SafeAreaView style={[styles.container, { backgroundColor: theme.colors.background }]}>
            <Text h2 style={[styles.title, { color: theme.colors.text }]}>Create Account</Text>
            <Input
                placeholder="Email"
                leftIcon={<Icon name="envelope" type="font-awesome" size={20} color={theme.colors.grey3} />}
                onChangeText={setEmail}
                value={email}
                keyboardType="email-address"
                autoCapitalize="none"
                containerStyle={styles.inputContainer}
                inputStyle={{ color: theme.colors.text }}
            />
            <Input
                placeholder="Password (min 8 characters)"
                leftIcon={<Icon name="lock" type="font-awesome" size={24} color={theme.colors.grey3} />}
                onChangeText={setPassword}
                value={password}
                secureTextEntry
                containerStyle={styles.inputContainer}
                inputStyle={{ color: theme.colors.text }}
            />
            <Button
                title="Register"
                onPress={handleRegister}
                loading={isLoading}
                buttonStyle={styles.button}
                containerStyle={styles.buttonContainer}
            />
            <TouchableOpacity onPress={() => navigation.navigate('Login')}>
                <Text style={[styles.switchText, { color: theme.colors.primary }]}>Already have an account? Log In</Text>
            </TouchableOpacity>
        </SafeAreaView>
    );
};

const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        padding: 20,
    },
    title: {
        marginBottom: 30,
    },
    inputContainer: {
        width: '100%',
        marginBottom: 10,
    },
    button: {
        height: 50,
        borderRadius: 8,
    },
    buttonContainer: {
        width: '100%',
        marginTop: 20,
    },
    switchText: {
        marginTop: 20,
        textDecorationLine: 'underline',
    },
});

export default RegisterScreen;
---------- END RegisterScreen.tsx ----------


---------- SettingsScreen.tsx ----------
// src/screens/SettingsScreen.tsx
import React, { useState, useEffect, useCallback } from "react";
import { View, ScrollView, Alert, StyleSheet, ActivityIndicator, Platform, I18nManager } from "react-native";
import { Text, makeStyles, Button, Icon, useTheme, ListItem } from "@rneui/themed";
import { Picker } from '@react-native-picker/picker';
import DailyGoalsInput from "../components/DailyGoalsInput";
import DataManagementButtons from "../components/DataManagementButtons";
import ThemeSwitch from "../components/ThemeSwitch";
import StatisticsChart from "../components/StatisticsChart";
import AccountSettings from "../components/AccountSettings";
import { loadSettings, saveSettings, loadDailyEntries } from "../services/storageService";
import { Settings, Statistics, MacroType, MacroData, LanguageCode, macros as macroKeysSetting } from "../types/settings";
import { parseISO, isValid, startOfDay } from "date-fns";
import { DailyEntry } from "../types/dailyEntry";
import { useFocusEffect, useNavigation } from "@react-navigation/native";
import { NativeStackNavigationProp } from "@react-navigation/native-stack";
import Toast from "react-native-toast-message";
import { getUserStatus, addCoinsToUser, BackendError } from "../services/backendService";
import { t } from "../localization/i18n";
import i18n from '../localization/i18n';

interface SettingsScreenProps {
  onThemeChange: (theme: "light" | "dark" | "system") => void;
  onLocaleChange: (locale: LanguageCode) => void;
  onDataOperation: () => void; 
  onLogout: () => void;
}

type SettingsStackParamList = {
  SettingsHome: undefined; 
  Questionnaire: undefined; 
};

type SettingsNavigationProp = NativeStackNavigationProp<SettingsStackParamList, 'SettingsHome'>;

const calculateMovingAverage = (data: MacroData[], windowSize: number): MacroData[] => {
    if (windowSize <= 1) return data;
    const movingAverageData: MacroData[] = [];
    for (let i = 0; i < data.length; i++) {
        const windowStart = Math.max(0, i - windowSize + 1);
        const windowSlice = data.slice(windowStart, i + 1);
        const sum = windowSlice.reduce((acc, point) => acc + point.y, 0);
        const average = sum / windowSlice.length;
        movingAverageData.push({ x: data[i].x, y: Math.round(average) });
    }
    return movingAverageData;
};


const SettingsScreen: React.FC<SettingsScreenProps> = ({ onThemeChange, onLocaleChange, onDataOperation, onLogout }) => {
  const [settings, setSettings] = useState<Settings>({
    theme: "system",
    language: "system",
    dailyGoals: { calories: 0, protein: 0, carbs: 0, fat: 0 },
    settingsHistory: [],
  });

  const [statistics, setStatistics] = useState<Statistics>({
    calories: [], protein: [], carbs: [], fat: [],
  });
  const [chartUpdateKey, setChartUpdateKey] = useState(0);
  const [userCoins, setUserCoins] = useState<number | null>(null);
  const [isLoadingCoins, setIsLoadingCoins] = useState(false);
  const [isAddingCoins, setIsAddingCoins] = useState(false);
  const [isDataLoading, setIsDataLoading] = useState(true); 

  const { theme } = useTheme();
  const styles = useStyles();
  const navigation = useNavigation<SettingsNavigationProp>(); 

  const getStatisticsData = useCallback((
    dailyEntries: DailyEntry[],
    macro: MacroType,
    currentGoals: { [key in MacroType]: number }
  ): MacroData[][] => {
    const intakeDataMap = new Map<number, number>(); 
    const goalDataMap = new Map<number, number>();   

    dailyEntries.forEach((entry) => {
      try {
        const entryDate = parseISO(entry.date);
        if (!isValid(entryDate)) {
          console.warn(`Invalid date in getStatisticsData: ${entry.date}`);
          return;
        }
        const entryTimestamp = startOfDay(entryDate).getTime();

        let intakeValue = 0;
        if (entry.items && Array.isArray(entry.items)) {
          intakeValue = entry.items.reduce((total, item) => {
            if (item.food && typeof item.food[macro] === 'number' && typeof item.grams === 'number' && item.grams > 0) {
              return total + (item.food[macro] / 100) * item.grams;
            }
            return total;
          }, 0);
        }
        intakeDataMap.set(entryTimestamp, (intakeDataMap.get(entryTimestamp) || 0) + Math.round(intakeValue));

        if (macro === "calories") {
          const goalValue = currentGoals[macro] ?? 0;
           if (intakeDataMap.has(entryTimestamp)) {
             goalDataMap.set(entryTimestamp, Math.round(goalValue));
           }
        }
      } catch (parseError) {
        console.error(`Error processing entry ${entry.date} for statistics:`, parseError);
      }
    });

    const sortedTimestamps = Array.from(new Set([...intakeDataMap.keys(), ...goalDataMap.keys()])).sort((a,b) => a - b);
    
    const finalIntakeData: MacroData[] = sortedTimestamps.map(ts => ({
        x: ts,
        y: intakeDataMap.get(ts) || 0
    }));

    const movingAverageData = calculateMovingAverage(finalIntakeData, 7);

    if (macro === "calories") {
        const finalGoalData: MacroData[] = sortedTimestamps.map(ts => ({
            x: ts,
            y: goalDataMap.get(ts) || currentGoals[macro] || 0
        }));
        return [finalIntakeData, movingAverageData, finalGoalData];
    }
    return [finalIntakeData, movingAverageData];
  }, []);


  const updateStatistics = useCallback(async (currentGoals: { [key in MacroType]: number }) => {
    try {
        const loadedEntries = await loadDailyEntries();
        const updatedStats: Statistics = {
            calories: [], protein: [], carbs: [], fat: []
        };
        (macroKeysSetting as readonly MacroType[]).forEach(macro => {
            updatedStats[macro] = getStatisticsData(loadedEntries, macro, currentGoals);
        });
        setStatistics(updatedStats);
        setChartUpdateKey((prevKey) => prevKey + 1);
    } catch (error) {
        console.error("SettingsScreen: Failed to update statistics:", error);
    }
  }, [getStatisticsData]);

  const fetchUserStatus = useCallback(async () => {
    setIsLoadingCoins(true);
    try { 
      const status = await getUserStatus(); 
      setUserCoins(status.coins); 
    }
    catch (error) {
      setUserCoins(null);
      const message = error instanceof BackendError ? error.message : t('backendService.errorNetworkConnection');
      Toast.show({ 
        type: 'error', 
        text1: t('accountSettings.errorLoadCoins'), 
        text2: message, 
        position: 'bottom', 
      });
    }
    finally { setIsLoadingCoins(false); }
  }, [t]);

  useFocusEffect( useCallback(() => {
      let isActive = true;
      setIsDataLoading(true);
      const loadAndProcessData = async () => {
        try {
          const loadedSettings = await loadSettings();
          if (!isActive) return;
          setSettings(loadedSettings);
          navigation.setOptions({ title: t('settingsScreen.title') });
          await fetchUserStatus();
          await updateStatistics(loadedSettings.dailyGoals);
        } catch (error) {
          if (isActive) {
            Alert.alert(t('dailyEntryScreen.errorLoad'), t('dailyEntryScreen.errorLoadMessage'));
          }
        } finally {
          if (isActive) setIsDataLoading(false);
        }
      };
      loadAndProcessData();
      return () => { isActive = false; };
    }, [updateStatistics, fetchUserStatus, navigation, t]) 
  );

  const handleGoalChange = useCallback(async (goalType: MacroType, value: string) => {
    const numericValue = parseFloat(value);
    const validatedValue = isNaN(numericValue) || numericValue < 0 ? 0 : numericValue;

    setSettings((prevSettings) => {
      const updatedGoals = { ...prevSettings.dailyGoals, [goalType]: validatedValue };
      const updatedSettings: Settings = { ...prevSettings, dailyGoals: updatedGoals };
      
      saveSettings(updatedSettings)
        .then(() => {
          updateStatistics(updatedSettings.dailyGoals);
        })
        .catch((error) => {
          Alert.alert(t('dailyEntryScreen.errorSave'), t('dailyEntryScreen.errorSaveMessage'));
        });
      return updatedSettings;
    });
  }, [updateStatistics, t]);


  const localDataOperationHandler = useCallback(async () => {
    setIsDataLoading(true);
    try {
      const reloadedSettings = await loadSettings();
      setSettings(reloadedSettings);
      await updateStatistics(reloadedSettings.dailyGoals);
      await fetchUserStatus();
      onThemeChange(reloadedSettings.theme); 
      onLocaleChange(reloadedSettings.language); 
      
      onDataOperation(); 

      Toast.show({ type: 'info', text1: t('dataManagement.dataReloaded'), position: 'bottom'});
    }
    catch (error) { Alert.alert(t('dailyEntryScreen.errorLoad'), t('dailyEntryScreen.errorLoadMessage')); }
    finally { setIsDataLoading(false); }
  }, [updateStatistics, onThemeChange, onLocaleChange, fetchUserStatus, onDataOperation, t]);

    const handleAddTestCoins = useCallback(async () => {
        setIsAddingCoins(true);
        try { 
            const amount = 10; 
            const updatedStatus = await addCoinsToUser(amount); 
            setUserCoins(updatedStatus.coins); 
            Toast.show({ type: 'success', text1: t('accountSettings.coinsAdded'), text2: `${t('accountSettings.coinBalance')}: ${updatedStatus.coins}`, position: 'bottom' }); 
        }
        catch (error) { 
            const message = error instanceof BackendError ? error.message : t('backendService.errorNetworkConnection');
            Toast.show({ type: 'error', text1: t('accountSettings.errorAddCoins'), text2: message, position: 'bottom' }); 
        }
        finally { setIsAddingCoins(false); }
    }, [t]);

  const handleLanguageChange = (newLanguage: LanguageCode) => {
    setSettings(prev => ({...prev, language: newLanguage}));
    onLocaleChange(newLanguage); 
  };

  const handleNavigateToQuestionnaire = () => {
    navigation.navigate('Questionnaire');
  };

  const handleLogout = () => {
    Alert.alert(
        t('settingsScreen.account.logoutConfirmTitle'),
        t('settingsScreen.account.logoutConfirmMessage'),
        [
            { text: t('confirmationModal.cancel'), style: 'cancel' },
            { text: t('settingsScreen.account.logout'), style: 'destructive', onPress: onLogout },
        ],
        { cancelable: true }
    );
  };

  if (isDataLoading) {
    return (
      <View style={styles.loadingContainer}>
        <ActivityIndicator size="large" color={theme.colors.primary} />
        <Text style={styles.loadingText}>{t('app.initializing')}</Text>
      </View>
    );
  }

  return (
    <ScrollView style={styles.container} contentContainerStyle={styles.scrollContentContainer} keyboardShouldPersistTaps="handled">
        <Text h3 style={styles.sectionTitle}>{t('settingsScreen.account.title')}</Text>
        <AccountSettings
             userCoins={userCoins}
             isLoadingCoins={isLoadingCoins}
             isAddingCoins={isAddingCoins}
             onAddTestCoins={handleAddTestCoins}
        />

        <Text h3 style={styles.sectionTitle}>{t('settingsScreen.account.actions')}</Text>
        <ListItem bottomDivider onPress={handleLogout} containerStyle={styles.logoutItem}>
            <Icon name="logout" type="material-community" color={theme.colors.error} />
            <ListItem.Content>
                <ListItem.Title style={styles.logoutTitle}>
                    {t('settingsScreen.account.logout')}
                </ListItem.Title>
            </ListItem.Content>
            <ListItem.Chevron color={theme.colors.error} />
        </ListItem>

        <Text h3 style={styles.sectionTitle}>{t('settingsScreen.general.title')}</Text>
        <ThemeSwitch currentTheme={settings.theme} onToggle={onThemeChange} />

        <ListItem bottomDivider containerStyle={{ backgroundColor: theme.colors.background }}>
            <ListItem.Content>
                <ListItem.Title style={styles.listItemTitle}>{t('settingsScreen.language.title')}</ListItem.Title>
            </ListItem.Content>
        </ListItem>
        <View style={Platform.OS === 'ios' ? {} : styles.pickerContainerAndroid}>
             <Picker
                selectedValue={settings.language}
                onValueChange={(itemValue) => handleLanguageChange(itemValue as LanguageCode)}
                style={[styles.pickerStyle, Platform.OS === 'android' ? { color: theme.colors.text, backgroundColor: theme.colors.background } : {}]}
                itemStyle={[styles.pickerItemStyle, Platform.OS === 'ios' ? { color: theme.colors.text } : {}]}
                dropdownIconColor={theme.colors.text}
            >
                <Picker.Item label={t('settingsScreen.language.system')} value="system" />
                <Picker.Item label={t('settingsScreen.language.english')} value="en" />
                <Picker.Item label={t('settingsScreen.language.russian')} value="ru" />
                <Picker.Item label={t('settingsScreen.language.hebrew')} value="he" />
            </Picker>
        </View>

        <View style={styles.sectionHeaderWithButton}>
            <Text h3 style={[styles.sectionTitle, styles.sectionTitleInline]}>{t('settingsScreen.dailyGoals.title')}</Text>
            <Button
                title={t('settingsScreen.goals.estimateButton')}
                type="outline"
                onPress={handleNavigateToQuestionnaire}
                buttonStyle={styles.estimateButton}
                titleStyle={styles.estimateButtonTitle}
                icon={<Icon name="calculator-variant" type="material-community" color={theme.colors.primary} size={18} />}
            />
        </View>
        <View style={styles.inputGroup}>
            <DailyGoalsInput dailyGoals={settings.dailyGoals} onGoalChange={handleGoalChange} />
        </View>

        <Text h3 style={styles.sectionTitle}>{t('settingsScreen.statistics.title')}</Text>
        <View style={styles.chartContainer}>
            <StatisticsChart statistics={statistics} key={`${chartUpdateKey}-${i18n.locale}-${theme.mode}`} />
        </View>

        <Text h3 style={styles.sectionTitle}>{t('settingsScreen.dataManagement.title')}</Text>
        <View style={styles.buttonGroup}>
            <DataManagementButtons onDataOperation={localDataOperationHandler} />
        </View>
    </ScrollView>
  );
};

const useStyles = makeStyles((theme) => ({
  container: { flex: 1, backgroundColor: theme.colors.background, },
  loadingContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: theme.colors.background,
  },
  loadingText: {
    marginTop: 10,
    color: theme.colors.text,
    fontSize: 16,
  },
  scrollContentContainer: { padding: 15, paddingBottom: 40, },
  sectionTitle: {
    color: theme.colors.text, marginTop: 25, marginBottom: 15, paddingLeft: 5,
    borderLeftWidth: 3, borderLeftColor: theme.colors.primary,
    textAlign: I18nManager.isRTL ? 'right' : 'left',
    fontSize: 20, fontWeight: 'bold',
  },
  sectionHeaderWithButton: {
    flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginTop: 25,
    marginBottom: 10, 
  },
  sectionTitleInline: {
    marginTop: 0, 
    marginBottom: 0, 
    borderLeftWidth: 0, 
    paddingLeft: 0,
    flexShrink: 1,
  },
  estimateButton: {
    borderColor: theme.colors.primary,
    paddingHorizontal: 10,
    paddingVertical: 6,
    borderRadius: 20,
  },
  estimateButtonTitle: {
    color: theme.colors.primary,
    fontSize: 14,
    fontWeight: '600',
    marginLeft: I18nManager.isRTL ? 0 : 5,
    marginRight: I18nManager.isRTL ? 5 : 0,
  },
  listItemTitle: {
    color: theme.colors.text,
    textAlign: I18nManager.isRTL ? 'right' : 'left',
    fontWeight: '500',
  },
  logoutItem: {
    backgroundColor: theme.colors.background,
    borderTopWidth: 1,
    borderBottomWidth: 1,
    borderColor: theme.colors.divider,
  },
  logoutTitle: {
      color: theme.colors.error,
      textAlign: I18nManager.isRTL ? 'right' : 'left',
      fontWeight: 'bold',
  },
  inputGroup: { marginBottom: 10, paddingHorizontal: 5, },
  buttonGroup: { marginBottom: 10, paddingHorizontal: 5, },
  button: { marginBottom: 10, borderRadius: 8, },
  chartContainer: {
    marginBottom: 20,
  },
  pickerContainerAndroid: {
    backgroundColor: theme.colors.background,
    borderRadius: 8,
    borderWidth: 1,
    borderColor: theme.colors.divider,
    marginBottom: 10,
    marginTop: -5,
  },
  pickerStyle: {
    width: '100%',
    height: Platform.OS === 'ios' ? 120 : 50,
  },
  pickerItemStyle: {
    textAlign: I18nManager.isRTL ? 'right' : 'left',
  },
}));

export default SettingsScreen;
---------- END SettingsScreen.tsx ----------


---------- authService.ts ----------
// src/services/authService.ts
import { Alert } from 'react-native';
import Constants from 'expo-constants';
import { Token } from '../types/token';
import { t } from '../localization/i18n';
import { getToken, saveToken, deleteToken } from './tokenStorage';

// --- Centralized API URL Configuration ---
const getBackendUrl = (): string => {
    const env = Constants.expoConfig?.extra?.env;

    if (__DEV__) {
        if (env?.BACKEND_URL_DEVELOPMENT) {
            return env.BACKEND_URL_DEVELOPMENT;
        }
        console.warn(
            "BACKEND_URL_DEVELOPMENT not found in app.json. Falling back to a default."
        );
        return 'http://127.0.0.1:8000';
    } else {
        if (env?.BACKEND_URL_PRODUCTION) {
            return env.BACKEND_URL_PRODUCTION;
        }
        console.error("FATAL: BACKEND_URL_PRODUCTION is not defined in app.json extra.env.");
        return 'https://api.example.com/not-configured';
    }
};

export const getApiUrl = (): string => {
    const baseUrl = getBackendUrl();
    return baseUrl.endsWith('/api/v1') ? baseUrl : `${baseUrl.replace(/\/$/, '')}/api/v1`;
};

const API_URL = getApiUrl();

// --- Auth Event Emitter for 401 Handling ---
type LogoutListener = (() => void) | null;
let onLogout: LogoutListener = null;

export const setLogoutListener = (listener: LogoutListener) => {
    onLogout = listener;
};

export const triggerLogout = () => {
    console.log("Global logout triggered.");
    deleteToken(); // Use the new abstracted function
    if (onLogout) {
        onLogout();
    } else {
        console.warn('Logout triggered, but no UI listener was set.');
    }
};

// --- Token Management using the abstraction layer ---
export {
  getToken as getAuthToken,
  saveToken as setAuthToken,
  deleteToken as removeAuthToken,
};

// --- API Calls ---
async function fetchAuthApi<T>(endpoint: string, options: RequestInit = {}): Promise<T> {
    const url = `${API_URL}/auth${endpoint}`;
    
    const headers: Record<string, string> = {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
        ...(options.headers as Record<string, string> || {})
    };

    try {
        const response = await fetch(url, { ...options, headers });

        if (response.status === 204) {
             return {} as T;
        }

        const responseBody = await response.json();

        if (!response.ok) {
            const errorMessage = responseBody.detail || 'An unknown error occurred.';
            const detailMessage = typeof errorMessage === 'string' ? errorMessage : JSON.stringify(errorMessage);
            throw new Error(detailMessage);
        }
        return responseBody as T;
    } catch (error: any) {
        Alert.alert('Authentication Error', error.message || 'Could not connect to the server.');
        throw error;
    }
}

export const registerUser = async (email: string, password: string): Promise<{message: string}> => {
    return fetchAuthApi<{message: string}>('/register', {
        method: 'POST',
        body: JSON.stringify({ email, password }),
    });
};

export const loginUser = async (email: string, password: string): Promise<Token> => {
    const details = { 'username': email, 'password': password };
    const formBody = Object.entries(details)
        .map(([key, value]) => encodeURIComponent(key) + '=' + encodeURIComponent(value))
        .join('&');

    const url = `${API_URL}/auth/login`;

    try {
        const response = await fetch(url, {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8' },
            body: formBody,
        });
        
        const responseBody = await response.json();

        if (!response.ok) {
            throw new Error(responseBody.detail || 'Login failed');
        }
        return responseBody;
    } catch (error: any) {
        Alert.alert('Login Error', error.message || 'Could not connect to the server.');
        throw error;
    }
};

export const refreshAuthToken = async (refreshToken: string): Promise<Token | null> => {
    try {
        const newTokens = await fetchAuthApi<Token>('/refresh-token', {
             method: 'POST',
             body: JSON.stringify({ refresh_token: refreshToken })
        });
        return newTokens;
    } catch (error) {
        console.error("Token refresh failed:", error);
        return null;
    }
};

export const logoutUser = async (): Promise<void> => {
    try {
        const tokenData = await getToken();
        if (tokenData?.access_token) {
            await fetchAuthApi('/logout', {
                method: 'POST',
                headers: { 'Authorization': `Bearer ${tokenData.access_token}` }
            });
        }
    } catch (error) {
        console.warn("Logout API call failed, but logging out locally anyway.", error);
    } finally {
        await deleteToken();
    }
}

export const requestPasswordReset = async (email: string): Promise<{message: string}> => {
    return fetchAuthApi<{message: string}>('/request-password-reset', {
        method: 'POST',
        body: JSON.stringify({ email }),
    });
};
---------- END authService.ts ----------


---------- backendService.ts ----------
// src/services/backendService.ts
import { getApiUrl, getAuthToken, setAuthToken, refreshAuthToken, triggerLogout } from './authService';
import { EstimatedFoodItem, Macros, MacrosWithFoodName } from '../types/macros';
import { Platform } from 'react-native';
import i18n, { t } from '../localization/i18n';
import { Token } from '../types/token';

const BASE_URL = getApiUrl();
console.log(`Backend Service Initialized. Base URL: ${BASE_URL}`);

interface GramsResponse { grams: number; }
export interface UserStatus { client_id: string; coins: number; is_verified: boolean; }
interface BackendErrorDetail { loc?: (string | number)[]; msg?: string; type?: string; }
interface BackendErrorResponse { detail?: string | BackendErrorDetail[]; }

export class BackendError extends Error {
    status: number; detail?: string | BackendErrorDetail[]; requestId?: string | null;
    constructor(message: string, status: number, detail?: string | BackendErrorDetail[], requestId?: string | null) {
        super(message); this.name = 'BackendError'; this.status = status; this.detail = detail; this.requestId = requestId;
    }
}

let isRefreshing = false;
let failedQueue: { resolve: (value: any) => void; reject: (reason?: any) => void; endpoint: string; options: RequestInit; needsAuth: boolean; }[] = [];

const processFailedQueue = (error: any, token: Token | null) => {
    failedQueue.forEach(prom => {
        if (error || !token) {
            prom.reject(error);
        } else {
            prom.resolve(fetchBackend(prom.endpoint, prom.options, prom.needsAuth));
        }
    });
    failedQueue = [];
};

async function fetchBackend<T>( endpoint: string, options: RequestInit = {}, needsAuth: boolean = true ): Promise<T> {
    const url = `${BASE_URL}${endpoint.startsWith('/') ? endpoint : `/${endpoint}`}`;
    
    const tokenData = needsAuth ? await getAuthToken() : null;
    
    if (needsAuth && !tokenData?.access_token) {
        triggerLogout();
        throw new BackendError(t('backendService.errorAuthFailed'), 401, "Authentication token is missing.");
    }

    const headers: Record<string, string> = {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
        'X-Platform': Platform.OS,
        'Accept-Language': i18n.locale,
        ...(options.headers as Record<string, string> || {})
    };
    if (needsAuth && tokenData) {
        headers['Authorization'] = `Bearer ${tokenData.access_token}`;
    }

    try {
        const response = await fetch(url, { ...options, headers });
        const requestId = response.headers.get("X-Request-ID");

        if (response.status === 401 && needsAuth) {
            if (isRefreshing) {
                return new Promise((resolve, reject) => {
                    failedQueue.push({ resolve, reject, endpoint, options, needsAuth });
                });
            }

            isRefreshing = true;
            const currentRefreshToken = tokenData?.refresh_token;

            if (!currentRefreshToken) {
                triggerLogout();
                isRefreshing = false;
                throw new BackendError(t('backendService.errorAuthFailed'), 401, "Refresh token not found.");
            }
            
            const newTokens = await refreshAuthToken(currentRefreshToken);

            if (newTokens?.access_token) {
                await setAuthToken(newTokens);
                processFailedQueue(null, newTokens);
                return fetchBackend(endpoint, options, needsAuth);
            } else {
                const refreshError = new BackendError(t('backendService.errorAuthFailed'), 401, "Session expired. Please log in again.");
                processFailedQueue(refreshError, null);
                triggerLogout();
                throw refreshError;
            }
        }
        
        if (response.status === 204) return null as T;

        const contentType = response.headers.get("content-type");
        const isJson = contentType && contentType.includes("application/json");
        const responseBody = isJson ? await response.json() : await response.text();

        if (!response.ok) {
            let errorMessage = t('backendService.errorRequestFailedWithServerMsg', { status: response.status });
            if (isJson && responseBody?.detail) {
                errorMessage = typeof responseBody.detail === 'string' ? responseBody.detail : JSON.stringify(responseBody.detail);
            }
            
            if (response.status === 402) errorMessage = t('backendService.errorInsufficientCoins');
            if (response.status === 403) errorMessage = responseBody?.detail || t('backendService.errorPermissionDenied');
            if (response.status === 429) errorMessage = t('backendService.errorTooManyRequests');

            throw new BackendError(errorMessage, response.status, responseBody?.detail, requestId);
        }
        return responseBody as T;

    } catch (error) {
        if (error instanceof BackendError) throw error;
        
        let networkErrorMessage: string;
        if (error instanceof Error && error.name === 'AbortError') {
            networkErrorMessage = t('backendService.errorNetworkTimeout');
        } else if (error instanceof Error && (error.message.includes('Network request failed') || error.message.includes('Failed to fetch'))) {
            networkErrorMessage = t('backendService.errorNetwork') + t('backendService.errorNetworkConnection');
        } else if (error instanceof Error) {
            networkErrorMessage = t('backendService.errorNetwork') + t('backendService.errorNetworkDetails', { error: error.message });
        } else {
            networkErrorMessage = t('backendService.errorNetwork') + t('backendService.errorNetworkUnknown');
        }
        
        throw new BackendError(networkErrorMessage, 0, networkErrorMessage, null);
    } finally {
        if(isRefreshing && endpoint === '/auth/refresh-token') {
             isRefreshing = false;
        }
    }
}

export const getUserStatus = async (): Promise<UserStatus> => fetchBackend<UserStatus>('/users/status');
export const getMacrosForRecipe = async (foodName: string, ingredients: string): Promise<MacrosWithFoodName> => fetchBackend<MacrosWithFoodName>('/ai/macros_recipe', { method: 'POST', body: JSON.stringify({ food_name: foodName, ingredients }) });
export const getMacrosForImageSingle = async (image_base64: string, mime_type: string): Promise<MacrosWithFoodName> => fetchBackend<MacrosWithFoodName>('/ai/macros_image_single', { method: 'POST', body: JSON.stringify({ image_base64, mime_type }) });
export const getMacrosForImageMultiple = async (image_base64: string, mime_type: string): Promise<EstimatedFoodItem[]> => fetchBackend<EstimatedFoodItem[]>('/ai/macros_image_multiple', { method: 'POST', body: JSON.stringify({ image_base64, mime_type }) });
export const getMacrosForTextMultiple = async (text: string): Promise<EstimatedFoodItem[]> => fetchBackend<EstimatedFoodItem[]>('/ai/macros_text_multiple', { method: 'POST', body: JSON.stringify({ text }) });
export const estimateGramsNaturalLanguage = async (foodName: string, quantityDescription: string): Promise<number> => {
    const response = await fetchBackend<GramsResponse>('/ai/grams_natural_language', { method: 'POST', body: JSON.stringify({ food_name: foodName, quantity_description: quantityDescription }) });
    if (response === null || typeof response.grams !== 'number') throw new BackendError(t('backendService.errorEstimateGramsUnexpectedResponse'), 500, "Invalid response format");
    return response.grams;
};
export const addCoinsToUser = async (amount: number): Promise<UserStatus> => {
    if (amount <= 0) throw new BackendError(t('backendService.errorAddCoinsPositive'), 400, "Amount must be positive.");
    return fetchBackend<UserStatus>('/users/add_coins', { method: 'POST', body: JSON.stringify({ amount }) });
};
---------- END backendService.ts ----------


---------- clientIDService.ts ----------
// src/services/clientIDService.ts
import AsyncStorage from '@react-native-async-storage/async-storage';
import uuid from 'react-native-uuid';

const CLIENT_ID_KEY = '@MacroTracker:clientId';
let currentClientId: string | null = null; // In-memory cache

export const getClientId = async (): Promise<string> => {
  if (currentClientId) {
    return currentClientId;
  }

  try {
    let clientId = await AsyncStorage.getItem(CLIENT_ID_KEY);
    if (!clientId) {
      clientId = uuid.v4() as string;
      console.log('Generated new client ID:', clientId);
      await AsyncStorage.setItem(CLIENT_ID_KEY, clientId);
    } else {
      console.log('Retrieved existing client ID:', clientId);
    }
    currentClientId = clientId;
    return clientId;
  } catch (error) {
    console.error('Error handling client ID:', error);
    // Fallback or throw error depending on desired behavior
    // For now, generating a temporary one if storage fails
    return uuid.v4() as string;
  }
};

// Optional: Function to clear ID for testing
export const clearClientId = async (): Promise<void> => {
    currentClientId = null;
    try {
        await AsyncStorage.removeItem(CLIENT_ID_KEY);
        console.log('Client ID cleared.');
    } catch (error) {
        console.error('Error clearing client ID:', error);
    }
};
---------- END clientIDService.ts ----------


---------- foodService.ts ----------
// src/services/foodService.ts
import { Food } from '../types/food';
import { saveFoods, loadFoods } from './storageService';
import 'react-native-get-random-values';
import { v4 as uuidv4 } from 'uuid';

export const createFood = async (foodData: Omit<Food, 'id' | 'createdAt'>): Promise<Food> => {
  const newFood: Food = {
    id: uuidv4(),
    ...foodData,
    createdAt: new Date().toISOString(),
  };
  const { items: currentFoods } = await loadFoods(); // Load all foods to append
  currentFoods.push(newFood);
  await saveFoods(currentFoods);
  return newFood;
};

export const getFoods = async (
  searchTerm?: string,
  sortOption: 'name' | 'newest' | 'oldest' = 'name'
): Promise<{ items: Food[], total: number }> => {
  // Load all foods first.
  const { items: allFoodsFromStorage } = await loadFoods();

  let filteredFoods = allFoodsFromStorage;

  if (searchTerm && searchTerm.trim() !== "") {
    const lowercasedSearchTerm = searchTerm.toLowerCase().trim();
    filteredFoods = allFoodsFromStorage.filter(food =>
      food.name.toLowerCase().includes(lowercasedSearchTerm)
    );
  }

  // Sorting logic
  if (sortOption === 'name') {
      filteredFoods.sort((a, b) => a.name.localeCompare(b.name));
  } else {
      const fallbackDate = '2020-01-01T00:00:00.000Z'; // For items without a creation date
      filteredFoods.sort((a, b) => {
          const dateA = new Date(a.createdAt || fallbackDate).getTime();
          const dateB = new Date(b.createdAt || fallbackDate).getTime();
          return sortOption === 'newest' ? dateB - dateA : dateA - dateB;
      });
  }

  const totalFiltered = filteredFoods.length;

  // Return all filtered and sorted items without pagination
  return { items: filteredFoods, total: totalFiltered };
};

export const updateFood = async (updatedFood: Food): Promise<Food> => {
  const { items: foods } = await loadFoods(); // Load all foods to find and update
  const index = foods.findIndex((f) => f.id === updatedFood.id);
  if (index === -1) {
    throw new Error('Food not found'); // Throw an error if not found
  }
  foods[index] = updatedFood;
  await saveFoods(foods);
  return updatedFood;
};

export const deleteFood = async (foodId: string): Promise<void> => {
  const { items: foods } = await loadFoods(); // Load all to filter
  const filteredFoods = foods.filter((f) => f.id !== foodId);
  await saveFoods(filteredFoods);
};
---------- END foodService.ts ----------


---------- storageService.ts ----------
// src/services/storageService.ts
import AsyncStorage from '@react-native-async-storage/async-storage';
import { DailyEntry } from '../types/dailyEntry';
import { Food } from '../types/food';
import { Settings, LanguageCode } from '../types/settings';

const DAILY_ENTRIES_KEY = 'dailyEntries';
const FOODS_KEY = 'foods';
const SETTINGS_KEY = 'settings';
const RECENT_FOODS_KEY = 'recentFoods';
const RECENT_SERVINGS_KEY = 'recentServings';

export type RecentServings = { [foodId: string]: number[] };

export const saveDailyEntries = async (entries: DailyEntry[]): Promise<void> => {
  try {
    await AsyncStorage.setItem(DAILY_ENTRIES_KEY, JSON.stringify(entries));
  } catch (error) {
    console.error('Error saving daily entries:', error);
    throw error;
  }
};

export const loadDailyEntries = async (): Promise<DailyEntry[]> => {
  try {
    const entriesJson = await AsyncStorage.getItem(DAILY_ENTRIES_KEY);
    return entriesJson ? JSON.parse(entriesJson) : [];
  } catch (error) {
    console.error('Failed to parse daily entries from AsyncStorage. Clearing corrupted data.', error);
    await AsyncStorage.removeItem(DAILY_ENTRIES_KEY);
    return [];
  }
};

export const saveFoods = async (foods: Food[]): Promise<void> => {
  try {
    await AsyncStorage.setItem(FOODS_KEY, JSON.stringify(foods));
  } catch (error) {
    console.error('Error saving foods:', error);
    throw error;
  }
};

export const loadFoods = async (offset: number = 0, limit?: number): Promise<{ items: Food[], total: number }> => {
  try {
    const foodsJson = await AsyncStorage.getItem(FOODS_KEY);
    const allFoods: Food[] = foodsJson ? JSON.parse(foodsJson) : [];
    const total = allFoods.length;

    if (limit === undefined) {
      return { items: allFoods, total };
    }
    
    const paginatedFoods = allFoods.slice(offset, offset + limit);
    return { items: paginatedFoods, total };
  } catch (error) {
    console.error('Failed to parse foods from AsyncStorage. Clearing corrupted data.', error);
    await AsyncStorage.removeItem(FOODS_KEY);
    return { items: [], total: 0 };
  }
};

export const saveSettings = async (settings: Settings): Promise<void> => {
  try {
    await AsyncStorage.setItem(SETTINGS_KEY, JSON.stringify(settings));
  } catch (error) {
    console.error('Error saving settings:', error);
    throw error;
  }
};

export const loadSettings = async (): Promise<Settings> => {
  const defaultSettings: Settings = {
    theme: 'system',
    language: 'system',
    dailyGoals: { calories: 2000, protein: 50, carbs: 200, fat: 70 },
    settingsHistory: []
  };

  try {
    const settingsJson = await AsyncStorage.getItem(SETTINGS_KEY);
    if (!settingsJson) return defaultSettings;
    
    const loadedSettings = JSON.parse(settingsJson);

    return {
      ...defaultSettings,
      ...loadedSettings,
      dailyGoals: {
        ...defaultSettings.dailyGoals,
        ...(loadedSettings.dailyGoals || {})
      }
    };
  } catch (error) {
    console.error('Failed to parse settings from AsyncStorage. Clearing corrupted data and returning defaults.', error);
    await AsyncStorage.removeItem(SETTINGS_KEY);
    return defaultSettings;
  }
};

export const clearAllData = async (): Promise<void> => {
  try {
    const clientIdKey = '@MacroTracker:clientId';
    const authTokenKey = '@MacroTracker:authToken';
    const [clientId, authToken] = await AsyncStorage.multiGet([clientIdKey, authTokenKey]);
    
    await AsyncStorage.clear();
    
    const itemsToKeep: [string, string][] = [];
    if (clientId?.[1]) itemsToKeep.push(clientId as [string, string]);
    if (authToken?.[1]) itemsToKeep.push(authToken as [string, string]);

    if (itemsToKeep.length > 0) {
        await AsyncStorage.multiSet(itemsToKeep);
    }
    console.log('Application data cleared (excluding auth/client ID).');
  } catch (error) {
    console.error('Error clearing data:', error);
    throw error;
  }
};

export const saveRecentFoods = async (foods: Food[]) => {
    try {
        await AsyncStorage.setItem(RECENT_FOODS_KEY, JSON.stringify(foods));
    } catch (error) {
        console.error('Error saving recent foods:', error);
        throw error;
    }
};

export const loadRecentFoods = async (): Promise<Food[]> => {
    try {
        const foodsJson = await AsyncStorage.getItem(RECENT_FOODS_KEY);
        return foodsJson ? JSON.parse(foodsJson) : [];
    } catch (error) {
        console.error('Failed to parse recent foods from AsyncStorage. Clearing corrupted data.', error);
        await AsyncStorage.removeItem(RECENT_FOODS_KEY);
        return [];
    }
};

export const saveRecentServings = async (servings: RecentServings): Promise<void> => {
    try {
        await AsyncStorage.setItem(RECENT_SERVINGS_KEY, JSON.stringify(servings));
    } catch (error) {
        console.error('Error saving recent servings:', error);
        throw error;
    }
};

export const loadRecentServings = async (): Promise<RecentServings> => {
    try {
        const servingsJson = await AsyncStorage.getItem(RECENT_SERVINGS_KEY);
        return servingsJson ? JSON.parse(servingsJson) : {};
    } catch (error) {
        console.error('Failed to parse recent servings from AsyncStorage. Clearing corrupted data.', error);
        await AsyncStorage.removeItem(RECENT_SERVINGS_KEY);
        return {};
    }
};
---------- END storageService.ts ----------


---------- tokenStorage.ts ----------
// src/services/tokenStorage.ts

import * as SecureStore from 'expo-secure-store';
import AsyncStorage from '@react-native-async-storage/async-storage';
import Constants from 'expo-constants';
import { Token } from '../types/token';

const TOKEN_KEY = '@MacroTracker:authToken';

/**
 * Checks if the app is running inside the generic Expo Go client.
 * SecureStore is not truly secure in Expo Go because the app shares a generic
 * bundle identifier. We fall back to AsyncStorage in this specific case.
 * In development builds and production, this will be false.
 */
const IS_EXPO_GO = Constants.appOwnership === 'expo';

if (__DEV__) {
  console.log(
    `[TokenStorage] Running in ${IS_EXPO_GO ? 'Expo Go' : 'Development Build/Production'}. ` +
    `Using ${IS_EXPO_GO ? 'AsyncStorage (unsafe)' : 'SecureStore (secure)'} for tokens.`
  );
}

/**
 * Saves the authentication token to the appropriate storage.
 * @param token The token object to save.
 */
export async function saveToken(token: Token): Promise<void> {
  const tokenJson = JSON.stringify(token);
  if (IS_EXPO_GO) {
    await AsyncStorage.setItem(TOKEN_KEY, tokenJson);
  } else {
    await SecureStore.setItemAsync(TOKEN_KEY, tokenJson);
  }
}

/**
 * Retrieves the authentication token from the appropriate storage.
 * @returns The token object or null if not found or corrupted.
 */
export async function getToken(): Promise<Token | null> {
  let tokenJson: string | null = null;
  if (IS_EXPO_GO) {
    tokenJson = await AsyncStorage.getItem(TOKEN_KEY);
  } else {
    tokenJson = await SecureStore.getItemAsync(TOKEN_KEY);
  }

  if (!tokenJson) {
    return null;
  }

  try {
    return JSON.parse(tokenJson);
  } catch (error) {
    console.error('Failed to parse auth token from storage. Clearing corrupted token.', error);
    // Clean up the corrupted value
    await deleteToken();
    return null;
  }
}

/**
 * Deletes the authentication token from the appropriate storage.
 */
export async function deleteToken(): Promise<void> {
  if (IS_EXPO_GO) {
    await AsyncStorage.removeItem(TOKEN_KEY);
  } else {
    await SecureStore.deleteItemAsync(TOKEN_KEY);
  }
}
---------- END tokenStorage.ts ----------


---------- dailyEntry.ts ----------
// types/dailyEntry.ts (Modified)
import { Food } from "./food";

export interface DailyEntryItem {
  food: Food;
  grams: number;
}

export interface DailyEntry {
  date: string; // YYYY-MM-DD format
  items: DailyEntryItem[];
  goals?: {  // Optional goals
    calories?: number;
    protein?: number;
    carbs?: number;
    fat?: number;
  };
}

export interface FoodItem { //No changes here.
    id: string;
    name: string;
    calories: number;
    protein: number;
    carbs: number;
    fat: number;
  }
---------- END dailyEntry.ts ----------


---------- food.ts ----------
// types/food.ts
export interface Food {
  id: string;
  name: string;
  calories: number;
  protein: number;
  carbs: number;
  fat: number;
  createdAt: string; // ISO 8601 date string
}

// Data structure for sharing food items. ID and createdAt are omitted.
export type SharedFoodData = Omit<Food, 'id' | 'createdAt'>;
---------- END food.ts ----------


---------- macros.ts ----------
// src/types/macros.ts

// Basic macro structure
export interface Macros {
    calories: number;
    protein: number;
    carbs: number;
    fat: number;
  }
  
  // Macros structure including the identified food name
  export interface MacrosWithFoodName extends Macros {
    foodName: string;
  }
  
  /**
   * Represents a single food item estimated from an image,
   * including its name, estimated weight, and macros per 100g.
   * Matches the structure expected/returned by the backend service.
   */
  export interface EstimatedFoodItem {
    foodName: string;
    estimatedWeightGrams: number;
    calories_per_100g: number;
    protein_per_100g: number;
    carbs_per_100g: number;
    fat_per_100g: number;
  }
---------- END macros.ts ----------


---------- openRouterTypes.ts ----------
// src/utils/types.ts

// =====================================
// Consolidated OpenRouter Type Definitions
// =====================================

// --- Content Parts (for multi-modal input like images) ---
export type OpenRouterContentPart =
  | { type: "text"; text: string }
  | { type: "image_url"; image_url: { url: string; detail?: "low" | "high" | "auto" } };

// --- Message Structure ---
// Allows content to be a simple string OR an array of content parts for vision models
export interface OpenRouterMessage {
  role: "user" | "assistant" | "system";
  content: string | OpenRouterContentPart[]; // Consolidated definition
  name?: string; // Optional name field
}

// --- Choice Structure (within the response) ---
// This structure aligns with standard Chat Completion APIs (like OpenAI/OpenRouter)
export interface OpenRouterChatChoice {
  index: number;
  message: OpenRouterMessage; // Contains the actual message content and role
  logprobs?: any | null; // Optional log probabilities (use a specific type if known)
  finish_reason: string | null; // Can be null sometimes
  // text?: string; // Usually the content is inside message.content, keep optional if some models return it differently
}

// --- API Usage Information ---
export interface OpenRouterUsage {
  prompt_tokens: number;
  completion_tokens: number;
  total_tokens: number;
}

// --- Main Chat Completion Response Structure ---
// Consolidates the fields from both previous declarations
export interface OpenRouterChatCompletionResponse {
  id: string;
  object: string; // Typically "chat.completion"
  created: number; // Timestamp
  model: string; // Model used
  choices: OpenRouterChatChoice[]; // Array of choices using the defined structure
  usage?: OpenRouterUsage; // Usage information is often optional
  // Add any other relevant fields you might encounter from OpenRouter
  // system_fingerprint?: string; // Example optional field
}


// =====================================
// Removed Redundant/Conflicting Declarations:
// =====================================

/*
// REMOVED - Duplicate/Outdated OpenRouterMessage
export interface OpenRouterMessage {
  role: "user" | "assistant" | "system"; // Add system role
  content: string;
}

// REMOVED - Less standard choice structure (often message.content is used instead of top-level text)
export interface OpenRouterChoice {
  text: any; // 'any' is vague, content is usually in message
  message: OpenRouterMessage; // This duplicates content info if 'text' is also present
  finish_reason?: string;
  index?: number;
}

// REMOVED - Duplicate/Simpler OpenRouterChatCompletionResponse
export interface OpenRouterChatCompletionResponse {
  choices: OpenRouterChoice[]; // Used the less standard choice type
  id?: string;
  created?: number;
  model?: string;
  usage?: {
    prompt_tokens: number;
    completion_tokens: number;
    total_tokens: number;
  };
}
*/
---------- END openRouterTypes.ts ----------


---------- questionnaire.ts ----------
// src/types/questionnaire.ts
export enum Sex {
    MALE = 'male',
    FEMALE = 'female',
  }
  
  export enum ActivityLevel {
    SEDENTARY = 'sedentary',
    LIGHT = 'light',
    MODERATE = 'moderate',
    ACTIVE = 'active',
    VERY_ACTIVE = 'very_active',
  }
  
  export enum PrimaryGoal {
    LOSE_WEIGHT = 'lose_weight',
    MAINTAIN_WEIGHT = 'maintain_weight',
    GAIN_MUSCLE = 'gain_muscle',
  }
  
  export enum GoalIntensity {
    MILD = 'mild',
    MODERATE = 'moderate',
    AGGRESSIVE = 'aggressive',
  }
  
  export interface QuestionnaireFormData {
    age: string;
    sex: Sex | ''; // Allow empty initial state for Picker
    height: string; // cm
    weight: string; // kg
    activityLevel: ActivityLevel | ''; // Allow empty initial state
    primaryGoal: PrimaryGoal | ''; // Allow empty initial state
    goalIntensity?: GoalIntensity;
  }
  
  export interface CalculatedGoals {
    calories: number;
    protein: number;
    carbs: number;
    fat: number;
  }
---------- END questionnaire.ts ----------


---------- settings.ts ----------
// src/types/settings.ts
// types/settings.ts
export const macros = ["calories", "protein", "carbs", "fat"] as const;
export type MacroType = (typeof macros)[number];

export type LanguageCode = 'en' | 'ru' | 'he' | 'system';

export interface MacroData {
  x: number; // Timestamp
  y: number; // Macro value
}

export interface Statistics {
  calories: MacroData[][];
  protein: MacroData[][];
  carbs: MacroData[][];
  fat: MacroData[][];
}

export interface Settings {
  theme: "light" | "dark" | "system";
  language: LanguageCode;
  dailyGoals: {
    [key in MacroType]: number;
  };
  settingsHistory?: { date: number; dailyGoals: { [key in MacroType]: number } }[];
}

export interface SettingsScreenProps {
  onThemeChange: (theme: "light" | "dark" | "system") => void;
  onLocaleChange: (locale: LanguageCode) => void; // Added for language change
}
---------- END settings.ts ----------


---------- token.ts ----------
export interface Token {
    access_token: string;
    refresh_token: string;
    token_type: string;
}
---------- END token.ts ----------


---------- dateUtils.ts ----------
// src/utils/dateUtils.ts
// utils/dateUtils.ts
import { format, parseISO, formatISO, isValid } from 'date-fns';
import { getDateFnLocale } from '../localization/i18n'; // Import for locale

/**
 * Formats a Date object, timestamp (number), or ISO date string (YYYY-MM-DD)
 * into a standard YYYY-MM-DD string representation.
 * Returns an empty string if the input is invalid.
 * @param dateInput - The date to format (Date object, timestamp number, or 'YYYY-MM-DD' string).
 * @returns The formatted date string 'YYYY-MM-DD' or empty string on error.
 */
export const formatDateISO = (dateInput: number | string | Date): string => {
    try {
        let dateObj: Date;
        if (dateInput instanceof Date) dateObj = dateInput;
        else if (typeof dateInput === 'string') dateObj = parseISO(dateInput);
        else if (typeof dateInput === 'number') dateObj = new Date(dateInput);
        else throw new Error("Invalid input type");

        if (!isValid(dateObj)) throw new Error("Invalid date value");
        return formatISO(dateObj, { representation: 'date' });
    } catch (error) {
        console.error("Error in formatDateISO:", error, "Input:", dateInput);
        return "";
    }
};

/**
 * Asynchronously formats a Date object, timestamp (number), or ISO date string (YYYY-MM-DD)
 * into a human-readable format (e.g., "MMMM dd, yyyy") using the current app locale.
 * Returns 'Invalid Date' if the input is invalid.
 * @param dateInput - The date to format (Date object, timestamp number, or 'YYYY-MM-DD' string).
 * @returns The formatted readable date string or 'Invalid Date' on error.
 */
export const formatDateReadableAsync = async (dateInput: number | string | Date): Promise<string> => {
    try {
        let dateObj: Date;
        if (dateInput instanceof Date) dateObj = dateInput;
        else if (typeof dateInput === 'string') dateObj = parseISO(dateInput);
        else if (typeof dateInput === 'number') dateObj = new Date(dateInput);
        else throw new Error("Invalid input type");

        if (!isValid(dateObj)) throw new Error("Invalid date value");

        const locale = await getDateFnLocale(); // Get date-fns locale
        return format(dateObj, 'MMMM dd, yyyy', { locale });
    } catch (error) {
         console.error("Error in formatDateReadableAsync:", error, "Input:", dateInput);
         return 'Invalid Date'; // Fallback for display
    }
};

/**
 * Gets today's date as a standard YYYY-MM-DD string.
 * @returns Today's date in 'YYYY-MM-DD' format.
 */
export const getTodayDateString = (): string => {
  return formatISO(new Date(), { representation: 'date' });
};
---------- END dateUtils.ts ----------


---------- foodIconMatcher.ts ----------
// src/utils/foodIconMatcher.ts
import { foodIconDefinitions } from '../assets/food_icons/iconDefinitions';
import i18n, { t, TranslationKey } from '../localization/i18n';
import { LanguageCode } from '../types/settings';

const normalizeFoodNameForMatching = (name: string): string => {
    return name.toLowerCase()
        .replace(/[()",.&'/#!$%^*;:{}=_`~?]/g, '')
        .trim();
};

const getNormalizedWords = (name: string): string[] => {
    const normalizedName = normalizeFoodNameForMatching(name);
    const commonFilterWords = ['and', 'with', 'of', 'a', 'the', 'in', 'on', 'for', 'g', 'ml', 'гр', 'мл'];
    return normalizedName
        .split(/\s+/)
        .filter(word => word.length > 1 && !commonFilterWords.includes(word.toLowerCase()));
};

/**
 * Finds the best matching icon for a given food name based on localized tags.
 * @param foodName The name of the food.
 * @param foodNameLocale The detected language of the foodName string (e.g., 'en', 'ru', 'he').
 * @returns An emoji string for the icon, or null if no good match is found.
 */
export const findBestIcon = (foodName: string, foodNameLocale: LanguageCode): string | null => {
    if (!foodName || foodName.trim() === '') {
        return null;
    }

    const normalizedFoodNameQuery = normalizeFoodNameForMatching(foodName);
    const foodNameWords = getNormalizedWords(foodName);

    // console.log(`[findBestIcon START] Food: "${foodName}", NormQuery: "${normalizedFoodNameQuery}", Words: [${foodNameWords.join(', ')}], FoodNameLocale: ${foodNameLocale}`);

    let bestMatch: { icon: string; score: number; priority: number } | null = null;

    for (const definition of foodIconDefinitions) {
        let currentScore = 0;
        let matchFoundInDefinition = false;
        const fullTagKey = `foodIconTags.${definition.tagKey}` as TranslationKey;
        let localizedTags: string[] = [];
        let effectiveTagLocale: LanguageCode = foodNameLocale; // The locale from which tags were actually sourced

        try {
            const tagsForDetectedLocale = i18n.t(fullTagKey, { locale: foodNameLocale, returnObjects: true, defaultValue: null });

            if (Array.isArray(tagsForDetectedLocale) && tagsForDetectedLocale.length > 0) {
                localizedTags = tagsForDetectedLocale;
            } else {
                if (foodNameLocale !== 'en' && definition.tagKey !== 'unknownFood' && definition.tagKey !== 'genericMeal') {
                    const tagsForEnglishFallback = i18n.t(fullTagKey, { locale: 'en', returnObjects: true, defaultValue: [] });
                    if (Array.isArray(tagsForEnglishFallback) && tagsForEnglishFallback.length > 0) {
                        localizedTags = tagsForEnglishFallback;
                        effectiveTagLocale = 'en'; // Mark that we used English fallback tags
                    }
                }
            }
        } catch (e) {
            console.error(`[findBestIcon] ERROR fetching/processing translation for key: ${fullTagKey} in foodNameLocale: ${foodNameLocale}. FoodName: "${foodName}"`, e);
            localizedTags = [];
        }

        if (localizedTags.length === 0 && definition.tagKey !== 'unknownFood' && definition.tagKey !== 'genericMeal') {
            continue;
        }
        
        // if (definition.tagKey === 'redMeat' && normalizedFoodNameQuery.includes(normalizeFoodNameForMatching('סטייק'))) {
        //      console.log(`[findBestIcon DEBUG STEEK] Checking 'redMeat' for "${foodName}". Tags sourced from locale '${effectiveTagLocale}': [${localizedTags.join(', ')}]. Query: "${normalizedFoodNameQuery}"`);
        // }

        for (const localizedTag of localizedTags) {
            const lowerLocalizedTag = localizedTag.toLowerCase().trim();
            if (!lowerLocalizedTag) continue;

            if (lowerLocalizedTag === normalizedFoodNameQuery) {
                currentScore = Math.max(currentScore, 100);
                matchFoundInDefinition = true;
                break;
            }

            if (normalizedFoodNameQuery.includes(lowerLocalizedTag)) {
                currentScore = Math.max(currentScore, 70 + lowerLocalizedTag.length);
                matchFoundInDefinition = true;
            }
            
            if (foodNameWords.some(foodWord => foodWord.length > 1 && lowerLocalizedTag.includes(foodWord))) {
                currentScore = Math.max(currentScore, 60);
                matchFoundInDefinition = true;
            }
        }
        
        if (!matchFoundInDefinition && localizedTags.length > 0) {
            for (const localizedTag of localizedTags) {
                const tagWords = localizedTag.toLowerCase().trim().split(/\s+/).filter(tw => tw.length > 1);
                if (tagWords.some(tw => normalizedFoodNameQuery.includes(tw))) {
                    currentScore = Math.max(currentScore, 50);
                    matchFoundInDefinition = true;
                    break;
                }
            }
        }

        if (matchFoundInDefinition) {
            const priority = definition.priority || 0;
            if (!bestMatch || currentScore > bestMatch.score || (currentScore === bestMatch.score && priority > bestMatch.priority)) {
                bestMatch = { icon: definition.icon, score: currentScore, priority };
            }
        }
    }

    if (bestMatch && bestMatch.score > 0) {
        // console.log(`[findBestIcon SUCCESS] For "${foodName}" (FoodNameLocale: ${foodNameLocale}): ${bestMatch.icon} (Score: ${bestMatch.score}, Prio: ${bestMatch.priority})`);
        return bestMatch.icon;
    }

    const genericMealDefinition = foodIconDefinitions.find(def => def.tagKey === 'genericMeal');
    if (genericMealDefinition) {
        const genericMealKey = `foodIconTags.${genericMealDefinition.tagKey}` as TranslationKey;
        // Use foodNameLocale for generic meal tags as well.
        const genericMealTagsResult = i18n.t(genericMealKey, { locale: foodNameLocale, returnObjects: true, defaultValue: [] });
        if (Array.isArray(genericMealTagsResult) && genericMealTagsResult.some(tag => normalizedFoodNameQuery.includes(tag.toLowerCase().trim()))) {
            return genericMealDefinition.icon;
        }
    }
    
    const unknownFoodDefinition = foodIconDefinitions.find(def => def.tagKey === 'unknownFood');
    // console.log(`[findBestIcon NO MATCH] For "${foodName}" (FoodNameLocale: ${foodNameLocale}). Returning unknown icon: ${unknownFoodDefinition ? unknownFoodDefinition.icon : 'ERROR_NO_UNKNOWN_ICON_DEF'}`);
    return unknownFoodDefinition ? unknownFoodDefinition.icon : null;
};
---------- END foodIconMatcher.ts ----------


---------- gradingUtils.ts ----------
// src/utils/gradingUtils.ts
import { Food } from '../types/food';
import { Settings } from '../types/settings';

export type GradeLetter = 'A' | 'B' | 'C' | 'D' | 'F';

export interface FoodGradeResult {
    letter: GradeLetter;
    color: string;
    score: number; // Underlying score for potential adjustments
}

export const gradeColors: Record<GradeLetter, string> = {
    A: '#4CAF50', // Green
    B: '#8BC34A', // Light Green
    C: '#FFC107', // Amber/Yellow
    D: '#FF9800', // Orange
    F: '#F44336', // Red
};

const mapScoreToGradeDetails = (score: number): FoodGradeResult => {
    let letter: GradeLetter;
    const clampedScore = Math.max(0, Math.min(100, Math.round(score))); // Ensure score is 0-100

    if (clampedScore >= 85) letter = 'A';
    else if (clampedScore >= 70) letter = 'B';
    else if (clampedScore >= 55) letter = 'C';
    else if (clampedScore >= 40) letter = 'D';
    else letter = 'F';
    return { letter, color: gradeColors[letter], score: clampedScore };
};

/**
 * Calculates a base grade for a food item (per 100g) based on refined heuristics.
 * @param food The food item (calories, protein, carbs, fat per 100g).
 * @returns FoodGradeResult or null if grading is not possible.
 */
export const calculateBaseFoodGrade = (food: Food): FoodGradeResult | null => {
    if (!food || typeof food.calories !== 'number' || typeof food.protein !== 'number' || typeof food.carbs !== 'number' || typeof food.fat !== 'number') {
        return null;
    }

    const { calories, protein, carbs, fat } = food;
    let score = 70; // Start with a baseline score (e.g., C grade)

    // --- 1. Calorie Density (per 100g) ---
    if (calories < 100) score += 15; // Low density
    else if (calories < 200) score += 7;
    else if (calories > 350) score -= (calories - 350) * 0.08; // Penalize high density
    if (calories > 500) score -= 15; // Further penalty for very high density

    // --- 2. Protein Content (per 100g) ---
    if (protein > 20) score += 20; // Excellent protein
    else if (protein > 10) score += 10; // Good protein
    else if (protein < 5 && calories > 150) score -= 10; // Low protein for moderate/high cal food

    // --- 3. Fat Content & Type (Heuristic for "quality" based on balance) ---
    const caloriesFromFat = fat * 9;
    const percentageCaloriesFromFat = (calories > 0) ? (caloriesFromFat / calories) * 100 : 0;

    if (fat > 25) { // High total fat
        score -= (fat - 25) * 0.5;
        if (protein < fat * 0.5 && protein < 10) { // High fat, low protein suggests less ideal source
            score -= 10;
        }
    } else if (fat < 5 && percentageCaloriesFromFat < 20 && protein > 10) { // Low fat, potentially good if protein is present
        score += 5;
    }
    if (percentageCaloriesFromFat > 50) score -= 15; // More than 50% cals from fat is heavily penalized
    if (percentageCaloriesFromFat > 35 && percentageCaloriesFromFat <= 50) score -= 7;


    // --- 4. Carbohydrate Content & Type (Heuristic) ---
    const caloriesFromCarbs = carbs * 4;
    const percentageCaloriesFromCarbs = (calories > 0) ? (caloriesFromCarbs / calories) * 100 : 0;

    if (carbs > 40) { // High total carbs
        score -= (carbs - 40) * 0.3;
        if (protein < carbs * 0.1 && protein < 7) { // High carb, very low protein suggests refined carbs
            score -= 10;
        }
    }
    if (percentageCaloriesFromCarbs > 60) score -= 15; // More than 60% cals from carbs
    if (percentageCaloriesFromCarbs > 50 && percentageCaloriesFromCarbs <= 60) score -=7;

    // --- 5. Macronutrient Balance (Percentage of Calories) ---
    const caloriesFromProtein = protein * 4;
    const percentageCaloriesFromProtein = (calories > 0) ? (caloriesFromProtein / calories) * 100 : 0;

    // Ideal ranges (approx): Protein 20-30%, Fat 20-30%, Carbs 40-50%
    // Bonus for being within a generally healthy profile
    let balanceBonus = 0;
    if (percentageCaloriesFromProtein >= 15 && percentageCaloriesFromProtein <= 35) balanceBonus += 4;
    if (percentageCaloriesFromFat >= 15 && percentageCaloriesFromFat <= 35) balanceBonus += 4;
    if (percentageCaloriesFromCarbs >= 35 && percentageCaloriesFromCarbs <= 55) balanceBonus += 4;
    if (balanceBonus >=10) score += 10; // Max 10 points for good balance
    else if (balanceBonus >=8) score +=5;

    // Penalty for extreme imbalance if not already heavily penalized
    if (protein < 5 && fat > 20 && carbs > 30 && calories > 200) { // Low protein, high fat & carbs
        score -= 15;
    }

    return mapScoreToGradeDetails(score);
};

/**
 * Calculates a grade for a specific daily entry, considering portion size and daily goals.
 * @param food The food item.
 * @param consumedGrams The amount of the food consumed in grams.
 * @param dailyGoals The user's daily macronutrient goals.
 * @returns FoodGradeResult or null if grading is not possible.
 */
export const calculateDailyEntryGrade = (
    food: Food,
    consumedGrams: number,
    dailyGoals: Settings['dailyGoals']
): FoodGradeResult | null => {
    const baseGradeResult = calculateBaseFoodGrade(food);
    if (!baseGradeResult) return null;
    if (consumedGrams <= 0) return baseGradeResult;

    let currentScore = baseGradeResult.score;

    // Ensure dailyGoals are valid numbers, default to avoid division by zero or nonsensical percentages
    const safeGoals = {
        calories: Math.max(1, dailyGoals.calories || 2000), // Minimum 1 to avoid /0
        protein: Math.max(1, dailyGoals.protein || 100),
        carbs: Math.max(1, dailyGoals.carbs || 200),
        fat: Math.max(1, dailyGoals.fat || 70),
    };

    const factor = consumedGrams / 100;
    const consumedCalories = food.calories * factor;
    const consumedProtein = food.protein * factor;
    const consumedCarbs = food.carbs * factor;
    const consumedFat = food.fat * factor;

    // --- Adjustments based on portion size relative to daily goals ---

    // Penalty for consuming a large percentage of daily calorie allowance in one go
    const caloriePortionPercentage = (consumedCalories / safeGoals.calories) * 100;
    if (caloriePortionPercentage > 50) currentScore -= 20; // >50% of daily cals in one item
    else if (caloriePortionPercentage > 35) currentScore -= 10; // >35%

    // Penalty for consuming a large percentage of daily fat allowance
    const fatPortionPercentage = (consumedFat / safeGoals.fat) * 100;
    if (fatPortionPercentage > 60) currentScore -= 15; // >60% of daily fat
    else if (fatPortionPercentage > 40) currentScore -= 7;

    // Penalty for consuming a large percentage of daily carb allowance
    const carbPortionPercentage = (consumedCarbs / safeGoals.carbs) * 100;
    if (carbPortionPercentage > 60) currentScore -= 10; // >60% of daily carbs
    else if (carbPortionPercentage > 45) currentScore -= 5;

    // Bonus for significant protein contribution if calories are reasonable
    const proteinPortionPercentage = (consumedProtein / safeGoals.protein) * 100;
    if (proteinPortionPercentage > 25 && caloriePortionPercentage < 30) {
        currentScore += 10; // Good protein hit without too many cals
    } else if (proteinPortionPercentage > 15 && caloriePortionPercentage < 20) {
        currentScore += 5;
    }

    // Mitigation for small portions of "F" grade foods
    if (baseGradeResult.letter === 'F' && caloriePortionPercentage < 10) {
        currentScore += 15; // Small "treat" is less impactful
    } else if (baseGradeResult.letter === 'D' && caloriePortionPercentage < 7) {
        currentScore += 7;
    }

    // Slight penalty if a large portion of an "A" grade food makes macros significantly off for the day
    if (baseGradeResult.letter === 'A' &&
        (caloriePortionPercentage > 30 || fatPortionPercentage > 30 || carbPortionPercentage > 30) &&
        consumedGrams > 200 // and it's a large portion
    ) {
        currentScore -= 7;
    }

    return mapScoreToGradeDetails(currentScore);
};
---------- END gradingUtils.ts ----------


---------- iconUtils.ts ----------
// src/utils/iconUtils.ts
import { findBestIcon } from './foodIconMatcher';
import { detectLanguageFromText } from './languageUtils'; // Import new utility
import { LanguageCode } from '../types/settings';

const syncMemoryCache = new Map<string, string | null>();
const MAX_CACHE_SIZE = 300;

/**
 * Synchronously gets the icon identifier (e.g., emoji) for a food item.
 * It first detects the language of the food name, then uses an in-memory cache.
 * Relies on `findBestIcon` which uses localized tags based on the detected language.
 *
 * @param foodName The name of the food item.
 * @returns An icon string (emoji) or null if not found or an error occurred.
 */
export const getFoodIconUrl = (foodName: string): string | null => {
  if (!foodName || foodName.trim() === '') {
    return null;
  }

  const detectedLocale = detectLanguageFromText(foodName);
  const normalizedNameForCache = foodName.toLowerCase().trim();
  const cacheKey = `${detectedLocale}_${normalizedNameForCache}`;

  if (syncMemoryCache.has(cacheKey)) {
    const cachedIcon = syncMemoryCache.get(cacheKey)!;
    // console.log(`[getFoodIconUrl] CACHE HIT for key "${cacheKey}". Food: "${foodName}", Detected Locale: ${detectedLocale}, Icon: ${cachedIcon}`);
    return cachedIcon;
  }
  // console.log(`[getFoodIconUrl] CACHE MISS for key "${cacheKey}". Food: "${foodName}", Detected Locale: ${detectedLocale}. Calling findBestIcon.`);

  const iconIdentifier = findBestIcon(foodName, detectedLocale);

  if (syncMemoryCache.size >= MAX_CACHE_SIZE) {
    const keys = Array.from(syncMemoryCache.keys());
    for (let i = 0; i < Math.floor(MAX_CACHE_SIZE / 4); i++) {
        const randomIndex = Math.floor(Math.random() * keys.length);
        const keyToRemove = keys.splice(randomIndex, 1)[0];
        if(keyToRemove) syncMemoryCache.delete(keyToRemove);
    }
    // console.log(`[getFoodIconUrl] Food icon memory cache partially cleared. New size: ${syncMemoryCache.size}`);
  }
  syncMemoryCache.set(cacheKey, iconIdentifier);
  // console.log(`[getFoodIconUrl] Cached new icon for key "${cacheKey}". Food: "${foodName}", Icon: ${iconIdentifier}`);

  return iconIdentifier;
};

export const clearLocalIconCache = (): void => {
  syncMemoryCache.clear();
  console.log("[clearLocalIconCache] In-memory food icon cache CLEARED.");
};

export const logLocalIconCacheSize = (): void => {
  console.log(`[logLocalIconCacheSize] In-memory food icon cache size: ${syncMemoryCache.size}`);
};
---------- END iconUtils.ts ----------


---------- imageUtils.ts ----------
// src/utils/imageUtils.ts
import * as ImageManipulator from 'expo-image-manipulator';
import { ImagePickerAsset } from 'expo-image-picker';
import { Alert } from 'react-native';
import * as FileSystem from 'expo-file-system';
import { t } from '../localization/i18n'; // Import t

const MAX_IMAGE_DIMENSION = 1024;
const IMAGE_COMPRESSION_QUALITY = 0.7;

export const compressImageIfNeeded = async (
    asset: ImagePickerAsset
): Promise<ImageManipulator.ImageResult | null> => {
    try {
        const actions: ImageManipulator.Action[] = [];
        let needsResize = false;
        if (asset.width > MAX_IMAGE_DIMENSION || asset.height > MAX_IMAGE_DIMENSION) {
            needsResize = true;
            const resizeOptions: ImageManipulator.ActionResize['resize'] = { width: undefined, height: undefined, };
            if (asset.width > asset.height) resizeOptions.width = MAX_IMAGE_DIMENSION;
            else resizeOptions.height = MAX_IMAGE_DIMENSION;
            actions.push({ resize: resizeOptions });
        } else {
            return null;
        }
        if (needsResize) {
            const saveOptions: ImageManipulator.SaveOptions = {
                compress: IMAGE_COMPRESSION_QUALITY, format: ImageManipulator.SaveFormat.JPEG, base64: false,
            };
            const result = await ImageManipulator.manipulateAsync(asset.uri, actions, saveOptions);
            return result;
        } else {
            return null;
        }
    } catch (error) {
        Alert.alert(t('utils.image.alertCompressionError'), t('utils.image.alertCompressionErrorMessage'));
        return null;
    }
};

export async function getBase64FromUri(uri: string): Promise<string> {
    try {
        const base64 = await FileSystem.readAsStringAsync(uri, { encoding: FileSystem.EncodingType.Base64, });
        return base64;
    } catch (error: any) {
        throw new Error(t('utils.image.errorFailedToRead', { error: error.message || 'Unknown error' }));
    }
}
---------- END imageUtils.ts ----------


---------- languageUtils.ts ----------
// src/utils/languageUtils.ts
import { LanguageCode } from '../types/settings';

// Basic script detection character ranges
const HEBREW_REGEX = /[\u0590-\u05FF]/;
const CYRILLIC_REGEX = /[\u0400-\u04FF]/;
// Basic Latin check - very broad, English will be the default for this
const LATIN_REGEX = /[a-zA-Z]/;

/**
 * Detects the dominant language script in a given text.
 * Prioritizes Hebrew, then Cyrillic. If neither is dominant,
 * defaults to 'en' (representing Latin script languages for icon tag purposes).
 * @param text The text to analyze.
 * @returns LanguageCode ('he', 'ru', or 'en' as default).
 */
export const detectLanguageFromText = (text: string): LanguageCode => {
    if (!text || text.trim() === '') {
        return 'en'; // Default if no text
    }

    let hebrewChars = 0;
    let cyrillicChars = 0;
    let latinChars = 0;
    let otherChars = 0;

    for (const char of text) {
        if (HEBREW_REGEX.test(char)) {
            hebrewChars++;
        } else if (CYRILLIC_REGEX.test(char)) {
            cyrillicChars++;
        } else if (LATIN_REGEX.test(char)) {
            latinChars++;
        } else {
            otherChars++;
        }
    }

    // Simple dominance check
    // Give a higher weight or lower threshold for Hebrew/Cyrillic if names are often short
    if (hebrewChars > latinChars / 2 && hebrewChars > cyrillicChars) { // If Hebrew chars are significant
        return 'he';
    }
    if (cyrillicChars > latinChars / 2 && cyrillicChars > hebrewChars) { // If Cyrillic chars are significant
        return 'ru';
    }
    
    // If primarily Latin, or mixed with no clear non-Latin dominance, default to 'en'
    // This 'en' will then correctly use English tags.
    // If the text was, e.g., French and we default to 'en', English tags are a reasonable fallback.
    return 'en';
};
---------- END languageUtils.ts ----------


---------- macros.ts ----------
// src/utils/macros.ts
import { Alert } from 'react-native';
import { getMacrosForRecipe, getMacrosForImageSingle, getMacrosForImageMultiple, getMacrosForTextMultiple, BackendError } from '../services/backendService';
import { Macros, MacrosWithFoodName, EstimatedFoodItem } from '../types/macros';
import { ImagePickerAsset } from 'expo-image-picker';
import { getBase64FromUri } from './imageUtils';
import { t } from '../localization/i18n';

export function determineMimeType(asset: { uri: string; mimeType?: string | null; fileName?: string | null; }): string {
    if (asset.mimeType && asset.mimeType.includes('/')) return asset.mimeType;
    const extension = asset.uri.split('.').pop()?.toLowerCase();
    switch (extension) {
        case 'jpg': case 'jpeg': return 'image/jpeg';
        case 'png': return 'image/png';
        default: return 'image/jpeg';
    }
}

const handleError = (error: unknown, title: string) => {
    const message = error instanceof BackendError ? error.message : t('utils.macros.errorMessage');
    Alert.alert(title, message);
    throw error;
}

export async function getMacrosFromText(foodName: string, ingredients: string): Promise<MacrosWithFoodName> {
    try {
        return await getMacrosForRecipe(foodName, ingredients);
    } catch (error) {
        handleError(error, t('utils.macros.errorTitle'));
        throw error; // Re-throw to allow caller to handle UI state
    }
}

export async function getMacrosForImageFile(asset: ImagePickerAsset): Promise<MacrosWithFoodName> {
    try {
        const base64File = await getBase64FromUri(asset.uri);
        const mimeType = determineMimeType(asset);
        return await getMacrosForImageSingle(base64File, mimeType);
    } catch (error) {
        handleError(error, t('utils.macros.errorTitle'));
        throw error;
    }
}

export async function getMultipleFoodsFromImage(base64Image: string, mimeType: string): Promise<EstimatedFoodItem[]> {
    try {
        const results = await getMacrosForImageMultiple(base64Image, mimeType);
        if (!Array.isArray(results)) throw new Error(t('utils.macros.invalidResponse'));
        return results;
    } catch (error) {
        handleError(error, t('utils.macros.multiItemErrorTitle'));
        throw error;
    }
}

export async function getMultipleFoodsFromText(text: string): Promise<EstimatedFoodItem[]> {
    try {
        const results = await getMacrosForTextMultiple(text);
        if (!Array.isArray(results)) throw new Error(t('utils.macros.invalidResponse'));
        return results;
    } catch (error) {
        handleError(error, t('utils.macros.multiItemErrorTitle'));
        throw error;
    }
}

export { BackendError, EstimatedFoodItem, Macros, MacrosWithFoodName };
---------- END macros.ts ----------


---------- searchUtils.ts ----------
// src/utils/searchUtils.ts
import { Food } from '../types/food';
import { foodIconDefinitions } from '../assets/food_icons/iconDefinitions';
import i18n, { TranslationKey } from '../localization/i18n';
import { getFoodIconUrl } from './iconUtils';
import { combinationTags } from '../assets/food_icons/combinationTags';

/**
 * Finds foods that match a search term via their associated icon tags.
 * This is the "smart search" functionality. It supports both direct tag
 * matching (e.g., searching "apple") and combination tag matching
 * (e.g., searching "fruit" to find apples, bananas, etc.).
 *
 * @param searchTerm The string to search for.
 * @param allFoods The complete list of foods in the library.
 * @returns An array of foods that matched the search term via tags.
 */
export const findFoodsByTagSearch = (searchTerm: string, allFoods: Food[]): Food[] => {
    if (!searchTerm || !allFoods) {
        return [];
    }

    const lowercasedSearchTerm = searchTerm.toLowerCase().trim();
    if (lowercasedSearchTerm.length < 2) { // Don't search for very short terms
        return [];
    }

    const relevantIcons = new Set<string>();
    const iconsMap = new Map(foodIconDefinitions.map(def => [def.tagKey, def.icon]));

    // --- Step 1: Check for combination tag matches ---
    if (combinationTags[lowercasedSearchTerm]) {
        const tagKeys = combinationTags[lowercasedSearchTerm];
        for (const tagKey of tagKeys) {
            const icon = iconsMap.get(tagKey);
            if (icon) {
                relevantIcons.add(icon);
            }
        }
    }

    // --- Step 2: Find which icon categories are relevant to the search term (direct matching) ---
    for (const definition of foodIconDefinitions) {
        const fullTagKey = `foodIconTags.${definition.tagKey}` as TranslationKey;
        
        // Check tags in all available languages for comprehensiveness
        const localesToSearch: ('en' | 'ru' | 'he')[] = ['en', 'ru', 'he'];
        for (const locale of localesToSearch) {
            const tagResult = i18n.t(fullTagKey, { locale, returnObjects: true, defaultValue: [] });
            const tags: string[] = Array.isArray(tagResult) ? tagResult : [];

            if (tags.some(tag => tag.toLowerCase().includes(lowercasedSearchTerm))) {
                relevantIcons.add(definition.icon);
                break; // Found a match in this language, no need to check others for this definition
            }
        }
    }

    if (relevantIcons.size === 0) {
        return [];
    }

    // --- Step 3: Find all foods that map to these relevant icons ---
    const matchedFoods: Food[] = [];
    for (const food of allFoods) {
        const foodIcon = getFoodIconUrl(food.name); // This uses a cache, so it's efficient.
        if (foodIcon && relevantIcons.has(foodIcon)) {
            matchedFoods.push(food);
        }
    }

    return matchedFoods;
};
---------- END searchUtils.ts ----------


---------- units.ts ----------
// src/utils/units.ts
import { Alert } from 'react-native';
import { estimateGramsNaturalLanguage, BackendError } from '../services/backendService';
import { t } from '../localization/i18n';

export async function getGramsFromNaturalLanguage(
    foodName: string,
    quantityDescription: string
): Promise<number> {
    try {
        const grams = await estimateGramsNaturalLanguage(foodName, quantityDescription);
        return grams;
    } catch (error) {
        const message = error instanceof BackendError
            ? error.message
            : t('errors.unexpectedError');
        Alert.alert(t('utils.units.errorTitle'), message);
        throw error;
    }
}
---------- END units.ts ----------


---------- validationUtils.ts ----------
// utils/validationUtils.ts

export const isValidNumberInput = (value: string): boolean => {
    return /^[0-9]*(\.[0-9]*)?$/.test(value) && !isNaN(parseFloat(value));
  };
  
  export const isNotEmpty = (value: string): boolean => {
    return value.trim() !== '';
  };
---------- END validationUtils.ts ----------


---------- testOtp.txt ----------
�� 
 >   m a c r o s v i s i o n a i @ 1 . 0 . 0   t e s t  
 >   j e s t  
  
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - | - - - - - - - - - | - - - - - - - - - - | - - - - - - - - - | - - - - - - - - - | - - - - - - - - - - - - - - - - - - -  
 F i l e                                                 |   %   S t m t s   |   %   B r a n c h   |   %   F u n c s   |   %   L i n e s   |   U n c o v e r e d   L i n e   # s    
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - | - - - - - - - - - | - - - - - - - - - - | - - - - - - - - - | - - - - - - - - - | - - - - - - - - - - - - - - - - - - -  
 A l l   f i l e s                                       |               0   |                 0   |               0   |               0   |                                        
   c o m p o n e n t s                                   |               0   |                 0   |               0   |               0   |                                        
     A c c o u n t S e t t i n g s . t s x               |               0   |                 0   |               0   |               0   |   1 4 - 5 7                            
     A d d F o o d M o d a l . t s x                     |               0   |                 0   |               0   |               0   |   5 6 - 2 7 9                          
     C o n f i r m a t i o n M o d a l . t s x           |               0   |                 0   |               0   |               0   |   1 9 - 7 0                            
     D a i l y E n t r y L i s t I t e m . t s x         |               0   |                 0   |               0   |               0   |   2 3 - 1 4 2                          
     D a i l y G o a l s I n p u t . t s x               |               0   |                 0   |               0   |               0   |   1 4 - 4 9                            
     D a i l y P r o g r e s s . t s x                   |               0   |                 0   |               0   |               0   |   2 0 - 6 3                            
     D a t a M a n a g e m e n t B u t t o n s . t s x   |               0   |                 0   |               0   |               0   |   3 0 - 1 3 6                          
     D a t e N a v i g a t o r . t s x                   |               0   |                 0   |               0   |               0   |   1 9 - 7 3                            
     F o o d F o r m F i e l d s . t s x                 |               0   |                 0   |               0   |               0   |   2 0 - 1 1 4                          
     F o o d I t e m . t s x                             |               0   |                 0   |               0   |               0   |   2 0 - 9 1                            
     Q u i c k A d d L i s t . t s x                     |               0   |                 0   |               0   |               0   |   3 8 - 1 1 8                          
     S t a t i s t i c s C h a r t . t s x               |               0   |                 0   |               0   |               0   |   2 9 - 2 4 3                          
     T h e m e S w i t c h . t s x                       |               0   |                 0   |               0   |               0   |   1 2 - 2 8                            
   c o m p o n e n t s / A d d E n t r y M o d a l       |               0   |                 0   |               0   |               0   |                                        
     A d d E n t r y M o d a l . t s x                   |               0   |                 0   |               0   |               0   |   3 7 - 3 5 6                          
     A m o u n t I n p u t S e c t i o n . t s x         |               0   |                 0   |               0   |               0   |   2 9 - 1 6 9                          
     F o o d S e l e c t i o n L i s t . t s x           |               0   |                 0   |               0   |               0   |   1 1 - 3 1 1                          
     M o d a l H e a d e r . t s x                       |               0   |                 0   |               0   |               0   |   3 6 - 1 1 3                          
   c o m p o n e n t s / E n t r y                       |               0   |                 0   |               0   |               0   |                                        
     Q u i c k A d d I t e m . t s x                     |               0   |                 0   |               0   |               0   |   5 3 - 3 1 0                          
   c o n t e x t                                         |               0   |                 0   |               0   |               0   |                                        
     A u t h C o n t e x t . t s x                       |               0   |                 0   |               0   |               0   |   2 3 - 9 0                            
   l o c a l i z a t i o n                               |               0   |                 0   |               0   |               0   |                                        
     i 1 8 n . t s                                       |               0   |                 0   |               0   |               0   |   1 1 - 7 4                            
   s c r e e n s                                         |               0   |                 0   |               0   |               0   |                                        
     D a i l y E n t r y S c r e e n . t s x             |               0   |                 0   |               0   |               0   |   3 1 - 5 1 9                          
     F o o d L i s t S c r e e n . t s x                 |               0   |                 0   |               0   |               0   |   2 1 - 4 7 6                          
     F o r g o t P a s s w o r d S c r e e n . t s x     |               0   |                 0   |               0   |               0   |   1 3 - 7 9                            
     L o g i n S c r e e n . t s x                       |               0   |                 0   |               0   |               0   |   1 4 - 9 0                            
     Q u e s t i o n n a i r e S c r e e n . t s x       |               0   |                 0   |               0   |               0   |   2 1 - 2 9 6                          
     R e g i s t e r S c r e e n . t s x                 |               0   |                 0   |               0   |               0   |   1 2 - 7 9                            
     S e t t i n g s S c r e e n . t s x                 |               0   |                 0   |               0   |               0   |   3 6 - 3 4 4                          
   s e r v i c e s                                       |               0   |                 0   |               0   |               0   |                                        
     a u t h S e r v i c e . t s                         |               0   |                 0   |               0   |               0   |   9 - 1 5 6                            
     b a c k e n d S e r v i c e . t s                   |               0   |                 0   |               0   |               0   |   8 - 1 4 6                            
     c l i e n t I D S e r v i c e . t s                 |               0   |                 0   |               0   |               0   |   5 - 3 9                              
     f o o d S e r v i c e . t s                         |               0   |                 0   |               0   |               0   |   7 - 6 7                              
     s t o r a g e S e r v i c e . t s                   |               0   |                 0   |               0   |               0   |   7 - 1 5 9                            
     t o k e n S t o r a g e . t s                       |               0   |                 0   |               0   |               0   |   8 - 7 1                              
   u t i l s                                             |               0   |                 0   |               0   |               0   |                                        
     d a t e U t i l s . t s                             |               0   |                 0   |               0   |               0   |   1 3 - 5 9                            
     f o o d I c o n M a t c h e r . t s                 |               0   |                 0   |               0   |               0   |   6 - 1 2 9                            
     g r a d i n g U t i l s . t s                       |               0   |                 0   |               0   |               0   |   1 3 - 1 7 9                          
     i c o n U t i l s . t s                             |               0   |                 0   |               0   |               0   |   6 - 5 6                              
     i m a g e U t i l s . t s                           |               0   |                 0   |               0   |               0   |   8 - 4 6                              
     l a n g u a g e U t i l s . t s                     |               0   |                 0   |               0   |               0   |   5 - 5 1                              
     m a c r o s . t s                                   |               0   |                 0   |               0   |               0   |   1 0 - 6 3                            
     s e a r c h U t i l s . t s                         |               0   |                 0   |               0   |               0   |   1 8 - 7 2                            
     u n i t s . t s                                     |               0   |                 0   |               0   |               0   |   1 0 - 1 8                            
     v a l i d a t i o n U t i l s . t s                 |               0   |                 0   |               0   |               0   |   3 - 8                                
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - | - - - - - - - - - | - - - - - - - - - - | - - - - - - - - - | - - - - - - - - - | - - - - - - - - - - - - - - - - - - -  
 
---------- END testOtp.txt ----------


---------- tsconfig.json ----------
{
  "extends": "expo/tsconfig.base",
  "compilerOptions": {
    "strict": true,
    "esModuleInterop": true
  }
}
---------- END tsconfig.json ----------

