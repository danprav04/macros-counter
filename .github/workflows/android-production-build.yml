# .github/workflows/android-production-build.yml
name: EAS Android Production Build (Local)

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Android Production AAB (Local)
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: 'MacroTracker/package-lock.json'

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        working-directory: ./MacroTracker
        run: npm ci

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Decode Android Keystore
        id: decode_keystore
        working-directory: ./MacroTracker
        run: |
          KEYSTORE_PATH="${PWD}/production.keystore"
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > "$KEYSTORE_PATH"
          echo "Keystore decoded to $KEYSTORE_PATH"
          echo "keystore_path=$KEYSTORE_PATH" >> $GITHUB_OUTPUT

      - name: Build with EAS (Local Production)
        working-directory: ./MacroTracker
        run: eas build --platform android --profile production --non-interactive --local
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          EXPO_PUBLIC_BACKEND_URL_PRODUCTION: ${{ secrets.EXPO_PUBLIC_BACKEND_URL_PRODUCTION }}
          EAS_BUILD_ANDROID_KEYSTORE_PATH: ${{ steps.decode_keystore.outputs.keystore_path }}
          EAS_BUILD_ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
          EAS_BUILD_ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          EAS_BUILD_ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Find AAB
        id: find_aab
        run: |
          AAB_PATH=$(find ./MacroTracker -maxdepth 1 -type f -name "*.aab" | head -n 1)
          if [ -z "$AAB_PATH" ]; then
            echo "AAB not found in ./MacroTracker directory!"
            exit 1
          fi
          echo "Found AAB at: $AAB_PATH"
          echo "path=$AAB_PATH" >> $GITHUB_OUTPUT

      - name: Upload AAB as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macros-vision-ai-production-aab
          path: ${{ steps.find_aab.outputs.path }}